\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Apr 16 15:20:59 CEST 2023
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , finalFields-finalFields\\:immutable
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Sun Apr 16 15:20:59 CEST 2023
contract=de.wiesler.Classifier[de.wiesler.Classifier\\:\\:classOfTrans()].JML model_behavior operation contract.0
name=de.wiesler.Classifier[de.wiesler.Classifier\\:\\:classOfTrans()].JML model_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "802059dea3"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "802059dea3"))
(keyLog "2" (keyUser "Julian" ) (keyVersion "802059dea3"))
(keyLog "3" (keyUser "Julian" ) (keyVersion "802059dea3"))
(keyLog "4" (keyUser "Julian" ) (keyVersion "802059dea3"))
(keyLog "5" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "6" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "76039")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "heapAtPre,heapBefore,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "5")) (userinteraction))
(rule "allRight" (formula "7") (inst "sk=classJ_0"))
(rule "allRight" (formula "7") (inst "sk=classI_0"))
(rule "allRight" (formula "7") (inst "sk=j_0"))
(rule "allRight" (formula "7") (inst "sk=i_0"))
(rule "impRight" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "impRight" (formula "9"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "Definition_axiom_for_isClassifiedAs_in_de_wiesler_Classifier" (formula "2") (term "0") (userinteraction))
(rule "Definition_axiom_for_isClassifiedAs_in_de_wiesler_Classifier" (formula "1") (term "0") (userinteraction))
 (builtin "One Step Simplification" (formula "1") (userinteraction))
 (builtin "One Step Simplification" (formula "2") (userinteraction))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_31_in_Classifier" (formula "10") (userinteraction))
(rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "10") (term "0") (inst "j=j") (inst "i=i") (userinteraction))
 (builtin "One Step Simplification" (formula "10") (userinteraction))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_27_in_Classifier" (formula "11") (userinteraction))
(rule "ifthenelse_split_for" (formula "2") (userinteraction))
(branch "self.equal_buckets = TRUE TRUE"
   (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2") (userinteraction))
    (builtin "One Step Simplification" (formula "1") (userinteraction))
   (rule "eqTermCut" (formula "3") (term "1,0,1,2") (inst "s=javaDivInt(classI_0, Z(2(#)))") (userinteraction))
   (branch "Assume javaDivInt(classJ_0, 2) = javaDivInt(classI_0, 2)"
      (rule "cut" (inst "cutFormula=(classI_0 = add(classJ_0, Z(1(#))))<<origin(\"User_Interaction @ node 15281 (cut)\",\"[]\")>>") (userinteraction))
      (branch "CUT: classI_0 = classJ_0 + 1 TRUE"
         (rule "translateJavaMulInt" (formula "14") (term "1,1"))
         (rule "translateJavaSubInt" (formula "5") (term "0,2,0,1,1,2"))
         (rule "translateJavaDivInt" (formula "5") (term "1,0,1,2"))
         (rule "translateJavaDivInt" (formula "5") (term "0,2,0,0,2"))
         (rule "translateJavaDivInt" (formula "5") (term "0,2,1,1,1,1"))
         (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1"))
         (rule "translateJavaSubInt" (formula "5") (term "0,2,0,1,0,1"))
         (rule "translateJavaSubInt" (formula "5") (term "1,1,0"))
         (rule "translateJavaMod" (formula "5") (term "0,0,0"))
         (rule "translateJavaDivInt" (formula "4") (term "1"))
         (rule "translateJavaDivInt" (formula "4") (term "0"))
         (rule "translateJavaSubInt" (formula "2") (term "0,2,0,1,1,2"))
         (rule "translateJavaDivInt" (formula "2") (term "1,0,1,2"))
         (rule "translateJavaDivInt" (formula "2") (term "0,2,0,0,2"))
         (rule "translateJavaDivInt" (formula "2") (term "0,2,1,1,1,1"))
         (rule "translateJavaSubInt" (formula "2") (term "1,0,1,1"))
         (rule "translateJavaSubInt" (formula "2") (term "0,2,0,1,0,1"))
         (rule "translateJavaSubInt" (formula "2") (term "1,1,0"))
         (rule "translateJavaMod" (formula "2") (term "0,0,0"))
         (rule "translateJavaDivInt" (formula "5") (term "0,0,2,0,1,1,2"))
         (rule "translateJavaDivInt" (formula "5") (term "0,0,2,0,1,0,1"))
         (rule "translateJavaDivInt" (formula "2") (term "0,0,2,0,1,1,2"))
         (rule "translateJavaDivInt" (formula "2") (term "0,0,2,0,1,0,1"))
         (rule "eqSymm" (formula "14"))
         (rule "eqSymm" (formula "5") (term "1,0"))
         (rule "eqSymm" (formula "2") (term "1,0"))
         (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "polySimp_homoEq" (formula "1"))
         (rule "polySimp_elimSub" (formula "5") (term "1,0,1,1"))
         (rule "mul_literals" (formula "5") (term "1,1,0,1,1"))
         (rule "polySimp_elimSub" (formula "2") (term "1,0,1,1"))
         (rule "mul_literals" (formula "2") (term "1,1,0,1,1"))
         (rule "polySimp_elimSub" (formula "5") (term "0,2,0,1,1,2"))
         (rule "mul_literals" (formula "5") (term "1,0,2,0,1,1,2"))
         (rule "polySimp_elimSub" (formula "5") (term "0,2,0,1,0,1"))
         (rule "mul_literals" (formula "5") (term "1,0,2,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "2") (term "0,2,0,1,1,2"))
         (rule "mul_literals" (formula "2") (term "1,0,2,0,1,1,2"))
         (rule "polySimp_elimSub" (formula "2") (term "0,2,0,1,0,1"))
         (rule "mul_literals" (formula "2") (term "1,0,2,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "5") (term "0,1,0"))
         (rule "mul_literals" (formula "5") (term "1,0,1,0"))
         (rule "polySimp_elimSub" (formula "2") (term "0,1,0"))
         (rule "mul_literals" (formula "2") (term "1,0,1,0"))
         (rule "polySimp_homoEq" (formula "5") (term "1,0"))
         (rule "polySimp_homoEq" (formula "2") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "0"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0"))
         (rule "polySimp_addComm0" (formula "1") (term "0,0"))
         (rule "polySimp_addComm0" (formula "5") (term "1,0,1,1"))
         (rule "polySimp_addComm0" (formula "2") (term "1,0,1,1"))
         (rule "polySimp_addComm0" (formula "5") (term "0,2,0,1,1,2"))
         (rule "polySimp_addComm0" (formula "5") (term "0,2,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,1,2"))
         (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "5") (term "1,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "2") (term "1,1,0,1,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0"))
         (rule "mul_literals" (formula "5") (term "0,1,0,1,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0"))
         (rule "mul_literals" (formula "2") (term "0,1,0,1,0"))
         (rule "inEqSimp_ltRight" (formula "17"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "9"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "9") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,1"))
         (rule "add_zero_right" (formula "3") (term "0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,1"))
         (rule "add_zero_right" (formula "6") (term "0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "8"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,2"))
         (rule "add_zero_right" (formula "6") (term "0,0,1,2"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,2"))
         (rule "inEqSimp_ltToLeq" (formula "6") (term "1,1,1"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,1,1"))
         (rule "polySimp_addComm1" (formula "6") (term "0,1,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,2"))
         (rule "add_zero_right" (formula "3") (term "0,0,1,2"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,2"))
         (rule "inEqSimp_ltToLeq" (formula "3") (term "1,1,1"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,1,1"))
         (rule "polySimp_addComm1" (formula "3") (term "0,1,1,1"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "6") (term "0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "3") (term "0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "7"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,1"))
         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1,1"))
         (rule "mul_literals" (formula "6") (term "0,1,0,0,0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1"))
         (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,1,1"))
         (rule "mul_literals" (formula "3") (term "0,1,0,0,0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "6") (term "1,1,2"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,1,2"))
         (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,1"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "3") (term "1,1,2"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,1,2"))
         (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,1"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,1,1"))
         (rule "add_literals" (formula "6") (term "0,0,0,0,1,1"))
         (rule "polySimp_addComm1" (formula "6") (term "0,0,1,1"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,1"))
         (rule "add_literals" (formula "3") (term "0,0,0,0,1,1"))
         (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1"))
         (rule "applyEqRigid" (formula "6") (term "1,0,2,1,0,1,0,1") (ifseqformula "5"))
         (rule "applyEq" (formula "6") (term "0,1,0,0,1,2") (ifseqformula "5"))
         (rule "applyEq" (formula "6") (term "0,2,0,0,2") (ifseqformula "5"))
         (rule "applyEqRigid" (formula "6") (term "1,0,2,1,0,1,1,2") (ifseqformula "5"))
         (rule "applyEq" (formula "6") (term "0,2,0,1,0,1,1,1") (ifseqformula "5"))
         (rule "jmod_axiom" (formula "6") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
         (rule "applyEqRigid" (formula "6") (term "0,1,0,0,0") (ifseqformula "5"))
         (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
         (rule "jmod_axiom" (formula "3") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
         (rule "polySimp_sepPosMonomial" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1"))
         (rule "polySimp_rightDist" (formula "2") (term "1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
         (rule "mul_literals" (formula "2") (term "0,1"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
         (rule "applyEqRigid" (formula "8") (term "0,1,0") (ifseqformula "2"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0"))
         (rule "polySimp_addComm1" (formula "8") (term "0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
         (rule "add_literals" (formula "8") (term "1,1,0"))
         (rule "times_zero_1" (formula "8") (term "1,0"))
         (rule "add_zero_right" (formula "8") (term "0"))
         (rule "leq_literals" (formula "8"))
         (rule "closeFalse" (formula "8"))
      )
      (branch "CUT: classI_0 = classJ_0 + 1 FALSE"
         (rule "translateJavaMulInt" (formula "13") (term "1,1"))
         (rule "translateJavaSubInt" (formula "4") (term "0,2,0,1,1,2"))
         (rule "translateJavaDivInt" (formula "4") (term "1,0,1,2"))
         (rule "translateJavaDivInt" (formula "4") (term "0,2,0,0,2"))
         (rule "translateJavaDivInt" (formula "4") (term "0,2,1,1,1,1"))
         (rule "translateJavaSubInt" (formula "4") (term "1,0,1,1"))
         (rule "translateJavaSubInt" (formula "4") (term "0,2,0,1,0,1"))
         (rule "translateJavaSubInt" (formula "4") (term "1,1,0"))
         (rule "translateJavaMod" (formula "4") (term "0,0,0"))
         (rule "translateJavaDivInt" (formula "3") (term "1"))
         (rule "translateJavaDivInt" (formula "3") (term "0"))
         (rule "translateJavaSubInt" (formula "1") (term "0,2,0,1,1,2"))
         (rule "translateJavaDivInt" (formula "1") (term "1,0,1,2"))
         (rule "translateJavaDivInt" (formula "1") (term "0,2,0,0,2"))
         (rule "translateJavaDivInt" (formula "1") (term "0,2,1,1,1,1"))
         (rule "translateJavaSubInt" (formula "1") (term "1,0,1,1"))
         (rule "translateJavaSubInt" (formula "1") (term "0,2,0,1,0,1"))
         (rule "translateJavaSubInt" (formula "1") (term "1,1,0"))
         (rule "translateJavaMod" (formula "1") (term "0,0,0"))
         (rule "translateJavaDivInt" (formula "4") (term "0,0,2,0,1,1,2"))
         (rule "translateJavaDivInt" (formula "4") (term "0,0,2,0,1,0,1"))
         (rule "translateJavaDivInt" (formula "1") (term "0,0,2,0,1,1,2"))
         (rule "translateJavaDivInt" (formula "1") (term "0,0,2,0,1,0,1"))
         (rule "eqSymm" (formula "13"))
         (rule "eqSymm" (formula "4") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "1,0"))
         (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "2"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "polySimp_homoEq" (formula "15"))
         (rule "polySimp_elimSub" (formula "4") (term "1,0,1,1"))
         (rule "mul_literals" (formula "4") (term "1,1,0,1,1"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1"))
         (rule "mul_literals" (formula "1") (term "1,1,0,1,1"))
         (rule "polySimp_elimSub" (formula "4") (term "0,2,0,1,1,2"))
         (rule "mul_literals" (formula "4") (term "1,0,2,0,1,1,2"))
         (rule "polySimp_elimSub" (formula "4") (term "0,2,0,1,0,1"))
         (rule "mul_literals" (formula "4") (term "1,0,2,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "1") (term "0,2,0,1,1,2"))
         (rule "mul_literals" (formula "1") (term "1,0,2,0,1,1,2"))
         (rule "polySimp_elimSub" (formula "1") (term "0,2,0,1,0,1"))
         (rule "mul_literals" (formula "1") (term "1,0,2,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "4") (term "0,1,0"))
         (rule "mul_literals" (formula "4") (term "1,0,1,0"))
         (rule "polySimp_elimSub" (formula "1") (term "0,1,0"))
         (rule "mul_literals" (formula "1") (term "1,0,1,0"))
         (rule "polySimp_homoEq" (formula "4") (term "1,0"))
         (rule "polySimp_homoEq" (formula "1") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "0"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0"))
         (rule "polySimp_addComm0" (formula "15") (term "0,0"))
         (rule "polySimp_addComm0" (formula "4") (term "1,0,1,1"))
         (rule "polySimp_addComm0" (formula "1") (term "1,0,1,1"))
         (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,1,2"))
         (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,1,2"))
         (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "4") (term "1,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "1") (term "1,1,0,1,0"))
         (rule "polySimp_addComm1" (formula "15") (term "0"))
         (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0"))
         (rule "mul_literals" (formula "4") (term "0,1,0,1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,1,0"))
         (rule "inEqSimp_ltRight" (formula "17"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "8"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,1"))
         (rule "add_zero_right" (formula "5") (term "0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "7"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "7") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1"))
         (rule "add_zero_right" (formula "2") (term "0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1,2"))
         (rule "add_zero_right" (formula "5") (term "0,0,1,2"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,2"))
         (rule "inEqSimp_ltToLeq" (formula "5") (term "1,1,1"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,1,1"))
         (rule "polySimp_addComm1" (formula "5") (term "0,1,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,2"))
         (rule "add_zero_right" (formula "2") (term "0,0,1,2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,2"))
         (rule "inEqSimp_ltToLeq" (formula "2") (term "1,1,1"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,1,1"))
         (rule "polySimp_addComm1" (formula "2") (term "0,1,1,1"))
         (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "5") (term "0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "6"))
         (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1,1"))
         (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1,1"))
         (rule "mul_literals" (formula "5") (term "0,1,0,0,0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,1"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,1"))
         (rule "mul_literals" (formula "2") (term "0,1,0,0,0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "5") (term "1,1,2"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,1,2"))
         (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,1"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "2") (term "1,1,2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,1,2"))
         (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,1"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1,1"))
         (rule "add_literals" (formula "5") (term "0,0,0,0,1,1"))
         (rule "polySimp_addComm1" (formula "5") (term "0,0,1,1"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1"))
         (rule "add_literals" (formula "2") (term "0,0,0,0,1,1"))
         (rule "polySimp_addComm1" (formula "2") (term "0,0,1,1"))
         (rule "applyEq" (formula "5") (term "1,0,2,1,0,1,0,1") (ifseqformula "4"))
         (rule "applyEq" (formula "5") (term "0,2,0,0,2") (ifseqformula "4"))
         (rule "applyEqRigid" (formula "5") (term "0,1,0,0,1,2") (ifseqformula "4"))
         (rule "applyEq" (formula "5") (term "1,0,2,1,0,1,1,2") (ifseqformula "4"))
         (rule "applyEq" (formula "5") (term "0,2,0,1,0,1,1,1") (ifseqformula "4"))
         (rule "jmod_axiom" (formula "5") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
         (rule "applyEq" (formula "5") (term "0,1,0,0,0") (ifseqformula "4"))
         (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
         (rule "jmod_axiom" (formula "2") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
         (rule "polySimp_sepPosMonomial" (formula "16"))
         (rule "polySimp_mulComm0" (formula "16") (term "1"))
         (rule "polySimp_rightDist" (formula "16") (term "1"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
         (rule "mul_literals" (formula "16") (term "0,1"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1"))
         (rule "polySimp_sepNegMonomial" (formula "5") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
         (rule "polySimp_elimOne" (formula "5") (term "0,1,0"))
         (rule "polySimp_sepNegMonomial" (formula "2") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
         (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
         (rule "polySimp_sepPosMonomial" (formula "5") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
         (rule "polySimp_sepNegMonomial" (formula "2") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "8"))
         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
         (rule "polySimp_elimOne" (formula "8") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,0,1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,1"))
         (rule "polySimp_elimOne" (formula "5") (term "0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "7"))
         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
         (rule "polySimp_elimOne" (formula "7") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1"))
         (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,1,2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,2"))
         (rule "polySimp_elimOne" (formula "2") (term "0,0,1,2"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "1,1,1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,1,1,1"))
         (rule "polySimp_elimOne" (formula "2") (term "0,1,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,1,2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,1,1,2"))
         (rule "polySimp_rightDist" (formula "2") (term "1,1,1,2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,1,2"))
         (rule "mul_literals" (formula "2") (term "0,1,1,1,2"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1,1,1,2"))
         (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,1"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,1"))
         (rule "polySimp_rightDist" (formula "2") (term "1,1,0,1"))
         (rule "mul_literals" (formula "2") (term "0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,1"))
         (rule "polySimp_elimOne" (formula "5") (term "0,0,1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,1"))
         (rule "polySimp_elimOne" (formula "2") (term "0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,1"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,1"))
         (rule "polySimp_rightDist" (formula "5") (term "1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,1"))
         (rule "mul_literals" (formula "5") (term "0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,1,2"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,2"))
         (rule "polySimp_elimOne" (formula "5") (term "0,0,1,2"))
         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,1,2"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,2"))
         (rule "polySimp_rightDist" (formula "5") (term "1,1,1,2"))
         (rule "mul_literals" (formula "5") (term "0,1,1,1,2"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,1,2"))
         (rule "polySimp_elimOne" (formula "5") (term "1,1,1,1,2"))
         (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "1,1,1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0,1,1,1"))
         (rule "polySimp_elimOne" (formula "5") (term "0,1,1,1"))
         (rule "inEqSimp_contradEq7" (formula "16") (ifseqformula "7"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
         (rule "add_literals" (formula "16") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0"))
         (rule "leq_literals" (formula "16") (term "0"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "false_right" (formula "16"))
         (rule "newSym_eq" (formula "14") (inst "newSymDef=mul(int::final(self,
               de.wiesler.Classifier::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
         (rule "times_zero_1" (formula "14") (term "1,1"))
         (rule "add_zero_right" (formula "14") (term "1"))
         (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "14"))
         (rule "eqSymm" (formula "15"))
         (rule "applyEq" (formula "13") (term "1,1,1,0,0,1,0") (ifseqformula "14"))
         (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "14"))
         (rule "applyEq" (formula "5") (term "0,0,1,1") (ifseqformula "15"))
         (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,1"))
         (rule "polySimp_addComm1" (formula "5") (term "0,0,1,1"))
         (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "15"))
         (rule "polySimp_homoEq" (formula "5") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
         (rule "polySimp_addComm1" (formula "5") (term "0,1,0"))
         (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "15"))
         (rule "polySimp_homoEq" (formula "2") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "15"))
         (rule "inEqSimp_homoInEq1" (formula "8"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0"))
         (rule "applyEq" (formula "2") (term "0,0,1,1") (ifseqformula "15"))
         (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,1"))
         (rule "polySimp_addComm1" (formula "2") (term "0,0,1,1"))
         (rule "polySimp_sepPosMonomial" (formula "5") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "5") (term "1,1,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0"))
         (rule "mul_literals" (formula "5") (term "0,1,1,0"))
         (rule "polySimp_sepPosMonomial" (formula "2") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,1,0"))
         (rule "mul_literals" (formula "2") (term "0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,1,1"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1"))
         (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,1"))
         (rule "mul_literals" (formula "5") (term "0,1,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8"))
         (rule "polySimp_mulComm0" (formula "8") (term "1"))
         (rule "polySimp_rightDist" (formula "8") (term "1"))
         (rule "mul_literals" (formula "8") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,1,1"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,1"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,1,1"))
         (rule "mul_literals" (formula "2") (term "0,1,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,1"))
         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
         (rule "polySimp_rightDist" (formula "7") (term "0,0"))
         (rule "mul_literals" (formula "7") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "7") (term "0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "7"))
         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
         (rule "polySimp_elimOne" (formula "7") (term "0"))
         (rule "replace_known_left" (formula "2") (term "0,1,1") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "inEqSimp_contradEq3" (formula "2") (term "1,0") (ifseqformula "7"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0"))
         (rule "add_literals" (formula "2") (term "0,0,0,0,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,1,0"))
         (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
         (rule "add_zero_right" (formula "2") (term "0,0,1,0"))
         (rule "qeq_literals" (formula "2") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
         (rule "times_zero_1" (formula "6") (term "0,0"))
         (rule "add_zero_left" (formula "6") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
         (rule "mul_literals" (formula "6") (term "1"))
         (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
         (rule "leq_literals" (formula "6") (term "0,0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
         (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
         (rule "add_literals" (formula "6") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "6") (term "1,0,0"))
         (rule "add_zero_right" (formula "6") (term "0,0"))
         (rule "leq_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "nnf_imp2or" (formula "15") (term "0"))
         (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "18"))
          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "3")))
         (rule "translateJavaSubInt" (formula "18") (term "0,2,1,1,0"))
         (rule "translateJavaMulInt" (formula "18") (term "1,1,0,0,0,0"))
         (rule "translateJavaSubInt" (formula "18") (term "0,2,0,1,0"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "20"))
         (rule "notLeft" (formula "19"))
         (rule "notLeft" (formula "18"))
         (rule "eqSymm" (formula "23"))
         (rule "polySimp_elimSub" (formula "23") (term "0,2,1"))
         (rule "mul_literals" (formula "23") (term "1,0,2,1"))
         (rule "polySimp_elimSub" (formula "23") (term "0,2,0"))
         (rule "mul_literals" (formula "23") (term "1,0,2,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1"))
         (rule "eqSymm" (formula "20"))
         (rule "polySimp_addComm0" (formula "23") (term "0,2,1"))
         (rule "polySimp_addComm0" (formula "23") (term "0,2,0"))
         (rule "inEqSimp_commuteLeq" (formula "18"))
         (rule "applyEq" (formula "19") (term "0") (ifseqformula "17"))
         (rule "applyEq" (formula "22") (term "3,0") (ifseqformula "16"))
         (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "16"))
         (rule "eqSymm" (formula "20"))
         (rule "applyEq" (formula "22") (term "1,0,2,0") (ifseqformula "16"))
         (rule "eqSymm" (formula "22"))
         (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
         (rule "applyEq" (formula "22") (term "1,0,2,0") (ifseqformula "16"))
         (rule "eqSymm" (formula "22"))
         (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "6"))
         (rule "mul_literals" (formula "18") (term "1,1,0"))
         (rule "greater_literals" (formula "18") (term "0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "leq_literals" (formula "18") (term "0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(4(6(#)))"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "18") (term "0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
         (rule "neg_literal" (formula "18") (term "0,0,0,0,0,0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
         (rule "add_literals" (formula "18") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "18") (term "1,0,0"))
         (rule "add_zero_right" (formula "18") (term "0,0"))
         (rule "qeq_literals" (formula "18") (term "0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "nnf_notAnd" (formula "15") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
         (rule "mul_literals" (formula "15") (term "1,0,0,0"))
         (rule "nnf_imp2or" (formula "15") (term "0,1,0"))
         (rule "nnf_notAnd" (formula "15") (term "0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,0"))
         (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "19") (term "0") (inst "i=i") (inst "j=j"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0"))
         (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
         (rule "nnf_imp2or" (formula "19") (term "0"))
         (rule "nnf_notAnd" (formula "19") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
         (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
         (rule "mul_literals" (formula "19") (term "1,0,0,0"))
         (rule "nnf_imp2or" (formula "19") (term "0,1,0"))
         (rule "nnf_notAnd" (formula "19") (term "0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1,0"))
         (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "20"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "translateJavaSubInt" (formula "20") (term "3,0,1"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "20"))
         (rule "notLeft" (formula "21"))
         (rule "notLeft" (formula "20"))
         (rule "polySimp_elimSub" (formula "26") (term "3,0"))
         (rule "mul_literals" (formula "26") (term "1,3,0"))
         (rule "polySimp_addComm0" (formula "26") (term "3,0"))
         (rule "inEqSimp_commuteLeq" (formula "25"))
         (rule "inEqSimp_commuteLeq" (formula "23"))
         (rule "inEqSimp_commuteLeq" (formula "24"))
         (rule "inEqSimp_commuteLeq" (formula "20"))
         (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
         (rule "applyEq" (formula "25") (term "1") (ifseqformula "22"))
         (rule "applyEq" (formula "26") (term "1,3,0") (ifseqformula "22"))
         (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "18"))
         (rule "inEqSimp_commuteGeq" (formula "25"))
         (rule "applyEq" (formula "24") (term "1") (ifseqformula "16"))
         (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "18"))
         (rule "applyEq" (formula "22") (term "0") (ifseqformula "16"))
         (rule "eqSymm" (formula "22"))
         (rule "applyEq" (formula "27") (term "0") (ifseqformula "18"))
         (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
         (rule "applyEq" (formula "25") (term "0") (ifseqformula "22"))
         (rule "inEqSimp_commuteLeq" (formula "25"))
         (rule "applyEq" (formula "26") (term "1,3,0") (ifseqformula "22"))
         (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "23"))
         (rule "leq_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "commute_or" (formula "14") (term "0,0,1,0"))
         (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "25") (term "0") (inst "i=i") (inst "j=j"))
          (builtin "One Step Simplification" (formula "25"))
         (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0"))
         (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0"))
         (rule "nnf_imp2or" (formula "25") (term "0"))
         (rule "nnf_notAnd" (formula "25") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
         (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
         (rule "mul_literals" (formula "25") (term "1,0,0,0"))
         (rule "nnf_imp2or" (formula "25") (term "0,1,0"))
         (rule "nnf_notAnd" (formula "25") (term "0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0"))
         (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0"))
         (rule "jdiv_axiom" (formula "5") (term "0,2,0,1,1,1"))
         (rule "eqSymm" (formula "5"))
         (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "eqSymm" (formula "5"))
         (rule "applyEqRigid" (formula "2") (term "1,0,2,0,1,1,2") (ifseqformula "5"))
         (rule "applyEqRigid" (formula "6") (term "0,2,0,0,2") (ifseqformula "5"))
         (rule "applyEqRigid" (formula "2") (term "0,2,0,1,1") (ifseqformula "5"))
         (rule "applyEq" (formula "2") (term "0,0,1,2") (ifseqformula "5"))
         (rule "applyEqRigid" (formula "6") (term "0,0,1,2") (ifseqformula "5"))
         (rule "applyEqRigid" (formula "6") (term "0,2,0,1,1,1") (ifseqformula "5"))
         (rule "applyEq" (formula "6") (term "1,0,2,0,1,0,1") (ifseqformula "5"))
         (rule "applyEqRigid" (formula "6") (term "1,0,2,0,1,1,2") (ifseqformula "5"))
         (rule "applyEqRigid" (formula "2") (term "0,2,0,0,2") (ifseqformula "5"))
         (rule "applyEq" (formula "2") (term "1,0,2,0,1,0,1") (ifseqformula "5"))
         (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "5"))
         (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
         (rule "applyEqRigid" (formula "6") (term "0,1,0,0") (ifseqformula "5"))
         (rule "jdiv_axiom" (formula "4") (term "0"))
         (rule "eqSymm" (formula "4"))
         (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "5"))
         (rule "polyDiv_pullOut" (formula "4") (term "0,2,0") (inst "polyDivCoeff=mul(classJ_0, Z(neglit(1(#))))"))
         (rule "equal_literals" (formula "4") (term "0,0,2,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,2,0"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,2,0"))
         (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0,0,2,0"))
         (rule "add_literals" (formula "4") (term "1,0,0,0,2,0"))
         (rule "polySimp_elimOne" (formula "4") (term "0,0,0,2,0"))
         (rule "polySimp_mulComm0" (formula "4") (term "2,0"))
         (rule "polySimp_addComm0" (formula "4") (term "1,2,0"))
         (rule "polySimp_rightDist" (formula "4") (term "2,0"))
         (rule "polySimp_mulAssoc" (formula "4") (term "0,2,0"))
         (rule "polySimp_mulComm0" (formula "4") (term "0,0,2,0"))
         (rule "polySimp_mulLiterals" (formula "4") (term "0,2,0"))
         (rule "polySimp_elimOne" (formula "4") (term "0,2,0"))
         (rule "commute_or" (formula "27") (term "0,0,1,0"))
         (rule "all_pull_out3" (formula "16") (term "0"))
         (rule "shift_paren_or" (formula "16") (term "0,0"))
         (rule "shift_paren_or" (formula "16") (term "0,0,0"))
         (rule "div_axiom" (formula "6") (term "1") (inst "quotient=quotient_0"))
         (rule "mul_literals" (formula "6") (term "1,1,1,1,1"))
         (rule "qeq_literals" (formula "6") (term "0,1,1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "equal_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "polySimp_addComm1" (formula "8") (term "1"))
         (rule "add_literals" (formula "8") (term "0,1"))
         (rule "inEqSimp_commuteLeq" (formula "7"))
         (rule "inEqSimp_homoInEq1" (formula "8"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0"))
         (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "6"))
         (rule "eqSymm" (formula "2") (term "0"))
         (rule "applyEq" (formula "2") (term "0,0,1,2") (ifseqformula "6"))
         (rule "applyEq" (formula "10") (term "0,0,1,2") (ifseqformula "6"))
         (rule "applyEq" (formula "2") (term "0,2,0,1,1") (ifseqformula "6"))
         (rule "applyEq" (formula "2") (term "0,2,0,0,2") (ifseqformula "6"))
         (rule "applyEq" (formula "10") (term "1,0,2,0,1,1,2") (ifseqformula "6"))
         (rule "applyEqRigid" (formula "10") (term "0,2,0,1,1,1") (ifseqformula "6"))
         (rule "applyEqRigid" (formula "10") (term "1,0,2,0,1,0,1") (ifseqformula "6"))
         (rule "applyEq" (formula "2") (term "1,0,2,0,1,0,1") (ifseqformula "6"))
         (rule "applyEq" (formula "2") (term "1,0,2,0,1,1,2") (ifseqformula "6"))
         (rule "applyEq" (formula "10") (term "0,2,0,0,2") (ifseqformula "6"))
         (rule "applyEqRigid" (formula "10") (term "0,1,0,0") (ifseqformula "6"))
         (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "6"))
         (rule "applyEq" (formula "4") (term "1") (ifseqformula "6"))
         (rule "applyEqRigid" (formula "9") (term "1") (ifseqformula "6"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8"))
         (rule "polySimp_mulComm0" (formula "8") (term "1"))
         (rule "polySimp_rightDist" (formula "8") (term "1"))
         (rule "mul_literals" (formula "8") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "8"))
         (rule "times_zero_1" (formula "11") (term "0,0"))
         (rule "add_zero_left" (formula "11") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
         (rule "mul_literals" (formula "11") (term "1"))
         (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
         (rule "leq_literals" (formula "11") (term "0,0"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
         (rule "add_literals" (formula "11") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0"))
         (rule "leq_literals" (formula "11") (term "0"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "13"))
         (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0"))
         (rule "polySimp_addComm0" (formula "7") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "7"))
         (rule "polySimp_mulComm0" (formula "7") (term "1"))
         (rule "polySimp_rightDist" (formula "7") (term "1"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
         (rule "mul_literals" (formula "7") (term "0,1"))
         (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "7") (term "0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
         (rule "add_literals" (formula "7") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,0"))
         (rule "add_zero_left" (formula "7") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
         (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
         (rule "add_literals" (formula "7") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0"))
         (rule "leq_literals" (formula "7") (term "0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "commute_or" (formula "11") (term "0"))
         (rule "arrayLengthNotNegative" (formula "30") (term "0"))
         (rule "arrayLengthIsAShort" (formula "31") (term "0"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "true_left" (formula "31"))
         (rule "all_pull_out3" (formula "33") (term "0"))
         (rule "shift_paren_or" (formula "33") (term "0,0"))
         (rule "shift_paren_or" (formula "33") (term "0,0,0"))
         (rule "div_axiom" (formula "4") (term "1,0") (inst "quotient=quotient_1"))
         (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
         (rule "equal_literals" (formula "4") (term "0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "qeq_literals" (formula "4") (term "0,1"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "andLeft" (formula "4"))
         (rule "andLeft" (formula "4"))
         (rule "polySimp_addComm1" (formula "6") (term "1"))
         (rule "add_literals" (formula "6") (term "0,1"))
         (rule "inEqSimp_commuteLeq" (formula "5"))
         (rule "inEqSimp_homoInEq1" (formula "6"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
         (rule "polySimp_addComm1" (formula "6") (term "0"))
         (rule "applyEqRigid" (formula "7") (term "1,0") (ifseqformula "4"))
         (rule "applyEq" (formula "7") (term "0,1,2,0") (ifseqformula "4"))
         (rule "polySimp_addComm0" (formula "7") (term "2,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "6"))
         (rule "polySimp_mulComm0" (formula "6") (term "1"))
         (rule "polySimp_rightDist" (formula "6") (term "1"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
         (rule "mul_literals" (formula "6") (term "0,1"))
         (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "6"))
         (rule "polySimp_rightDist" (formula "18") (term "0,0"))
         (rule "mul_literals" (formula "18") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "18") (term "0"))
         (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0"))
         (rule "add_zero_left" (formula "18") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "18"))
         (rule "polySimp_mulLiterals" (formula "18") (term "0"))
         (rule "polySimp_elimOne" (formula "18") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "20"))
         (rule "polySimp_mulAssoc" (formula "5") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "5") (term "0"))
         (rule "polySimp_addComm0" (formula "5") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "5"))
         (rule "polySimp_mulComm0" (formula "5") (term "1"))
         (rule "polySimp_rightDist" (formula "5") (term "1"))
         (rule "mul_literals" (formula "5") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
         (rule "elimGcdGeq_antec" (formula "5") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
         (rule "leq_literals" (formula "5") (term "0,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
         (rule "add_literals" (formula "5") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "5") (term "1,0,0"))
         (rule "add_zero_right" (formula "5") (term "0,0"))
         (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
         (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
         (rule "add_literals" (formula "5") (term "0,0,0,0"))
         (rule "add_zero_left" (formula "5") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
         (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
         (rule "add_literals" (formula "5") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "5") (term "1,0,0"))
         (rule "add_zero_right" (formula "5") (term "0,0"))
         (rule "leq_literals" (formula "5") (term "0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "19"))
         (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
         (rule "polySimp_addComm0" (formula "12") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "12"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
         (rule "elimGcdLeq_antec" (formula "12") (inst "elimGcdRightDiv=quotient_1") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1,0"))
         (rule "neg_literal" (formula "12") (term "0,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "12") (term "0,0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
         (rule "add_literals" (formula "12") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
         (rule "add_literals" (formula "12") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0"))
         (rule "qeq_literals" (formula "12") (term "0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "20"))
         (rule "times_zero_1" (formula "18") (term "0,0"))
         (rule "add_zero_left" (formula "18") (term "0"))
         (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
         (rule "add_zero_right" (formula "18") (term "0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
         (rule "leq_literals" (formula "18") (term "0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "times_zero_1" (formula "18") (term "1,0,0,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
         (rule "add_literals" (formula "18") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "18") (term "1,0,0"))
         (rule "add_zero_right" (formula "18") (term "0,0"))
         (rule "leq_literals" (formula "18") (term "0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "12"))
         (rule "times_zero_1" (formula "17") (term "0,0"))
         (rule "add_zero_left" (formula "17") (term "0"))
         (rule "arrayLengthIsAShort" (formula "39") (term "0"))
          (builtin "One Step Simplification" (formula "39"))
         (rule "true_left" (formula "39"))
         (rule "arrayLengthNotNegative" (formula "39") (term "0"))
         (rule "ifthenelse_split_for" (formula "2"))
         (branch "classI_0 = quotient_0 * 2 TRUE"
            (rule "andLeft" (formula "3"))
            (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "2"))
            (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "15"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
            (rule "polySimp_pullOutFactor0" (formula "15") (term "0"))
            (rule "add_literals" (formula "15") (term "1,0"))
            (rule "times_zero_1" (formula "15") (term "0"))
            (rule "leq_literals" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq0" (formula "15"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "15") (term "0"))
            (rule "add_literals" (formula "15") (term "1,1,0"))
            (rule "times_zero_1" (formula "15") (term "1,0"))
            (rule "add_literals" (formula "15") (term "0"))
            (rule "qeq_literals" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "2"))
            (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "2"))
            (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "20") (term "0") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq0" (formula "20"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0"))
            (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "2"))
            (rule "applyEqRigid" (formula "3") (term "0,0") (ifseqformula "2"))
            (rule "inEqSimp_sepPosMonomial1" (formula "20"))
            (rule "polySimp_mulComm0" (formula "20") (term "1"))
            (rule "polySimp_rightDist" (formula "20") (term "1"))
            (rule "mul_literals" (formula "20") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
            (rule "inEqSimp_contradEq7" (formula "16") (term "1,0") (ifseqformula "22"))
            (rule "polySimp_mulAssoc" (formula "16") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,1,0"))
            (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0,1,0"))
            (rule "add_zero_right" (formula "16") (term "0,0,1,0"))
            (rule "leq_literals" (formula "16") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "inEqSimp_subsumption4" (formula "21") (ifseqformula "14"))
            (rule "greater_literals" (formula "21") (term "0,0"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
            (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
            (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0"))
            (rule "add_literals" (formula "21") (term "1,0,0"))
            (rule "times_zero_1" (formula "21") (term "0,0"))
            (rule "qeq_literals" (formula "21") (term "0"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "true_left" (formula "21"))
            (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "13"))
            (rule "greater_literals" (formula "20") (term "0,0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
            (rule "polySimp_pullOutFactor1" (formula "20") (term "0,0"))
            (rule "add_literals" (formula "20") (term "1,0,0"))
            (rule "times_zero_1" (formula "20") (term "0,0"))
            (rule "qeq_literals" (formula "20") (term "0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "true_left" (formula "20"))
            (rule "inEqSimp_subsumption6" (formula "19") (ifseqformula "17"))
            (rule "greater_literals" (formula "19") (term "0,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "times_zero_1" (formula "19") (term "1,0"))
            (rule "leq_literals" (formula "19") (term "0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "true_left" (formula "19"))
            (rule "elimGcdGeq" (formula "3") (term "0") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0,0,0"))
            (rule "sub_literals" (formula "3") (term "0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "3") (term "0,0,0,0,1,0,0"))
            (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
            (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "3") (term "0,0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,1,0,0"))
            (rule "add_literals" (formula "3") (term "1,1,0,1,0,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,1,0,0"))
            (rule "add_literals" (formula "3") (term "0,1,0,0"))
            (rule "leq_literals" (formula "3") (term "1,0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_pullOutFactor0" (formula "3") (term "0,0,0"))
            (rule "add_literals" (formula "3") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "3") (term "0,0,0"))
            (rule "qeq_literals" (formula "3") (term "0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polyDiv_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=quotient_0"))
            (rule "equal_literals" (formula "12") (term "0,0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
            (rule "polySimp_homoEq" (formula "12"))
            (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,0,1,0"))
            (rule "add_literals" (formula "12") (term "1,0,0,0,1,0"))
            (rule "times_zero_1" (formula "12") (term "0,0,0,1,0"))
            (rule "div_literals" (formula "12") (term "0,0,1,0"))
            (rule "add_zero_left" (formula "12") (term "0,1,0"))
            (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
            (rule "add_literals" (formula "12") (term "1,0"))
            (rule "times_zero_1" (formula "12") (term "0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "9"))
            (rule "polySimp_rightDist" (formula "18") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0"))
            (rule "add_zero_left" (formula "18") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "18"))
            (rule "polySimp_mulLiterals" (formula "18") (term "0"))
            (rule "inEqSimp_subsumption4" (formula "18") (ifseqformula "13"))
            (rule "greater_literals" (formula "18") (term "0,0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
            (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
            (rule "polySimp_pullOutFactor0" (formula "18") (term "0,0"))
            (rule "add_literals" (formula "18") (term "1,0,0"))
            (rule "times_zero_1" (formula "18") (term "0,0"))
            (rule "qeq_literals" (formula "18") (term "0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
            (rule "polySimp_rightDist" (formula "18") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
            (rule "polySimp_mulComm0" (formula "18") (term "1"))
            (rule "polySimp_rightDist" (formula "18") (term "1"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
            (rule "mul_literals" (formula "18") (term "0,1"))
            (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "12"))
            (rule "greater_literals" (formula "18") (term "0,0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
            (rule "polySimp_pullOutFactor1" (formula "18") (term "0,0"))
            (rule "add_literals" (formula "18") (term "1,0,0"))
            (rule "times_zero_1" (formula "18") (term "0,0"))
            (rule "qeq_literals" (formula "18") (term "0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "28") (term "1,1") (ifseqformula "20") (ifseqformula "21"))
            (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "41"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "40") (term "0") (ifseqformula "20") (ifseqformula "21"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "ifthenelse_split" (formula "11") (term "0"))
            (branch "classJ_0 >= 0 TRUE"
               (rule "eqSymm" (formula "12"))
               (rule "applyEqRigid" (formula "4") (term "1,0,2,0,1") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "16") (term "0,0,0") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "5") (term "0,2,0") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "17") (term "0,0,1,2") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "20") (term "0,1,1") (ifseqformula "12"))
               (rule "applyEq" (formula "18") (term "0") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "17") (term "1,0,2,0,1,0,1") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "14") (term "1,1") (ifseqformula "12"))
               (rule "applyEq" (formula "16") (term "1,0,2,0,1,1,2") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "16") (term "0,2,0,1,1,1") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "16") (term "0,2,0,0,2") (ifseqformula "12"))
               (rule "applyEq" (formula "14") (term "0") (ifseqformula "12"))
               (rule "inEqSimp_homoInEq0" (formula "14"))
               (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "1,0"))
               (rule "times_zero_1" (formula "14") (term "0"))
               (rule "qeq_literals" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "applyEq" (formula "14") (term "1") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "3") (term "0,1") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "13") (term "1") (ifseqformula "12"))
               (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "17"))
               (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
               (rule "add_literals" (formula "9") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0"))
               (rule "qeq_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "9"))
               (rule "applyEq" (formula "18") (term "0") (ifseqformula "16"))
               (rule "inEqSimp_homoInEq0" (formula "18"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "18") (term "0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
               (rule "add_literals" (formula "18") (term "0,0,0"))
               (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "16"))
               (rule "polySimp_homoEq" (formula "14") (term "0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,0"))
               (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "16"))
               (rule "applyEqRigid" (formula "14") (term "0,0,0,1") (ifseqformula "16"))
               (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
               (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
               (rule "add_zero_left" (formula "14") (term "0,0,0,1"))
               (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "16"))
               (rule "applyEqRigid" (formula "14") (term "0,0,1,1") (ifseqformula "16"))
               (rule "inEqSimp_homoInEq0" (formula "14") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "14") (term "0,0,0,0,1,1"))
               (rule "applyEq" (formula "10") (term "0") (ifseqformula "16"))
               (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "16"))
               (rule "inEqSimp_homoInEq1" (formula "17"))
               (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "1,0"))
               (rule "times_zero_1" (formula "17") (term "0"))
               (rule "leq_literals" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "applyEq" (formula "9") (term "0") (ifseqformula "16"))
               (rule "inEqSimp_homoInEq0" (formula "9"))
               (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
               (rule "add_literals" (formula "9") (term "1,0"))
               (rule "times_zero_1" (formula "9") (term "0"))
               (rule "qeq_literals" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "polySimp_sepPosMonomial" (formula "13") (term "0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16"))
               (rule "polySimp_mulComm0" (formula "16") (term "1"))
               (rule "polySimp_rightDist" (formula "16") (term "1"))
               (rule "mul_literals" (formula "16") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
               (rule "inEqSimp_invertInEq0" (formula "13") (term "0,0,1"))
               (rule "times_zero_2" (formula "13") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,1"))
               (rule "mul_literals" (formula "13") (term "0,1,0,1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9"))
               (rule "mul_literals" (formula "9") (term "1"))
               (rule "inEqSimp_subsumption6" (formula "9") (ifseqformula "14"))
               (rule "times_zero_1" (formula "9") (term "1,1,0"))
               (rule "greater_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "leq_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "inEqSimp_subsumption6" (formula "15") (ifseqformula "8"))
               (rule "greater_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
               (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0"))
               (rule "add_literals" (formula "15") (term "1,0,0"))
               (rule "times_zero_1" (formula "15") (term "0,0"))
               (rule "qeq_literals" (formula "15") (term "0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "inEqSimp_subsumption6" (formula "12") (term "0,0,1") (ifseqformula "13"))
               (rule "mul_literals" (formula "12") (term "1,1,0,0,0,1"))
               (rule "greater_literals" (formula "12") (term "0,0,0,0,1"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "leq_literals" (formula "12") (term "0,0,0,1"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "elimGcdEq" (formula "12") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0"))
               (rule "add_literals" (formula "12") (term "1,0,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,0,0"))
               (rule "add_literals" (formula "12") (term "1,0,0,0,0"))
               (rule "times_zero_1" (formula "12") (term "0,0,0,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
               (rule "add_zero_left" (formula "12") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,0"))
               (rule "add_literals" (formula "12") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "12") (term "0,0,0"))
               (rule "qeq_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
               (rule "add_zero_left" (formula "12") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,0"))
               (rule "add_literals" (formula "12") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "elimGcdGeq" (formula "12") (term "0,1,1") (inst "elimGcdRightDiv=add(Z(2(#)), quotient_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,1"))
               (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,1"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,0,1,1"))
               (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,0,1,1"))
               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,1,1"))
               (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,1,1"))
               (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,1,1"))
               (rule "add_zero_right" (formula "12") (term "0,1,0,0,1,1"))
               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0,1,1"))
               (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,1,1"))
               (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,1"))
               (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0,0,1,1"))
               (rule "mul_literals" (formula "12") (term "0,0,0,1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1,1"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,0,1,1"))
               (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,1"))
               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,1,1"))
               (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,1,1"))
               (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,1,1"))
               (rule "add_zero_right" (formula "12") (term "0,1,0,0,1,1"))
               (rule "leq_literals" (formula "12") (term "1,0,0,1,1"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1,1"))
               (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,1,1"))
               (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,1"))
               (rule "add_zero_left" (formula "12") (term "0,0,0,0,1,1"))
               (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "12") (term "1,0,0,0,1,1"))
               (rule "times_zero_1" (formula "12") (term "0,0,0,1,1"))
               (rule "qeq_literals" (formula "12") (term "0,0,1,1"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "polyDiv_pullOut" (formula "7") (term "0") (inst "polyDivCoeff=quotient_1"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,2,0"))
               (rule "equal_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0"))
               (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0"))
               (rule "div_literals" (formula "7") (term "0,0"))
               (rule "add_zero_left" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(2(#))), l_0)"))
               (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0"))
               (rule "add_literals" (formula "18") (term "0,1,1,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0"))
               (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,0,0,0,0"))
               (rule "add_literals" (formula "18") (term "1,1,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "18") (term "1,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "18") (term "0,1,0,0,0,0"))
               (rule "leq_literals" (formula "18") (term "1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "24"))
               (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0,0,0") (ifseqformula "28"))
               (rule "qeq_literals" (formula "18") (term "0,0,0,0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "jdiv_axiom" (formula "10") (term "0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0,0,2,1"))
               (rule "eqSymm" (formula "10"))
               (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "11"))
               (rule "inEqSimp_subsumption6" (formula "10") (term "0,0") (ifseqformula "13"))
               (rule "greater_literals" (formula "10") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=quotient_1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0"))
               (rule "equal_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_homoEq" (formula "10"))
               (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "10") (term "1,0,0,0,1,0"))
               (rule "times_zero_1" (formula "10") (term "0,0,0,1,0"))
               (rule "div_literals" (formula "10") (term "0,0,1,0"))
               (rule "add_zero_left" (formula "10") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
               (rule "add_literals" (formula "10") (term "1,0"))
               (rule "times_zero_1" (formula "10") (term "0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "commute_or" (formula "18") (term "0,0"))
               (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))), l_0)"))
               (rule "polySimp_addAssoc" (formula "19") (term "1,1,0,0"))
               (rule "add_literals" (formula "19") (term "0,1,1,0,0"))
               (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "19") (term "0,0,1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,0,0,0,0"))
               (rule "add_literals" (formula "19") (term "1,1,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,1,0,0,0,0"))
               (rule "leq_literals" (formula "19") (term "1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
               (rule "inEqSimp_invertInEq1" (formula "19") (term "0,0,0,0"))
               (rule "times_zero_2" (formula "19") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0,0,0") (ifseqformula "29"))
               (rule "qeq_literals" (formula "19") (term "0,0,0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "allLeft" (formula "20") (inst "t=i_0"))
               (rule "allLeft" (formula "21") (inst "t=j_0"))
               (rule "jdiv_axiom" (formula "9") (term "0"))
               (rule "eqSymm" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,2,0"))
               (rule "polySimp_rightDist" (formula "9") (term "0,0,2,0"))
               (rule "mul_literals" (formula "9") (term "0,0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,2,0"))
               (rule "applyEqRigid" (formula "9") (term "1") (ifseqformula "10"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0"))
               (rule "mul_literals" (formula "9") (term "1,0,0"))
               (rule "inEqSimp_subsumption6" (formula "9") (term "0,0") (ifseqformula "13"))
               (rule "times_zero_1" (formula "9") (term "1,1,0,0,0"))
               (rule "greater_literals" (formula "9") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "polyDiv_pullOut" (formula "9") (term "0") (inst "polyDivCoeff=quotient_1"))
               (rule "equal_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0"))
               (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0"))
               (rule "div_literals" (formula "9") (term "0,0"))
               (rule "add_zero_left" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "commute_or" (formula "19") (term "0,0"))
               (rule "inEqSimp_or_antiSymm0" (formula "19") (term "0,0"))
               (rule "polySimp_homoEq" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "1,0,1,0,0"))
               (rule "add_literals" (formula "19") (term "0,1,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "1,0,0,0,0"))
               (rule "add_literals" (formula "19") (term "0,1,0,0,0,0"))
               (rule "add_zero_left" (formula "19") (term "1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0,0,0"))
               (rule "add_literals" (formula "19") (term "1,0,0,0,0"))
               (rule "times_zero_1" (formula "19") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "commute_or_2" (formula "20") (term "0,0"))
               (rule "commute_or_2" (formula "21") (term "0,0"))
               (rule "cut_direct" (formula "4") (term "0"))
               (branch "CUT: quotient_1 >= 1 TRUE"
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "replace_known_left" (formula "12") (term "0,1,2") (ifseqformula "4"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "4"))
                  (rule "leq_literals" (formula "13") (term "0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "commute_or" (formula "19") (term "0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "inEqSimp_homoInEq1" (formula "19"))
                  (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                  (rule "add_literals" (formula "19") (term "1,0"))
                  (rule "times_zero_1" (formula "19") (term "0"))
                  (rule "leq_literals" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "commute_or_2" (formula "19") (term "0,0,0"))
                  (rule "commute_or_2" (formula "19") (term "0,0"))
                  (rule "commute_or_2" (formula "19") (term "0"))
                  (rule "commute_or_2" (formula "20") (term "0,0,0"))
                  (rule "commute_or_2" (formula "20") (term "0,0"))
                  (rule "commute_or_2" (formula "20") (term "0"))
                  (rule "commute_or" (formula "19") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "19") (term "0,0,0"))
                  (rule "commute_or_2" (formula "19") (term "0,0"))
                  (rule "commute_or" (formula "20") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "20") (term "0,0,0"))
                  (rule "commute_or_2" (formula "20") (term "0,0"))
                  (rule "allLeft" (formula "35") (inst "t=add(Z(neglit(2(#))), l_0)"))
                  (rule "polySimp_addAssoc" (formula "35") (term "1,1,0,0"))
                  (rule "add_literals" (formula "35") (term "0,1,1,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "35") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,1,0,0,0,0"))
                  (rule "add_literals" (formula "35") (term "1,1,0,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "35") (term "1,0,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "35") (term "0,1,0,0,0,0"))
                  (rule "leq_literals" (formula "35") (term "1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0,0,0,0"))
                  (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "26"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "0,0,0,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0") (ifseqformula "30"))
                  (rule "qeq_literals" (formula "35") (term "0,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "commute_or" (formula "35") (term "0,0"))
                  (rule "inEqSimp_or_antiSymm0" (formula "35") (term "0,0"))
                  (rule "polySimp_homoEq" (formula "35") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "1,0,1,0,0"))
                  (rule "add_literals" (formula "35") (term "0,1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "1,0,0,0,0"))
                  (rule "add_literals" (formula "35") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "35") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "35") (term "0,0,0,0"))
                  (rule "add_literals" (formula "35") (term "1,0,0,0,0"))
                  (rule "times_zero_1" (formula "35") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "commute_or" (formula "35") (term "0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "applyEq" (formula "35") (term "0") (ifseqformula "26"))
                  (rule "inEqSimp_homoInEq1" (formula "35"))
                  (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                  (rule "add_literals" (formula "35") (term "1,0"))
                  (rule "times_zero_1" (formula "35") (term "0"))
                  (rule "leq_literals" (formula "35"))
                  (rule "true_left" (formula "35"))
                  (rule "allLeft" (formula "35") (inst "t=j_0"))
                  (rule "allLeft" (formula "36") (inst "t=i_0"))
                  (rule "commute_or_2" (formula "35") (term "0,0"))
                  (rule "allLeft" (formula "21") (inst "t=quotient_1"))
                  (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0,0,0") (ifseqformula "4"))
                  (rule "qeq_literals" (formula "21") (term "0,0,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0,0") (ifseqformula "8"))
                  (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0"))
                  (rule "leq_literals" (formula "21") (term "0,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "commute_or_2" (formula "37") (term "0,0"))
                  (rule "commute_or_2" (formula "36") (term "0,0,0"))
                  (rule "commute_or_2" (formula "36") (term "0,0"))
                  (rule "commute_or_2" (formula "36") (term "0"))
                  (rule "commute_or_2" (formula "37") (term "0,0,0"))
                  (rule "commute_or_2" (formula "37") (term "0,0"))
                  (rule "commute_or_2" (formula "37") (term "0"))
                  (rule "commute_or" (formula "36") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "36") (term "0,0,0"))
                  (rule "commute_or_2" (formula "36") (term "0,0"))
                  (rule "commute_or" (formula "37") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "37") (term "0,0,0"))
                  (rule "commute_or_2" (formula "37") (term "0,0"))
                  (rule "onlyCreatedObjectsAreReferencedFinal" (formula "32") (term "0,0") (ifseqformula "14") (ifseqformula "1"))
                  (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "40"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "cut_direct" (formula "19") (term "1,0"))
                  (branch "CUT: i_0 >= l_0 TRUE"
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "inEqSimp_subsumption1" (formula "38") (term "1,0") (ifseqformula "19"))
                     (rule "inEqSimp_homoInEq0" (formula "38") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0"))
                     (rule "add_literals" (formula "38") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "38") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                     (rule "qeq_literals" (formula "38") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "true_left" (formula "38"))
                     (rule "cut_direct" (formula "20") (term "1,0"))
                     (branch "CUT: j_0 >= l_0 TRUE"
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "inEqSimp_subsumption1" (formula "37") (term "1,0") (ifseqformula "20"))
                        (rule "inEqSimp_homoInEq0" (formula "37") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "37") (term "0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0"))
                        (rule "add_literals" (formula "37") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "37") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "37") (term "0,0,1,0"))
                        (rule "qeq_literals" (formula "37") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "true_left" (formula "37"))
                        (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "2"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1"))
                        (rule "polySimp_elimOne" (formula "20") (term "1"))
                        (rule "ifthenelse_split_for" (formula "12"))
                        (branch "l_0 = 1 + quotient_1 TRUE"
                           (rule "andLeft" (formula "13"))
                           (rule "applyEqRigid" (formula "14") (term "0,0") (ifseqformula "12"))
                           (rule "inEqSimp_homoInEq1" (formula "14") (term "0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                           (rule "add_literals" (formula "14") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0"))
                           (rule "leq_literals" (formula "14") (term "0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "applyEq" (formula "37") (term "1") (ifseqformula "12"))
                           (rule "applyEqRigid" (formula "21") (term "1") (ifseqformula "12"))
                           (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "12"))
                           (rule "applyEqRigid" (formula "28") (term "1,0,2,0") (ifseqformula "12"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,2,0"))
                           (rule "add_literals" (formula "28") (term "0,0,2,0"))
                           (rule "applyEq" (formula "20") (term "1") (ifseqformula "12"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "12"))
                           (rule "inEqSimp_homoInEq1" (formula "8"))
                           (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "1,0"))
                           (rule "times_zero_1" (formula "8") (term "0"))
                           (rule "leq_literals" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "applyEq" (formula "21") (term "1,0,0,0") (ifseqformula "11"))
                           (rule "applyEqRigid" (formula "18") (term "1,0,2,1,1,0") (ifseqformula "11"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,2,1,1,0"))
                           (rule "add_literals" (formula "18") (term "0,0,2,1,1,0"))
                           (rule "add_zero_left" (formula "18") (term "0,2,1,1,0"))
                           (rule "applyEqRigid" (formula "37") (term "1,1,1,0,0,0,0") (ifseqformula "11"))
                           (rule "polySimp_addAssoc" (formula "37") (term "1,1,0,0,0,0"))
                           (rule "add_literals" (formula "37") (term "0,1,1,0,0,0,0"))
                           (rule "add_zero_left" (formula "37") (term "1,1,0,0,0,0"))
                           (rule "applyEq" (formula "22") (term "1,1,0,0,0,0") (ifseqformula "11"))
                           (rule "applyEqRigid" (formula "37") (term "1,1,1,0,0,0,0,0") (ifseqformula "11"))
                           (rule "polySimp_addAssoc" (formula "37") (term "1,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "37") (term "0,1,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "37") (term "1,1,0,0,0,0,0"))
                           (rule "applyEqRigid" (formula "34") (term "1") (ifseqformula "11"))
                           (rule "applyEq" (formula "22") (term "1,1,0,0,0,0,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "18") (term "1,1,0,0,0") (ifseqformula "11"))
                           (rule "polySimp_addAssoc" (formula "18") (term "1,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,1,0,0,0"))
                           (rule "applyEq" (formula "31") (term "0") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq1" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0"))
                           (rule "add_literals" (formula "31") (term "0,0"))
                           (rule "applyEq" (formula "5") (term "0") (ifseqformula "27"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "27"))
                           (rule "applyEqRigid" (formula "5") (term "1,0,2,0") (ifseqformula "11"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,2,0"))
                           (rule "add_literals" (formula "5") (term "0,0,2,0"))
                           (rule "add_zero_left" (formula "5") (term "0,2,0"))
                           (rule "applyEqRigid" (formula "24") (term "0,1") (ifseqformula "11"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1"))
                           (rule "mul_literals" (formula "24") (term "0,1"))
                           (rule "applyEqRigid" (formula "27") (term "1,0,2,1") (ifseqformula "11"))
                           (rule "eqSymm" (formula "27"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,2,0"))
                           (rule "add_literals" (formula "27") (term "0,0,2,0"))
                           (rule "add_zero_left" (formula "27") (term "0,2,0"))
                           (rule "eqSymm" (formula "27"))
                           (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "11"))
                           (rule "applyEq" (formula "30") (term "1") (ifseqformula "11"))
                           (rule "applyEq" (formula "12") (term "1,0,2,0") (ifseqformula "11"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,2,0"))
                           (rule "add_literals" (formula "12") (term "0,0,2,0"))
                           (rule "add_zero_left" (formula "12") (term "0,2,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                           (rule "polySimp_elimOne" (formula "31") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "6"))
                           (rule "andLeft" (formula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                           (rule "add_literals" (formula "5") (term "1,1,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0"))
                           (rule "add_zero_right" (formula "5") (term "0"))
                           (rule "leq_literals" (formula "5"))
                           (rule "closeFalse" (formula "5"))
                        )
                        (branch "l_0 = 1 + quotient_1 FALSE"
                           (rule "andLeft" (formula "12"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "12"))
                           (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "12"))
                           (rule "inEqSimp_strengthen1" (formula "8") (ifseqformula "39"))
                           (rule "polySimp_addAssoc" (formula "8") (term "1"))
                           (rule "add_literals" (formula "8") (term "0,1"))
                           (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "8"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0"))
                           (rule "leq_literals" (formula "39") (term "0"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "false_right" (formula "39"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "6"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                     (branch "CUT: j_0 >= l_0 FALSE"
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_geqRight" (formula "39"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "ifthenelse_split_for" (formula "13"))
                        (branch "l_0 = 1 + quotient_1 TRUE"
                           (rule "andLeft" (formula "14"))
                           (rule "applyEqRigid" (formula "24") (term "1,0,0,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "41") (term "1,1,1,0,0,0,0,0") (ifseqformula "13"))
                           (rule "polySimp_addAssoc" (formula "41") (term "1,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "41") (term "0,1,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "41") (term "1,1,0,0,0,0,0"))
                           (rule "applyEq" (formula "30") (term "1,0,2,0") (ifseqformula "13"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,2,0"))
                           (rule "add_literals" (formula "30") (term "0,0,2,0"))
                           (rule "applyEqRigid" (formula "25") (term "1,1,0,0,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "39") (term "1") (ifseqformula "13"))
                           (rule "applyEq" (formula "34") (term "0") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "34"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0"))
                           (rule "add_literals" (formula "34") (term "0,0"))
                           (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "13"))
                           (rule "applyEq" (formula "23") (term "1,1,0,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "15") (term "0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0"))
                           (rule "leq_literals" (formula "15") (term "0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "applyEq" (formula "39") (term "1,1,1,0,0,0,0") (ifseqformula "13"))
                           (rule "polySimp_addAssoc" (formula "39") (term "1,1,0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,1,1,0,0,0,0"))
                           (rule "add_zero_left" (formula "39") (term "1,1,0,0,0,0"))
                           (rule "applyEq" (formula "36") (term "1") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "40") (term "1,1,1,0,0,0,0") (ifseqformula "13"))
                           (rule "polySimp_addAssoc" (formula "40") (term "1,1,0,0,0,0"))
                           (rule "add_literals" (formula "40") (term "0,1,1,0,0,0,0"))
                           (rule "add_zero_left" (formula "40") (term "1,1,0,0,0,0"))
                           (rule "applyEqRigid" (formula "24") (term "1,1,0,0,0,0,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "39") (term "1,1,1,0") (ifseqformula "13"))
                           (rule "polySimp_addAssoc" (formula "39") (term "1,1,0"))
                           (rule "add_literals" (formula "39") (term "0,1,1,0"))
                           (rule "add_zero_left" (formula "39") (term "1,1,0"))
                           (rule "applyEqRigid" (formula "20") (term "1,1,0,0,0") (ifseqformula "13"))
                           (rule "polySimp_addAssoc" (formula "20") (term "1,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,1,0,0,0"))
                           (rule "applyEq" (formula "20") (term "1,0,2,1,1,0") (ifseqformula "13"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,2,1,1,0"))
                           (rule "add_literals" (formula "20") (term "0,0,2,1,1,0"))
                           (rule "add_zero_left" (formula "20") (term "0,2,1,1,0"))
                           (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "13"))
                           (rule "polySimp_addAssoc" (formula "1") (term "1"))
                           (rule "add_literals" (formula "1") (term "0,1"))
                           (rule "add_zero_left" (formula "1") (term "1"))
                           (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "9"))
                           (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                           (rule "add_literals" (formula "9") (term "1,0"))
                           (rule "times_zero_1" (formula "9") (term "0"))
                           (rule "leq_literals" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "28"))
                           (rule "applyEq" (formula "13") (term "0") (ifseqformula "28"))
                           (rule "applyEq" (formula "6") (term "1,0,2,0") (ifseqformula "12"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,2,0"))
                           (rule "add_literals" (formula "6") (term "0,0,2,0"))
                           (rule "add_zero_left" (formula "6") (term "0,2,0"))
                           (rule "applyEqRigid" (formula "13") (term "1,0,2,0") (ifseqformula "12"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,2,0"))
                           (rule "add_literals" (formula "13") (term "0,0,2,0"))
                           (rule "add_zero_left" (formula "13") (term "0,2,0"))
                           (rule "applyEqRigid" (formula "25") (term "0,1") (ifseqformula "12"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1"))
                           (rule "polySimp_rightDist" (formula "25") (term "1"))
                           (rule "mul_literals" (formula "25") (term "0,1"))
                           (rule "applyEqRigid" (formula "31") (term "1") (ifseqformula "12"))
                           (rule "applyEqRigid" (formula "24") (term "1") (ifseqformula "12"))
                           (rule "applyEq" (formula "28") (term "1,0,2,1") (ifseqformula "12"))
                           (rule "eqSymm" (formula "28"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,2,0"))
                           (rule "add_literals" (formula "28") (term "0,0,2,0"))
                           (rule "add_zero_left" (formula "28") (term "0,2,0"))
                           (rule "eqSymm" (formula "28"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                           (rule "polySimp_elimOne" (formula "32") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "6"))
                           (rule "andLeft" (formula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                           (rule "add_literals" (formula "7") (term "1,1,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0"))
                           (rule "add_zero_right" (formula "7") (term "0"))
                           (rule "leq_literals" (formula "7"))
                           (rule "closeFalse" (formula "7"))
                        )
                        (branch "l_0 = 1 + quotient_1 FALSE"
                           (rule "andLeft" (formula "13"))
                           (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "13"))
                           (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "41"))
                           (rule "polySimp_addAssoc" (formula "9") (term "1"))
                           (rule "add_literals" (formula "9") (term "0,1"))
                           (rule "inEqSimp_contradEq7" (formula "41") (ifseqformula "9"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                           (rule "add_literals" (formula "41") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                           (rule "add_literals" (formula "41") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "41") (term "1,0,0"))
                           (rule "add_zero_right" (formula "41") (term "0,0"))
                           (rule "leq_literals" (formula "41") (term "0"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "false_right" (formula "41"))
                           (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "3"))
                           (rule "andLeft" (formula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "7"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                           (rule "add_literals" (formula "7") (term "1,1,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0"))
                           (rule "add_zero_right" (formula "7") (term "0"))
                           (rule "leq_literals" (formula "7"))
                           (rule "closeFalse" (formula "7"))
                        )
                     )
                  )
                  (branch "CUT: i_0 >= l_0 FALSE"
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_geqRight" (formula "40"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "cut_direct" (formula "21") (term "1,0"))
                     (branch "CUT: j_0 >= l_0 TRUE"
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "inEqSimp_subsumption1" (formula "38") (term "1,0") (ifseqformula "21"))
                        (rule "inEqSimp_homoInEq0" (formula "38") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0"))
                        (rule "add_literals" (formula "38") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "38") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                        (rule "qeq_literals" (formula "38") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "true_left" (formula "38"))
                        (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "3"))
                        (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1"))
                        (rule "polySimp_elimOne" (formula "21") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "39") (term "1,0") (ifseqformula "21"))
                        (rule "inEqSimp_homoInEq0" (formula "39") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0"))
                        (rule "add_literals" (formula "39") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "39") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                        (rule "qeq_literals" (formula "39") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "true_left" (formula "39"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "21"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "CUT: j_0 >= l_0 FALSE"
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_geqRight" (formula "41"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "ifthenelse_split_for" (formula "14"))
                        (branch "l_0 = 1 + quotient_1 TRUE"
                           (rule "andLeft" (formula "15"))
                           (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "14"))
                           (rule "inEqSimp_homoInEq1" (formula "16") (term "0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0"))
                           (rule "leq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "applyEq" (formula "40") (term "1,1,1,0") (ifseqformula "14"))
                           (rule "polySimp_addAssoc" (formula "40") (term "1,1,0"))
                           (rule "add_literals" (formula "40") (term "0,1,1,0"))
                           (rule "add_zero_left" (formula "40") (term "1,1,0"))
                           (rule "applyEqRigid" (formula "42") (term "1,1,1,0,0,0,0,0") (ifseqformula "14"))
                           (rule "polySimp_addAssoc" (formula "42") (term "1,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "42") (term "0,1,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "42") (term "1,1,0,0,0,0,0"))
                           (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "14"))
                           (rule "polySimp_addAssoc" (formula "1") (term "1"))
                           (rule "add_literals" (formula "1") (term "0,1"))
                           (rule "add_zero_left" (formula "1") (term "1"))
                           (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "14"))
                           (rule "inEqSimp_homoInEq1" (formula "34"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0"))
                           (rule "add_literals" (formula "34") (term "0,0"))
                           (rule "applyEq" (formula "41") (term "1,1,1,0") (ifseqformula "14"))
                           (rule "polySimp_addAssoc" (formula "41") (term "1,1,0"))
                           (rule "add_literals" (formula "41") (term "0,1,1,0"))
                           (rule "add_zero_left" (formula "41") (term "1,1,0"))
                           (rule "applyEq" (formula "23") (term "1,1,0,0,0") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "42") (term "1,1,1,0,0,0,0") (ifseqformula "14"))
                           (rule "polySimp_addAssoc" (formula "42") (term "1,1,0,0,0,0"))
                           (rule "add_literals" (formula "42") (term "0,1,1,0,0,0,0"))
                           (rule "add_zero_left" (formula "42") (term "1,1,0,0,0,0"))
                           (rule "applyEqRigid" (formula "25") (term "1,1,0,0,0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "22") (term "1,1,0,0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "14"))
                           (rule "polySimp_addAssoc" (formula "2") (term "1"))
                           (rule "add_literals" (formula "2") (term "0,1"))
                           (rule "add_zero_left" (formula "2") (term "1"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "14"))
                           (rule "inEqSimp_homoInEq1" (formula "10"))
                           (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "1,0"))
                           (rule "times_zero_1" (formula "10") (term "0"))
                           (rule "leq_literals" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "20") (term "1,1,0,0,0") (ifseqformula "13"))
                           (rule "polySimp_addAssoc" (formula "20") (term "1,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,1,0,0,0"))
                           (rule "applyEqRigid" (formula "29") (term "1,0,2,0") (ifseqformula "13"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,2,0"))
                           (rule "add_literals" (formula "29") (term "0,0,2,0"))
                           (rule "applyEqRigid" (formula "20") (term "1,0,2,1,1,0") (ifseqformula "13"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,2,1,1,0"))
                           (rule "add_literals" (formula "20") (term "0,0,2,1,1,0"))
                           (rule "add_zero_left" (formula "20") (term "0,2,1,1,0"))
                           (rule "applyEq" (formula "38") (term "1") (ifseqformula "13"))
                           (rule "applyEq" (formula "24") (term "1,1,0,0,0,0,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "39") (term "1,1,1,0,0,0,0") (ifseqformula "13"))
                           (rule "polySimp_addAssoc" (formula "39") (term "1,1,0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,1,1,0,0,0,0"))
                           (rule "add_zero_left" (formula "39") (term "1,1,0,0,0,0"))
                           (rule "applyEqRigid" (formula "40") (term "1,1,1,0,0,0,0") (ifseqformula "13"))
                           (rule "polySimp_addAssoc" (formula "40") (term "1,1,0,0,0,0"))
                           (rule "add_literals" (formula "40") (term "0,1,1,0,0,0,0"))
                           (rule "add_zero_left" (formula "40") (term "1,1,0,0,0,0"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "29"))
                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "29"))
                           (rule "applyEqRigid" (formula "7") (term "1,0,2,0") (ifseqformula "13"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,2,0"))
                           (rule "add_literals" (formula "7") (term "0,0,2,0"))
                           (rule "add_zero_left" (formula "7") (term "0,2,0"))
                           (rule "applyEqRigid" (formula "32") (term "1") (ifseqformula "13"))
                           (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "13"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1"))
                           (rule "polySimp_rightDist" (formula "26") (term "1"))
                           (rule "mul_literals" (formula "26") (term "0,1"))
                           (rule "applyEqRigid" (formula "25") (term "1") (ifseqformula "13"))
                           (rule "applyEq" (formula "29") (term "1,0,2,1") (ifseqformula "13"))
                           (rule "eqSymm" (formula "29"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,2,0"))
                           (rule "add_literals" (formula "29") (term "0,0,2,0"))
                           (rule "add_zero_left" (formula "29") (term "0,2,0"))
                           (rule "eqSymm" (formula "29"))
                           (rule "applyEq" (formula "14") (term "1,0,2,0") (ifseqformula "13"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,2,0"))
                           (rule "add_literals" (formula "14") (term "0,0,2,0"))
                           (rule "add_zero_left" (formula "14") (term "0,2,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                           (rule "polySimp_elimOne" (formula "33") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "7"))
                           (rule "andLeft" (formula "8"))
                           (rule "inEqSimp_homoInEq1" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "1,1,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0"))
                           (rule "add_zero_right" (formula "8") (term "0"))
                           (rule "leq_literals" (formula "8"))
                           (rule "closeFalse" (formula "8"))
                        )
                        (branch "l_0 = 1 + quotient_1 FALSE"
                           (rule "andLeft" (formula "14"))
                           (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "14"))
                           (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "43"))
                           (rule "polySimp_addAssoc" (formula "10") (term "1"))
                           (rule "add_literals" (formula "10") (term "0,1"))
                           (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "10"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                           (rule "add_literals" (formula "43") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                           (rule "add_literals" (formula "43") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "43") (term "1,0,0"))
                           (rule "add_zero_right" (formula "43") (term "0,0"))
                           (rule "leq_literals" (formula "43") (term "0"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "false_right" (formula "43"))
                           (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "4"))
                           (rule "andLeft" (formula "8"))
                           (rule "inEqSimp_homoInEq1" (formula "8"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "1,1,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0"))
                           (rule "add_zero_right" (formula "8") (term "0"))
                           (rule "leq_literals" (formula "8"))
                           (rule "closeFalse" (formula "8"))
                        )
                     )
                  )
               )
               (branch "CUT: quotient_1 >= 1 FALSE"
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "replace_known_right" (formula "10") (term "0,1,2") (ifseqformula "36"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "inEqSimp_geqRight" (formula "36"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "1"))
                  (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "12"))
                  (rule "add_zero_right" (formula "7") (term "1"))
                  (rule "applyEq" (formula "11") (term "0,2,0,1,1,1") (ifseqformula "12"))
                  (rule "applyEq" (formula "9") (term "0,1,0,0") (ifseqformula "12"))
                  (rule "times_zero_2" (formula "9") (term "1,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0"))
                  (rule "jdiv_axiom_inline" (formula "9") (term "0"))
                  (rule "mul_literals" (formula "9") (term "0,0,2,0"))
                  (rule "qeq_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "div_literals" (formula "9") (term "0"))
                  (rule "eqSymm" (formula "9"))
                  (rule "applyEqRigid" (formula "9") (term "0,0,0") (ifseqformula "11"))
                  (rule "mul_literals" (formula "9") (term "0,0"))
                  (rule "jdiv_axiom_inline" (formula "9") (term "0"))
                  (rule "times_zero_2" (formula "9") (term "0,0,2,0"))
                  (rule "qeq_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "div_literals" (formula "9") (term "0"))
                  (rule "eqSymm" (formula "9"))
                  (rule "applyEqRigid" (formula "5") (term "0,2,0") (ifseqformula "10"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
                  (rule "leq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEqRigid" (formula "8") (term "0,2,0,2") (ifseqformula "9"))
                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                  (rule "qeq_literals" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "applyEq" (formula "8") (term "1,1,0,1,1") (ifseqformula "9"))
                  (rule "add_zero_right" (formula "8") (term "1,0,1,1"))
                  (rule "replace_known_left" (formula "8") (term "0,1,1") (ifseqformula "28"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "applyEqRigid" (formula "8") (term "1,0,2,0,0,1") (ifseqformula "9"))
                  (rule "add_zero_right" (formula "8") (term "0,2,0,0,1"))
                  (rule "applyEqRigid" (formula "3") (term "0,1") (ifseqformula "9"))
                  (rule "times_zero_2" (formula "3") (term "1"))
                  (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "9"))
                  (rule "applyEqRigid" (formula "10") (term "0,1,1") (ifseqformula "9"))
                  (rule "times_zero_2" (formula "10") (term "1,1"))
                  (rule "add_zero_right" (formula "10") (term "1"))
                  (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "9"))
                  (rule "add_zero_right" (formula "8") (term "1,0"))
                  (rule "inEqSimp_contradEq7" (formula "8") (term "0") (ifseqformula "28"))
                  (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0"))
                  (rule "leq_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "applyEq" (formula "4") (term "0") (ifseqformula "8"))
                  (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "4"))
                  (rule "andLeft" (formula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "add_literals" (formula "2") (term "0"))
                  (rule "leq_literals" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
            )
            (branch "classJ_0 >= 0 FALSE"
               (rule "polySimp_homoEq" (formula "11"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0"))
               (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "polySimp_addComm0" (formula "11") (term "0,0"))
               (rule "inEqSimp_geqRight" (formula "40"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polySimp_sepNegMonomial" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "polySimp_elimOne" (formula "12") (term "0"))
               (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "12"))
               (rule "inEqSimp_homoInEq1" (formula "20"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0"))
               (rule "polySimp_addComm1" (formula "20") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "20") (term "0"))
               (rule "add_literals" (formula "20") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,0"))
               (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "12"))
               (rule "inEqSimp_homoInEq0" (formula "11"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
               (rule "add_literals" (formula "11") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,0,0"))
               (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
               (rule "inEqSimp_homoInEq1" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0"))
               (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0"))
               (rule "add_literals" (formula "10") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "0,0"))
               (rule "applyEq" (formula "17") (term "0,0,1,1") (ifseqformula "12"))
               (rule "inEqSimp_homoInEq0" (formula "17") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "17") (term "0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,1"))
               (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "12"))
               (rule "applyEq" (formula "21") (term "0") (ifseqformula "12"))
               (rule "inEqSimp_homoInEq0" (formula "21"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "0,1,0"))
               (rule "polySimp_addComm1" (formula "21") (term "0"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
               (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "12"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "applyEqRigid" (formula "17") (term "0,0,0,1") (ifseqformula "12"))
               (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,0,0,1"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1"))
               (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "17") (term "0,0") (ifseqformula "12"))
               (rule "polySimp_homoEq" (formula "17") (term "0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,0"))
               (rule "polySimp_addComm1" (formula "17") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
               (rule "polySimp_sepPosMonomial" (formula "17") (term "0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "17") (term "0,1,0"))
               (rule "mul_literals" (formula "17") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20"))
               (rule "polySimp_mulComm0" (formula "20") (term "1"))
               (rule "polySimp_rightDist" (formula "20") (term "1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
               (rule "mul_literals" (formula "20") (term "0,1"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "11"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0"))
               (rule "polySimp_elimOne" (formula "11") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "polySimp_elimOne" (formula "10") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,1"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,1"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,1"))
               (rule "polySimp_rightDist" (formula "17") (term "0,1,0,1,1"))
               (rule "mul_literals" (formula "17") (term "0,0,1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,1,1"))
               (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0,1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "21"))
               (rule "polySimp_mulComm0" (formula "21") (term "1"))
               (rule "polySimp_rightDist" (formula "21") (term "1"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1"))
               (rule "polySimp_rightDist" (formula "21") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1"))
               (rule "mul_literals" (formula "21") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "21") (term "1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1"))
               (rule "polySimp_elimOne" (formula "17") (term "0,0,0,1"))
               (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "20"))
               (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
               (rule "polySimp_addComm0" (formula "15") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
               (rule "add_literals" (formula "15") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "15") (term "1,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0"))
               (rule "qeq_literals" (formula "15") (term "0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "10"))
               (rule "andLeft" (formula "19"))
               (rule "inEqSimp_homoInEq1" (formula "19"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0"))
               (rule "polySimp_addComm0" (formula "19") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
               (rule "add_literals" (formula "19") (term "1,1,0"))
               (rule "times_zero_1" (formula "19") (term "1,0"))
               (rule "add_literals" (formula "19") (term "0"))
               (rule "leq_literals" (formula "19"))
               (rule "closeFalse" (formula "19"))
            )
         )
         (branch "classI_0 = quotient_0 * 2 FALSE"
            (rule "andLeft" (formula "2"))
            (rule "applyEq" (formula "17") (term "0,1,1,1") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "17") (term "1,1,1"))
            (rule "polySimp_addComm1" (formula "17") (term "0,1,1,1"))
            (rule "applyEq" (formula "17") (term "0,0,2") (ifseqformula "2"))
            (rule "eqSymm" (formula "17") (term "0,2"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,1,1"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,1"))
            (rule "polySimp_rightDist" (formula "17") (term "1,1,1,1"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,1"))
            (rule "mul_literals" (formula "17") (term "0,1,1,1,1"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,1,1,1"))
            (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "43"))
            (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "14"))
            (rule "polySimp_mulAssoc" (formula "43") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
            (rule "add_literals" (formula "43") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "43") (term "1,0,0"))
            (rule "add_zero_right" (formula "43") (term "0,0"))
            (rule "leq_literals" (formula "43") (term "0"))
             (builtin "One Step Simplification" (formula "43"))
            (rule "false_right" (formula "43"))
            (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "15"))
            (rule "applyEqRigid" (formula "24") (term "1,1") (ifseqformula "14"))
            (rule "polySimp_addAssoc" (formula "24") (term "1"))
            (rule "add_literals" (formula "24") (term "0,1"))
            (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "14"))
            (rule "inEqSimp_homoInEq0" (formula "16"))
            (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
            (rule "add_literals" (formula "16") (term "1,0"))
            (rule "times_zero_1" (formula "16") (term "0"))
            (rule "qeq_literals" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
            (rule "inEqSimp_homoInEq1" (formula "15"))
            (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
            (rule "add_literals" (formula "15") (term "1,0"))
            (rule "times_zero_1" (formula "15") (term "0"))
            (rule "leq_literals" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "19") (term "0") (ifseqformula "14"))
            (rule "applyEqRigid" (formula "15") (term "0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "20") (term "0") (ifseqformula "14"))
            (rule "inEqSimp_homoInEq0" (formula "20"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
            (rule "add_literals" (formula "20") (term "0,0,0"))
            (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "14"))
            (rule "inEqSimp_homoInEq0" (formula "21"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
            (rule "mul_literals" (formula "21") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0"))
            (rule "polySimp_addComm0" (formula "21") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19"))
            (rule "mul_literals" (formula "19") (term "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "20"))
            (rule "polySimp_mulComm0" (formula "20") (term "1"))
            (rule "polySimp_rightDist" (formula "20") (term "1"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
            (rule "mul_literals" (formula "20") (term "0,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "21"))
            (rule "polySimp_mulLiterals" (formula "21") (term "0"))
            (rule "inEqSimp_contradEq7" (formula "16") (term "1,0") (ifseqformula "22"))
            (rule "polySimp_mulAssoc" (formula "16") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,1,0"))
            (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0,1,0"))
            (rule "add_zero_right" (formula "16") (term "0,0,1,0"))
            (rule "leq_literals" (formula "16") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "inEqSimp_subsumption6" (formula "19") (ifseqformula "17"))
            (rule "times_zero_1" (formula "19") (term "1,1,0"))
            (rule "greater_literals" (formula "19") (term "0,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "leq_literals" (formula "19") (term "0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "true_left" (formula "19"))
            (rule "elimGcdLeq_antec" (formula "20") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_1)") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
            (rule "neg_literal" (formula "20") (term "0,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "20") (term "0,0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
            (rule "add_literals" (formula "20") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0"))
            (rule "add_zero_right" (formula "20") (term "0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
            (rule "add_literals" (formula "20") (term "0,0,0,0"))
            (rule "add_zero_left" (formula "20") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
            (rule "polySimp_addComm0" (formula "20") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
            (rule "add_literals" (formula "20") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0"))
            (rule "add_zero_right" (formula "20") (term "0,0"))
            (rule "qeq_literals" (formula "20") (term "0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "20"))
            (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
            (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
            (rule "add_literals" (formula "13") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "13") (term "1,0,0"))
            (rule "add_zero_right" (formula "13") (term "0,0"))
            (rule "qeq_literals" (formula "13") (term "0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=add(Z(2(#)), quotient_0)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "18") (term "0,0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
            (rule "add_literals" (formula "18") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
            (rule "add_literals" (formula "18") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0"))
            (rule "leq_literals" (formula "18") (term "0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "18"))
            (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
            (rule "add_literals" (formula "12") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0"))
            (rule "qeq_literals" (formula "12") (term "0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "polyDiv_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=quotient_0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0"))
            (rule "equal_literals" (formula "11") (term "0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "polySimp_homoEq" (formula "11"))
            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,1,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0,0,1,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,1,0"))
            (rule "div_literals" (formula "11") (term "0,0,1,0"))
            (rule "add_zero_left" (formula "11") (term "0,1,0"))
            (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
            (rule "add_literals" (formula "11") (term "1,0"))
            (rule "times_zero_1" (formula "11") (term "0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
            (rule "polySimp_rightDist" (formula "18") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
            (rule "polySimp_mulComm0" (formula "18") (term "1"))
            (rule "polySimp_rightDist" (formula "18") (term "1"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
            (rule "mul_literals" (formula "18") (term "0,1"))
            (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "16"))
            (rule "greater_literals" (formula "18") (term "0,0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
            (rule "add_literals" (formula "18") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0"))
            (rule "qeq_literals" (formula "18") (term "0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "17"))
            (rule "times_zero_1" (formula "14") (term "0,0"))
            (rule "add_zero_left" (formula "14") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14"))
            (rule "mul_literals" (formula "14") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
            (rule "leq_literals" (formula "16") (term "0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "8"))
            (rule "polySimp_rightDist" (formula "18") (term "0,0"))
            (rule "mul_literals" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "18"))
            (rule "polySimp_mulLiterals" (formula "18") (term "0"))
            (rule "inEqSimp_subsumption4" (formula "18") (ifseqformula "17"))
            (rule "greater_literals" (formula "18") (term "0,0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "polySimp_rightDist" (formula "18") (term "0,0"))
            (rule "mul_literals" (formula "18") (term "0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
            (rule "add_literals" (formula "18") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0"))
            (rule "qeq_literals" (formula "18") (term "0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "27") (term "1") (ifseqformula "20") (ifseqformula "21"))
            (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "41"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "28") (term "0,0") (ifseqformula "20") (ifseqformula "21"))
            (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "41"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "ifthenelse_split" (formula "9") (term "0"))
            (branch "classJ_0 >= 0 TRUE"
               (rule "eqSymm" (formula "10"))
               (rule "applyEq" (formula "14") (term "1,0,2,0,1,0,1") (ifseqformula "10"))
               (rule "applyEq" (formula "14") (term "0,0,1,2") (ifseqformula "10"))
               (rule "replace_known_left" (formula "14") (term "0,1,2") (ifseqformula "15"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "10"))
               (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "10"))
               (rule "applyEqRigid" (formula "19") (term "0,1,1") (ifseqformula "10"))
               (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "10"))
               (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "10"))
               (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "10"))
               (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "15"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "applyEq" (formula "18") (term "0") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq0" (formula "18"))
               (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
               (rule "add_literals" (formula "18") (term "1,1,0"))
               (rule "times_zero_1" (formula "18") (term "1,0"))
               (rule "add_literals" (formula "18") (term "0"))
               (rule "qeq_literals" (formula "18"))
               (rule "closeFalse" (formula "18"))
            )
            (branch "classJ_0 >= 0 FALSE"
               (rule "polySimp_homoEq" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0"))
               (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "9") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0"))
               (rule "inEqSimp_geqRight" (formula "40"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polySimp_sepNegMonomial" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "polySimp_elimOne" (formula "10") (term "0"))
               (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "10"))
               (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq0" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0"))
               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
               (rule "add_literals" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,0,0"))
               (rule "applyEq" (formula "8") (term "0") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq1" (formula "8"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0"))
               (rule "add_literals" (formula "8") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "0,0"))
               (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq0" (formula "20"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "0,1,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
               (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "10"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "10"))
               (rule "polySimp_homoEq" (formula "14") (term "0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
               (rule "applyEq" (formula "14") (term "0,0,1,1") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq0" (formula "14") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,1"))
               (rule "applyEq" (formula "14") (term "0,0,0,1") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,0,1"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
               (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq1" (formula "19"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "19") (term "0"))
               (rule "add_literals" (formula "19") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,0"))
               (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "10"))
               (rule "polySimp_sepPosMonomial" (formula "14") (term "0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
               (rule "mul_literals" (formula "14") (term "0,0,1,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
               (rule "polySimp_elimOne" (formula "9") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "8"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
               (rule "polySimp_elimOne" (formula "8") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20"))
               (rule "polySimp_mulComm0" (formula "20") (term "1"))
               (rule "polySimp_rightDist" (formula "20") (term "1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1"))
               (rule "polySimp_rightDist" (formula "20") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1"))
               (rule "mul_literals" (formula "20") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "20") (term "1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,1"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,1"))
               (rule "polySimp_rightDist" (formula "14") (term "0,1,0,1,1"))
               (rule "mul_literals" (formula "14") (term "0,0,1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,1"))
               (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,1"))
               (rule "polySimp_elimOne" (formula "14") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19"))
               (rule "polySimp_mulComm0" (formula "19") (term "1"))
               (rule "polySimp_rightDist" (formula "19") (term "1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
               (rule "mul_literals" (formula "19") (term "0,1"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1"))
               (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "19"))
               (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
               (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
               (rule "add_literals" (formula "18") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
               (rule "add_literals" (formula "18") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "18") (term "1,0,0"))
               (rule "add_zero_right" (formula "18") (term "0,0"))
               (rule "qeq_literals" (formula "18") (term "0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "18"))
               (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
               (rule "add_literals" (formula "9") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0"))
               (rule "qeq_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "17"))
               (rule "andLeft" (formula "8"))
               (rule "inEqSimp_homoInEq1" (formula "8"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0"))
               (rule "mul_literals" (formula "8") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "polySimp_addComm0" (formula "8") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
               (rule "add_literals" (formula "8") (term "1,1,0"))
               (rule "times_zero_1" (formula "8") (term "1,0"))
               (rule "add_literals" (formula "8") (term "0"))
               (rule "leq_literals" (formula "8"))
               (rule "closeFalse" (formula "8"))
            )
         )
      )
   )
   (branch "Assume javaDivInt(classJ_0, 2) != javaDivInt(classI_0, 2)"
      (rule "notLeft" (formula "3") (userinteraction))
      (rule "cut" (inst "cutFormula=lt(javaDivInt(classI_0, Z(2(#))),
   javaDivInt(classJ_0, Z(2(#))))<<origin(\"User_Interaction @ node 57892 (cut)\",\"[]\")>>") (userinteraction))
      (branch "CUT: javaDivInt(classI_0, 2) < javaDivInt(classJ_0, 2) TRUE"
         (rule "hide_left" (formula "14") (userinteraction))
         (rule "instAll" (formula "2") (term "0,2,0,0,2") (ifseqformula "12") (userinteraction))
         (rule "impLeft" (formula "2") (userinteraction))
         (branch "Case 1"
            (rule "translateJavaDivInt" (formula "15") (term "0"))
            (rule "translateJavaDivInt" (formula "15") (term "1"))
            (rule "translateJavaDivInt" (formula "14") (term "1,0"))
            (rule "translateJavaSubInt" (formula "2") (term "0,2,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "2") (term "1,0,1,1"))
            (rule "translateJavaDivInt" (formula "2") (term "0,2,1,1,1,1"))
            (rule "translateJavaDivInt" (formula "2") (term "0,2,0,0,2"))
            (rule "translateJavaDivInt" (formula "2") (term "1,0,1,2"))
            (rule "translateJavaSubInt" (formula "2") (term "0,2,0,1,1,2"))
            (rule "translateJavaMod" (formula "4") (term "0,0,0"))
            (rule "translateJavaSubInt" (formula "4") (term "1,1,0"))
            (rule "translateJavaDivInt" (formula "14") (term "0,1"))
            (rule "translateJavaMulInt" (formula "13") (term "1,1"))
            (rule "translateJavaDivInt" (formula "1") (term "0"))
            (rule "translateJavaDivInt" (formula "1") (term "1"))
            (rule "translateJavaMod" (formula "2") (term "0,0,0"))
            (rule "translateJavaSubInt" (formula "2") (term "1,1,0"))
            (rule "translateJavaSubInt" (formula "4") (term "0,2,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "4") (term "1,0,1,1"))
            (rule "translateJavaDivInt" (formula "4") (term "0,2,1,1,1,1"))
            (rule "translateJavaDivInt" (formula "4") (term "0,2,0,0,2"))
            (rule "translateJavaDivInt" (formula "4") (term "1,0,1,2"))
            (rule "translateJavaSubInt" (formula "4") (term "0,2,0,1,1,2"))
            (rule "translateJavaDivInt" (formula "2") (term "0,0,2,0,1,0,1"))
            (rule "translateJavaDivInt" (formula "2") (term "0,0,2,0,1,1,2"))
            (rule "translateJavaDivInt" (formula "4") (term "0,0,2,0,1,0,1"))
            (rule "translateJavaDivInt" (formula "4") (term "0,0,2,0,1,1,2"))
            (rule "eqSymm" (formula "4") (term "1,0"))
            (rule "eqSymm" (formula "13"))
            (rule "eqSymm" (formula "2") (term "1,0"))
            (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "polySimp_elimSub" (formula "2") (term "1,0,1,1"))
            (rule "mul_literals" (formula "2") (term "1,1,0,1,1"))
            (rule "polySimp_elimSub" (formula "4") (term "1,0,1,1"))
            (rule "mul_literals" (formula "4") (term "1,1,0,1,1"))
            (rule "polySimp_elimSub" (formula "2") (term "0,2,0,1,0,1"))
            (rule "mul_literals" (formula "2") (term "1,0,2,0,1,0,1"))
            (rule "polySimp_elimSub" (formula "2") (term "0,2,0,1,1,2"))
            (rule "mul_literals" (formula "2") (term "1,0,2,0,1,1,2"))
            (rule "polySimp_elimSub" (formula "4") (term "0,2,0,1,0,1"))
            (rule "mul_literals" (formula "4") (term "1,0,2,0,1,0,1"))
            (rule "polySimp_elimSub" (formula "4") (term "0,2,0,1,1,2"))
            (rule "mul_literals" (formula "4") (term "1,0,2,0,1,1,2"))
            (rule "polySimp_elimSub" (formula "4") (term "0,1,0"))
            (rule "mul_literals" (formula "4") (term "1,0,1,0"))
            (rule "polySimp_elimSub" (formula "2") (term "0,1,0"))
            (rule "mul_literals" (formula "2") (term "1,0,1,0"))
            (rule "polySimp_homoEq" (formula "4") (term "1,0"))
            (rule "polySimp_homoEq" (formula "2") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "0"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "2") (term "1,0,1,1"))
            (rule "polySimp_addComm0" (formula "4") (term "1,0,1,1"))
            (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,0,1"))
            (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,1,2"))
            (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,1"))
            (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,1,2"))
            (rule "polySimp_addComm0" (formula "4") (term "1,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "2") (term "1,1,0,1,0"))
            (rule "inEqSimp_ltRight" (formula "17"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0"))
            (rule "mul_literals" (formula "5") (term "0,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "8"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,1"))
            (rule "add_zero_right" (formula "5") (term "0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "7"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,1"))
            (rule "add_zero_right" (formula "3") (term "0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1"))
            (rule "polySimp_addComm1" (formula "7") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "3") (term "1,1,1"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,1,1"))
            (rule "polySimp_addComm1" (formula "3") (term "0,1,1,1"))
            (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,2"))
            (rule "add_zero_right" (formula "3") (term "0,0,1,2"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,2"))
            (rule "inEqSimp_ltToLeq" (formula "15") (term "1"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
            (rule "polySimp_addComm1" (formula "15") (term "0,1"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "5") (term "1,1,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,1,1"))
            (rule "polySimp_addComm1" (formula "5") (term "0,1,1,1"))
            (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1,2"))
            (rule "add_zero_right" (formula "5") (term "0,0,1,2"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,2"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "5") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "3") (term "0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "6"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "15") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,1,1"))
            (rule "mul_literals" (formula "3") (term "0,1,0,0,0,1,1"))
            (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1,1"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1,1"))
            (rule "mul_literals" (formula "5") (term "0,1,0,0,0,1,1"))
            (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,1"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "3") (term "1,1,2"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,1,2"))
            (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "5") (term "1,1,2"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,1,2"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,1"))
            (rule "add_literals" (formula "3") (term "0,0,0,0,1,1"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1,1"))
            (rule "add_literals" (formula "5") (term "0,0,0,0,1,1"))
            (rule "polySimp_addComm1" (formula "5") (term "0,0,1,1"))
            (rule "jmod_axiom" (formula "5") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
            (rule "jmod_axiom" (formula "3") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
            (rule "polySimp_sepNegMonomial" (formula "5") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "5") (term "0,1,0"))
            (rule "polySimp_sepNegMonomial" (formula "3") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
            (rule "polySimp_sepNegMonomial" (formula "5") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
            (rule "polySimp_sepNegMonomial" (formula "3") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "8"))
            (rule "polySimp_mulLiterals" (formula "8") (term "0"))
            (rule "polySimp_elimOne" (formula "8") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,1"))
            (rule "polySimp_elimOne" (formula "5") (term "0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
            (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,1"))
            (rule "polySimp_elimOne" (formula "3") (term "0,0,0,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
            (rule "polySimp_elimOne" (formula "7") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "1,1,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0,1,1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "0,1,1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,1,2"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,2"))
            (rule "polySimp_elimOne" (formula "3") (term "0,0,1,2"))
            (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1"))
            (rule "polySimp_mulLiterals" (formula "15") (term "0,1"))
            (rule "polySimp_elimOne" (formula "15") (term "0,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "1,1,1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0,1,1,1"))
            (rule "polySimp_elimOne" (formula "5") (term "0,1,1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,1,2"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,2"))
            (rule "polySimp_elimOne" (formula "5") (term "0,0,1,2"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,1"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1"))
            (rule "polySimp_rightDist" (formula "3") (term "1,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,1"))
            (rule "mul_literals" (formula "3") (term "0,1,1,0,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,1,2"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,2"))
            (rule "polySimp_rightDist" (formula "3") (term "1,1,1,2"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,1,2"))
            (rule "mul_literals" (formula "3") (term "0,1,1,1,2"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1,1,1,2"))
            (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,1"))
            (rule "polySimp_rightDist" (formula "5") (term "1,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,1"))
            (rule "mul_literals" (formula "5") (term "0,1,1,0,1"))
            (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,1,2"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,2"))
            (rule "polySimp_rightDist" (formula "5") (term "1,1,1,2"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,1,2"))
            (rule "mul_literals" (formula "5") (term "0,1,1,1,2"))
            (rule "polySimp_elimOne" (formula "5") (term "1,1,1,1,2"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,1,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "0,0,1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,1,1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,1"))
            (rule "polySimp_elimOne" (formula "5") (term "0,0,1,1"))
            (rule "inEqSimp_contradEq7" (formula "16") (ifseqformula "2"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
            (rule "add_literals" (formula "16") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0"))
            (rule "leq_literals" (formula "16") (term "0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "false_right" (formula "16"))
            (rule "newSym_eq" (formula "14") (inst "newSymDef=mul(int::final(self,
               de.wiesler.Classifier::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
            (rule "times_zero_1" (formula "14") (term "1,1"))
            (rule "add_zero_right" (formula "14") (term "1"))
            (rule "applyEq" (formula "13") (term "1,1,1,0,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "14"))
            (rule "eqSymm" (formula "15"))
            (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "14"))
            (rule "inEqSimp_homoInEq1" (formula "16") (term "1"))
            (rule "polySimp_addComm1" (formula "16") (term "0,1"))
            (rule "applyEq" (formula "8") (term "0") (ifseqformula "15"))
            (rule "inEqSimp_homoInEq1" (formula "8"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0"))
            (rule "applyEq" (formula "5") (term "0,0,1,1") (ifseqformula "15"))
            (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,1"))
            (rule "polySimp_addComm1" (formula "5") (term "0,0,1,1"))
            (rule "applyEq" (formula "3") (term "0,0,1,1") (ifseqformula "15"))
            (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1,1"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1"))
            (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "15"))
            (rule "polySimp_homoEq" (formula "3") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,1,0"))
            (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "15"))
            (rule "polySimp_homoEq" (formula "5") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0,1,0"))
            (rule "polySimp_sepPosMonomial" (formula "3") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,1,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0"))
            (rule "mul_literals" (formula "3") (term "0,1,1,0"))
            (rule "polySimp_sepPosMonomial" (formula "5") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,1,0"))
            (rule "mul_literals" (formula "5") (term "0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
            (rule "polySimp_rightDist" (formula "16") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
            (rule "mul_literals" (formula "16") (term "0,1,1"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8"))
            (rule "polySimp_mulComm0" (formula "8") (term "1"))
            (rule "polySimp_rightDist" (formula "8") (term "1"))
            (rule "mul_literals" (formula "8") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,1,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,1"))
            (rule "mul_literals" (formula "5") (term "0,1,0,1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,1,1"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,1"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0,1,1"))
            (rule "mul_literals" (formula "3") (term "0,1,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,1"))
            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
            (rule "polySimp_rightDist" (formula "7") (term "0,0"))
            (rule "mul_literals" (formula "7") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
            (rule "polySimp_elimOne" (formula "7") (term "0"))
            (rule "replace_known_left" (formula "3") (term "0,1,1") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "inEqSimp_contradEq3" (formula "3") (term "1,0") (ifseqformula "7"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1,0"))
            (rule "add_literals" (formula "3") (term "0,0,0,0,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,1,0"))
            (rule "add_literals" (formula "3") (term "1,1,0,0,1,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,0,1,0"))
            (rule "add_zero_right" (formula "3") (term "0,0,1,0"))
            (rule "qeq_literals" (formula "3") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
            (rule "times_zero_1" (formula "6") (term "0,0"))
            (rule "add_zero_left" (formula "6") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
            (rule "mul_literals" (formula "6") (term "1"))
            (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
            (rule "leq_literals" (formula "6") (term "0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
            (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
            (rule "add_literals" (formula "6") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0"))
            (rule "leq_literals" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "nnf_imp2or" (formula "15") (term "0"))
            (rule "nnf_notAnd" (formula "15") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
            (rule "mul_literals" (formula "15") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
            (rule "nnf_imp2or" (formula "15") (term "0,1,0"))
            (rule "nnf_notAnd" (formula "15") (term "0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,1,0"))
            (rule "jdiv_axiom" (formula "5") (term "0,2,0,0,2"))
            (rule "eqSymm" (formula "5"))
            (rule "polyDiv_pullOut" (formula "5") (term "0,2,0") (inst "polyDivCoeff=mul(classJ_0, Z(neglit(1(#))))"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,2,0,2,0"))
            (rule "equal_literals" (formula "5") (term "0,0,2,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,2,0"))
            (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,0,2,0"))
            (rule "add_literals" (formula "5") (term "1,0,0,0,2,0"))
            (rule "polySimp_elimOne" (formula "5") (term "0,0,0,2,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "2,0"))
            (rule "polySimp_addComm0" (formula "5") (term "1,2,0"))
            (rule "polySimp_rightDist" (formula "5") (term "2,0"))
            (rule "polySimp_mulAssoc" (formula "5") (term "0,2,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,0,2,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0,2,0"))
            (rule "polySimp_elimOne" (formula "5") (term "0,2,0"))
            (rule "commute_or" (formula "6") (term "0"))
            (rule "jdiv_axiom" (formula "19") (term "0,0"))
            (rule "eqSymm" (formula "1"))
            (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "1"))
            (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "1"))
            (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
            (rule "applyEqRigid" (formula "20") (term "0,0") (ifseqformula "1"))
            (rule "applyEqRigid" (formula "4") (term "0,2,0,1,1") (ifseqformula "1"))
            (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "4") (term "0,2,0,0,2") (ifseqformula "1"))
            (rule "applyEq" (formula "4") (term "1,0,2,0,1,1,2") (ifseqformula "1"))
            (rule "applyEq" (formula "4") (term "0,0,1,2") (ifseqformula "1"))
            (rule "applyEq" (formula "4") (term "1,0,2,0,1,0,1") (ifseqformula "1"))
            (rule "commute_or" (formula "17") (term "0,0,1,0"))
            (rule "div_axiom" (formula "6") (term "1,0") (inst "quotient=quotient_0"))
            (rule "mul_literals" (formula "6") (term "1,1,1,1,1"))
            (rule "qeq_literals" (formula "6") (term "0,1,1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "equal_literals" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "polySimp_addComm1" (formula "8") (term "1"))
            (rule "add_literals" (formula "8") (term "0,1"))
            (rule "inEqSimp_commuteLeq" (formula "7"))
            (rule "inEqSimp_homoInEq1" (formula "8"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0"))
            (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "6"))
            (rule "applyEq" (formula "9") (term "0,1,2,0") (ifseqformula "6"))
            (rule "polySimp_addComm0" (formula "9") (term "2,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8"))
            (rule "polySimp_mulComm0" (formula "8") (term "1"))
            (rule "polySimp_rightDist" (formula "8") (term "1"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
            (rule "mul_literals" (formula "8") (term "0,1"))
            (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "8"))
            (rule "polySimp_rightDist" (formula "14") (term "0,0"))
            (rule "mul_literals" (formula "14") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0"))
            (rule "add_zero_left" (formula "14") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "14"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0"))
            (rule "polySimp_elimOne" (formula "14") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "16"))
            (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0"))
            (rule "polySimp_addComm0" (formula "7") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
            (rule "polySimp_mulComm0" (formula "7") (term "1"))
            (rule "polySimp_rightDist" (formula "7") (term "1"))
            (rule "mul_literals" (formula "7") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
            (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "7") (term "0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,0"))
            (rule "add_zero_left" (formula "7") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
            (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0"))
            (rule "leq_literals" (formula "7") (term "0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "15"))
            (rule "times_zero_1" (formula "13") (term "0,0"))
            (rule "add_zero_left" (formula "13") (term "0"))
            (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
            (rule "add_zero_right" (formula "13") (term "0,0,0,1,0"))
            (rule "leq_literals" (formula "13") (term "0,0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
            (rule "add_literals" (formula "13") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "13") (term "1,0,0"))
            (rule "add_zero_right" (formula "13") (term "0,0"))
            (rule "leq_literals" (formula "13") (term "0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "all_pull_out3" (formula "23") (term "0"))
            (rule "shift_paren_or" (formula "23") (term "0,0"))
            (rule "shift_paren_or" (formula "23") (term "0,0,0"))
            (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_1"))
            (rule "equal_literals" (formula "1") (term "0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "qeq_literals" (formula "1") (term "0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1,1,1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "polySimp_addComm1" (formula "3") (term "1"))
            (rule "add_literals" (formula "3") (term "0,1"))
            (rule "inEqSimp_commuteLeq" (formula "2"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "applyEqRigid" (formula "7") (term "0,2,0,1,1") (ifseqformula "1"))
            (rule "applyEqRigid" (formula "29") (term "0,1") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
            (rule "polySimp_addComm1" (formula "29") (term "0,1"))
            (rule "applyEqRigid" (formula "7") (term "1,0,2,0,1,1,2") (ifseqformula "1"))
            (rule "applyEqRigid" (formula "29") (term "0,0") (ifseqformula "1"))
            (rule "applyEqRigid" (formula "7") (term "1,0,2,0,1,0,1") (ifseqformula "1"))
            (rule "applyEqRigid" (formula "7") (term "0,2,0,0,2") (ifseqformula "1"))
            (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "1"))
            (rule "eqSymm" (formula "7") (term "0"))
            (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "1"))
            (rule "applyEq" (formula "7") (term "0,0,1,2") (ifseqformula "1"))
            (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
            (rule "polySimp_rightDist" (formula "29") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
            (rule "mul_literals" (formula "29") (term "0,1,1"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "18"))
            (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
            (rule "mul_literals" (formula "2") (term "0,1"))
            (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_1)"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "2") (term "0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
            (rule "add_literals" (formula "2") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "2") (term "1,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,0"))
            (rule "add_zero_left" (formula "2") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
            (rule "add_literals" (formula "2") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "2") (term "1,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0"))
            (rule "leq_literals" (formula "2") (term "0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "inEqSimp_geqRight" (formula "30"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_contradInEq0" (formula "9") (term "0,1,2") (ifseqformula "1"))
            (rule "qeq_literals" (formula "9") (term "0,0,1,2"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "5"))
            (rule "times_zero_1" (formula "19") (term "0,0"))
            (rule "add_zero_left" (formula "19") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19"))
            (rule "mul_literals" (formula "19") (term "1"))
            (rule "inEqSimp_contradInEq3" (formula "19") (ifseqformula "1"))
            (rule "mul_literals" (formula "19") (term "0,1,0"))
            (rule "greater_literals" (formula "19") (term "0,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "qeq_literals" (formula "19") (term "0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "closeFalse" (formula "19"))
         )
         (branch "Case 2"
            (rule "instAll" (formula "5") (term "0,2,0,0,2") (ifseqformula "2") (userinteraction))
            (rule "impLeft" (formula "5") (userinteraction))
            (branch "Case 1"
               (rule "translateJavaSubInt" (formula "3") (term "0,2,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "3") (term "1,0,1,1"))
               (rule "translateJavaDivInt" (formula "16") (term "0"))
               (rule "translateJavaDivInt" (formula "15") (term "0,0"))
               (rule "translateJavaDivInt" (formula "15") (term "1,0"))
               (rule "translateJavaDivInt" (formula "16") (term "1"))
               (rule "translateJavaDivInt" (formula "3") (term "0,2,1,1,1,1"))
               (rule "translateJavaDivInt" (formula "3") (term "0,2,0,0,2"))
               (rule "translateJavaDivInt" (formula "3") (term "1,0,1,2"))
               (rule "translateJavaSubInt" (formula "3") (term "0,2,0,1,1,2"))
               (rule "translateJavaDivInt" (formula "15") (term "0,1"))
               (rule "translateJavaMod" (formula "5") (term "0,0,0"))
               (rule "translateJavaSubInt" (formula "5") (term "1,1,0"))
               (rule "translateJavaDivInt" (formula "1") (term "0"))
               (rule "translateJavaMulInt" (formula "14") (term "1,1"))
               (rule "translateJavaDivInt" (formula "1") (term "1"))
               (rule "translateJavaMod" (formula "3") (term "0,0,0"))
               (rule "translateJavaSubInt" (formula "3") (term "1,1,0"))
               (rule "translateJavaSubInt" (formula "5") (term "0,2,0,1,0,1"))
               (rule "translateJavaDivInt" (formula "2") (term "0,0,0,0"))
               (rule "translateJavaDivInt" (formula "2") (term "0,2,0,1,0"))
               (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1"))
               (rule "translateJavaDivInt" (formula "5") (term "0,2,1,1,1,1"))
               (rule "translateJavaDivInt" (formula "5") (term "0,2,0,0,2"))
               (rule "translateJavaDivInt" (formula "5") (term "1,0,1,2"))
               (rule "translateJavaSubInt" (formula "5") (term "0,2,0,1,1,2"))
               (rule "translateJavaDivInt" (formula "3") (term "0,0,2,0,1,0,1"))
               (rule "translateJavaDivInt" (formula "3") (term "0,0,2,0,1,1,2"))
               (rule "translateJavaDivInt" (formula "5") (term "0,0,2,0,1,0,1"))
               (rule "translateJavaDivInt" (formula "5") (term "0,0,2,0,1,1,2"))
               (rule "eqSymm" (formula "5") (term "1,0"))
               (rule "eqSymm" (formula "14"))
               (rule "eqSymm" (formula "3") (term "1,0"))
               (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_elimSub" (formula "3") (term "1,0,1,1"))
               (rule "mul_literals" (formula "3") (term "1,1,0,1,1"))
               (rule "polySimp_elimSub" (formula "5") (term "1,0,1,1"))
               (rule "mul_literals" (formula "5") (term "1,1,0,1,1"))
               (rule "polySimp_elimSub" (formula "3") (term "0,2,0,1,0,1"))
               (rule "mul_literals" (formula "3") (term "1,0,2,0,1,0,1"))
               (rule "polySimp_elimSub" (formula "3") (term "0,2,0,1,1,2"))
               (rule "mul_literals" (formula "3") (term "1,0,2,0,1,1,2"))
               (rule "polySimp_elimSub" (formula "5") (term "0,2,0,1,0,1"))
               (rule "mul_literals" (formula "5") (term "1,0,2,0,1,0,1"))
               (rule "polySimp_elimSub" (formula "5") (term "0,2,0,1,1,2"))
               (rule "mul_literals" (formula "5") (term "1,0,2,0,1,1,2"))
               (rule "polySimp_elimSub" (formula "5") (term "0,1,0"))
               (rule "mul_literals" (formula "5") (term "1,0,1,0"))
               (rule "polySimp_elimSub" (formula "3") (term "0,1,0"))
               (rule "mul_literals" (formula "3") (term "1,0,1,0"))
               (rule "polySimp_homoEq" (formula "5") (term "1,0"))
               (rule "polySimp_homoEq" (formula "3") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0"))
               (rule "polySimp_addComm0" (formula "3") (term "1,0,1,1"))
               (rule "polySimp_addComm0" (formula "5") (term "1,0,1,1"))
               (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,0,1"))
               (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,1,2"))
               (rule "polySimp_addComm0" (formula "5") (term "0,2,0,1,0,1"))
               (rule "polySimp_addComm0" (formula "5") (term "0,2,0,1,1,2"))
               (rule "polySimp_addComm0" (formula "5") (term "1,1,0,1,0"))
               (rule "polySimp_addComm0" (formula "3") (term "1,1,0,1,0"))
               (rule "inEqSimp_ltRight" (formula "18"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,1"))
               (rule "add_zero_right" (formula "6") (term "0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "8"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,1"))
               (rule "add_zero_right" (formula "4") (term "0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "8") (term "0"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "4") (term "1,1,1"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1,2"))
               (rule "add_zero_right" (formula "4") (term "0,0,1,2"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,2"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "4") (term "0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "16") (term "0,1"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,1,1"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,1,1"))
               (rule "polySimp_addComm1" (formula "6") (term "0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,2"))
               (rule "add_zero_right" (formula "6") (term "0,0,1,2"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,2"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "7"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "4") (term "0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "16") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1,1"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,1,1"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,1"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1,1"))
               (rule "mul_literals" (formula "6") (term "0,1,0,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,1"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "4") (term "1,1,2"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,1,2"))
               (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,1"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,1,2"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,1,2"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "4") (term "0,0,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "4") (term "0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "6") (term "0,0,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "6") (term "0,0,1,1"))
               (rule "jmod_axiom" (formula "6") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
               (rule "jmod_axiom" (formula "4") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
               (rule "polySimp_sepNegMonomial" (formula "6") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
               (rule "polySimp_sepNegMonomial" (formula "4") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
               (rule "polySimp_sepNegMonomial" (formula "6") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
               (rule "polySimp_sepNegMonomial" (formula "4") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1"))
               (rule "polySimp_elimOne" (formula "6") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,1"))
               (rule "polySimp_elimOne" (formula "4") (term "0,0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "8"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
               (rule "polySimp_elimOne" (formula "8") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
               (rule "polySimp_elimOne" (formula "9") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,1,2"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,2"))
               (rule "polySimp_elimOne" (formula "4") (term "0,0,1,2"))
               (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "1,1,1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0,1,1,1"))
               (rule "polySimp_elimOne" (formula "4") (term "0,1,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
               (rule "polySimp_elimOne" (formula "16") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "1,1,1"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0,1,1,1"))
               (rule "polySimp_elimOne" (formula "6") (term "0,1,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,1,2"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0,0,1,2"))
               (rule "polySimp_elimOne" (formula "6") (term "0,0,1,2"))
               (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,1"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,1"))
               (rule "polySimp_rightDist" (formula "4") (term "1,1,0,1"))
               (rule "mul_literals" (formula "4") (term "0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,1,2"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,2"))
               (rule "polySimp_rightDist" (formula "4") (term "1,1,1,2"))
               (rule "mul_literals" (formula "4") (term "0,1,1,1,2"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,2"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,2"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,1"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,1"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,1"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,1,2"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,1,2"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,1,2"))
               (rule "mul_literals" (formula "6") (term "0,1,1,1,2"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,1,2"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,1,2"))
               (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,1"))
               (rule "polySimp_elimOne" (formula "4") (term "0,0,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0,0,1,1"))
               (rule "polySimp_elimOne" (formula "6") (term "0,0,1,1"))
               (rule "inEqSimp_contradEq7" (formula "17") (ifseqformula "2"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
               (rule "add_literals" (formula "17") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0"))
               (rule "leq_literals" (formula "17") (term "0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "false_right" (formula "17"))
               (rule "inEqSimp_subsumption1" (formula "16") (term "0") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
               (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "16") (term "0,0,0"))
               (rule "qeq_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "inEqSimp_geqRight" (formula "16"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "1"))
               (rule "newSym_eq" (formula "16") (inst "newSymDef=mul(int::final(self,
               de.wiesler.Classifier::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
               (rule "times_zero_1" (formula "16") (term "1,1"))
               (rule "add_zero_right" (formula "16") (term "1"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "16"))
               (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "16"))
               (rule "eqSymm" (formula "17"))
               (rule "applyEq" (formula "15") (term "1,1,1,0,0,1,0") (ifseqformula "16"))
               (rule "applyEq" (formula "4") (term "1,1,1,0,0") (ifseqformula "16"))
               (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "17"))
               (rule "polySimp_homoEq" (formula "5") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
               (rule "polySimp_addComm1" (formula "5") (term "0,1,0"))
               (rule "applyEq" (formula "7") (term "0,0,1,1") (ifseqformula "17"))
               (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0,1,1"))
               (rule "applyEq" (formula "10") (term "0") (ifseqformula "17"))
               (rule "inEqSimp_homoInEq1" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0"))
               (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "17"))
               (rule "polySimp_homoEq" (formula "7") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,1,0"))
               (rule "applyEq" (formula "5") (term "0,0,1,1") (ifseqformula "17"))
               (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "5") (term "0,0,1,1"))
               (rule "polySimp_sepPosMonomial" (formula "5") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,1,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0"))
               (rule "mul_literals" (formula "5") (term "0,1,1,0"))
               (rule "polySimp_sepPosMonomial" (formula "7") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,0"))
               (rule "mul_literals" (formula "7") (term "0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,1"))
               (rule "mul_literals" (formula "7") (term "0,1,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1"))
               (rule "polySimp_rightDist" (formula "10") (term "1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
               (rule "mul_literals" (formula "10") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1"))
               (rule "mul_literals" (formula "5") (term "0,1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,1"))
               (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
               (rule "polySimp_rightDist" (formula "9") (term "0,0"))
               (rule "mul_literals" (formula "9") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
               (rule "polySimp_elimOne" (formula "9") (term "0"))
               (rule "replace_known_left" (formula "5") (term "0,1,1") (ifseqformula "9"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "inEqSimp_contradEq3" (formula "5") (term "1,0") (ifseqformula "9"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
               (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "5") (term "0,0,0,0,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,1,0"))
               (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
               (rule "qeq_literals" (formula "5") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
               (rule "times_zero_1" (formula "8") (term "0,0"))
               (rule "add_zero_left" (formula "8") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
               (rule "mul_literals" (formula "8") (term "1"))
               (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
               (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
               (rule "add_literals" (formula "8") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "8") (term "1,0,0"))
               (rule "add_zero_right" (formula "8") (term "0,0"))
               (rule "leq_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "nnf_imp2or" (formula "17") (term "0"))
               (rule "nnf_imp2or" (formula "4") (term "0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "4") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "4") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "4") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
               (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,0"))
               (rule "jdiv_axiom" (formula "7") (term "0,2,0,0,2"))
               (rule "eqSymm" (formula "7"))
               (rule "polyDiv_pullOut" (formula "7") (term "0,2,0") (inst "polyDivCoeff=mul(classJ_0, Z(neglit(1(#))))"))
               (rule "equal_literals" (formula "7") (term "0,0,2,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,2,0"))
               (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,2,0"))
               (rule "add_literals" (formula "7") (term "1,0,0,0,2,0"))
               (rule "polySimp_elimOne" (formula "7") (term "0,0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "2,0"))
               (rule "polySimp_addComm0" (formula "7") (term "1,2,0"))
               (rule "polySimp_rightDist" (formula "7") (term "2,0"))
               (rule "polySimp_mulAssoc" (formula "7") (term "0,2,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,2,0"))
               (rule "polySimp_elimOne" (formula "7") (term "0,2,0"))
               (rule "commute_or" (formula "8") (term "0"))
               (rule "jdiv_axiom" (formula "3") (term "1,1"))
               (rule "eqSymm" (formula "3"))
               (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "11"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "eqSymm" (formula "3"))
               (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
               (rule "applyEqRigid" (formula "6") (term "1,0,2,0,1,0,1") (ifseqformula "3"))
               (rule "applyEqRigid" (formula "6") (term "1,0,2,0,1,1,2") (ifseqformula "3"))
               (rule "applyEq" (formula "5") (term "0,2,1,1,0") (ifseqformula "3"))
               (rule "applyEqRigid" (formula "5") (term "1,1,0,0,0") (ifseqformula "3"))
               (rule "applyEq" (formula "6") (term "0,0,1,2") (ifseqformula "3"))
               (rule "applyEq" (formula "6") (term "0,2,0,1,1") (ifseqformula "3"))
               (rule "applyEqRigid" (formula "4") (term "1,1") (ifseqformula "3"))
               (rule "applyEqRigid" (formula "6") (term "0,2,0,0,2") (ifseqformula "3"))
               (rule "commute_or" (formula "19") (term "0,0,1,0"))
               (rule "div_axiom" (formula "8") (term "1,0") (inst "quotient=quotient_0"))
               (rule "mul_literals" (formula "8") (term "1,1,1,1,1"))
               (rule "qeq_literals" (formula "8") (term "0,1,1"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "equal_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "polySimp_addComm1" (formula "10") (term "1"))
               (rule "add_literals" (formula "10") (term "0,1"))
               (rule "inEqSimp_commuteLeq" (formula "9"))
               (rule "inEqSimp_homoInEq1" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0"))
               (rule "applyEqRigid" (formula "11") (term "1,0") (ifseqformula "8"))
               (rule "applyEq" (formula "11") (term "0,1,2,0") (ifseqformula "8"))
               (rule "polySimp_addComm0" (formula "11") (term "2,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1"))
               (rule "polySimp_rightDist" (formula "10") (term "1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
               (rule "mul_literals" (formula "10") (term "0,1"))
               (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "17"))
               (rule "polySimp_mulAssoc" (formula "9") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1"))
               (rule "polySimp_rightDist" (formula "9") (term "1"))
               (rule "mul_literals" (formula "9") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
               (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)"))
               (rule "leq_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
               (rule "add_literals" (formula "9") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0,0"))
               (rule "add_zero_left" (formula "9") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
               (rule "add_literals" (formula "9") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0"))
               (rule "leq_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "11"))
               (rule "polySimp_rightDist" (formula "17") (term "0,0"))
               (rule "mul_literals" (formula "17") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "17") (term "0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0"))
               (rule "add_zero_left" (formula "17") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "17"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0"))
               (rule "polySimp_elimOne" (formula "17") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "17"))
               (rule "times_zero_1" (formula "15") (term "0,0"))
               (rule "add_zero_left" (formula "15") (term "0"))
               (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,0,1,0"))
               (rule "leq_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
               (rule "add_literals" (formula "15") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "15") (term "1,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0"))
               (rule "leq_literals" (formula "15") (term "0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "all_pull_out3" (formula "25") (term "0"))
               (rule "shift_paren_or" (formula "25") (term "0,0"))
               (rule "shift_paren_or" (formula "25") (term "0,0,0"))
               (rule "div_axiom" (formula "3") (term "1") (inst "quotient=quotient_1"))
               (rule "mul_literals" (formula "3") (term "1,1,1,1,1"))
               (rule "qeq_literals" (formula "3") (term "0,1,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "equal_literals" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "polySimp_addComm1" (formula "5") (term "1"))
               (rule "add_literals" (formula "5") (term "0,1"))
               (rule "inEqSimp_commuteLeq" (formula "4"))
               (rule "inEqSimp_homoInEq1" (formula "5"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
               (rule "polySimp_addComm1" (formula "5") (term "0"))
               (rule "applyEqRigid" (formula "8") (term "1,1,0,0,0") (ifseqformula "3"))
               (rule "applyEq" (formula "9") (term "1,0,2,0,1,0,1") (ifseqformula "3"))
               (rule "applyEqRigid" (formula "9") (term "1,0,2,0,1,1,2") (ifseqformula "3"))
               (rule "applyEq" (formula "9") (term "0,2,0,1,1") (ifseqformula "3"))
               (rule "applyEq" (formula "9") (term "0,0,1,2") (ifseqformula "3"))
               (rule "applyEq" (formula "8") (term "0,2,1,1,0") (ifseqformula "3"))
               (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "3"))
               (rule "eqSymm" (formula "9") (term "0"))
               (rule "applyEq" (formula "9") (term "0,2,0,0,2") (ifseqformula "3"))
               (rule "applyEqRigid" (formula "7") (term "1,1") (ifseqformula "3"))
               (rule "applyEq" (formula "6") (term "1") (ifseqformula "3"))
               (rule "inEqSimp_sepPosMonomial0" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1"))
               (rule "polySimp_rightDist" (formula "5") (term "1"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
               (rule "mul_literals" (formula "5") (term "0,1"))
               (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "5"))
               (rule "times_zero_1" (formula "19") (term "0,0"))
               (rule "add_zero_left" (formula "19") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19"))
               (rule "mul_literals" (formula "19") (term "1"))
               (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(0(#))"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "19") (term "0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
               (rule "add_literals" (formula "19") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,0"))
               (rule "leq_literals" (formula "19") (term "0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "22"))
               (rule "polySimp_mulAssoc" (formula "4") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1"))
               (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=quotient_1"))
               (rule "leq_literals" (formula "4") (term "0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
               (rule "add_literals" (formula "4") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "4") (term "1,0,0"))
               (rule "add_zero_right" (formula "4") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
               (rule "add_literals" (formula "4") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "4") (term "1,0,0"))
               (rule "add_zero_right" (formula "4") (term "0,0"))
               (rule "leq_literals" (formula "4") (term "0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "22"))
               (rule "polySimp_mulAssoc" (formula "5") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "polySimp_addComm0" (formula "5") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1"))
               (rule "polySimp_rightDist" (formula "5") (term "1"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
               (rule "mul_literals" (formula "5") (term "0,1"))
               (rule "elimGcdGeq_antec" (formula "5") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_1)"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
               (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
               (rule "add_literals" (formula "5") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "5") (term "1,0,0"))
               (rule "add_zero_right" (formula "5") (term "0,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
               (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
               (rule "add_literals" (formula "5") (term "0,0,0,0"))
               (rule "add_zero_left" (formula "5") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
               (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
               (rule "add_literals" (formula "5") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "5") (term "1,0,0"))
               (rule "add_zero_right" (formula "5") (term "0,0"))
               (rule "leq_literals" (formula "5") (term "0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "commute_or" (formula "10") (term "0,0"))
               (rule "ifthenelse_split_for" (formula "18"))
               (branch " classJ_0 = -1 + l_0 * 2 | jdiv(classJ_0, 2) * 2 = classJ_0 TRUE"
                  (rule "andLeft" (formula "19"))
                  (rule "ifthenelse_split" (formula "17") (term "0"))
                  (branch "classJ_0 >= 0 TRUE"
                     (rule "eqSymm" (formula "18"))
                     (rule "applyEq" (formula "20") (term "1,0,2,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "18"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                     (rule "inEqSimp_commuteGeq" (formula "1"))
                     (rule "applyEqRigid" (formula "19") (term "0,0,1") (ifseqformula "18"))
                     (rule "eqSymm" (formula "19") (term "1"))
                     (rule "applyEq" (formula "21") (term "0,2,0,1") (ifseqformula "18"))
                     (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "9"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "1"))
                     (rule "andLeft" (formula "13"))
                     (rule "inEqSimp_homoInEq1" (formula "13"))
                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                     (rule "add_literals" (formula "13") (term "1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0"))
                     (rule "add_zero_right" (formula "13") (term "0"))
                     (rule "leq_literals" (formula "13"))
                     (rule "closeFalse" (formula "13"))
                  )
                  (branch "classJ_0 >= 0 FALSE"
                     (rule "eqSymm" (formula "17"))
                     (rule "inEqSimp_geqRight" (formula "36"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "18"))
                     (rule "inEqSimp_homoInEq1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                     (rule "applyEq" (formula "21") (term "0,2,0,1") (ifseqformula "18"))
                     (rule "applyEqRigid" (formula "20") (term "1,0,2,0,1") (ifseqformula "18"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,2,0,1"))
                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "18"))
                     (rule "inEqSimp_homoInEq1" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                     (rule "applyEq" (formula "19") (term "0,0,1") (ifseqformula "18"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,1"))
                     (rule "polySimp_homoEq" (formula "19") (term "1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                     (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1"))
                     (rule "add_literals" (formula "19") (term "1,1,0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "19") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "20") (term "0") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "20") (term "0,0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                     (rule "mul_literals" (formula "27") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0"))
                     (rule "add_literals" (formula "27") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                     (rule "polySimp_elimOne" (formula "27") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "27"))
                     (rule "qeq_literals" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "closeFalse" (formula "24"))
                  )
               )
               (branch " classJ_0 = -1 + l_0 * 2 | jdiv(classJ_0, 2) * 2 = classJ_0 FALSE"
                  (rule "andLeft" (formula "18"))
                  (rule "orRight" (formula "35"))
                  (rule "inEqSimp_strengthen0" (formula "27") (ifseqformula "35"))
                  (rule "polySimp_addAssoc" (formula "27") (term "1"))
                  (rule "add_literals" (formula "27") (term "0,1"))
                  (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "27"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                  (rule "add_literals" (formula "35") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "35") (term "1,0,0"))
                  (rule "add_zero_right" (formula "35") (term "0,0"))
                  (rule "qeq_literals" (formula "35") (term "0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "false_right" (formula "35"))
                  (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                  (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                  (rule "mul_literals" (formula "26") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                  (rule "polySimp_elimOne" (formula "26") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "26"))
                  (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                  (rule "add_literals" (formula "24") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                  (rule "add_literals" (formula "24") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "24") (term "1,0,0"))
                  (rule "add_zero_right" (formula "24") (term "0,0"))
                  (rule "qeq_literals" (formula "24") (term "0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "27"))
                  (rule "polySimp_mulAssoc" (formula "15") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1"))
                  (rule "polySimp_rightDist" (formula "15") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                  (rule "mul_literals" (formula "15") (term "0,1"))
                  (rule "inEqSimp_subsumption6" (formula "15") (ifseqformula "14"))
                  (rule "greater_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                  (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0"))
                  (rule "add_literals" (formula "15") (term "1,0,0"))
                  (rule "times_zero_1" (formula "15") (term "0,0"))
                  (rule "qeq_literals" (formula "15") (term "0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "25"))
                  (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                  (rule "mul_literals" (formula "6") (term "0,1"))
                  (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(2(#)), quotient_1)"))
                  (rule "leq_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "leq_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                  (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0"))
                  (rule "add_zero_right" (formula "5") (term "0,0"))
                  (rule "qeq_literals" (formula "5") (term "0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "25"))
                  (rule "times_zero_1" (formula "23") (term "0,0"))
                  (rule "add_zero_left" (formula "23") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                  (rule "mul_literals" (formula "23") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(2(#))"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "23") (term "0,0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0"))
                  (rule "leq_literals" (formula "23") (term "0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "23"))
                  (rule "leq_literals" (formula "20") (term "0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "ifthenelse_split" (formula "17") (term "0"))
                  (branch "classJ_0 >= 0 TRUE"
                     (rule "eqSymm" (formula "18"))
                     (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "18"))
                     (rule "eqSymm" (formula "36"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                     (rule "inEqSimp_commuteGeq" (formula "1"))
                     (rule "applyEqRigid" (formula "20") (term "1,0,2,0,1") (ifseqformula "18"))
                     (rule "applyEqRigid" (formula "20") (term "0,0") (ifseqformula "18"))
                     (rule "applyEqRigid" (formula "19") (term "0,2,0") (ifseqformula "18"))
                     (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "18"))
                     (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "36"))
                     (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "15"))
                     (rule "polySimp_mulAssoc" (formula "36") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                     (rule "add_literals" (formula "36") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "36") (term "1,0,0"))
                     (rule "add_zero_right" (formula "36") (term "0,0"))
                     (rule "leq_literals" (formula "36") (term "0"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "false_right" (formula "36"))
                     (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                     (rule "andLeft" (formula "14"))
                     (rule "inEqSimp_homoInEq1" (formula "14"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                     (rule "add_literals" (formula "14") (term "1,1,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0"))
                     (rule "add_zero_right" (formula "14") (term "0"))
                     (rule "leq_literals" (formula "14"))
                     (rule "closeFalse" (formula "14"))
                  )
                  (branch "classJ_0 >= 0 FALSE"
                     (rule "eqSymm" (formula "17"))
                     (rule "inEqSimp_geqRight" (formula "35"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "applyEqRigid" (formula "20") (term "1,0,2,0,1") (ifseqformula "18"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,2,0,1"))
                     (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "18"))
                     (rule "inEqSimp_homoInEq1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                     (rule "applyEqRigid" (formula "36") (term "0,0") (ifseqformula "18"))
                     (rule "polySimp_mulComm0" (formula "36") (term "0"))
                     (rule "polySimp_rightDist" (formula "36") (term "0"))
                     (rule "polySimp_homoEq" (formula "36"))
                     (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0"))
                     (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                     (rule "add_literals" (formula "36") (term "1,1,0"))
                     (rule "applyEq" (formula "19") (term "0,2,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "18"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                     (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "18"))
                     (rule "inEqSimp_homoInEq1" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                     (rule "polySimp_sepNegMonomial" (formula "36"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                     (rule "polySimp_elimOne" (formula "36") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                     (rule "inEqSimp_strengthen1" (formula "16") (ifseqformula "36"))
                     (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "16"))
                     (rule "polySimp_mulAssoc" (formula "36") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                     (rule "add_literals" (formula "36") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "36") (term "1,0,0"))
                     (rule "add_zero_right" (formula "36") (term "0,0"))
                     (rule "leq_literals" (formula "36") (term "0"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "false_right" (formula "36"))
                     (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "17"))
                     (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq1" (formula "17"))
                     (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "1,0"))
                     (rule "times_zero_1" (formula "17") (term "0"))
                     (rule "leq_literals" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "applyEqRigid" (formula "14") (term "0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "16"))
                     (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq0" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0"))
                     (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq1" (formula "27"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0"))
                     (rule "add_zero_left" (formula "27") (term "0,0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq0" (formula "17"))
                     (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "1,0"))
                     (rule "times_zero_1" (formula "17") (term "0"))
                     (rule "qeq_literals" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "applyEqRigid" (formula "19") (term "1,0,2,0,1") (ifseqformula "16"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,2,0,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,2,0,1"))
                     (rule "add_literals" (formula "19") (term "0,0,0,2,0,1"))
                     (rule "add_zero_left" (formula "19") (term "0,0,2,0,1"))
                     (rule "polySimp_pullOutFactor0" (formula "19") (term "0,2,0,1"))
                     (rule "add_literals" (formula "19") (term "1,0,2,0,1"))
                     (rule "polySimp_elimOne" (formula "19") (term "0,2,0,1"))
                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq1" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                     (rule "add_literals" (formula "10") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0"))
                     (rule "add_zero_left" (formula "10") (term "0,0"))
                     (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "applyEq" (formula "18") (term "1,0,2,0") (ifseqformula "16"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,2,0"))
                     (rule "polySimp_addComm0" (formula "18") (term "0,0,2,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,2,0"))
                     (rule "add_literals" (formula "18") (term "1,1,0,2,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,0,2,0"))
                     (rule "applyEqRigid" (formula "19") (term "0,0") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq1" (formula "19") (term "0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "19") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0"))
                     (rule "add_literals" (formula "19") (term "1,0,0"))
                     (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "16"))
                     (rule "polySimp_addAssoc" (formula "17") (term "1"))
                     (rule "polySimp_addComm0" (formula "17") (term "0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "17") (term "1"))
                     (rule "add_literals" (formula "17") (term "1,1,1"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1"))
                     (rule "polySimp_rightDist" (formula "27") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                     (rule "mul_literals" (formula "27") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "inEqSimp_invertInEq0" (formula "18") (term "0"))
                     (rule "times_zero_2" (formula "18") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                     (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_contradInEq3" (formula "25") (ifseqformula "2"))
                     (rule "greater_literals" (formula "25") (term "0,0"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "polySimp_rightDist" (formula "25") (term "0"))
                     (rule "mul_literals" (formula "25") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "25"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "25") (term "0"))
                     (rule "add_literals" (formula "25") (term "1,1,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0"))
                     (rule "add_zero_right" (formula "25") (term "0"))
                     (rule "leq_literals" (formula "25"))
                     (rule "closeFalse" (formula "25"))
                  )
               )
            )
            (branch "Case 2"
               (rule "ifthenelse_split_for" (formula "3") (userinteraction))
               (branch " javaMod(classI_0, 2) = 0 | classI_0 = javaSubInt(self.num_buckets, 1) TRUE"
                  (rule "translateJavaMulInt" (formula "16") (term "1,1"))
                  (rule "translateJavaDivInt" (formula "1") (term "0"))
                  (rule "translateJavaDivInt" (formula "1") (term "1"))
                  (rule "translateJavaDivInt" (formula "2") (term "0,0,0,0"))
                  (rule "translateJavaDivInt" (formula "2") (term "0,2,0,1,0"))
                  (rule "translateJavaDivInt" (formula "17") (term "0"))
                  (rule "translateJavaDivInt" (formula "17") (term "1"))
                  (rule "translateJavaMod" (formula "7") (term "0,0,0"))
                  (rule "translateJavaSubInt" (formula "7") (term "1,1,0"))
                  (rule "translateJavaSubInt" (formula "7") (term "0,2,0,1,0,1"))
                  (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                  (rule "translateJavaDivInt" (formula "7") (term "0,2,1,1,1,1"))
                  (rule "translateJavaDivInt" (formula "7") (term "0,2,0,0,2"))
                  (rule "translateJavaDivInt" (formula "7") (term "1,0,1,2"))
                  (rule "translateJavaSubInt" (formula "7") (term "0,2,0,1,1,2"))
                  (rule "translateJavaDivInt" (formula "6") (term "0,2,0"))
                  (rule "translateJavaDivInt" (formula "6") (term "0,2,1"))
                  (rule "translateJavaSubInt" (formula "4") (term "0,2,0,1,0"))
                  (rule "translateJavaSubInt" (formula "4") (term "1,0,1"))
                  (rule "translateJavaDivInt" (formula "4") (term "0,2,1,1,1"))
                  (rule "translateJavaMod" (formula "3") (term "0,0"))
                  (rule "translateJavaSubInt" (formula "3") (term "1,1"))
                  (rule "translateJavaDivInt" (formula "7") (term "0,0,2,0,1,0,1"))
                  (rule "translateJavaDivInt" (formula "7") (term "0,0,2,0,1,1,2"))
                  (rule "translateJavaDivInt" (formula "4") (term "0,0,2,0,1,0"))
                  (rule "andLeft" (formula "4"))
                  (rule "eqSymm" (formula "17"))
                  (rule "eqSymm" (formula "8") (term "1,0"))
                  (rule "eqSymm" (formula "3") (term "1"))
                  (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "6"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "polySimp_elimSub" (formula "8") (term "1,0,1,1"))
                  (rule "mul_literals" (formula "8") (term "1,1,0,1,1"))
                  (rule "polySimp_elimSub" (formula "8") (term "0,2,0,1,0,1"))
                  (rule "mul_literals" (formula "8") (term "1,0,2,0,1,0,1"))
                  (rule "polySimp_elimSub" (formula "8") (term "0,2,0,1,1,2"))
                  (rule "mul_literals" (formula "8") (term "1,0,2,0,1,1,2"))
                  (rule "polySimp_elimSub" (formula "4") (term "0,2,0,1"))
                  (rule "mul_literals" (formula "4") (term "1,0,2,0,1"))
                  (rule "polySimp_elimSub" (formula "5") (term "1,0"))
                  (rule "mul_literals" (formula "5") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "8") (term "0,1,0"))
                  (rule "mul_literals" (formula "8") (term "1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "3") (term "0,1"))
                  (rule "mul_literals" (formula "3") (term "1,0,1"))
                  (rule "polySimp_homoEq" (formula "8") (term "1,0"))
                  (rule "polySimp_homoEq" (formula "3") (term "1"))
                  (rule "polySimp_mulComm0" (formula "17") (term "0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,1"))
                  (rule "polySimp_addComm0" (formula "8") (term "1,0,1,1"))
                  (rule "polySimp_addComm0" (formula "8") (term "0,2,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "8") (term "0,2,0,1,1,2"))
                  (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1"))
                  (rule "polySimp_addComm0" (formula "5") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "8") (term "1,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "3") (term "1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,1"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,1"))
                  (rule "inEqSimp_ltRight" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1"))
                  (rule "add_zero_right" (formula "9") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "11"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "1,1,1"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1,1"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,1,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,2"))
                  (rule "add_zero_right" (formula "9") (term "0,0,1,2"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,2"))
                  (rule "inEqSimp_ltToLeq" (formula "6") (term "1"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                  (rule "add_zero_right" (formula "5") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "4") (term "0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "10"))
                  (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,1"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "1,1,2"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1,2"))
                  (rule "inEqSimp_ltToLeq" (formula "5") (term "1"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "6") (term "0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "8"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,1"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                  (rule "jmod_axiom" (formula "9") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                  (rule "jmod_axiom" (formula "4") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "9") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "9") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "4") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1,1,1"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,1,1,1"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,1,1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,1,2"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,2"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,0,1,2"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "6") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1"))
                  (rule "mul_literals" (formula "9") (term "0,1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,1,2"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,2"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,1,2"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,1,2"))
                  (rule "mul_literals" (formula "9") (term "0,1,1,1,2"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,1,2"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1"))
                  (rule "mul_literals" (formula "5") (term "0,1,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,0,1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                  (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "2"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                  (rule "add_zero_right" (formula "19") (term "0,0"))
                  (rule "leq_literals" (formula "19") (term "0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "false_right" (formula "19"))
                  (rule "newSym_eq" (formula "18") (inst "newSymDef=mul(int::final(self,
               de.wiesler.Classifier::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                  (rule "times_zero_1" (formula "18") (term "1,1"))
                  (rule "add_zero_right" (formula "18") (term "1"))
                  (rule "applyEq" (formula "3") (term "1,1,1,0,0") (ifseqformula "18"))
                  (rule "applyEq" (formula "17") (term "1,1,1,0,0") (ifseqformula "18"))
                  (rule "applyEq" (formula "17") (term "1,1,1,0,0,1,0") (ifseqformula "18"))
                  (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "18"))
                  (rule "eqSymm" (formula "19"))
                  (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "19"))
                  (rule "polySimp_homoEq" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                  (rule "applyEq" (formula "9") (term "0,0,1,1") (ifseqformula "19"))
                  (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,0,1,1"))
                  (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "19"))
                  (rule "polySimp_homoEq" (formula "9") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,1,0"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "19"))
                  (rule "inEqSimp_homoInEq1" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                  (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "19"))
                  (rule "inEqSimp_homoInEq1" (formula "6") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "4") (term "1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1"))
                  (rule "mul_literals" (formula "4") (term "0,1,1"))
                  (rule "polySimp_sepPosMonomial" (formula "9") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,1,1"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,1"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,1"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                  (rule "mul_literals" (formula "12") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                  (rule "mul_literals" (formula "11") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                  (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "11"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "inEqSimp_contradEq3" (formula "4") (term "1") (ifseqformula "11"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,1"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,1"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "4") (term "0,0,1"))
                  (rule "qeq_literals" (formula "4") (term "0,1"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "newSym_eq" (formula "4") (inst "newSymDef=mul(classI_0, Z(0(#)))") (inst "l=l_1"))
                  (rule "times_zero_1" (formula "4") (term "1,1"))
                  (rule "add_zero_right" (formula "4") (term "1"))
                  (rule "applyEq" (formula "6") (term "1,0,2,0,1") (ifseqformula "4"))
                  (rule "applyEq" (formula "9") (term "0,2,1") (ifseqformula "4"))
                  (rule "inEqSimp_commuteGeq" (formula "9"))
                  (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "3") (term "0,2,1,1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "4"))
                  (rule "applyEqRigid" (formula "3") (term "1,0,0,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                  (rule "eqSymm" (formula "5"))
                  (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "5"))
                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "5"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "5"))
                  (rule "inEqSimp_homoInEq0" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                  (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "5"))
                  (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "5"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                  (rule "mul_literals" (formula "12") (term "0,1"))
                  (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0"))
                  (rule "leq_literals" (formula "12") (term "0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=Z(0(#))"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,1,0"))
                  (rule "leq_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                  (rule "add_literals" (formula "11") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0"))
                  (rule "leq_literals" (formula "11") (term "0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "elimGcdGeq" (formula "6") (term "0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=Z(1(#))"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
                  (rule "sub_literals" (formula "6") (term "0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                  (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "6") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,1,0,0"))
                  (rule "leq_literals" (formula "6") (term "1,0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,0"))
                  (rule "add_literals" (formula "6") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "6") (term "0,0,0"))
                  (rule "qeq_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1"))
                  (rule "polySimp_rightDist" (formula "13") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                  (rule "mul_literals" (formula "13") (term "0,1"))
                  (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "12"))
                  (rule "greater_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                  (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0"))
                  (rule "add_literals" (formula "13") (term "1,0,0"))
                  (rule "times_zero_1" (formula "13") (term "0,0"))
                  (rule "qeq_literals" (formula "13") (term "0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                  (rule "mul_literals" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                  (rule "mul_literals" (formula "7") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                  (rule "nnf_imp2or" (formula "20") (term "0"))
                  (rule "nnf_imp2or" (formula "3") (term "0"))
                  (rule "nnf_notAnd" (formula "20") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "3") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "3") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                  (rule "nnf_imp2or" (formula "20") (term "0,1,0"))
                  (rule "nnf_notAnd" (formula "20") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,0"))
                  (rule "jdiv_axiom" (formula "11") (term "0,2,0,0,2"))
                  (rule "eqSymm" (formula "11"))
                  (rule "polyDiv_pullOut" (formula "11") (term "0,2,0") (inst "polyDivCoeff=mul(classJ_0, Z(neglit(1(#))))"))
                  (rule "equal_literals" (formula "11") (term "0,0,2,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,2,0"))
                  (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,0,2,0"))
                  (rule "add_literals" (formula "11") (term "1,0,0,0,2,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,0,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "2,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,2,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "2,0"))
                  (rule "polySimp_mulAssoc" (formula "11") (term "0,2,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,2,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,2,0"))
                  (rule "commute_or" (formula "12") (term "0"))
                  (rule "commute_or" (formula "3") (term "0,0"))
                  (rule "commute_or" (formula "21") (term "0,0,1,0"))
                  (rule "jdiv_axiom" (formula "4") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "4"))
                  (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                  (rule "inEqSimp_subsumption6" (formula "4") (term "0,0") (ifseqformula "14"))
                  (rule "greater_literals" (formula "4") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                  (rule "leq_literals" (formula "4") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polyDiv_pullOut" (formula "4") (term "0") (inst "polyDivCoeff=l_1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0"))
                  (rule "equal_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_homoEq" (formula "4"))
                  (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "4") (term "1,0,0,0,1,0"))
                  (rule "times_zero_1" (formula "4") (term "0,0,0,1,0"))
                  (rule "div_literals" (formula "4") (term "0,0,1,0"))
                  (rule "add_zero_left" (formula "4") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,0"))
                  (rule "times_zero_1" (formula "4") (term "0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "all_pull_out3" (formula "21") (term "0"))
                  (rule "shift_paren_or" (formula "21") (term "0,0"))
                  (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                  (rule "div_axiom" (formula "11") (term "1,0") (inst "quotient=quotient_0"))
                  (rule "mul_literals" (formula "11") (term "1,1,1,1,1"))
                  (rule "qeq_literals" (formula "11") (term "0,1,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "equal_literals" (formula "11") (term "0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "polySimp_addComm1" (formula "13") (term "1"))
                  (rule "add_literals" (formula "13") (term "0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "12"))
                  (rule "inEqSimp_homoInEq1" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                  (rule "applyEqRigid" (formula "14") (term "0,1,2,0") (ifseqformula "11"))
                  (rule "polySimp_addComm0" (formula "14") (term "2,0"))
                  (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "11"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1"))
                  (rule "polySimp_rightDist" (formula "13") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                  (rule "mul_literals" (formula "13") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                  (rule "mul_literals" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0"))
                  (rule "add_zero_left" (formula "18") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=quotient_0"))
                  (rule "leq_literals" (formula "18") (term "0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                  (rule "neg_literal" (formula "18") (term "0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0"))
                  (rule "qeq_literals" (formula "18") (term "0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "20"))
                  (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                  (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                  (rule "mul_literals" (formula "12") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                  (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0"))
                  (rule "leq_literals" (formula "12") (term "0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "19"))
                  (rule "times_zero_1" (formula "17") (term "0,0"))
                  (rule "add_zero_left" (formula "17") (term "0"))
                  (rule "cut_direct" (formula "6") (term "0"))
                  (branch "CUT: l_1 >= 1 TRUE"
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "6"))
                     (rule "leq_literals" (formula "19") (term "0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "20"))
                     (rule "mul_literals" (formula "6") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                     (rule "mul_literals" (formula "6") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "6"))
                     (rule "leq_literals" (formula "19") (term "0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "ifthenelse_split_for" (formula "18"))
                     (branch " classJ_0 = -1 + l_0 * 2 | jdiv(classJ_0, 2) * 2 = classJ_0 TRUE"
                        (rule "andLeft" (formula "19"))
                        (rule "ifthenelse_split" (formula "17") (term "0"))
                        (branch "classJ_0 >= 0 TRUE"
                           (rule "eqSymm" (formula "18"))
                           (rule "applyEqRigid" (formula "9") (term "0,2,0") (ifseqformula "18"))
                           (rule "applyEqRigid" (formula "12") (term "0,2,1") (ifseqformula "18"))
                           (rule "inEqSimp_commuteLeq" (formula "12"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "applyEqRigid" (formula "20") (term "1,0,2,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "19") (term "0,0,1") (ifseqformula "18"))
                           (rule "eqSymm" (formula "19") (term "1"))
                           (rule "applyEqRigid" (formula "21") (term "0,2,0,1") (ifseqformula "18"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0"))
                           (rule "qeq_literals" (formula "23") (term "0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                           (rule "mul_literals" (formula "7") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0"))
                           (rule "add_literals" (formula "7") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                           (rule "mul_literals" (formula "7") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                           (rule "leq_literals" (formula "6") (term "0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "16"))
                           (rule "times_zero_1" (formula "17") (term "0,0"))
                           (rule "add_zero_left" (formula "17") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                           (rule "mul_literals" (formula "17") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "6"))
                           (rule "mul_literals" (formula "17") (term "1,1,0"))
                           (rule "greater_literals" (formula "17") (term "0,0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "leq_literals" (formula "17") (term "0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "24"))
                           (rule "times_zero_1" (formula "17") (term "0,0"))
                           (rule "add_zero_left" (formula "17") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                           (rule "mul_literals" (formula "17") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                           (rule "leq_literals" (formula "17") (term "0,0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0"))
                           (rule "leq_literals" (formula "17") (term "0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "onlyCreatedObjectsAreReferencedFinal" (formula "10") (term "1,0") (ifseqformula "26") (ifseqformula "27"))
                           (rule "onlyCreatedObjectsAreReferencedFinal" (formula "32") (term "0,0") (ifseqformula "27") (ifseqformula "28"))
                           (rule "allLeft" (formula "31") (inst "t=add(Z(neglit(1(#))), l_1)"))
                           (rule "polySimp_addAssoc" (formula "31") (term "1,1,0,0"))
                           (rule "add_literals" (formula "31") (term "0,1,1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "31") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_invertInEq1" (formula "31") (term "0,0,0,0,0"))
                           (rule "times_zero_2" (formula "31") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0,0,0") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0,0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "31") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0,0,0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "31") (term "0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "allLeft" (formula "32") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                           (rule "polySimp_addAssoc" (formula "32") (term "1,1,0,0"))
                           (rule "add_literals" (formula "32") (term "0,1,1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_invertInEq1" (formula "32") (term "0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "times_zero_2" (formula "32") (term "1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0,0,0,0") (ifseqformula "15"))
                           (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0,0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0,0,0") (ifseqformula "6"))
                           (rule "qeq_literals" (formula "32") (term "0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "allLeft" (formula "3") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                           (rule "inEqSimp_commuteGeq" (formula "3") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,1,0"))
                           (rule "add_zero_left" (formula "3") (term "0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0") (ifseqformula "16"))
                           (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "3") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_contradInEq0" (formula "3") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0,0"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "cut_direct" (formula "24") (term "0"))
                           (branch "CUT: classJ_0 <= -2 + l_0 * 2 TRUE"
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "inEqSimp_contradEq3" (formula "22") (term "0") (ifseqformula "24"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0,0"))
                              (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0,0"))
                              (rule "qeq_literals" (formula "22") (term "0,0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "22"))
                              (rule "applyEqRigid" (formula "15") (term "0,0") (ifseqformula "22"))
                              (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "22"))
                              (rule "inEqSimp_homoInEq0" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "22"))
                              (rule "inEqSimp_homoInEq1" (formula "17"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "17") (term "0"))
                              (rule "add_literals" (formula "17") (term "1,0"))
                              (rule "times_zero_1" (formula "17") (term "0"))
                              (rule "leq_literals" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "21"))
                              (rule "inEqSimp_homoInEq0" (formula "17"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
                              (rule "add_literals" (formula "17") (term "1,1,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0"))
                              (rule "add_zero_right" (formula "17") (term "0"))
                              (rule "qeq_literals" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "applyEqRigid" (formula "21") (term "0,0") (ifseqformula "20"))
                              (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "20"))
                              (rule "inEqSimp_homoInEq0" (formula "22"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0"))
                              (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "20"))
                              (rule "inEqSimp_homoInEq1" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                              (rule "applyEqRigid" (formula "19") (term "0,0") (ifseqformula "20"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1"))
                              (rule "polySimp_rightDist" (formula "26") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                              (rule "mul_literals" (formula "26") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1"))
                              (rule "polySimp_rightDist" (formula "22") (term "1"))
                              (rule "mul_literals" (formula "22") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1"))
                              (rule "polySimp_rightDist" (formula "25") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                              (rule "mul_literals" (formula "25") (term "0,1"))
                              (rule "inEqSimp_subsumption6" (formula "21") (term "0") (ifseqformula "7"))
                              (rule "greater_literals" (formula "21") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "mul_literals" (formula "21") (term "1,0,0"))
                              (rule "leq_literals" (formula "21") (term "0,0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "7"))
                              (rule "mul_literals" (formula "18") (term "1,1,0"))
                              (rule "greater_literals" (formula "18") (term "0,0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "leq_literals" (formula "18") (term "0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "inEqSimp_subsumption5" (formula "25") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "greater_literals" (formula "25") (term "0,0"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0"))
                              (rule "qeq_literals" (formula "25") (term "0"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "inEqSimp_subsumption6" (formula "21") (ifseqformula "16"))
                              (rule "greater_literals" (formula "21") (term "0,0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "21") (term "0,0"))
                              (rule "add_literals" (formula "21") (term "1,0,0"))
                              (rule "times_zero_1" (formula "21") (term "0,0"))
                              (rule "qeq_literals" (formula "21") (term "0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "inEqSimp_subsumption4" (formula "23") (ifseqformula "2"))
                              (rule "greater_literals" (formula "23") (term "0,0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                              (rule "mul_literals" (formula "23") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0"))
                              (rule "qeq_literals" (formula "23") (term "0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=quotient_0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0"))
                              (rule "equal_literals" (formula "15") (term "0,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0"))
                              (rule "add_literals" (formula "15") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "15") (term "0,0,0"))
                              (rule "div_literals" (formula "15") (term "0,0"))
                              (rule "add_zero_left" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "19"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "3"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                              (rule "mul_literals" (formula "13") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                              (rule "mul_literals" (formula "13") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                              (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "1"))
                              (rule "andLeft" (formula "13"))
                              (rule "inEqSimp_homoInEq1" (formula "13"))
                              (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                              (rule "add_literals" (formula "13") (term "1,1,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0"))
                              (rule "add_zero_right" (formula "13") (term "0"))
                              (rule "leq_literals" (formula "13"))
                              (rule "closeFalse" (formula "13"))
                           )
                           (branch "CUT: classJ_0 <= -2 + l_0 * 2 FALSE"
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "inEqSimp_leqRight" (formula "37"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "27"))
                              (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "applyEqRigid" (formula "17") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "24") (term "0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                              (rule "add_literals" (formula "24") (term "0,0,0"))
                              (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                              (rule "add_literals" (formula "26") (term "0,0,0"))
                              (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "27"))
                              (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                              (rule "add_literals" (formula "27") (term "1,0"))
                              (rule "times_zero_1" (formula "27") (term "0"))
                              (rule "qeq_literals" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,0"))
                              (rule "times_zero_1" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0"))
                              (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                              (rule "mul_literals" (formula "21") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                              (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "17"))
                              (rule "greater_literals" (formula "18") (term "0,0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0"))
                              (rule "qeq_literals" (formula "18") (term "0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "19"))
                              (rule "mul_literals" (formula "20") (term "1,1,0"))
                              (rule "greater_literals" (formula "20") (term "0,0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "leq_literals" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "inEqSimp_subsumption6" (formula "23") (ifseqformula "22"))
                              (rule "greater_literals" (formula "23") (term "0,0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0"))
                              (rule "add_literals" (formula "23") (term "1,0,0"))
                              (rule "times_zero_1" (formula "23") (term "0,0"))
                              (rule "qeq_literals" (formula "23") (term "0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "inEqSimp_subsumption6" (formula "21") (term "0") (ifseqformula "19"))
                              (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                              (rule "greater_literals" (formula "21") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "leq_literals" (formula "21") (term "0,0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)"))
                              (rule "leq_literals" (formula "18") (term "0,0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "neg_literal" (formula "18") (term "0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0"))
                              (rule "qeq_literals" (formula "18") (term "0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "polyDiv_pullOut" (formula "16") (term "0") (inst "polyDivCoeff=l_0"))
                              (rule "equal_literals" (formula "16") (term "0,0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                              (rule "polySimp_homoEq" (formula "16"))
                              (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0,0,1,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,0,1,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0,0,1,0"))
                              (rule "div_literals" (formula "16") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                              (rule "polySimp_elimOne" (formula "16") (term "0"))
                              (rule "applyEq" (formula "28") (term "1,0,0,0") (ifseqformula "16"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "16"))
                              (rule "inEqSimp_homoInEq1" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "add_literals" (formula "19") (term "0,0"))
                              (rule "add_zero_left" (formula "19") (term "0"))
                              (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "16"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0"))
                              (rule "applyEq" (formula "22") (term "0") (ifseqformula "16"))
                              (rule "inEqSimp_homoInEq1" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0"))
                              (rule "add_zero_left" (formula "22") (term "0,0"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "16"))
                              (rule "inEqSimp_homoInEq0" (formula "18"))
                              (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                              (rule "add_literals" (formula "18") (term "1,0"))
                              (rule "times_zero_1" (formula "18") (term "0"))
                              (rule "qeq_literals" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "applyEqRigid" (formula "5") (term "1,0,0,0") (ifseqformula "16"))
                              (rule "applyEq" (formula "26") (term "1,0,0,0") (ifseqformula "16"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                              (rule "inEqSimp_homoInEq1" (formula "17"))
                              (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                              (rule "add_literals" (formula "17") (term "1,0"))
                              (rule "times_zero_1" (formula "17") (term "0"))
                              (rule "leq_literals" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "applyEqRigid" (formula "27") (term "1,1,0,0,0,0") (ifseqformula "16"))
                              (rule "applyEqRigid" (formula "27") (term "1,1,0,0,0,0,0") (ifseqformula "16"))
                              (rule "applyEqRigid" (formula "1") (term "0,1,1") (ifseqformula "16"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "1") (term "1"))
                              (rule "add_literals" (formula "1") (term "0,1"))
                              (rule "applyEqRigid" (formula "30") (term "0,1") (ifseqformula "16"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1"))
                              (rule "polySimp_rightDist" (formula "30") (term "1"))
                              (rule "mul_literals" (formula "30") (term "0,1"))
                              (rule "applyEq" (formula "29") (term "1") (ifseqformula "16"))
                              (rule "inEqSimp_invertInEq0" (formula "17"))
                              (rule "times_zero_2" (formula "17") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1"))
                              (rule "polySimp_elimOne" (formula "20") (term "1"))
                              (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                              (rule "add_literals" (formula "20") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0"))
                              (rule "qeq_literals" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "8"))
                              (rule "leq_literals" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "18"))
                              (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "4") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "4"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                              (rule "mul_literals" (formula "14") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1"))
                              (rule "polySimp_rightDist" (formula "14") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                              (rule "mul_literals" (formula "14") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "14"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch "classJ_0 >= 0 FALSE"
                           (rule "eqSymm" (formula "17"))
                           (rule "inEqSimp_geqRight" (formula "32"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "applyEqRigid" (formula "10") (term "0,2,0") (ifseqformula "18"))
                           (rule "applyEqRigid" (formula "13") (term "0,2,1") (ifseqformula "18"))
                           (rule "inEqSimp_commuteLeq" (formula "13"))
                           (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "applyEqRigid" (formula "19") (term "0,0,1") (ifseqformula "18"))
                           (rule "polySimp_mulComm0" (formula "19") (term "0,1"))
                           (rule "polySimp_rightDist" (formula "19") (term "0,1"))
                           (rule "polySimp_homoEq" (formula "19") (term "1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1"))
                           (rule "add_literals" (formula "19") (term "1,1,0,1"))
                           (rule "applyEq" (formula "20") (term "1,0,2,0,1") (ifseqformula "18"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,2,0,1"))
                           (rule "applyEqRigid" (formula "21") (term "0,2,0,1") (ifseqformula "18"))
                           (rule "polySimp_sepNegMonomial" (formula "19") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "20") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "20") (term "0,0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                           (rule "mul_literals" (formula "23") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                           (rule "add_literals" (formula "23") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "inEqSimp_contradInEq5" (formula "23") (ifseqformula "8"))
                           (rule "mul_literals" (formula "23") (term "1,1,0"))
                           (rule "greater_literals" (formula "23") (term "0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "qeq_literals" (formula "23") (term "0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "closeFalse" (formula "23"))
                        )
                     )
                     (branch " classJ_0 = -1 + l_0 * 2 | jdiv(classJ_0, 2) * 2 = classJ_0 FALSE"
                        (rule "orRight" (formula "30"))
                        (rule "andLeft" (formula "18"))
                        (rule "applyEq" (formula "12") (term "1") (ifseqformula "18"))
                        (rule "applyEq" (formula "9") (term "0") (ifseqformula "18"))
                        (rule "inEqSimp_strengthen0" (formula "23") (ifseqformula "31"))
                        (rule "polySimp_addAssoc" (formula "23") (term "1"))
                        (rule "add_literals" (formula "23") (term "0,1"))
                        (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "23"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                        (rule "add_literals" (formula "31") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0"))
                        (rule "qeq_literals" (formula "31") (term "0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "false_right" (formula "31"))
                        (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
                        (rule "andLeft" (formula "9"))
                        (rule "inEqSimp_homoInEq1" (formula "9"))
                        (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                        (rule "add_literals" (formula "9") (term "1,1,0"))
                        (rule "times_zero_1" (formula "9") (term "1,0"))
                        (rule "add_zero_right" (formula "9") (term "0"))
                        (rule "leq_literals" (formula "9"))
                        (rule "closeFalse" (formula "9"))
                     )
                  )
                  (branch "CUT: l_1 >= 1 FALSE"
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "inEqSimp_geqRight" (formula "29"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "1"))
                     (rule "applyEq" (formula "10") (term "0,2,0") (ifseqformula "18"))
                     (rule "inEqSimp_commuteLeq" (formula "10"))
                     (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "18"))
                     (rule "leq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                     (rule "qeq_literals" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "17"))
                     (rule "add_zero_right" (formula "2") (term "1"))
                     (rule "replace_known_left" (formula "15") (term "0,1,2") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "applyEqRigid" (formula "3") (term "0,2,1,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "17"))
                     (rule "inEqSimp_commuteLeq" (formula "19"))
                     (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "17"))
                     (rule "times_zero_2" (formula "4") (term "0,0"))
                     (rule "jdiv_axiom_inline" (formula "4") (term "0"))
                     (rule "qeq_literals" (formula "4") (term "0,0"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "div_literals" (formula "4") (term "0"))
                     (rule "eqSymm" (formula "4"))
                     (rule "applyEqRigid" (formula "17") (term "1,1") (ifseqformula "16"))
                     (rule "add_zero_right" (formula "17") (term "1"))
                     (rule "applyEqRigid" (formula "3") (term "1,1,1,0,0") (ifseqformula "16"))
                     (rule "add_zero_right" (formula "3") (term "1,1,0,0"))
                     (rule "applyEqRigid" (formula "18") (term "0,1,1") (ifseqformula "16"))
                     (rule "times_zero_2" (formula "18") (term "1,1"))
                     (rule "add_zero_right" (formula "18") (term "1"))
                     (rule "replace_known_left" (formula "14") (term "0,0,1") (ifseqformula "18"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "16"))
                     (rule "times_zero_2" (formula "4") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "13") (term "0,0") (ifseqformula "18"))
                     (rule "leq_literals" (formula "13") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "eqSymm" (formula "13"))
                     (rule "applyEqRigid" (formula "14") (term "0,2,0,0,2") (ifseqformula "13"))
                     (rule "applyEqRigid" (formula "14") (term "0,0,1,0") (ifseqformula "13"))
                     (rule "eqSymm" (formula "14") (term "1,0"))
                     (rule "applyEqRigid" (formula "8") (term "0,2,0") (ifseqformula "13"))
                     (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "13"))
                     (rule "applyEq" (formula "14") (term "0,2,0,1,1,1") (ifseqformula "13"))
                     (rule "applyEqRigid" (formula "14") (term "1,0,2,0,0,1") (ifseqformula "13"))
                     (rule "applyEqRigid" (formula "5") (term "0,2,0") (ifseqformula "13"))
                     (rule "applyEqRigid" (formula "14") (term "1,0,2,0,1,2") (ifseqformula "13"))
                     (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "2"))
                     (rule "leq_literals" (formula "15") (term "0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "12"))
                     (rule "mul_literals" (formula "17") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "0,0"))
                     (rule "add_zero_left" (formula "17") (term "0"))
                     (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "2"))
                     (rule "greater_literals" (formula "17") (term "0,0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "mul_literals" (formula "17") (term "1,0"))
                     (rule "leq_literals" (formula "17") (term "0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                     (rule "mul_literals" (formula "17") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                     (rule "mul_literals" (formula "17") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "16"))
                     (rule "greater_literals" (formula "17") (term "0,0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "mul_literals" (formula "17") (term "1,0"))
                     (rule "leq_literals" (formula "17") (term "0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "commute_or" (formula "3") (term "0,0"))
                     (rule "onlyCreatedObjectsAreReferencedFinal" (formula "24") (term "0,0") (ifseqformula "19") (ifseqformula "20"))
                     (rule "onlyCreatedObjectsAreReferencedFinal" (formula "6") (term "1,0") (ifseqformula "19") (ifseqformula "20"))
                     (rule "ifthenelse_split_for" (formula "15"))
                     (branch "classJ_0 = -1 + l_0 * 2 | classJ_0 = quotient_0 * 2 TRUE"
                        (rule "andLeft" (formula "16"))
                        (rule "allLeft" (formula "26") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                        (rule "polySimp_addAssoc" (formula "26") (term "1,1,0,0"))
                        (rule "add_literals" (formula "26") (term "0,1,1,0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_invertInEq1" (formula "26") (term "0,0,0,0,0"))
                        (rule "times_zero_2" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0,0,0,0") (ifseqformula "11"))
                        (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,0,0"))
                        (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "26") (term "0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "allLeft" (formula "27") (inst "t=Z(0(#))"))
                        (rule "add_zero_right" (formula "27") (term "1,1,0,0"))
                        (rule "leq_literals" (formula "27") (term "0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "inEqSimp_commuteGeq" (formula "27") (term "0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0,0") (ifseqformula "19"))
                        (rule "qeq_literals" (formula "27") (term "0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "commute_or" (formula "27") (term "0,0"))
                        (rule "allLeft" (formula "3") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                        (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "3") (term "0,0,0"))
                        (rule "inEqSimp_invertInEq1" (formula "3") (term "0,0"))
                        (rule "times_zero_2" (formula "3") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "3") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "12"))
                        (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,0"))
                        (rule "leq_literals" (formula "3") (term "0,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "17"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "3"))
                        (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                        (rule "mul_literals" (formula "9") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1"))
                        (rule "polySimp_rightDist" (formula "9") (term "1"))
                        (rule "mul_literals" (formula "9") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "classJ_0 = -1 + l_0 * 2 | classJ_0 = quotient_0 * 2 FALSE"
                        (rule "orRight" (formula "28"))
                        (rule "andLeft" (formula "15"))
                        (rule "applyEq" (formula "9") (term "0") (ifseqformula "15"))
                        (rule "inEqSimp_commuteGeq" (formula "9"))
                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "15"))
                        (rule "inEqSimp_strengthen0" (formula "20") (ifseqformula "29"))
                        (rule "polySimp_addAssoc" (formula "20") (term "1"))
                        (rule "add_literals" (formula "20") (term "0,1"))
                        (rule "inEqSimp_contradEq3" (formula "29") (ifseqformula "20"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                        (rule "add_literals" (formula "29") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0"))
                        (rule "qeq_literals" (formula "29") (term "0"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "false_right" (formula "29"))
                        (rule "inEqSimp_strengthen1" (formula "12") (ifseqformula "29"))
                        (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "12"))
                        (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                        (rule "add_literals" (formula "29") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0"))
                        (rule "leq_literals" (formula "29") (term "0"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "false_right" (formula "29"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch " javaMod(classI_0, 2) = 0 | classI_0 = javaSubInt(self.num_buckets, 1) FALSE"
                  (rule "translateJavaMulInt" (formula "15") (term "1,1"))
                  (rule "translateJavaDivInt" (formula "17") (term "0"))
                  (rule "translateJavaDivInt" (formula "17") (term "1"))
                  (rule "translateJavaMod" (formula "16") (term "0,0"))
                  (rule "translateJavaSubInt" (formula "16") (term "1,1"))
                  (rule "translateJavaDivInt" (formula "1") (term "0"))
                  (rule "translateJavaDivInt" (formula "1") (term "1"))
                  (rule "translateJavaDivInt" (formula "2") (term "0,0,0,0"))
                  (rule "translateJavaDivInt" (formula "2") (term "0,2,0,1,0"))
                  (rule "translateJavaMod" (formula "6") (term "0,0,0"))
                  (rule "translateJavaSubInt" (formula "6") (term "1,1,0"))
                  (rule "translateJavaSubInt" (formula "6") (term "0,2,0,1,0,1"))
                  (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1"))
                  (rule "translateJavaDivInt" (formula "6") (term "0,2,1,1,1,1"))
                  (rule "translateJavaDivInt" (formula "6") (term "0,2,0,0,2"))
                  (rule "translateJavaDivInt" (formula "6") (term "1,0,1,2"))
                  (rule "translateJavaSubInt" (formula "6") (term "0,2,0,1,1,2"))
                  (rule "translateJavaDivInt" (formula "5") (term "0,2,0"))
                  (rule "translateJavaDivInt" (formula "5") (term "0,2,1"))
                  (rule "translateJavaDivInt" (formula "3") (term "0,2,0,0"))
                  (rule "translateJavaDivInt" (formula "3") (term "1,0,1"))
                  (rule "translateJavaSubInt" (formula "3") (term "0,2,0,1,1"))
                  (rule "translateJavaDivInt" (formula "6") (term "0,0,2,0,1,0,1"))
                  (rule "translateJavaDivInt" (formula "6") (term "0,0,2,0,1,1,2"))
                  (rule "translateJavaDivInt" (formula "3") (term "0,0,2,0,1,1"))
                  (rule "orRight" (formula "16"))
                  (rule "andLeft" (formula "3"))
                  (rule "eqSymm" (formula "16"))
                  (rule "eqSymm" (formula "7") (term "1,0"))
                  (rule "eqSymm" (formula "18"))
                  (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "5"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "polySimp_elimSub" (formula "7") (term "1,0,1,1"))
                  (rule "mul_literals" (formula "7") (term "1,1,0,1,1"))
                  (rule "polySimp_elimSub" (formula "7") (term "0,2,0,1,0,1"))
                  (rule "mul_literals" (formula "7") (term "1,0,2,0,1,0,1"))
                  (rule "polySimp_elimSub" (formula "7") (term "0,2,0,1,1,2"))
                  (rule "mul_literals" (formula "7") (term "1,0,2,0,1,1,2"))
                  (rule "polySimp_elimSub" (formula "4") (term "0,2,0,1"))
                  (rule "mul_literals" (formula "4") (term "1,0,2,0,1"))
                  (rule "polySimp_elimSub" (formula "7") (term "0,1,0"))
                  (rule "mul_literals" (formula "7") (term "1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "18") (term "0"))
                  (rule "mul_literals" (formula "18") (term "1,0"))
                  (rule "polySimp_homoEq" (formula "7") (term "1,0"))
                  (rule "polySimp_homoEq" (formula "18"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "1,0,1,1"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,2,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,2,0,1,1,2"))
                  (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1"))
                  (rule "polySimp_addComm0" (formula "7") (term "1,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "18") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0"))
                  (rule "inEqSimp_ltRight" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,1"))
                  (rule "add_zero_right" (formula "8") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "1,1,1"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,1"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,1,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,2"))
                  (rule "add_zero_right" (formula "8") (term "0,0,1,2"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,2"))
                  (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                  (rule "add_zero_right" (formula "5") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "8") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                  (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "9"))
                  (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,1"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "1,1,2"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,2"))
                  (rule "inEqSimp_ltToLeq" (formula "5") (term "1"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,1"))
                  (rule "add_literals" (formula "8") (term "0,0,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0,1,1"))
                  (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "7") (term "1") (ifseqformula "4"))
                  (rule "jmod_axiom" (formula "8") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                  (rule "jmod_axiom" (formula "18") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "8") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "0,1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "19"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "8") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "18"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "0,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,1,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0,1,1,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "0,1,1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,1,2"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0,0,1,2"))
                  (rule "polySimp_elimOne" (formula "8") (term "0,0,1,2"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,1,0,1"))
                  (rule "mul_literals" (formula "8") (term "0,1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,1,2"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,1,1,2"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,1,1,2"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,1,2"))
                  (rule "mul_literals" (formula "8") (term "0,1,1,1,2"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,1,1,2"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,1"))
                  (rule "mul_literals" (formula "5") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "0,0,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "20") (ifseqformula "2"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0"))
                  (rule "leq_literals" (formula "20") (term "0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "false_right" (formula "20"))
                  (rule "newSym_eq" (formula "17") (inst "newSymDef=mul(int::final(self,
               de.wiesler.Classifier::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                  (rule "times_zero_1" (formula "17") (term "1,1"))
                  (rule "add_zero_right" (formula "17") (term "1"))
                  (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "17"))
                  (rule "eqSymm" (formula "18"))
                  (rule "applyEq" (formula "16") (term "1,1,1,0,0,1,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "3") (term "1,1,1,0,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "20") (term "0") (ifseqformula "18"))
                  (rule "polySimp_homoEq" (formula "20"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                  (rule "applyEq" (formula "8") (term "0,0,1,1") (ifseqformula "18"))
                  (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0,1,1"))
                  (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "18"))
                  (rule "polySimp_homoEq" (formula "8") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,1,0"))
                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "18"))
                  (rule "inEqSimp_homoInEq1" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                  (rule "polySimp_sepPosMonomial" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1"))
                  (rule "polySimp_rightDist" (formula "20") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                  (rule "mul_literals" (formula "20") (term "0,1"))
                  (rule "polySimp_sepPosMonomial" (formula "8") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,1,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1,1"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,1"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                  (rule "mul_literals" (formula "11") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
                  (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                  (rule "mul_literals" (formula "10") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                  (rule "inEqSimp_contradEq3" (formula "21") (ifseqformula "10"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0"))
                  (rule "qeq_literals" (formula "21") (term "0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "false_right" (formula "21"))
                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                  (rule "times_zero_1" (formula "9") (term "0,0"))
                  (rule "add_zero_left" (formula "9") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                  (rule "mul_literals" (formula "9") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                  (rule "leq_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                  (rule "add_literals" (formula "9") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0"))
                  (rule "leq_literals" (formula "9") (term "0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "nnf_imp2or" (formula "18") (term "0"))
                  (rule "nnf_imp2or" (formula "3") (term "0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "3") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "3") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
                  (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0"))
                  (rule "commute_or" (formula "8") (term "0"))
                  (rule "jdiv_axiom" (formula "8") (term "0,2,0,0,2"))
                  (rule "eqSymm" (formula "8"))
                  (rule "polyDiv_pullOut" (formula "8") (term "0,2,0") (inst "polyDivCoeff=mul(classJ_0, Z(neglit(1(#))))"))
                  (rule "equal_literals" (formula "8") (term "0,0,2,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,2,0"))
                  (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,0,2,0"))
                  (rule "add_literals" (formula "8") (term "1,0,0,0,2,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "0,0,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "2,0"))
                  (rule "polySimp_addComm0" (formula "8") (term "1,2,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "2,0"))
                  (rule "polySimp_mulAssoc" (formula "8") (term "0,2,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "0,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0,2,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "0,2,0"))
                  (rule "jdiv_axiom" (formula "4") (term "0,2,0"))
                  (rule "eqSymm" (formula "4"))
                  (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "12"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "eqSymm" (formula "4"))
                  (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "4"))
                  (rule "applyEqRigid" (formula "5") (term "0,2,0") (ifseqformula "4"))
                  (rule "applyEqRigid" (formula "6") (term "1,0,2,0,1") (ifseqformula "4"))
                  (rule "applyEq" (formula "3") (term "1,1,0,0,0") (ifseqformula "4"))
                  (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "4"))
                  (rule "commute_or" (formula "20") (term "0,0,1,0"))
                  (rule "div_axiom" (formula "9") (term "1,0") (inst "quotient=quotient_0"))
                  (rule "equal_literals" (formula "9") (term "0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "qeq_literals" (formula "9") (term "0,1"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "mul_literals" (formula "9") (term "1,1,1"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "polySimp_addComm1" (formula "11") (term "1"))
                  (rule "add_literals" (formula "11") (term "0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "10"))
                  (rule "inEqSimp_homoInEq1" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                  (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "9"))
                  (rule "applyEq" (formula "12") (term "0,1,2,0") (ifseqformula "9"))
                  (rule "polySimp_addComm0" (formula "12") (term "2,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                  (rule "mul_literals" (formula "11") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "11"))
                  (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                  (rule "mul_literals" (formula "17") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                  (rule "polySimp_elimOne" (formula "17") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "19"))
                  (rule "polySimp_mulAssoc" (formula "10") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1"))
                  (rule "polySimp_rightDist" (formula "10") (term "1"))
                  (rule "mul_literals" (formula "10") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                  (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                  (rule "add_literals" (formula "10") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                  (rule "add_literals" (formula "10") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0"))
                  (rule "leq_literals" (formula "10") (term "0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                  (rule "times_zero_1" (formula "16") (term "0,0"))
                  (rule "add_zero_left" (formula "16") (term "0"))
                  (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "16") (term "0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                  (rule "add_literals" (formula "16") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0"))
                  (rule "leq_literals" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "all_pull_out3" (formula "26") (term "0"))
                  (rule "shift_paren_or" (formula "26") (term "0,0"))
                  (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                  (rule "div_axiom" (formula "4") (term "1") (inst "quotient=quotient_1"))
                  (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                  (rule "qeq_literals" (formula "4") (term "0,1,1"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "equal_literals" (formula "4") (term "0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "polySimp_addComm1" (formula "6") (term "1"))
                  (rule "add_literals" (formula "6") (term "0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "5"))
                  (rule "inEqSimp_homoInEq1" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "applyEq" (formula "8") (term "0,2,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "4"))
                  (rule "applyEqRigid" (formula "32") (term "0,0") (ifseqformula "4"))
                  (rule "eqSymm" (formula "32"))
                  (rule "applyEqRigid" (formula "3") (term "1,1,0,0,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "9") (term "1,0,2,0,1") (ifseqformula "4"))
                  (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "4"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                  (rule "mul_literals" (formula "6") (term "0,1"))
                  (rule "inEqSimp_strengthen1" (formula "5") (ifseqformula "32"))
                  (rule "inEqSimp_contradEq7" (formula "32") (ifseqformula "5"))
                  (rule "polySimp_mulAssoc" (formula "32") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                  (rule "add_literals" (formula "32") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "32") (term "1,0,0"))
                  (rule "add_zero_right" (formula "32") (term "0,0"))
                  (rule "leq_literals" (formula "32") (term "0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "false_right" (formula "32"))
                  (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "6"))
                  (rule "applyEq" (formula "7") (term "0") (ifseqformula "5"))
                  (rule "inEqSimp_homoInEq0" (formula "7"))
                  (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "1,0"))
                  (rule "times_zero_1" (formula "7") (term "0"))
                  (rule "qeq_literals" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "5"))
                  (rule "inEqSimp_homoInEq0" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0"))
                  (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "5"))
                  (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "5"))
                  (rule "inEqSimp_homoInEq1" (formula "6"))
                  (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "1,0"))
                  (rule "times_zero_1" (formula "6") (term "0"))
                  (rule "leq_literals" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "5"))
                  (rule "inEqSimp_commuteLeq" (formula "21"))
                  (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "5"))
                  (rule "polySimp_addAssoc" (formula "22") (term "1"))
                  (rule "add_literals" (formula "22") (term "0,1"))
                  (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "5"))
                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "5"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1"))
                  (rule "polySimp_rightDist" (formula "20") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                  (rule "mul_literals" (formula "20") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                  (rule "mul_literals" (formula "19") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(0(#))"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "19") (term "0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                  (rule "add_zero_right" (formula "19") (term "0,0"))
                  (rule "leq_literals" (formula "19") (term "0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(2(#)), quotient_1)"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "20") (term "0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0"))
                  (rule "add_zero_right" (formula "20") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0"))
                  (rule "add_zero_right" (formula "20") (term "0,0"))
                  (rule "leq_literals" (formula "20") (term "0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_1)"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "21") (term "0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "21") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "21") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0"))
                  (rule "leq_literals" (formula "21") (term "0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "polyDiv_pullOut" (formula "4") (term "0") (inst "polyDivCoeff=quotient_1"))
                  (rule "equal_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                  (rule "polySimp_homoEq" (formula "4"))
                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0,0,1,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0,0,1,0"))
                  (rule "div_literals" (formula "4") (term "0,0,1,0"))
                  (rule "add_zero_left" (formula "4") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,0"))
                  (rule "times_zero_1" (formula "4") (term "0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1"))
                  (rule "polySimp_rightDist" (formula "21") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                  (rule "mul_literals" (formula "21") (term "0,1"))
                  (rule "inEqSimp_subsumption6" (formula "21") (ifseqformula "20"))
                  (rule "greater_literals" (formula "21") (term "0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0"))
                  (rule "qeq_literals" (formula "21") (term "0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                  (rule "mul_literals" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1"))
                  (rule "polySimp_rightDist" (formula "21") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                  (rule "mul_literals" (formula "21") (term "0,1"))
                  (rule "inEqSimp_subsumption6" (formula "21") (ifseqformula "19"))
                  (rule "greater_literals" (formula "21") (term "0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0"))
                  (rule "qeq_literals" (formula "21") (term "0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "commute_or" (formula "3") (term "0,0"))
                  (rule "ifthenelse_split_for" (formula "15"))
                  (branch " classJ_0 = -1 + l_0 * 2 | jdiv(classJ_0, 2) * 2 = classJ_0 TRUE"
                     (rule "andLeft" (formula "16"))
                     (rule "ifthenelse_split" (formula "14") (term "0"))
                     (branch "classJ_0 >= 0 TRUE"
                        (rule "eqSymm" (formula "15"))
                        (rule "applyEq" (formula "9") (term "0,2,0") (ifseqformula "15"))
                        (rule "applyEqRigid" (formula "18") (term "0,2,0,1") (ifseqformula "15"))
                        (rule "applyEqRigid" (formula "17") (term "1,0,2,0,1") (ifseqformula "15"))
                        (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "15"))
                        (rule "applyEqRigid" (formula "15") (term "0,0,1") (ifseqformula "14"))
                        (rule "eqSymm" (formula "15") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "24"))
                        (rule "times_zero_1" (formula "13") (term "0,0"))
                        (rule "add_zero_left" (formula "13") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                        (rule "mul_literals" (formula "13") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "19"))
                        (rule "greater_literals" (formula "13") (term "0,0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "mul_literals" (formula "13") (term "1,0"))
                        (rule "leq_literals" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "12"))
                        (rule "times_zero_1" (formula "13") (term "0,0"))
                        (rule "add_zero_left" (formula "13") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                        (rule "mul_literals" (formula "13") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "20"))
                        (rule "greater_literals" (formula "13") (term "0,0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "times_zero_1" (formula "13") (term "1,0"))
                        (rule "leq_literals" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "onlyCreatedObjectsAreReferencedFinal" (formula "5") (term "1,0") (ifseqformula "25") (ifseqformula "26"))
                        (rule "onlyCreatedObjectsAreReferencedFinal" (formula "31") (term "0,0") (ifseqformula "26") (ifseqformula "27"))
                        (rule "jdiv_axiom" (formula "4") (term "0"))
                        (rule "eqSymm" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,0,2,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0,2,0"))
                        (rule "mul_literals" (formula "4") (term "0,0,0,2,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0"))
                        (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "5"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0"))
                        (rule "mul_literals" (formula "4") (term "1,0,0"))
                        (rule "inEqSimp_subsumption6" (formula "4") (term "0,0") (ifseqformula "22"))
                        (rule "greater_literals" (formula "4") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                        (rule "leq_literals" (formula "4") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "polyDiv_pullOut" (formula "4") (term "0") (inst "polyDivCoeff=quotient_1"))
                        (rule "equal_literals" (formula "4") (term "0,0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                        (rule "polySimp_homoEq" (formula "4"))
                        (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,0,1,0"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0,0,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0,0,1,0"))
                        (rule "add_zero_right" (formula "4") (term "0,0,0,1,0"))
                        (rule "div_literals" (formula "4") (term "0,0,1,0"))
                        (rule "add_zero_left" (formula "4") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,0"))
                        (rule "times_zero_1" (formula "4") (term "0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "cut_direct" (formula "7") (term "0"))
                        (branch "CUT: quotient_1 >= 1 TRUE"
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "7"))
                           (rule "leq_literals" (formula "22") (term "0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "allLeft" (formula "30") (inst "t=quotient_1"))
                           (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0,0"))
                           (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "6"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0") (ifseqformula "22"))
                           (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "30") (term "0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "2")))
                           (rule "true_left" (formula "30"))
                           (rule "allLeft" (formula "2") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                           (rule "inEqSimp_commuteGeq" (formula "2") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,1,0"))
                           (rule "add_zero_left" (formula "2") (term "0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "2") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,0"))
                           (rule "leq_literals" (formula "2") (term "0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "allLeft" (formula "3") (inst "t=quotient_1"))
                           (rule "inEqSimp_commuteGeq" (formula "3") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,1,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "3") (term "0,1,0"))
                           (rule "qeq_literals" (formula "3") (term "1,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "8"))
                           (rule "inEqSimp_homoInEq1" (formula "3") (term "1"))
                           (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1"))
                           (rule "add_literals" (formula "3") (term "1,0,1"))
                           (rule "times_zero_1" (formula "3") (term "0,1"))
                           (rule "leq_literals" (formula "3") (term "1"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "allLeft" (formula "31") (inst "t=add(Z(neglit(1(#))), quotient_1)"))
                           (rule "polySimp_addAssoc" (formula "31") (term "1,1,0,0"))
                           (rule "add_literals" (formula "31") (term "0,1,1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "31") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_invertInEq1" (formula "31") (term "0,0,0,0,0"))
                           (rule "times_zero_2" (formula "31") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0,0,0") (ifseqformula "23"))
                           (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0,0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "31") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0,0,0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "31") (term "0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "cut_direct" (formula "20") (term "0"))
                           (branch "CUT: classJ_0 <= -2 + l_0 * 2 TRUE"
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "inEqSimp_contradEq3" (formula "18") (term "0") (ifseqformula "20"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0,0"))
                              (rule "qeq_literals" (formula "18") (term "0,0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "applyEqRigid" (formula "17") (term "0,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "18"))
                              (rule "applyEqRigid" (formula "19") (term "0,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "18"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "18"))
                              (rule "inEqSimp_homoInEq1" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "14") (term "0"))
                              (rule "add_literals" (formula "14") (term "1,0"))
                              (rule "times_zero_1" (formula "14") (term "0"))
                              (rule "leq_literals" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq0" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq0" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0"))
                              (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq0" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "14") (term "0"))
                              (rule "add_literals" (formula "14") (term "1,1,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0"))
                              (rule "add_zero_right" (formula "14") (term "0"))
                              (rule "qeq_literals" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1"))
                              (rule "polySimp_rightDist" (formula "25") (term "1"))
                              (rule "mul_literals" (formula "25") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1"))
                              (rule "mul_literals" (formula "18") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                              (rule "inEqSimp_subsumption6" (formula "14") (ifseqformula "21"))
                              (rule "times_zero_1" (formula "14") (term "1,1,0"))
                              (rule "greater_literals" (formula "14") (term "0,0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "leq_literals" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "inEqSimp_subsumption5" (formula "24") (ifseqformula "17"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "greater_literals" (formula "24") (term "0,0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                              (rule "add_literals" (formula "24") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                              (rule "add_literals" (formula "24") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0"))
                              (rule "qeq_literals" (formula "24") (term "0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "13"))
                              (rule "greater_literals" (formula "17") (term "0,0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "17") (term "0,0"))
                              (rule "add_literals" (formula "17") (term "1,0,0"))
                              (rule "times_zero_1" (formula "17") (term "0,0"))
                              (rule "qeq_literals" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "inEqSimp_subsumption6" (formula "22") (ifseqformula "21"))
                              (rule "greater_literals" (formula "22") (term "0,0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "22") (term "0,0"))
                              (rule "add_literals" (formula "22") (term "1,0,0"))
                              (rule "times_zero_1" (formula "22") (term "0,0"))
                              (rule "qeq_literals" (formula "22") (term "0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "polyDiv_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=quotient_0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0"))
                              (rule "equal_literals" (formula "12") (term "0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "polySimp_homoEq" (formula "12"))
                              (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "12") (term "1,0,0,0,1,0"))
                              (rule "times_zero_1" (formula "12") (term "0,0,0,1,0"))
                              (rule "div_literals" (formula "12") (term "0,0,1,0"))
                              (rule "add_zero_left" (formula "12") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                              (rule "add_literals" (formula "12") (term "1,0"))
                              (rule "times_zero_1" (formula "12") (term "0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "elimGcdGeq" (formula "15") (term "0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(1(#))"))
                              (rule "sub_literals" (formula "15") (term "0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,0,0,0,1,0,0"))
                              (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,0,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,1,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,1,0,0"))
                              (rule "leq_literals" (formula "15") (term "1,0,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0"))
                              (rule "add_literals" (formula "15") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "15") (term "0,0,0"))
                              (rule "qeq_literals" (formula "15") (term "0,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "cut_direct" (formula "6") (term "0"))
                              (branch "CUT: self.sorted_splitters = null TRUE"
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "25") (term "1,1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "25") (term "1,0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "26") (term "1,1,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "3") (term "1,0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "15") (term "1,0,1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "26") (term "1,0,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "6"))
                                 (rule "cut_direct" (formula "27") (term "0"))
                                 (branch "CUT: self.tree = null TRUE"
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "27"))
                                    (rule "jdiv_axiom" (formula "13") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "applyEq" (formula "13") (term "1") (ifseqformula "14"))
                                    (rule "inEqSimp_subsumption6" (formula "13") (term "0,0") (ifseqformula "19"))
                                    (rule "greater_literals" (formula "13") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                    (rule "leq_literals" (formula "13") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "polyDiv_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=quotient_0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "13") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "polySimp_homoEq" (formula "13"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,0,0,1,0"))
                                    (rule "div_literals" (formula "13") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                    (rule "add_literals" (formula "13") (term "1,0"))
                                    (rule "times_zero_1" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "25") (inst "t=quotient_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "20"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "25") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                    (rule "leq_literals" (formula "25") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "allLeft" (formula "26") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "20"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "26") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                    (rule "leq_literals" (formula "26") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "allLeft" (formula "28") (inst "t=add(Z(neglit(1(#))), quotient_1)"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,1,1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "28") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "times_zero_2" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "28") (term "0,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0") (ifseqformula "19"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "28") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")))
                                    (rule "true_left" (formula "28"))
                                    (rule "allLeft" (formula "28") (inst "t=quotient_1"))
                                    (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0,0"))
                                    (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "7"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "28") (term "0,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0") (ifseqformula "19"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "28") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "3")))
                                    (rule "true_left" (formula "28"))
                                    (rule "allLeft" (formula "3") (inst "t=quotient_1"))
                                    (rule "inEqSimp_commuteGeq" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,1,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,1,0"))
                                    (rule "qeq_literals" (formula "3") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "1,0,1"))
                                    (rule "times_zero_1" (formula "3") (term "0,1"))
                                    (rule "leq_literals" (formula "3") (term "1"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "allLeft" (formula "27") (inst "t=quotient_1"))
                                    (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,1,0"))
                                    (rule "qeq_literals" (formula "27") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "7"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "19"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                    (rule "leq_literals" (formula "27") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0"))
                                    (rule "qeq_literals" (formula "27") (term "0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "cut_direct" (formula "15") (term "0"))
                                    (branch "CUT: quotient_0 >= 1 TRUE"
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "15"))
                                       (rule "leq_literals" (formula "19") (term "0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "16"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "CUT: quotient_0 >= 1 FALSE"
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "inEqSimp_geqRight" (formula "31"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "1"))
                                       (rule "applyEq" (formula "27") (term "1,0,2,1") (ifseqformula "18"))
                                       (rule "add_zero_right" (formula "27") (term "0,2,1"))
                                       (rule "applyEqRigid" (formula "12") (term "0,2,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "18"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEqRigid" (formula "15") (term "0,2,0") (ifseqformula "17"))
                                       (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "17"))
                                       (rule "times_zero_2" (formula "13") (term "0,0"))
                                       (rule "jdiv_axiom_inline" (formula "13") (term "0"))
                                       (rule "qeq_literals" (formula "13") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "div_literals" (formula "13") (term "0"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq1" (formula "18"))
                                       (rule "times_zero_2" (formula "18") (term "1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0"))
                                       (rule "applyEqRigid" (formula "23") (term "0,2,1") (ifseqformula "16"))
                                       (rule "applyEq" (formula "2") (term "1,0,2,0") (ifseqformula "16"))
                                       (rule "add_zero_right" (formula "2") (term "0,2,0"))
                                       (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "16"))
                                       (rule "add_zero_right" (formula "12") (term "1"))
                                       (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "15"))
                                       (rule "times_zero_2" (formula "12") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                       (rule "mul_literals" (formula "17") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "closeFalse" (formula "8"))
                                    )
                                 )
                                 (branch "CUT: self.tree = null FALSE"
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "jdiv_axiom" (formula "13") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "applyEqRigid" (formula "13") (term "1") (ifseqformula "14"))
                                    (rule "inEqSimp_subsumption6" (formula "13") (term "0,0") (ifseqformula "19"))
                                    (rule "greater_literals" (formula "13") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                    (rule "leq_literals" (formula "13") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "polyDiv_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=quotient_0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "13") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,0,0"))
                                    (rule "div_literals" (formula "13") (term "0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "25") (inst "t=quotient_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "25") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "20"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                    (rule "leq_literals" (formula "25") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "allLeft" (formula "26") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "26") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "20"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                    (rule "leq_literals" (formula "26") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "allLeft" (formula "27") (inst "t=quotient_1"))
                                    (rule "inEqSimp_commuteGeq" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,1,0"))
                                    (rule "qeq_literals" (formula "27") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "7"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "19"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                    (rule "leq_literals" (formula "27") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0"))
                                    (rule "qeq_literals" (formula "27") (term "0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "allLeft" (formula "28") (inst "t=add(Z(neglit(1(#))), quotient_1)"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,1,1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "28") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "times_zero_2" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0,0") (ifseqformula "19"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "28") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "28") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")))
                                    (rule "true_left" (formula "28"))
                                    (rule "allLeft" (formula "28") (inst "t=quotient_1"))
                                    (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0,0"))
                                    (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "7"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0,0") (ifseqformula "19"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "28") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "28") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "3")))
                                    (rule "true_left" (formula "28"))
                                    (rule "allLeft" (formula "3") (inst "t=quotient_1"))
                                    (rule "inEqSimp_commuteGeq" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,1,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,1,0"))
                                    (rule "qeq_literals" (formula "3") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "1,0,1"))
                                    (rule "times_zero_1" (formula "3") (term "0,1"))
                                    (rule "leq_literals" (formula "3") (term "1"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "cut_direct" (formula "15") (term "0"))
                                    (branch "CUT: quotient_0 >= 1 TRUE"
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "15"))
                                       (rule "leq_literals" (formula "19") (term "0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "16"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "CUT: quotient_0 >= 1 FALSE"
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "inEqSimp_geqRight" (formula "31"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "3") (term "1,0,2,0") (ifseqformula "18"))
                                       (rule "add_zero_right" (formula "3") (term "0,2,0"))
                                       (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "18"))
                                       (rule "inEqSimp_homoInEq1" (formula "21"))
                                       (rule "times_zero_2" (formula "21") (term "1,0"))
                                       (rule "add_zero_right" (formula "21") (term "0"))
                                       (rule "applyEq" (formula "12") (term "0,2,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "26") (term "0,2,1") (ifseqformula "18"))
                                       (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "18"))
                                       (rule "times_zero_2" (formula "14") (term "0,0"))
                                       (rule "jdiv_axiom_inline" (formula "14") (term "0"))
                                       (rule "times_zero_2" (formula "14") (term "0,0,2,0"))
                                       (rule "qeq_literals" (formula "14") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "div_literals" (formula "14") (term "0"))
                                       (rule "eqSymm" (formula "14"))
                                       (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "17"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEqRigid" (formula "12") (term "1,1") (ifseqformula "16"))
                                       (rule "add_literals" (formula "12") (term "1"))
                                       (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "15"))
                                       (rule "qeq_literals" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "applyEqRigid" (formula "23") (term "1,0,2,1") (ifseqformula "15"))
                                       (rule "add_zero_right" (formula "23") (term "0,2,1"))
                                       (rule "applyEq" (formula "13") (term "0,2,0") (ifseqformula "15"))
                                       (rule "applyEqRigid" (formula "12") (term "0,1") (ifseqformula "15"))
                                       (rule "times_zero_2" (formula "12") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                       (rule "mul_literals" (formula "17") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "closeFalse" (formula "8"))
                                    )
                                 )
                              )
                              (branch "CUT: self.sorted_splitters = null FALSE"
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "cut_direct" (formula "27") (term "0"))
                                 (branch "CUT: self.tree = null TRUE"
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "27"))
                                    (rule "jdiv_axiom" (formula "13") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "applyEq" (formula "13") (term "1") (ifseqformula "14"))
                                    (rule "inEqSimp_subsumption6" (formula "13") (term "0,0") (ifseqformula "19"))
                                    (rule "greater_literals" (formula "13") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                    (rule "leq_literals" (formula "13") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "polyDiv_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=quotient_0"))
                                    (rule "equal_literals" (formula "13") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_homoEq" (formula "13"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,0,0,1,0"))
                                    (rule "div_literals" (formula "13") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                    (rule "add_literals" (formula "13") (term "1,0"))
                                    (rule "times_zero_1" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "26") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,1,1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "26") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,0,0,0"))
                                    (rule "times_zero_2" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0,0,0,0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "commute_or" (formula "26") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "26") (term "0,0"))
                                    (rule "commute_or_2" (formula "26") (term "0"))
                                    (rule "allLeft" (formula "27") (inst "t=j_0"))
                                    (rule "commute_or_2" (formula "27") (term "0,0"))
                                    (rule "commute_or_2" (formula "27") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "27") (term "0,0"))
                                    (rule "commute_or_2" (formula "27") (term "0"))
                                    (rule "commute_or" (formula "27") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "27") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "27") (term "0,0"))
                                    (rule "allLeft" (formula "28") (inst "t=i_0"))
                                    (rule "commute_or_2" (formula "28") (term "0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0"))
                                    (rule "commute_or" (formula "28") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0,0"))
                                    (rule "allLeft" (formula "25") (inst "t=quotient_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "20"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "25") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                    (rule "leq_literals" (formula "25") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "allLeft" (formula "26") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "20"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "26") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                    (rule "leq_literals" (formula "26") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "allLeft" (formula "27") (inst "t=quotient_1"))
                                    (rule "inEqSimp_commuteGeq" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,1,0"))
                                    (rule "qeq_literals" (formula "27") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "7"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "19"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                    (rule "leq_literals" (formula "27") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0"))
                                    (rule "qeq_literals" (formula "27") (term "0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "cut_direct" (formula "28") (term "1,0"))
                                    (branch "CUT: quotient_0 <= 0 TRUE"
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "inEqSimp_contradInEq0" (formula "15") (term "0") (ifseqformula "28"))
                                       (rule "qeq_literals" (formula "15") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "27"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "17"))
                                       (rule "inEqSimp_homoInEq1" (formula "20"))
                                       (rule "times_zero_2" (formula "20") (term "1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0"))
                                       (rule "applyEqRigid" (formula "2") (term "1,0,2,0") (ifseqformula "17"))
                                       (rule "add_zero_right" (formula "2") (term "0,2,0"))
                                       (rule "applyEqRigid" (formula "11") (term "0,2,0") (ifseqformula "17"))
                                       (rule "applyEqRigid" (formula "12") (term "1,1") (ifseqformula "17"))
                                       (rule "add_zero_right" (formula "12") (term "1"))
                                       (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "applyEq" (formula "14") (term "0,2,0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "24") (term "0,2,1") (ifseqformula "16"))
                                       (rule "applyEqRigid" (formula "12") (term "0,0,0") (ifseqformula "16"))
                                       (rule "times_zero_2" (formula "12") (term "0,0"))
                                       (rule "jdiv_axiom_inline" (formula "12") (term "0"))
                                       (rule "div_literals" (formula "12") (term "1,0"))
                                       (rule "times_zero_2" (formula "12") (term "0,0,2,0"))
                                       (rule "qeq_literals" (formula "12") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "eqSymm" (formula "12"))
                                       (rule "applyEqRigid" (formula "24") (term "1,0,2,1") (ifseqformula "15"))
                                       (rule "add_zero_right" (formula "24") (term "0,2,1"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                       (rule "qeq_literals" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "applyEqRigid" (formula "12") (term "0,1") (ifseqformula "15"))
                                       (rule "times_zero_2" (formula "12") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                       (rule "mul_literals" (formula "17") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "closeFalse" (formula "8"))
                                    )
                                    (branch "CUT: quotient_0 <= 0 FALSE"
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "inEqSimp_leqRight" (formula "35"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "19") (term "0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "16"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                                 (branch "CUT: self.tree = null FALSE"
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "jdiv_axiom" (formula "13") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "applyEq" (formula "13") (term "1") (ifseqformula "14"))
                                    (rule "inEqSimp_subsumption6" (formula "13") (term "0,0") (ifseqformula "19"))
                                    (rule "times_zero_1" (formula "13") (term "1,1,0,0,0"))
                                    (rule "greater_literals" (formula "13") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "leq_literals" (formula "13") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "polyDiv_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=quotient_0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "13") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,0,0"))
                                    (rule "div_literals" (formula "13") (term "0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "26") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,1,1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "26") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,0,0,0"))
                                    (rule "times_zero_2" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0,0,0,0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "commute_or" (formula "26") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "26") (term "0,0"))
                                    (rule "commute_or_2" (formula "26") (term "0"))
                                    (rule "allLeft" (formula "27") (inst "t=j_0"))
                                    (rule "commute_or_2" (formula "27") (term "0,0"))
                                    (rule "commute_or_2" (formula "27") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "27") (term "0,0"))
                                    (rule "commute_or_2" (formula "27") (term "0"))
                                    (rule "commute_or" (formula "27") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "27") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "27") (term "0,0"))
                                    (rule "allLeft" (formula "28") (inst "t=i_0"))
                                    (rule "commute_or_2" (formula "28") (term "0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0"))
                                    (rule "commute_or" (formula "28") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0,0"))
                                    (rule "allLeft" (formula "25") (inst "t=quotient_1"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,1,0"))
                                    (rule "qeq_literals" (formula "25") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "7"))
                                    (rule "inEqSimp_subsumption0" (formula "25") (term "1") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq0" (formula "25") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                    (rule "qeq_literals" (formula "25") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "allLeft" (formula "25") (inst "t=quotient_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "20"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "25") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                    (rule "leq_literals" (formula "25") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "allLeft" (formula "26") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "26") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "20"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                    (rule "leq_literals" (formula "26") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "cut_direct" (formula "28") (term "1,0"))
                                    (branch "CUT: quotient_0 <= 0 TRUE"
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "inEqSimp_contradInEq0" (formula "15") (term "0") (ifseqformula "28"))
                                       (rule "qeq_literals" (formula "15") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "27"))
                                       (rule "applyEq" (formula "26") (term "1,0,2,1") (ifseqformula "17"))
                                       (rule "add_zero_right" (formula "26") (term "0,2,1"))
                                       (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "17"))
                                       (rule "times_zero_2" (formula "13") (term "0,0"))
                                       (rule "jdiv_axiom_inline" (formula "13") (term "0"))
                                       (rule "qeq_literals" (formula "13") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "div_literals" (formula "13") (term "0"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "applyEq" (formula "14") (term "0,2,0") (ifseqformula "16"))
                                       (rule "applyEqRigid" (formula "11") (term "0,2,0") (ifseqformula "16"))
                                       (rule "applyEqRigid" (formula "12") (term "1,1") (ifseqformula "16"))
                                       (rule "add_zero_right" (formula "12") (term "1"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "15"))
                                       (rule "inEqSimp_homoInEq1" (formula "18"))
                                       (rule "times_zero_2" (formula "18") (term "1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                       (rule "qeq_literals" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "15"))
                                       (rule "leq_literals" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "applyEqRigid" (formula "22") (term "0,2,1") (ifseqformula "15"))
                                       (rule "applyEq" (formula "2") (term "1,0,2,0") (ifseqformula "15"))
                                       (rule "add_zero_right" (formula "2") (term "0,2,0"))
                                       (rule "applyEqRigid" (formula "12") (term "0,1") (ifseqformula "15"))
                                       (rule "times_zero_2" (formula "12") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                       (rule "mul_literals" (formula "17") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "closeFalse" (formula "8"))
                                    )
                                    (branch "CUT: quotient_0 <= 0 FALSE"
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "inEqSimp_leqRight" (formula "35"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "19") (term "0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "16"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: classJ_0 <= -2 + l_0 * 2 FALSE"
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "inEqSimp_leqRight" (formula "35"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "26"))
                              (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0"))
                              (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,0"))
                              (rule "times_zero_1" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "15"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                              (rule "applyEqRigid" (formula "18") (term "0,0") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "19") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "19") (term "0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0"))
                              (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "16"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "25"))
                              (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                              (rule "add_literals" (formula "25") (term "1,0"))
                              (rule "times_zero_1" (formula "25") (term "0"))
                              (rule "qeq_literals" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                              (rule "mul_literals" (formula "17") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                              (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "20"))
                              (rule "greater_literals" (formula "17") (term "0,0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "mul_literals" (formula "17") (term "1,0"))
                              (rule "leq_literals" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "inEqSimp_subsumption6" (formula "15") (ifseqformula "14"))
                              (rule "greater_literals" (formula "15") (term "0,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0"))
                              (rule "qeq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_subsumption6" (formula "22") (ifseqformula "20"))
                              (rule "greater_literals" (formula "22") (term "0,0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                              (rule "add_literals" (formula "22") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0"))
                              (rule "qeq_literals" (formula "22") (term "0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "inEqSimp_subsumption6" (formula "17") (term "0") (ifseqformula "18"))
                              (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                              (rule "greater_literals" (formula "17") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "leq_literals" (formula "17") (term "0,0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)"))
                              (rule "leq_literals" (formula "15") (term "0,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "neg_literal" (formula "15") (term "0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0"))
                              (rule "qeq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "polyDiv_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=l_0"))
                              (rule "equal_literals" (formula "13") (term "0,0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0,0"))
                              (rule "div_literals" (formula "13") (term "0,0"))
                              (rule "polySimp_homoEq" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0"))
                              (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq1" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0"))
                              (rule "add_literals" (formula "18") (term "0,0"))
                              (rule "add_zero_left" (formula "18") (term "0"))
                              (rule "applyEq" (formula "20") (term "0") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq1" (formula "20"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0"))
                              (rule "applyEqRigid" (formula "4") (term "1,0,0,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "16") (term "0,1,0,0") (ifseqformula "13"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0"))
                              (rule "applyEq" (formula "26") (term "1,0,0,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq0" (formula "15"))
                              (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                              (rule "add_literals" (formula "15") (term "1,0"))
                              (rule "times_zero_1" (formula "15") (term "0"))
                              (rule "qeq_literals" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "applyEq" (formula "26") (term "1,1,0,0,0,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "26") (term "1,1,0,0,0,0,0") (ifseqformula "13"))
                              (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq1" (formula "14"))
                              (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                              (rule "add_literals" (formula "14") (term "1,0"))
                              (rule "times_zero_1" (formula "14") (term "0"))
                              (rule "leq_literals" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "applyEqRigid" (formula "1") (term "0,1,1") (ifseqformula "13"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "1") (term "1"))
                              (rule "add_literals" (formula "1") (term "0,1"))
                              (rule "applyEq" (formula "27") (term "1") (ifseqformula "13"))
                              (rule "applyEq" (formula "28") (term "0,1") (ifseqformula "13"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1"))
                              (rule "mul_literals" (formula "28") (term "0,1"))
                              (rule "inEqSimp_invertInEq0" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                              (rule "times_zero_2" (formula "16") (term "1"))
                              (rule "polySimp_elimOne" (formula "16") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "15"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                        (branch "CUT: quotient_1 >= 1 FALSE"
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "inEqSimp_geqRight" (formula "33"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "1"))
                           (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "21"))
                           (rule "add_zero_right" (formula "23") (term "1"))
                           (rule "applyEqRigid" (formula "25") (term "0,1,1") (ifseqformula "21"))
                           (rule "times_zero_2" (formula "25") (term "1,1"))
                           (rule "add_zero_right" (formula "25") (term "1"))
                           (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "21"))
                           (rule "applyEqRigid" (formula "24") (term "1,1") (ifseqformula "21"))
                           (rule "add_zero_right" (formula "24") (term "1"))
                           (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "21"))
                           (rule "times_zero_2" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "jdiv_axiom_inline" (formula "5") (term "0"))
                           (rule "qeq_literals" (formula "5") (term "0,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "div_literals" (formula "5") (term "0"))
                           (rule "eqSymm" (formula "5"))
                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "20"))
                           (rule "leq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "applyEqRigid" (formula "2") (term "1,1,1,0,0") (ifseqformula "19"))
                           (rule "add_zero_right" (formula "2") (term "1,1,0,0"))
                           (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "19"))
                           (rule "times_zero_2" (formula "3") (term "1,1"))
                           (rule "add_zero_right" (formula "3") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "15") (term "0") (ifseqformula "22"))
                           (rule "leq_literals" (formula "15") (term "0,0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "22"))
                           (rule "leq_literals" (formula "12") (term "0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "20"))
                           (rule "leq_literals" (formula "17") (term "0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "18"))
                           (rule "leq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                           (rule "mul_literals" (formula "19") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0"))
                           (rule "add_literals" (formula "19") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                           (rule "mul_literals" (formula "19") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "19") (ifseqformula "17"))
                           (rule "greater_literals" (formula "19") (term "0,0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "mul_literals" (formula "19") (term "1,0"))
                           (rule "leq_literals" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "11"))
                           (rule "mul_literals" (formula "19") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0"))
                           (rule "add_literals" (formula "19") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                           (rule "mul_literals" (formula "19") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "19") (ifseqformula "18"))
                           (rule "greater_literals" (formula "19") (term "0,0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "mul_literals" (formula "19") (term "1,0"))
                           (rule "leq_literals" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "commute_or" (formula "2") (term "0,0"))
                           (rule "cut_direct" (formula "15") (term "0"))
                           (branch "CUT: classJ_0 <= -2 + l_0 * 2 TRUE"
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_contradEq3" (formula "13") (term "0") (ifseqformula "15"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0,0"))
                              (rule "qeq_literals" (formula "13") (term "0,0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "13"))
                              (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq1" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "10") (term "0"))
                              (rule "add_literals" (formula "10") (term "1,0"))
                              (rule "times_zero_1" (formula "10") (term "0"))
                              (rule "leq_literals" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "applyEq" (formula "20") (term "0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq0" (formula "20"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "12"))
                              (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq0" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "10") (term "0"))
                              (rule "add_literals" (formula "10") (term "1,1,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0"))
                              (rule "add_zero_right" (formula "10") (term "0"))
                              (rule "qeq_literals" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq0" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1"))
                              (rule "polySimp_rightDist" (formula "19") (term "1"))
                              (rule "mul_literals" (formula "19") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                              (rule "mul_literals" (formula "13") (term "0,1"))
                              (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "17"))
                              (rule "mul_literals" (formula "18") (term "1,1,0"))
                              (rule "greater_literals" (formula "18") (term "0,0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "leq_literals" (formula "18") (term "0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0"))
                              (rule "qeq_literals" (formula "18") (term "0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "9"))
                              (rule "greater_literals" (formula "13") (term "0,0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "1,0,0"))
                              (rule "times_zero_1" (formula "13") (term "0,0"))
                              (rule "qeq_literals" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "polyDiv_pullOut" (formula "8") (term "0") (inst "polyDivCoeff=quotient_0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,2,0"))
                              (rule "equal_literals" (formula "8") (term "0,0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,0"))
                              (rule "add_literals" (formula "8") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "8") (term "0,0,0"))
                              (rule "div_literals" (formula "8") (term "0,0"))
                              (rule "add_zero_left" (formula "8") (term "0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "cut_direct" (formula "4") (term "0"))
                              (branch "CUT: self.sorted_splitters = null TRUE"
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "applyEq" (formula "20") (term "1,0,1,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "20") (term "1,1,1,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "4"))
                                 (rule "cut_direct" (formula "21") (term "0"))
                                 (branch "CUT: self.tree = null TRUE"
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "21"))
                                    (rule "jdiv_axiom" (formula "9") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "9"))
                                    (rule "applyEq" (formula "9") (term "1") (ifseqformula "10"))
                                    (rule "inEqSimp_subsumption6" (formula "9") (term "0,0") (ifseqformula "16"))
                                    (rule "greater_literals" (formula "9") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                    (rule "leq_literals" (formula "9") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "polyDiv_pullOut" (formula "9") (term "0") (inst "polyDivCoeff=quotient_0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "9") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0"))
                                    (rule "add_literals" (formula "9") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "0,0,0"))
                                    (rule "div_literals" (formula "9") (term "0,0"))
                                    (rule "add_zero_left" (formula "9") (term "0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "allLeft" (formula "20") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "20") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "add_zero_right" (formula "20") (term "1,1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "0,0,0,0"))
                                    (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "20") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "commute_or" (formula "20") (term "0,0"))
                                    (rule "allLeft" (formula "2") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                                    (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                    (rule "times_zero_2" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "2") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "16"))
                                    (rule "qeq_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: self.tree = null FALSE"
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "jdiv_axiom" (formula "9") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "9"))
                                    (rule "applyEq" (formula "9") (term "1") (ifseqformula "10"))
                                    (rule "inEqSimp_subsumption6" (formula "9") (term "0,0") (ifseqformula "16"))
                                    (rule "greater_literals" (formula "9") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                    (rule "leq_literals" (formula "9") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "polyDiv_pullOut" (formula "9") (term "0") (inst "polyDivCoeff=quotient_0"))
                                    (rule "equal_literals" (formula "9") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                                    (rule "polySimp_homoEq" (formula "9"))
                                    (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "9") (term "1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "9") (term "0,0,0,1,0"))
                                    (rule "div_literals" (formula "9") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "9") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                                    (rule "add_literals" (formula "9") (term "1,0"))
                                    (rule "times_zero_1" (formula "9") (term "0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "allLeft" (formula "20") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "20") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "add_zero_right" (formula "20") (term "1,1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "0,0,0,0"))
                                    (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "20") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "commute_or" (formula "20") (term "0,0"))
                                    (rule "allLeft" (formula "2") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                                    (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "16"))
                                    (rule "qeq_literals" (formula "2") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch "CUT: self.sorted_splitters = null FALSE"
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "cut_direct" (formula "21") (term "0"))
                                 (branch "CUT: self.tree = null TRUE"
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "21"))
                                    (rule "allLeft" (formula "20") (inst "t=Z(0(#))"))
                                    (rule "add_zero_right" (formula "20") (term "1,1,0,0"))
                                    (rule "leq_literals" (formula "20") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "0,0,0,0"))
                                    (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "20") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "commute_or" (formula "20") (term "0,0"))
                                    (rule "allLeft" (formula "20") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "20") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,0,0"))
                                    (rule "times_zero_2" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0,0,0,0") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "20") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0") (ifseqformula "15"))
                                    (rule "qeq_literals" (formula "20") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "jdiv_axiom" (formula "9") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "9"))
                                    (rule "applyEqRigid" (formula "9") (term "1") (ifseqformula "10"))
                                    (rule "inEqSimp_subsumption6" (formula "9") (term "0,0") (ifseqformula "16"))
                                    (rule "greater_literals" (formula "9") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                    (rule "leq_literals" (formula "9") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "polyDiv_pullOut" (formula "9") (term "0") (inst "polyDivCoeff=quotient_0"))
                                    (rule "equal_literals" (formula "9") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0"))
                                    (rule "add_literals" (formula "9") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "0,0,0"))
                                    (rule "div_literals" (formula "9") (term "0,0"))
                                    (rule "add_zero_left" (formula "9") (term "0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "allLeft" (formula "21") (inst "t=j_0"))
                                    (rule "commute_or_2" (formula "21") (term "0,0"))
                                    (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "21") (term "0,0"))
                                    (rule "commute_or_2" (formula "21") (term "0"))
                                    (rule "commute_or" (formula "21") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "21") (term "0,0"))
                                    (rule "allLeft" (formula "2") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                                    (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                    (rule "times_zero_2" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "2") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "16"))
                                    (rule "qeq_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: self.tree = null FALSE"
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "allLeft" (formula "20") (inst "t=Z(0(#))"))
                                    (rule "add_zero_right" (formula "20") (term "1,1,0,0"))
                                    (rule "leq_literals" (formula "20") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "0,0,0,0"))
                                    (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "20") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "commute_or" (formula "20") (term "0,0"))
                                    (rule "allLeft" (formula "20") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "20") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,0,0"))
                                    (rule "times_zero_2" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0,0") (ifseqformula "15"))
                                    (rule "qeq_literals" (formula "20") (term "0,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "20") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "jdiv_axiom" (formula "9") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "9"))
                                    (rule "applyEq" (formula "9") (term "1") (ifseqformula "10"))
                                    (rule "inEqSimp_subsumption6" (formula "9") (term "0,0") (ifseqformula "16"))
                                    (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                    (rule "greater_literals" (formula "9") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "leq_literals" (formula "9") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "polyDiv_pullOut" (formula "9") (term "0") (inst "polyDivCoeff=quotient_0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "9") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "polySimp_homoEq" (formula "9"))
                                    (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "9") (term "1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "9") (term "0,0,0,1,0"))
                                    (rule "div_literals" (formula "9") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "9") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                                    (rule "add_literals" (formula "9") (term "1,0"))
                                    (rule "times_zero_1" (formula "9") (term "0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "allLeft" (formula "21") (inst "t=j_0"))
                                    (rule "commute_or_2" (formula "21") (term "0,0"))
                                    (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "21") (term "0,0"))
                                    (rule "commute_or_2" (formula "21") (term "0"))
                                    (rule "commute_or" (formula "21") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "21") (term "0,0"))
                                    (rule "allLeft" (formula "2") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                                    (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                    (rule "times_zero_2" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "16"))
                                    (rule "qeq_literals" (formula "2") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "CUT: classJ_0 <= -2 + l_0 * 2 FALSE"
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_leqRight" (formula "28"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "20"))
                              (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "add_literals" (formula "19") (term "0,0"))
                              (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "20"))
                              (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                              (rule "add_literals" (formula "20") (term "1,0"))
                              (rule "times_zero_1" (formula "20") (term "0"))
                              (rule "qeq_literals" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,0"))
                              (rule "times_zero_1" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0"))
                              (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0"))
                              (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                              (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                              (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "16"))
                              (rule "greater_literals" (formula "18") (term "0,0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "mul_literals" (formula "18") (term "1,0"))
                              (rule "leq_literals" (formula "18") (term "0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "10"))
                              (rule "greater_literals" (formula "11") (term "0,0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0"))
                              (rule "qeq_literals" (formula "11") (term "0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                              (rule "neg_literal" (formula "11") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "11") (term "0,0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0"))
                              (rule "qeq_literals" (formula "11") (term "0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "polyDiv_pullOut" (formula "9") (term "0") (inst "polyDivCoeff=l_0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,2,0"))
                              (rule "equal_literals" (formula "9") (term "0,0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "polySimp_homoEq" (formula "9"))
                              (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0,0,1,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0,0,1,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0,0,1,0"))
                              (rule "div_literals" (formula "9") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                              (rule "polySimp_elimOne" (formula "9") (term "0"))
                              (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "10"))
                              (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                              (rule "add_literals" (formula "10") (term "1,0"))
                              (rule "times_zero_1" (formula "10") (term "0"))
                              (rule "leq_literals" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                              (rule "add_literals" (formula "14") (term "0,0"))
                              (rule "applyEqRigid" (formula "11") (term "0,1,0,0") (ifseqformula "9"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0"))
                              (rule "applyEqRigid" (formula "20") (term "1,1,0,0,0,0") (ifseqformula "9"))
                              (rule "applyEqRigid" (formula "20") (term "1,1,0,0,0,0,0") (ifseqformula "9"))
                              (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq0" (formula "10"))
                              (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                              (rule "add_literals" (formula "10") (term "1,0"))
                              (rule "times_zero_1" (formula "10") (term "0"))
                              (rule "qeq_literals" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "9"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1"))
                              (rule "polySimp_rightDist" (formula "22") (term "1"))
                              (rule "mul_literals" (formula "22") (term "0,1"))
                              (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "9"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "1") (term "1"))
                              (rule "add_literals" (formula "1") (term "0,1"))
                              (rule "applyEq" (formula "21") (term "1") (ifseqformula "9"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0"))
                              (rule "cut_direct" (formula "5") (term "0"))
                              (branch "CUT: self.sorted_splitters = null TRUE"
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "applyEq" (formula "18") (term "1,0,1,0,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "18") (term "1,1,1,0,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "3") (term "1,0,1,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "5"))
                                 (rule "cut_direct" (formula "19") (term "0"))
                                 (branch "CUT: self.tree = null TRUE"
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "19"))
                                    (rule "jdiv_axiom" (formula "10") (term "0"))
                                    (rule "eqSymm" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,2,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0"))
                                    (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "11"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0"))
                                    (rule "inEqSimp_subsumption6" (formula "10") (term "0,0") (ifseqformula "14"))
                                    (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                                    (rule "greater_literals" (formula "10") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "leq_literals" (formula "10") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=quotient_0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "10") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "polySimp_homoEq" (formula "10"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0,0,1,0"))
                                    (rule "div_literals" (formula "10") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                                    (rule "add_literals" (formula "10") (term "1,0"))
                                    (rule "times_zero_1" (formula "10") (term "0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "allLeft" (formula "3") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,1,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,1,0"))
                                    (rule "leq_literals" (formula "3") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_invertInEq1" (formula "3") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                    (rule "times_zero_2" (formula "3") (term "1,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "3") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                                 (branch "CUT: self.tree = null FALSE"
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "jdiv_axiom" (formula "10") (term "0"))
                                    (rule "eqSymm" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,2,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0"))
                                    (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "11"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0"))
                                    (rule "inEqSimp_subsumption6" (formula "10") (term "0,0") (ifseqformula "14"))
                                    (rule "greater_literals" (formula "10") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                    (rule "leq_literals" (formula "10") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=quotient_0"))
                                    (rule "equal_literals" (formula "10") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0,0"))
                                    (rule "div_literals" (formula "10") (term "0,0"))
                                    (rule "add_zero_left" (formula "10") (term "0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,1,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "18") (term "1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_invertInEq1" (formula "18") (term "0,0,0,0"))
                                    (rule "times_zero_2" (formula "18") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0,0,0") (ifseqformula "13"))
                                    (rule "qeq_literals" (formula "18") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "commute_or" (formula "18") (term "0,0"))
                                    (rule "allLeft" (formula "19") (inst "t=Z(0(#))"))
                                    (rule "add_zero_right" (formula "19") (term "1,1,0,0"))
                                    (rule "leq_literals" (formula "19") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0,0,0"))
                                    (rule "times_zero_2" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                    (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "6"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0,0,0") (ifseqformula "13"))
                                    (rule "qeq_literals" (formula "19") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "commute_or" (formula "19") (term "0,0"))
                                    (rule "allLeft" (formula "3") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,1,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,1,0"))
                                    (rule "leq_literals" (formula "3") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "3") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                    (rule "times_zero_2" (formula "3") (term "1,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "3") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch "CUT: self.sorted_splitters = null FALSE"
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "cut_direct" (formula "19") (term "0"))
                                 (branch "CUT: self.tree = null TRUE"
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "19"))
                                    (rule "jdiv_axiom" (formula "10") (term "0"))
                                    (rule "eqSymm" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,2,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0"))
                                    (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "11"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0"))
                                    (rule "inEqSimp_subsumption6" (formula "10") (term "0,0") (ifseqformula "14"))
                                    (rule "greater_literals" (formula "10") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                    (rule "leq_literals" (formula "10") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=quotient_0"))
                                    (rule "equal_literals" (formula "10") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0,0"))
                                    (rule "div_literals" (formula "10") (term "0,0"))
                                    (rule "add_zero_left" (formula "10") (term "0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "allLeft" (formula "3") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "3") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "0"))
                                    (rule "times_zero_2" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "1,0,1"))
                                    (rule "times_zero_1" (formula "3") (term "0,1"))
                                    (rule "leq_literals" (formula "3") (term "1"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "allLeft" (formula "3") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,1,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,1,0"))
                                    (rule "leq_literals" (formula "3") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "3") (term "0"))
                                    (rule "times_zero_2" (formula "3") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "3") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                                 (branch "CUT: self.tree = null FALSE"
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "jdiv_axiom" (formula "10") (term "0"))
                                    (rule "eqSymm" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0,2,0"))
                                    (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "11"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0"))
                                    (rule "inEqSimp_subsumption6" (formula "10") (term "0,0") (ifseqformula "14"))
                                    (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                                    (rule "greater_literals" (formula "10") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "leq_literals" (formula "10") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=quotient_0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "10") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0,0"))
                                    (rule "div_literals" (formula "10") (term "0,0"))
                                    (rule "add_zero_left" (formula "10") (term "0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "allLeft" (formula "3") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "3") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "0"))
                                    (rule "times_zero_2" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "1,0,1"))
                                    (rule "times_zero_1" (formula "3") (term "0,1"))
                                    (rule "leq_literals" (formula "3") (term "1"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "allLeft" (formula "3") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,1,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,1,0"))
                                    (rule "leq_literals" (formula "3") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_invertInEq1" (formula "3") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                    (rule "times_zero_2" (formula "3") (term "1,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "3") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                           )
                        )
                     )
                     (branch "classJ_0 >= 0 FALSE"
                        (rule "eqSymm" (formula "14"))
                        (rule "inEqSimp_geqRight" (formula "32"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "15"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "applyEqRigid" (formula "10") (term "0,2,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "18") (term "0,2,0,1") (ifseqformula "15"))
                        (rule "applyEqRigid" (formula "17") (term "1,0,2,0,1") (ifseqformula "15"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,2,0,1"))
                        (rule "applyEq" (formula "16") (term "0,0,1") (ifseqformula "15"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                        (rule "polySimp_homoEq" (formula "16") (term "1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "16") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1"))
                        (rule "add_literals" (formula "16") (term "1,1,0,1"))
                        (rule "polySimp_sepNegMonomial" (formula "16") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "17") (term "0,0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                        (rule "polySimp_mulAssoc" (formula "13") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "13") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                        (rule "inEqSimp_contradInEq5" (formula "13") (ifseqformula "20"))
                        (rule "times_zero_1" (formula "13") (term "1,1,0"))
                        (rule "greater_literals" (formula "13") (term "0,0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "qeq_literals" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "closeFalse" (formula "13"))
                     )
                  )
                  (branch " classJ_0 = -1 + l_0 * 2 | jdiv(classJ_0, 2) * 2 = classJ_0 FALSE"
                     (rule "andLeft" (formula "15"))
                     (rule "orRight" (formula "31"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "15"))
                     (rule "inEqSimp_strengthen0" (formula "23") (ifseqformula "31"))
                     (rule "polySimp_addAssoc" (formula "23") (term "1"))
                     (rule "add_literals" (formula "23") (term "0,1"))
                     (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "23"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                     (rule "add_literals" (formula "31") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "9"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,0"))
                     (rule "times_zero_1" (formula "1") (term "0"))
                     (rule "qeq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                     (rule "inEqSimp_homoInEq1" (formula "9"))
                     (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                     (rule "add_literals" (formula "9") (term "1,0"))
                     (rule "times_zero_1" (formula "9") (term "0"))
                     (rule "leq_literals" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "applyEqRigid" (formula "15") (term "1,1,1") (ifseqformula "8"))
                     (rule "applyEq" (formula "14") (term "1") (ifseqformula "8"))
                     (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                     (rule "mul_literals" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1"))
                     (rule "polySimp_rightDist" (formula "21") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                     (rule "mul_literals" (formula "21") (term "0,1"))
                     (rule "inEqSimp_subsumption6" (formula "21") (ifseqformula "19"))
                     (rule "greater_literals" (formula "21") (term "0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "21") (term "0,0"))
                     (rule "add_literals" (formula "21") (term "1,0,0"))
                     (rule "times_zero_1" (formula "21") (term "0,0"))
                     (rule "qeq_literals" (formula "21") (term "0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "22"))
                     (rule "polySimp_mulAssoc" (formula "11") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                     (rule "mul_literals" (formula "11") (term "0,1"))
                     (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "10"))
                     (rule "greater_literals" (formula "11") (term "0,0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "11") (term "0,0"))
                     (rule "add_literals" (formula "11") (term "1,0,0"))
                     (rule "times_zero_1" (formula "11") (term "0,0"))
                     (rule "qeq_literals" (formula "11") (term "0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "ifthenelse_split" (formula "13") (term "0"))
                     (branch "classJ_0 >= 0 TRUE"
                        (rule "eqSymm" (formula "14"))
                        (rule "applyEqRigid" (formula "31") (term "0,0") (ifseqformula "14"))
                        (rule "eqSymm" (formula "31"))
                        (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "14"))
                        (rule "applyEqRigid" (formula "15") (term "1,0,2,0,1") (ifseqformula "13"))
                        (rule "applyEq" (formula "14") (term "0,2,0") (ifseqformula "13"))
                        (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "13"))
                        (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "30"))
                        (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "10"))
                        (rule "polySimp_mulAssoc" (formula "30") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                        (rule "add_literals" (formula "30") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0"))
                        (rule "leq_literals" (formula "30") (term "0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "false_right" (formula "30"))
                        (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "11"))
                        (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq0" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0"))
                        (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq1" (formula "11"))
                        (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                        (rule "add_literals" (formula "11") (term "1,0"))
                        (rule "times_zero_1" (formula "11") (term "0"))
                        (rule "leq_literals" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq0" (formula "11"))
                        (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                        (rule "add_literals" (formula "11") (term "1,0"))
                        (rule "times_zero_1" (formula "11") (term "0"))
                        (rule "qeq_literals" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "10"))
                        (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "10"))
                        (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "10"))
                        (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq1" (formula "20"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                        (rule "mul_literals" (formula "21") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                        (rule "mul_literals" (formula "11") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                        (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "19"))
                        (rule "greater_literals" (formula "20") (term "0,0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0"))
                        (rule "qeq_literals" (formula "20") (term "0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "16"))
                        (rule "times_zero_1" (formula "11") (term "1,1,0"))
                        (rule "greater_literals" (formula "11") (term "0,0"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "leq_literals" (formula "11") (term "0"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(2(#)), quotient_0)"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "19") (term "0,0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                        (rule "add_literals" (formula "19") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                        (rule "add_literals" (formula "19") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0"))
                        (rule "leq_literals" (formula "19") (term "0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                        (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                        (rule "add_literals" (formula "9") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0"))
                        (rule "add_zero_right" (formula "9") (term "0,0"))
                        (rule "qeq_literals" (formula "9") (term "0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "polyDiv_pullOut" (formula "8") (term "0") (inst "polyDivCoeff=quotient_0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,2,0"))
                        (rule "equal_literals" (formula "8") (term "0,0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "polySimp_homoEq" (formula "8"))
                        (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0,1,0"))
                        (rule "add_literals" (formula "8") (term "1,1,0,0,0,1,0"))
                        (rule "times_zero_1" (formula "8") (term "1,0,0,0,1,0"))
                        (rule "add_zero_right" (formula "8") (term "0,0,0,1,0"))
                        (rule "div_literals" (formula "8") (term "0,0,1,0"))
                        (rule "add_zero_left" (formula "8") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                        (rule "add_literals" (formula "8") (term "1,0"))
                        (rule "times_zero_1" (formula "8") (term "0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "onlyCreatedObjectsAreReferencedFinal" (formula "4") (term "1,0") (ifseqformula "18") (ifseqformula "19"))
                        (rule "onlyCreatedObjectsAreReferencedFinal" (formula "24") (term "0,0") (ifseqformula "19") (ifseqformula "20"))
                        (rule "jdiv_axiom" (formula "3") (term "0"))
                        (rule "eqSymm" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0,0,2,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0,2,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,0,2,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0"))
                        (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0"))
                        (rule "mul_literals" (formula "3") (term "1,0,0"))
                        (rule "inEqSimp_subsumption6" (formula "3") (term "0,0") (ifseqformula "16"))
                        (rule "greater_literals" (formula "3") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                        (rule "leq_literals" (formula "3") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "polyDiv_pullOut" (formula "3") (term "0") (inst "polyDivCoeff=quotient_1"))
                        (rule "equal_literals" (formula "3") (term "0,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,0"))
                        (rule "div_literals" (formula "3") (term "0,0"))
                        (rule "add_zero_left" (formula "3") (term "0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "cut_direct" (formula "6") (term "0"))
                        (branch "CUT: quotient_1 >= 1 TRUE"
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "6"))
                           (rule "leq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "jdiv_axiom" (formula "11") (term "0"))
                           (rule "eqSymm" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0,0,2,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "0,0,2,0"))
                           (rule "mul_literals" (formula "11") (term "0,0,0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0"))
                           (rule "applyEq" (formula "11") (term "1") (ifseqformula "12"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0"))
                           (rule "inEqSimp_subsumption6" (formula "11") (term "0,0") (ifseqformula "16"))
                           (rule "greater_literals" (formula "11") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                           (rule "leq_literals" (formula "11") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "polyDiv_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=quotient_0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0"))
                           (rule "equal_literals" (formula "11") (term "0,0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0"))
                           (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "11") (term "0,0,0"))
                           (rule "div_literals" (formula "11") (term "0,0"))
                           (rule "add_zero_left" (formula "11") (term "0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "cut_direct" (formula "13") (term "0"))
                           (branch "CUT: quotient_0 >= 1 TRUE"
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "13"))
                              (rule "leq_literals" (formula "16") (term "0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "allLeft" (formula "23") (inst "t=quotient_1"))
                              (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                              (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "5"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0") (ifseqformula "16"))
                              (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0,0") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "23") (term "0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "23"))
                              (rule "allLeft" (formula "1") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                              (rule "inEqSimp_commuteGeq" (formula "1") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "15"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "leq_literals" (formula "1") (term "0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "19"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "leq_literals" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "1"))
                              (rule "andLeft" (formula "18"))
                              (rule "inEqSimp_homoInEq1" (formula "18"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                              (rule "add_literals" (formula "18") (term "1,1,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0"))
                              (rule "add_zero_right" (formula "18") (term "0"))
                              (rule "leq_literals" (formula "18"))
                              (rule "closeFalse" (formula "18"))
                           )
                           (branch "CUT: quotient_0 >= 1 FALSE"
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "inEqSimp_geqRight" (formula "26"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "applyEqRigid" (formula "18") (term "1,1") (ifseqformula "15"))
                              (rule "add_zero_right" (formula "18") (term "1"))
                              (rule "applyEq" (formula "13") (term "0,2,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "15"))
                              (rule "times_zero_2" (formula "12") (term "1,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0"))
                              (rule "jdiv_axiom_inline" (formula "12") (term "0"))
                              (rule "qeq_literals" (formula "12") (term "0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "div_literals" (formula "12") (term "0"))
                              (rule "eqSymm" (formula "12"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "14"))
                              (rule "leq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq1" (formula "15"))
                              (rule "times_zero_2" (formula "15") (term "1,0"))
                              (rule "add_zero_right" (formula "15") (term "0"))
                              (rule "applyEq" (formula "10") (term "0,1,1") (ifseqformula "13"))
                              (rule "times_zero_2" (formula "10") (term "1,1"))
                              (rule "add_zero_right" (formula "10") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                              (rule "mul_literals" (formula "15") (term "1"))
                              (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "closeFalse" (formula "6"))
                           )
                        )
                        (branch "CUT: quotient_1 >= 1 FALSE"
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_geqRight" (formula "26"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "1"))
                           (rule "applyEq" (formula "2") (term "1,1,1,0,0") (ifseqformula "15"))
                           (rule "add_zero_right" (formula "2") (term "1,1,0,0"))
                           (rule "applyEq" (formula "6") (term "0,2,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "15"))
                           (rule "add_zero_right" (formula "18") (term "1"))
                           (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "15"))
                           (rule "mul_literals" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "jdiv_axiom_inline" (formula "4") (term "0"))
                           (rule "div_literals" (formula "4") (term "1,0"))
                           (rule "mul_literals" (formula "4") (term "0,0,2,0"))
                           (rule "qeq_literals" (formula "4") (term "0,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "14"))
                           (rule "leq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "13"))
                           (rule "add_zero_right" (formula "15") (term "1"))
                           (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "13"))
                           (rule "times_zero_2" (formula "2") (term "1,1"))
                           (rule "add_zero_right" (formula "2") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "15"))
                           (rule "leq_literals" (formula "12") (term "0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "13"))
                           (rule "leq_literals" (formula "11") (term "0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "commute_or" (formula "1") (term "0,0"))
                           (rule "jdiv_axiom" (formula "8") (term "0"))
                           (rule "eqSymm" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,0,2,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,2,0"))
                           (rule "mul_literals" (formula "8") (term "0,0,0,2,0"))
                           (rule "applyEq" (formula "8") (term "1") (ifseqformula "9"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0"))
                           (rule "mul_literals" (formula "8") (term "1,0,0"))
                           (rule "inEqSimp_subsumption6" (formula "8") (term "0,0") (ifseqformula "14"))
                           (rule "greater_literals" (formula "8") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                           (rule "leq_literals" (formula "8") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "polyDiv_pullOut" (formula "8") (term "0") (inst "polyDivCoeff=quotient_0"))
                           (rule "equal_literals" (formula "8") (term "0,0"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                           (rule "polySimp_homoEq" (formula "8"))
                           (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0,0,1,0"))
                           (rule "div_literals" (formula "8") (term "0,0,1,0"))
                           (rule "add_zero_left" (formula "8") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "1,0"))
                           (rule "times_zero_1" (formula "8") (term "0"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "allLeft" (formula "1") (inst "t=add(Z(neglit(1(#))), quotient_0)"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                           (rule "times_zero_2" (formula "1") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "15"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "14") (term "0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "closeFalse" (formula "14"))
                        )
                     )
                     (branch "classJ_0 >= 0 FALSE"
                        (rule "eqSymm" (formula "13"))
                        (rule "inEqSimp_geqRight" (formula "30"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "applyEq" (formula "16") (term "1,0,2,0,1") (ifseqformula "14"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,2,0,1"))
                        (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "14"))
                        (rule "inEqSimp_homoInEq1" (formula "16") (term "0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "14"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "14"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0"))
                        (rule "polySimp_rightDist" (formula "31") (term "0"))
                        (rule "polySimp_homoEq" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0"))
                        (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                        (rule "add_literals" (formula "31") (term "1,1,0"))
                        (rule "applyEqRigid" (formula "15") (term "0,2,0") (ifseqformula "14"))
                        (rule "polySimp_sepNegMonomial" (formula "31"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                        (rule "polySimp_elimOne" (formula "31") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_strengthen1" (formula "12") (ifseqformula "31"))
                        (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "12"))
                        (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                        (rule "add_literals" (formula "31") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0"))
                        (rule "leq_literals" (formula "31") (term "0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "false_right" (formula "31"))
                        (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "13"))
                        (rule "applyEqRigid" (formula "16") (term "1,0,2,0") (ifseqformula "12"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,2,0"))
                        (rule "polySimp_addComm0" (formula "16") (term "0,0,2,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,2,0"))
                        (rule "add_literals" (formula "16") (term "1,1,0,2,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,0,2,0"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "add_zero_left" (formula "2") (term "0,0"))
                        (rule "applyEqRigid" (formula "17") (term "1,0,2,0,1") (ifseqformula "12"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,2,0,1"))
                        (rule "polySimp_addComm1" (formula "17") (term "0,0,2,0,1"))
                        (rule "add_literals" (formula "17") (term "0,0,0,2,0,1"))
                        (rule "add_zero_left" (formula "17") (term "0,0,2,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "17") (term "0,2,0,1"))
                        (rule "add_literals" (formula "17") (term "1,0,2,0,1"))
                        (rule "polySimp_elimOne" (formula "17") (term "0,2,0,1"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                        (rule "inEqSimp_homoInEq0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "12"))
                        (rule "inEqSimp_homoInEq1" (formula "17") (term "0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1" (formula "17") (term "0,0"))
                        (rule "add_literals" (formula "17") (term "1,0,0"))
                        (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "12"))
                        (rule "inEqSimp_homoInEq0" (formula "14"))
                        (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                        (rule "add_literals" (formula "14") (term "1,0"))
                        (rule "times_zero_1" (formula "14") (term "0"))
                        (rule "qeq_literals" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                        (rule "inEqSimp_homoInEq1" (formula "13"))
                        (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                        (rule "add_literals" (formula "13") (term "1,0"))
                        (rule "times_zero_1" (formula "13") (term "0"))
                        (rule "leq_literals" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "12"))
                        (rule "inEqSimp_homoInEq1" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0"))
                        (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                        (rule "add_literals" (formula "21") (term "0,0,0"))
                        (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "12"))
                        (rule "inEqSimp_homoInEq0" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0"))
                        (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "12"))
                        (rule "applyEqRigid" (formula "13") (term "1,1") (ifseqformula "12"))
                        (rule "polySimp_addAssoc" (formula "13") (term "1"))
                        (rule "polySimp_addComm0" (formula "13") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "13") (term "1"))
                        (rule "add_literals" (formula "13") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "inEqSimp_invertInEq0" (formula "15") (term "0"))
                        (rule "times_zero_2" (formula "15") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0"))
                        (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "17"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                        (rule "mul_literals" (formula "22") (term "0,1"))
                        (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "20"))
                        (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "19"))
                        (rule "greater_literals" (formula "20") (term "0,0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0"))
                        (rule "qeq_literals" (formula "20") (term "0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "inEqSimp_contradInEq5" (formula "1") (ifseqformula "16"))
                        (rule "times_zero_1" (formula "1") (term "1,1,0"))
                        (rule "greater_literals" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
            )
         )
      )
      (branch "CUT: javaDivInt(classI_0, 2) < javaDivInt(classJ_0, 2) FALSE"
         (rule "hide_left" (formula "13") (userinteraction))
         (rule "translateJavaDivInt" (formula "14") (term "0"))
         (rule "translateJavaDivInt" (formula "14") (term "1"))
         (rule "translateJavaDivInt" (formula "13") (term "0"))
         (rule "translateJavaMod" (formula "1") (term "0,0,0"))
         (rule "translateJavaSubInt" (formula "1") (term "1,1,0"))
         (rule "translateJavaSubInt" (formula "3") (term "0,2,0,1,0,1"))
         (rule "translateJavaSubInt" (formula "1") (term "0,2,0,1,0,1"))
         (rule "translateJavaSubInt" (formula "1") (term "1,0,1,1"))
         (rule "translateJavaDivInt" (formula "1") (term "0,2,1,1,1,1"))
         (rule "translateJavaDivInt" (formula "1") (term "0,2,0,0,2"))
         (rule "translateJavaSubInt" (formula "3") (term "1,0,1,1"))
         (rule "translateJavaDivInt" (formula "13") (term "1"))
         (rule "translateJavaDivInt" (formula "3") (term "0,2,1,1,1,1"))
         (rule "translateJavaDivInt" (formula "3") (term "0,2,0,0,2"))
         (rule "translateJavaDivInt" (formula "3") (term "1,0,1,2"))
         (rule "translateJavaSubInt" (formula "3") (term "0,2,0,1,1,2"))
         (rule "translateJavaDivInt" (formula "1") (term "1,0,1,2"))
         (rule "translateJavaSubInt" (formula "1") (term "0,2,0,1,1,2"))
         (rule "translateJavaMod" (formula "3") (term "0,0,0"))
         (rule "translateJavaSubInt" (formula "3") (term "1,1,0"))
         (rule "translateJavaMulInt" (formula "12") (term "1,1"))
         (rule "translateJavaDivInt" (formula "3") (term "0,0,2,0,1,0,1"))
         (rule "translateJavaDivInt" (formula "1") (term "0,0,2,0,1,0,1"))
         (rule "translateJavaDivInt" (formula "3") (term "0,0,2,0,1,1,2"))
         (rule "translateJavaDivInt" (formula "1") (term "0,0,2,0,1,1,2"))
         (rule "eqSymm" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "3") (term "1,0"))
         (rule "eqSymm" (formula "12"))
         (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "2"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1"))
         (rule "mul_literals" (formula "1") (term "1,1,0,1,1"))
         (rule "polySimp_elimSub" (formula "3") (term "1,0,1,1"))
         (rule "mul_literals" (formula "3") (term "1,1,0,1,1"))
         (rule "polySimp_elimSub" (formula "3") (term "0,2,0,1,0,1"))
         (rule "mul_literals" (formula "3") (term "1,0,2,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "1") (term "0,2,0,1,0,1"))
         (rule "mul_literals" (formula "1") (term "1,0,2,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "3") (term "0,2,0,1,1,2"))
         (rule "mul_literals" (formula "3") (term "1,0,2,0,1,1,2"))
         (rule "polySimp_elimSub" (formula "1") (term "0,2,0,1,1,2"))
         (rule "mul_literals" (formula "1") (term "1,0,2,0,1,1,2"))
         (rule "polySimp_elimSub" (formula "1") (term "0,1,0"))
         (rule "mul_literals" (formula "1") (term "1,0,1,0"))
         (rule "polySimp_elimSub" (formula "3") (term "0,1,0"))
         (rule "mul_literals" (formula "3") (term "1,0,1,0"))
         (rule "polySimp_homoEq" (formula "1") (term "1,0"))
         (rule "polySimp_homoEq" (formula "3") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0"))
         (rule "polySimp_addComm0" (formula "1") (term "1,0,1,1"))
         (rule "polySimp_addComm0" (formula "3") (term "1,0,1,1"))
         (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,1,2"))
         (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,1,2"))
         (rule "polySimp_addComm0" (formula "1") (term "1,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "3") (term "1,1,0,1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,1,0"))
         (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0"))
         (rule "mul_literals" (formula "3") (term "0,1,0,1,0"))
         (rule "inEqSimp_ltRight" (formula "16"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,1"))
         (rule "add_zero_right" (formula "4") (term "0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1"))
         (rule "add_zero_right" (formula "2") (term "0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "6"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "6") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "7"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "7") (term "0"))
         (rule "inEqSimp_ltRight" (formula "14"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "3") (term "1,1,1"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,1,1"))
         (rule "polySimp_addComm1" (formula "3") (term "0,1,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "5") (term "1,1,1"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,1,1"))
         (rule "polySimp_addComm1" (formula "5") (term "0,1,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1,2"))
         (rule "add_zero_right" (formula "5") (term "0,0,1,2"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,2"))
         (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,2"))
         (rule "add_zero_right" (formula "3") (term "0,0,1,2"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,2"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "3") (term "0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "5") (term "0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "6"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1"))
         (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,1,1"))
         (rule "mul_literals" (formula "3") (term "0,1,0,0,0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1,1"))
         (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1,1"))
         (rule "mul_literals" (formula "5") (term "0,1,0,0,0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,1"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,1"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "5") (term "1,1,2"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,1,2"))
         (rule "inEqSimp_ltToLeq" (formula "3") (term "1,1,2"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,1,2"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,1"))
         (rule "add_literals" (formula "3") (term "0,0,0,0,1,1"))
         (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1"))
         (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1,1"))
         (rule "add_literals" (formula "5") (term "0,0,0,0,1,1"))
         (rule "polySimp_addComm1" (formula "5") (term "0,0,1,1"))
         (rule "jmod_axiom" (formula "3") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
         (rule "jmod_axiom" (formula "5") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
         (rule "polySimp_sepNegMonomial" (formula "3") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
         (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
         (rule "polySimp_sepNegMonomial" (formula "5") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
         (rule "polySimp_elimOne" (formula "5") (term "0,1,0"))
         (rule "polySimp_sepNegMonomial" (formula "3") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
         (rule "polySimp_sepNegMonomial" (formula "5") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,0,1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,1"))
         (rule "polySimp_elimOne" (formula "5") (term "0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,1"))
         (rule "polySimp_elimOne" (formula "3") (term "0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "7"))
         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
         (rule "polySimp_elimOne" (formula "7") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "8"))
         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
         (rule "polySimp_elimOne" (formula "8") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "1,1,1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0,1,1,1"))
         (rule "polySimp_elimOne" (formula "3") (term "0,1,1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "1,1,1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0,1,1,1"))
         (rule "polySimp_elimOne" (formula "5") (term "0,1,1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,1,2"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,2"))
         (rule "polySimp_elimOne" (formula "5") (term "0,0,1,2"))
         (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,1,2"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,2"))
         (rule "polySimp_elimOne" (formula "3") (term "0,0,1,2"))
         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,1"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,1"))
         (rule "polySimp_rightDist" (formula "5") (term "1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,1"))
         (rule "mul_literals" (formula "5") (term "0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,1"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1"))
         (rule "polySimp_rightDist" (formula "3") (term "1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,1"))
         (rule "mul_literals" (formula "3") (term "0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,1,2"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,2"))
         (rule "polySimp_rightDist" (formula "5") (term "1,1,1,2"))
         (rule "mul_literals" (formula "5") (term "0,1,1,1,2"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,1,2"))
         (rule "polySimp_elimOne" (formula "5") (term "1,1,1,1,2"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,1,2"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,2"))
         (rule "polySimp_rightDist" (formula "3") (term "1,1,1,2"))
         (rule "mul_literals" (formula "3") (term "0,1,1,1,2"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,1,2"))
         (rule "polySimp_elimOne" (formula "3") (term "1,1,1,1,2"))
         (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,1"))
         (rule "polySimp_elimOne" (formula "3") (term "0,0,1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,1"))
         (rule "polySimp_elimOne" (formula "5") (term "0,0,1,1"))
         (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "15"))
         (rule "inEqSimp_contradEq3" (formula "15") (ifseqformula "1"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
         (rule "add_literals" (formula "15") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0"))
         (rule "qeq_literals" (formula "15") (term "0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "false_right" (formula "15"))
         (rule "newSym_eq" (formula "14") (inst "newSymDef=mul(int::final(self,
               de.wiesler.Classifier::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
         (rule "times_zero_1" (formula "14") (term "1,1"))
         (rule "add_zero_right" (formula "14") (term "1"))
         (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "14"))
         (rule "eqSymm" (formula "15"))
         (rule "applyEq" (formula "13") (term "1,1,1,0,0,1,0") (ifseqformula "14"))
         (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "14"))
         (rule "applyEq" (formula "5") (term "0,0,1,1") (ifseqformula "15"))
         (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,1"))
         (rule "polySimp_addComm1" (formula "5") (term "0,0,1,1"))
         (rule "applyEq" (formula "3") (term "0,0,1,1") (ifseqformula "15"))
         (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1,1"))
         (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1"))
         (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "15"))
         (rule "polySimp_homoEq" (formula "3") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0,1,0"))
         (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "15"))
         (rule "polySimp_homoEq" (formula "5") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
         (rule "polySimp_addComm1" (formula "5") (term "0,1,0"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "15"))
         (rule "inEqSimp_homoInEq1" (formula "8"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0"))
         (rule "polySimp_sepPosMonomial" (formula "3") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "3") (term "1,1,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0"))
         (rule "mul_literals" (formula "3") (term "0,1,1,0"))
         (rule "polySimp_sepPosMonomial" (formula "5") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "5") (term "1,1,0"))
         (rule "mul_literals" (formula "5") (term "0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,1,1"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1"))
         (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,1"))
         (rule "mul_literals" (formula "5") (term "0,1,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,1,1"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,1"))
         (rule "polySimp_rightDist" (formula "3") (term "1,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,1"))
         (rule "mul_literals" (formula "3") (term "0,1,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8"))
         (rule "polySimp_mulComm0" (formula "8") (term "1"))
         (rule "polySimp_rightDist" (formula "8") (term "1"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
         (rule "mul_literals" (formula "8") (term "0,1"))
         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
         (rule "polySimp_rightDist" (formula "7") (term "0,0"))
         (rule "mul_literals" (formula "7") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "7") (term "0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "7"))
         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
         (rule "polySimp_elimOne" (formula "7") (term "0"))
         (rule "replace_known_left" (formula "3") (term "0,1,1") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "inEqSimp_contradEq3" (formula "3") (term "1,0") (ifseqformula "7"))
         (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1,0"))
         (rule "add_literals" (formula "3") (term "0,0,0,0,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,1,0"))
         (rule "add_literals" (formula "3") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "3") (term "1,0,0,1,0"))
         (rule "add_zero_right" (formula "3") (term "0,0,1,0"))
         (rule "qeq_literals" (formula "3") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
         (rule "times_zero_1" (formula "6") (term "0,0"))
         (rule "add_zero_left" (formula "6") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
         (rule "mul_literals" (formula "6") (term "1"))
         (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
         (rule "leq_literals" (formula "6") (term "0,0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
         (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
         (rule "add_literals" (formula "6") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "6") (term "1,0,0"))
         (rule "add_zero_right" (formula "6") (term "0,0"))
         (rule "leq_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "nnf_imp2or" (formula "15") (term "0"))
         (rule "nnf_notAnd" (formula "15") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
         (rule "mul_literals" (formula "15") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
         (rule "nnf_imp2or" (formula "15") (term "0,1,0"))
         (rule "nnf_notAnd" (formula "15") (term "0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,0"))
         (rule "jdiv_axiom" (formula "5") (term "0,2,0,0,2"))
         (rule "eqSymm" (formula "5"))
         (rule "polyDiv_pullOut" (formula "5") (term "0,2,0") (inst "polyDivCoeff=mul(classJ_0, Z(neglit(1(#))))"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0,2,0,2,0"))
         (rule "equal_literals" (formula "5") (term "0,0,2,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,2,0"))
         (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,0,2,0"))
         (rule "add_literals" (formula "5") (term "1,0,0,0,2,0"))
         (rule "polySimp_elimOne" (formula "5") (term "0,0,0,2,0"))
         (rule "polySimp_mulComm0" (formula "5") (term "2,0"))
         (rule "polySimp_addComm0" (formula "5") (term "1,2,0"))
         (rule "polySimp_rightDist" (formula "5") (term "2,0"))
         (rule "polySimp_mulAssoc" (formula "5") (term "0,2,0"))
         (rule "polySimp_mulComm0" (formula "5") (term "0,0,2,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0,2,0"))
         (rule "polySimp_elimOne" (formula "5") (term "0,2,0"))
         (rule "commute_or" (formula "6") (term "0"))
         (rule "commute_or" (formula "16") (term "0,0,1,0"))
         (rule "jdiv_axiom" (formula "1") (term "1,1"))
         (rule "eqSymm" (formula "1"))
         (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "eqSymm" (formula "1"))
         (rule "applyEq" (formula "4") (term "1,0,2,0,1,1,2") (ifseqformula "1"))
         (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
         (rule "applyEqRigid" (formula "4") (term "0,2,0,1,1") (ifseqformula "1"))
         (rule "applyEq" (formula "4") (term "0,0,1,2") (ifseqformula "1"))
         (rule "applyEq" (formula "4") (term "0,2,0,0,2") (ifseqformula "1"))
         (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
         (rule "applyEqRigid" (formula "4") (term "1,0,2,0,1,0,1") (ifseqformula "1"))
         (rule "all_pull_out3" (formula "17") (term "0"))
         (rule "shift_paren_or" (formula "17") (term "0,0"))
         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
         (rule "div_axiom" (formula "6") (term "1,0") (inst "quotient=quotient_0"))
         (rule "qeq_literals" (formula "6") (term "0,1,1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "mul_literals" (formula "6") (term "1,1,1,1"))
         (rule "equal_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "polySimp_addComm1" (formula "8") (term "1"))
         (rule "add_literals" (formula "8") (term "0,1"))
         (rule "inEqSimp_commuteLeq" (formula "7"))
         (rule "inEqSimp_homoInEq1" (formula "8"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0"))
         (rule "applyEqRigid" (formula "9") (term "0,1,2,0") (ifseqformula "6"))
         (rule "polySimp_addComm0" (formula "9") (term "2,0"))
         (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "6"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8"))
         (rule "polySimp_mulComm0" (formula "8") (term "1"))
         (rule "polySimp_rightDist" (formula "8") (term "1"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
         (rule "mul_literals" (formula "8") (term "0,1"))
         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "15"))
         (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0"))
         (rule "polySimp_addComm0" (formula "7") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "7"))
         (rule "polySimp_mulComm0" (formula "7") (term "1"))
         (rule "polySimp_rightDist" (formula "7") (term "1"))
         (rule "mul_literals" (formula "7") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
         (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
         (rule "leq_literals" (formula "7") (term "0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
         (rule "add_literals" (formula "7") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,0"))
         (rule "add_zero_left" (formula "7") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
         (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
         (rule "add_literals" (formula "7") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0"))
         (rule "leq_literals" (formula "7") (term "0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "9"))
         (rule "polySimp_rightDist" (formula "15") (term "0,0"))
         (rule "mul_literals" (formula "15") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "15") (term "0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0"))
         (rule "add_zero_left" (formula "15") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "15"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0"))
         (rule "polySimp_elimOne" (formula "15") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "15"))
         (rule "times_zero_1" (formula "13") (term "0,0"))
         (rule "add_zero_left" (formula "13") (term "0"))
         (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
         (rule "leq_literals" (formula "13") (term "0,0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
         (rule "add_literals" (formula "13") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0"))
         (rule "add_zero_right" (formula "13") (term "0,0"))
         (rule "leq_literals" (formula "13") (term "0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_1"))
         (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
         (rule "qeq_literals" (formula "1") (term "0,1,1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "equal_literals" (formula "1") (term "0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "polySimp_addComm1" (formula "3") (term "1"))
         (rule "add_literals" (formula "3") (term "0,1"))
         (rule "inEqSimp_commuteLeq" (formula "2"))
         (rule "inEqSimp_homoInEq1" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "applyEqRigid" (formula "7") (term "0,2,0,1,1") (ifseqformula "1"))
         (rule "applyEqRigid" (formula "7") (term "1,0,2,0,1,0,1") (ifseqformula "1"))
         (rule "applyEqRigid" (formula "7") (term "1,0,2,0,1,1,2") (ifseqformula "1"))
         (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "1"))
         (rule "eqSymm" (formula "7") (term "0"))
         (rule "applyEqRigid" (formula "7") (term "0,2,0,0,2") (ifseqformula "1"))
         (rule "applyEqRigid" (formula "7") (term "0,0,1,2") (ifseqformula "1"))
         (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "1"))
         (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1"))
         (rule "polySimp_rightDist" (formula "3") (term "1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
         (rule "mul_literals" (formula "3") (term "0,1"))
         (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "3"))
         (rule "times_zero_1" (formula "17") (term "0,0"))
         (rule "add_zero_left" (formula "17") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17"))
         (rule "mul_literals" (formula "17") (term "1"))
         (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(0(#))"))
         (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "17") (term "0,0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
         (rule "add_literals" (formula "17") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
         (rule "add_literals" (formula "17") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "17") (term "1,0,0"))
         (rule "add_zero_right" (formula "17") (term "0,0"))
         (rule "leq_literals" (formula "17") (term "0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "20"))
         (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1"))
         (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=quotient_1"))
         (rule "leq_literals" (formula "2") (term "0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
         (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
         (rule "add_literals" (formula "2") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "2") (term "1,0,0"))
         (rule "add_zero_right" (formula "2") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
         (rule "add_literals" (formula "2") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "2") (term "1,0,0"))
         (rule "add_zero_right" (formula "2") (term "0,0"))
         (rule "leq_literals" (formula "2") (term "0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "20"))
         (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0"))
         (rule "polySimp_addComm0" (formula "3") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1"))
         (rule "polySimp_rightDist" (formula "3") (term "1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
         (rule "mul_literals" (formula "3") (term "0,1"))
         (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_1)"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
         (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "3") (term "0,0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
         (rule "add_literals" (formula "3") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "3") (term "1,0,0"))
         (rule "add_zero_right" (formula "3") (term "0,0"))
         (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
         (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
         (rule "add_literals" (formula "3") (term "0,0,0,0"))
         (rule "add_zero_left" (formula "3") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
         (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
         (rule "add_literals" (formula "3") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "3") (term "1,0,0"))
         (rule "add_zero_right" (formula "3") (term "0,0"))
         (rule "leq_literals" (formula "3") (term "0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "ifthenelse_split_for" (formula "16"))
         (branch " classJ_0 = -1 + l_0 * 2 | jdiv(classJ_0, 2) * 2 = classJ_0 TRUE"
            (rule "andLeft" (formula "17"))
            (rule "ifthenelse_split" (formula "15") (term "0"))
            (branch "classJ_0 >= 0 TRUE"
               (rule "eqSymm" (formula "16"))
               (rule "applyEq" (formula "17") (term "0,0,1") (ifseqformula "16"))
               (rule "eqSymm" (formula "17") (term "1"))
               (rule "applyEqRigid" (formula "19") (term "0,2,0,1") (ifseqformula "16"))
               (rule "applyEqRigid" (formula "18") (term "1,0,2,0,1") (ifseqformula "16"))
               (rule "applyEq" (formula "7") (term "0") (ifseqformula "16"))
               (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "7"))
               (rule "andLeft" (formula "2"))
               (rule "inEqSimp_homoInEq1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "1,1,0"))
               (rule "times_zero_1" (formula "2") (term "1,0"))
               (rule "add_zero_right" (formula "2") (term "0"))
               (rule "leq_literals" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
            (branch "classJ_0 >= 0 FALSE"
               (rule "eqSymm" (formula "15"))
               (rule "inEqSimp_geqRight" (formula "34"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "applyEq" (formula "8") (term "0") (ifseqformula "16"))
               (rule "inEqSimp_homoInEq0" (formula "8"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0"))
               (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "8") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "applyEqRigid" (formula "19") (term "0,2,0,1") (ifseqformula "16"))
               (rule "applyEq" (formula "18") (term "1,0,2,0,1") (ifseqformula "16"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,2,0,1"))
               (rule "applyEqRigid" (formula "17") (term "0,0,1") (ifseqformula "16"))
               (rule "polySimp_mulComm0" (formula "17") (term "0,1"))
               (rule "polySimp_rightDist" (formula "17") (term "0,1"))
               (rule "polySimp_homoEq" (formula "17") (term "1"))
               (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
               (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1"))
               (rule "add_literals" (formula "17") (term "1,1,0,1"))
               (rule "polySimp_sepNegMonomial" (formula "17") (term "1"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
               (rule "polySimp_elimOne" (formula "17") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "8"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
               (rule "polySimp_elimOne" (formula "8") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "18") (term "0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "8"))
               (rule "polySimp_rightDist" (formula "25") (term "0,0"))
               (rule "mul_literals" (formula "25") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
               (rule "add_literals" (formula "25") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "25"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0"))
               (rule "polySimp_elimOne" (formula "25") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "8"))
               (rule "polySimp_mulAssoc" (formula "14") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "polySimp_addComm0" (formula "14") (term "0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "1,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0"))
               (rule "polySimp_elimOne" (formula "14") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "14"))
               (rule "andLeft" (formula "3"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "polySimp_addComm0" (formula "3") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "1,1,0"))
               (rule "times_zero_1" (formula "3") (term "1,0"))
               (rule "add_zero_right" (formula "3") (term "0"))
               (rule "leq_literals" (formula "3"))
               (rule "closeFalse" (formula "3"))
            )
         )
         (branch " classJ_0 = -1 + l_0 * 2 | jdiv(classJ_0, 2) * 2 = classJ_0 FALSE"
            (rule "orRight" (formula "32"))
            (rule "andLeft" (formula "16"))
            (rule "inEqSimp_strengthen0" (formula "25") (ifseqformula "33"))
            (rule "polySimp_addAssoc" (formula "25") (term "1"))
            (rule "add_literals" (formula "25") (term "0,1"))
            (rule "inEqSimp_contradEq3" (formula "33") (ifseqformula "25"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
            (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
            (rule "add_literals" (formula "33") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "33") (term "1,0,0"))
            (rule "add_zero_right" (formula "33") (term "0,0"))
            (rule "qeq_literals" (formula "33") (term "0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "false_right" (formula "33"))
            (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "25"))
            (rule "polySimp_mulAssoc" (formula "13") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0"))
            (rule "polySimp_addComm0" (formula "13") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "13"))
            (rule "polySimp_mulComm0" (formula "13") (term "1"))
            (rule "polySimp_rightDist" (formula "13") (term "1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
            (rule "mul_literals" (formula "13") (term "0,1"))
            (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "12"))
            (rule "greater_literals" (formula "13") (term "0,0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
            (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0"))
            (rule "add_literals" (formula "13") (term "1,0,0"))
            (rule "times_zero_1" (formula "13") (term "0,0"))
            (rule "qeq_literals" (formula "13") (term "0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
            (rule "polySimp_rightDist" (formula "24") (term "0,0"))
            (rule "mul_literals" (formula "24") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "24") (term "0"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
            (rule "add_literals" (formula "24") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "24"))
            (rule "polySimp_mulLiterals" (formula "24") (term "0"))
            (rule "polySimp_elimOne" (formula "24") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "24"))
            (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
            (rule "add_literals" (formula "22") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
            (rule "add_literals" (formula "22") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "22") (term "1,0,0"))
            (rule "add_zero_right" (formula "22") (term "0,0"))
            (rule "qeq_literals" (formula "22") (term "0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "23"))
            (rule "times_zero_1" (formula "21") (term "0,0"))
            (rule "add_zero_left" (formula "21") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "21"))
            (rule "mul_literals" (formula "21") (term "1"))
            (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(2(#))"))
            (rule "leq_literals" (formula "21") (term "0,0"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
            (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
            (rule "add_literals" (formula "21") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
            (rule "add_literals" (formula "21") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "21") (term "1,0,0"))
            (rule "add_zero_right" (formula "21") (term "0,0"))
            (rule "leq_literals" (formula "21") (term "0"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "21"))
            (rule "leq_literals" (formula "18") (term "0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "23"))
            (rule "polySimp_mulAssoc" (formula "4") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "4") (term "0"))
            (rule "polySimp_addComm0" (formula "4") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
            (rule "mul_literals" (formula "4") (term "0,1"))
            (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(2(#)), quotient_1)"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
            (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "4") (term "0,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
            (rule "add_literals" (formula "4") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "4") (term "1,0,0"))
            (rule "add_zero_right" (formula "4") (term "0,0"))
            (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
            (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
            (rule "add_literals" (formula "4") (term "0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
            (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
            (rule "add_literals" (formula "4") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
            (rule "add_literals" (formula "4") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "4") (term "1,0,0"))
            (rule "add_zero_right" (formula "4") (term "0,0"))
            (rule "leq_literals" (formula "4") (term "0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
            (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "qeq_literals" (formula "3") (term "0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "ifthenelse_split" (formula "15") (term "0"))
            (branch "classJ_0 >= 0 TRUE"
               (rule "eqSymm" (formula "16"))
               (rule "applyEq" (formula "17") (term "0,2,0") (ifseqformula "16"))
               (rule "applyEq" (formula "18") (term "1,0,2,0,1") (ifseqformula "16"))
               (rule "applyEqRigid" (formula "18") (term "0,0") (ifseqformula "16"))
               (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "16"))
               (rule "eqSymm" (formula "34"))
               (rule "applyEq" (formula "7") (term "0") (ifseqformula "16"))
               (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "34"))
               (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "13"))
               (rule "polySimp_mulAssoc" (formula "34") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
               (rule "add_literals" (formula "34") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "34") (term "1,0,0"))
               (rule "add_zero_right" (formula "34") (term "0,0"))
               (rule "leq_literals" (formula "34") (term "0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "false_right" (formula "34"))
               (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "7"))
               (rule "andLeft" (formula "2"))
               (rule "inEqSimp_homoInEq1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "1,1,0"))
               (rule "times_zero_1" (formula "2") (term "1,0"))
               (rule "add_zero_right" (formula "2") (term "0"))
               (rule "leq_literals" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
            (branch "classJ_0 >= 0 FALSE"
               (rule "eqSymm" (formula "15"))
               (rule "inEqSimp_geqRight" (formula "33"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "applyEq" (formula "18") (term "1,0,2,0,1") (ifseqformula "16"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,2,0,1"))
               (rule "applyEqRigid" (formula "17") (term "0,2,0") (ifseqformula "16"))
               (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "16"))
               (rule "inEqSimp_homoInEq1" (formula "18") (term "0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulAssoc" (formula "18") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
               (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "16"))
               (rule "inEqSimp_homoInEq0" (formula "8"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0"))
               (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "8") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "applyEqRigid" (formula "34") (term "0,0") (ifseqformula "16"))
               (rule "polySimp_mulComm0" (formula "34") (term "0"))
               (rule "polySimp_rightDist" (formula "34") (term "0"))
               (rule "polySimp_homoEq" (formula "34"))
               (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
               (rule "polySimp_rightDist" (formula "34") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "34") (term "0"))
               (rule "polySimp_addComm0" (formula "34") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
               (rule "add_literals" (formula "34") (term "1,1,0"))
               (rule "polySimp_sepNegMonomial" (formula "34"))
               (rule "polySimp_mulLiterals" (formula "34") (term "0"))
               (rule "polySimp_elimOne" (formula "34") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "8"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
               (rule "polySimp_elimOne" (formula "8") (term "0"))
               (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "34"))
               (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "14"))
               (rule "polySimp_mulAssoc" (formula "34") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
               (rule "add_literals" (formula "34") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "34") (term "1,0,0"))
               (rule "add_zero_right" (formula "34") (term "0,0"))
               (rule "leq_literals" (formula "34") (term "0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "false_right" (formula "34"))
               (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "15"))
               (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "14"))
               (rule "inEqSimp_homoInEq0" (formula "8"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
               (rule "mul_literals" (formula "8") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "polySimp_addComm1" (formula "8") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
               (rule "add_literals" (formula "8") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "8") (term "0,0"))
               (rule "add_literals" (formula "8") (term "0,0,0"))
               (rule "applyEq" (formula "27") (term "0") (ifseqformula "14"))
               (rule "inEqSimp_homoInEq0" (formula "27"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "27") (term "0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0"))
               (rule "applyEqRigid" (formula "19") (term "0,0") (ifseqformula "14"))
               (rule "inEqSimp_homoInEq1" (formula "19") (term "0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,0"))
               (rule "add_zero_left" (formula "19") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0"))
               (rule "add_literals" (formula "19") (term "1,0,0"))
               (rule "applyEqRigid" (formula "17") (term "0,0") (ifseqformula "14"))
               (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "14"))
               (rule "inEqSimp_homoInEq1" (formula "26"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
               (rule "add_literals" (formula "26") (term "0,0,0"))
               (rule "add_zero_left" (formula "26") (term "0,0"))
               (rule "applyEq" (formula "16") (term "0") (ifseqformula "14"))
               (rule "inEqSimp_homoInEq0" (formula "16"))
               (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
               (rule "add_literals" (formula "16") (term "1,0"))
               (rule "times_zero_1" (formula "16") (term "0"))
               (rule "qeq_literals" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "applyEq" (formula "17") (term "1,0,2,0") (ifseqformula "14"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,2,0"))
               (rule "polySimp_addComm0" (formula "17") (term "0,0,2,0"))
               (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,2,0"))
               (rule "add_literals" (formula "17") (term "1,1,0,2,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,0,2,0"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "14"))
               (rule "inEqSimp_homoInEq0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "applyEqRigid" (formula "18") (term "1,0,2,0,1") (ifseqformula "14"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,2,0,1"))
               (rule "polySimp_addComm1" (formula "18") (term "0,0,2,0,1"))
               (rule "add_literals" (formula "18") (term "0,0,0,2,0,1"))
               (rule "add_zero_left" (formula "18") (term "0,0,2,0,1"))
               (rule "polySimp_pullOutFactor0" (formula "18") (term "0,2,0,1"))
               (rule "add_literals" (formula "18") (term "1,0,2,0,1"))
               (rule "polySimp_elimOne" (formula "18") (term "0,2,0,1"))
               (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
               (rule "inEqSimp_homoInEq1" (formula "15"))
               (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
               (rule "add_literals" (formula "15") (term "1,0"))
               (rule "times_zero_1" (formula "15") (term "0"))
               (rule "leq_literals" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
               (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "14"))
               (rule "polySimp_addAssoc" (formula "15") (term "1"))
               (rule "polySimp_addComm0" (formula "15") (term "0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "15") (term "1"))
               (rule "add_literals" (formula "15") (term "1,1,1"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "8"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
               (rule "polySimp_elimOne" (formula "8") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "25"))
               (rule "polySimp_mulComm0" (formula "25") (term "1"))
               (rule "polySimp_rightDist" (formula "25") (term "1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
               (rule "mul_literals" (formula "25") (term "0,1"))
               (rule "inEqSimp_invertInEq0" (formula "17") (term "0"))
               (rule "times_zero_2" (formula "17") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "0,0"))
               (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "18"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "3"))
               (rule "andLeft" (formula "8"))
               (rule "inEqSimp_homoInEq1" (formula "8"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0"))
               (rule "mul_literals" (formula "8") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "polySimp_addComm0" (formula "8") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
               (rule "add_literals" (formula "8") (term "1,1,0"))
               (rule "times_zero_1" (formula "8") (term "1,0"))
               (rule "add_zero_right" (formula "8") (term "0"))
               (rule "leq_literals" (formula "8"))
               (rule "closeFalse" (formula "8"))
            )
         )
      )
   )
)
(branch "self.equal_buckets = TRUE FALSE"
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "13") (userinteraction))
    (builtin "One Step Simplification" (formula "1") (userinteraction))
   (rule "hide_left" (formula "12") (userinteraction))
   (rule "andLeft" (formula "2"))
   (rule "andLeft" (formula "1"))
   (rule "instAll" (formula "2") (term "0,2,1,1") (ifseqformula "12") (userinteraction))
   (rule "impLeft" (formula "2") (userinteraction))
   (branch "Case 1"
      (rule "translateJavaSubInt" (formula "3") (term "0,2,0,1"))
      (rule "translateJavaSubInt" (formula "4") (term "1,0"))
      (rule "translateJavaMulInt" (formula "13") (term "1,1"))
      (rule "translateJavaSubInt" (formula "2") (term "1,0"))
      (rule "translateJavaSubInt" (formula "1") (term "0,2,0,1"))
      (rule "eqSymm" (formula "13"))
      (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "polySimp_elimSub" (formula "3") (term "0,2,0,1"))
      (rule "mul_literals" (formula "3") (term "1,0,2,0,1"))
      (rule "polySimp_elimSub" (formula "4") (term "1,0"))
      (rule "mul_literals" (formula "4") (term "1,1,0"))
      (rule "polySimp_elimSub" (formula "2") (term "1,0"))
      (rule "mul_literals" (formula "2") (term "1,1,0"))
      (rule "polySimp_elimSub" (formula "1") (term "0,2,0,1"))
      (rule "mul_literals" (formula "1") (term "1,0,2,0,1"))
      (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1"))
      (rule "polySimp_addComm0" (formula "4") (term "1,0"))
      (rule "polySimp_addComm0" (formula "2") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1"))
      (rule "inEqSimp_ltRight" (formula "17"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "8"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "8") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "2") (term "0"))
      (rule "add_zero_right" (formula "2") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "7"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "inEqSimp_ltRight" (formula "15"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
      (rule "add_zero_right" (formula "5") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "5") (term "1"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "6") (term "0"))
      (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
      (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
      (rule "add_literals" (formula "6") (term "0,0,0,0"))
      (rule "polySimp_addComm1" (formula "6") (term "0,0"))
      (rule "inEqSimp_ltToLeq" (formula "4") (term "0"))
      (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
      (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "3") (term "1"))
      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
      (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
      (rule "add_literals" (formula "4") (term "0,0,0,0"))
      (rule "polySimp_addComm1" (formula "4") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "7"))
      (rule "inEqSimp_commuteLeq" (formula "6") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "4") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,1,0"))
      (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "15"))
      (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "15"))
      (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
      (rule "polySimp_elimOne" (formula "2") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "9"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
      (rule "polySimp_elimOne" (formula "9") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
      (rule "polySimp_elimOne" (formula "3") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "8"))
      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
      (rule "polySimp_elimOne" (formula "8") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
      (rule "polySimp_elimOne" (formula "5") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
      (rule "polySimp_rightDist" (formula "5") (term "1,1"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1"))
      (rule "mul_literals" (formula "5") (term "0,1,1"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0"))
      (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
      (rule "polySimp_elimOne" (formula "6") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1"))
      (rule "polySimp_mulComm0" (formula "3") (term "1,1"))
      (rule "polySimp_rightDist" (formula "3") (term "1,1"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1"))
      (rule "mul_literals" (formula "3") (term "0,1,1"))
      (rule "polySimp_elimOne" (formula "3") (term "1,1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0"))
      (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
      (rule "polySimp_elimOne" (formula "4") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
      (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
      (rule "inEqSimp_contradInEq0" (formula "4") (term "0") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
      (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "4") (term "0,0,0"))
      (rule "leq_literals" (formula "4") (term "0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
      (rule "polySimp_rightDist" (formula "8") (term "0,0"))
      (rule "mul_literals" (formula "8") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "8") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "8"))
      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
      (rule "polySimp_elimOne" (formula "8") (term "0"))
      (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "8"))
      (rule "andLeft" (formula "7"))
      (rule "inEqSimp_homoInEq1" (formula "7"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "polySimp_addComm1" (formula "7") (term "0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "1,1,0"))
      (rule "times_zero_1" (formula "7") (term "1,0"))
      (rule "add_zero_right" (formula "7") (term "0"))
      (rule "leq_literals" (formula "7"))
      (rule "closeFalse" (formula "7"))
   )
   (branch "Case 2"
      (rule "instAll" (formula "4") (term "0,2,0,1") (ifseqformula "2") (userinteraction))
      (rule "translateJavaMulInt" (formula "15") (term "1,1"))
      (rule "translateJavaSubInt" (formula "5") (term "0,2,0,1"))
      (rule "translateJavaSubInt" (formula "6") (term "1,0"))
      (rule "translateJavaSubInt" (formula "3") (term "1,0"))
      (rule "translateJavaSubInt" (formula "1") (term "0,2,0,1"))
      (rule "translateJavaSubInt" (formula "4") (term "1,0,0"))
      (rule "translateJavaSubInt" (formula "4") (term "0,1,0"))
      (rule "translateJavaSubInt" (formula "4") (term "0,2,1,1"))
      (rule "eqSymm" (formula "15"))
      (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_elimSub" (formula "5") (term "0,2,0,1"))
      (rule "mul_literals" (formula "5") (term "1,0,2,0,1"))
      (rule "polySimp_elimSub" (formula "6") (term "1,0"))
      (rule "mul_literals" (formula "6") (term "1,1,0"))
      (rule "polySimp_elimSub" (formula "3") (term "1,0"))
      (rule "mul_literals" (formula "3") (term "1,1,0"))
      (rule "polySimp_elimSub" (formula "1") (term "0,2,0,1"))
      (rule "mul_literals" (formula "1") (term "1,0,2,0,1"))
      (rule "polySimp_elimSub" (formula "4") (term "1,0,0"))
      (rule "mul_literals" (formula "4") (term "1,1,0,0"))
      (rule "polySimp_elimSub" (formula "4") (term "0,1,0"))
      (rule "mul_literals" (formula "4") (term "1,0,1,0"))
      (rule "polySimp_elimSub" (formula "4") (term "0,2,1,1"))
      (rule "mul_literals" (formula "4") (term "1,0,2,1,1"))
      (rule "polySimp_addComm0" (formula "5") (term "0,2,0,1"))
      (rule "polySimp_addComm0" (formula "6") (term "1,0"))
      (rule "polySimp_addComm0" (formula "3") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1"))
      (rule "polySimp_addComm0" (formula "4") (term "1,0,0"))
      (rule "polySimp_addComm0" (formula "4") (term "0,1,0"))
      (rule "polySimp_addComm0" (formula "4") (term "0,2,1,1"))
      (rule "inEqSimp_ltRight" (formula "18"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "2") (term "0"))
      (rule "add_zero_right" (formula "2") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "10"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "6") (term "0"))
      (rule "add_zero_right" (formula "6") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "9"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "6") (term "1"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "7") (term "0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "4") (term "0"))
      (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
      (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0,0"))
      (rule "inEqSimp_ltToLeq" (formula "2") (term "1"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "5") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
      (rule "add_literals" (formula "4") (term "0,0,0,0"))
      (rule "polySimp_addComm1" (formula "4") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
      (rule "add_literals" (formula "5") (term "0,0,0,1,0"))
      (rule "add_zero_left" (formula "5") (term "0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "7") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0"))
      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "4") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "8"))
      (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "5") (term "1"))
      (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
      (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
      (rule "applyEq" (formula "5") (term "0,1,0,1,0") (ifseqformula "16"))
      (rule "applyEq" (formula "3") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
      (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "16"))
      (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
      (rule "polySimp_elimOne" (formula "2") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "10"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
      (rule "polySimp_elimOne" (formula "10") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0"))
      (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
      (rule "polySimp_elimOne" (formula "6") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "9"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
      (rule "polySimp_elimOne" (formula "9") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
      (rule "polySimp_rightDist" (formula "6") (term "1,1"))
      (rule "mul_literals" (formula "6") (term "0,1,1"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1"))
      (rule "polySimp_elimOne" (formula "6") (term "1,1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
      (rule "polySimp_elimOne" (formula "7") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
      (rule "polySimp_rightDist" (formula "2") (term "1,1"))
      (rule "mul_literals" (formula "2") (term "0,1,1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0"))
      (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
      (rule "polySimp_elimOne" (formula "4") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
      (rule "mul_literals" (formula "5") (term "0,1,0,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
      (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
      (rule "polySimp_elimOne" (formula "5") (term "0,0"))
      (rule "inEqSimp_subsumption1" (formula "5") (term "0") (ifseqformula "10"))
      (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
      (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "5") (term "0,0,0"))
      (rule "qeq_literals" (formula "5") (term "0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "nnf_imp2or" (formula "3") (term "0"))
      (rule "nnf_imp2or" (formula "15") (term "0"))
      (rule "nnf_notAnd" (formula "3") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "3") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "15") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
      (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
      (rule "mul_literals" (formula "15") (term "1,0,0,0"))
      (rule "nnf_imp2or" (formula "15") (term "0,1,0"))
      (rule "nnf_notAnd" (formula "15") (term "0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,0"))
      (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,0"))
      (rule "commute_or" (formula "15") (term "0,0,1,0"))
      (rule "cut_direct" (formula "7") (term "1"))
      (branch "CUT: self.sorted_splitters[classJ_0] >= j_0 TRUE"
          (builtin "One Step Simplification" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "cut_direct" (formula "4") (term "1"))
         (branch "CUT: self.sorted_splitters[classI_0] >= i_0 TRUE"
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "all_pull_out3" (formula "15") (term "0"))
            (rule "shift_paren_or" (formula "15") (term "0,0"))
            (rule "shift_paren_or" (formula "15") (term "0,0,0"))
            (rule "cut_direct" (formula "2") (term "0"))
            (branch "CUT: classI_0 >= 1 TRUE"
                (builtin "One Step Simplification" (formula "3"))
               (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "2"))
               (rule "leq_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "cut_direct" (formula "7") (term "0"))
               (branch "CUT: classJ_0 >= 1 TRUE"
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "8"))
                  (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                  (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "mul_literals" (formula "5") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                  (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                  (rule "andLeft" (formula "5"))
                  (rule "inEqSimp_homoInEq1" (formula "5"))
                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "1,1,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0"))
                  (rule "add_zero_right" (formula "5") (term "0"))
                  (rule "leq_literals" (formula "5"))
                  (rule "closeFalse" (formula "5"))
               )
               (branch "CUT: classJ_0 >= 1 FALSE"
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "inEqSimp_geqRight" (formula "16"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                  (rule "add_zero_right" (formula "9") (term "0"))
                  (rule "polySimp_rightDist" (formula "9") (term "0"))
                  (rule "mul_literals" (formula "9") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "9"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
            )
            (branch "CUT: classI_0 >= 1 FALSE"
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "inEqSimp_geqRight" (formula "16"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "1"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
               (rule "leq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEqRigid" (formula "9") (term "1,1") (ifseqformula "7"))
               (rule "add_zero_right" (formula "9") (term "1"))
               (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "9"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "applyEqRigid" (formula "3") (term "0,2,0") (ifseqformula "7"))
               (rule "applyEqRigid" (formula "2") (term "0,2,1,1,0") (ifseqformula "7"))
               (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "7"))
               (rule "qeq_literals" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "applyEq" (formula "4") (term "0,2,1") (ifseqformula "7"))
               (rule "applyEq" (formula "2") (term "1,1,0,0,0") (ifseqformula "7"))
               (rule "add_zero_right" (formula "2") (term "1,0,0,0"))
               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
               (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
               (rule "polySimp_addComm0" (formula "4") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "4"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0"))
               (rule "polySimp_elimOne" (formula "4") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
               (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "polySimp_addComm0" (formula "3") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "mul_literals" (formula "3") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "CUT: self.sorted_splitters[classI_0] >= i_0 FALSE"
             (builtin "One Step Simplification" (formula "4"))
            (rule "notLeft" (formula "4"))
            (rule "inEqSimp_geqRight" (formula "17"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_geqRight" (formula "17"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "mul_literals" (formula "2") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0"))
            (rule "add_zero_left" (formula "11") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "11"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0"))
            (rule "polySimp_elimOne" (formula "11") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "11"))
            (rule "andLeft" (formula "10"))
            (rule "inEqSimp_homoInEq1" (formula "10"))
            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
            (rule "add_literals" (formula "10") (term "1,1,0"))
            (rule "times_zero_1" (formula "10") (term "1,0"))
            (rule "add_zero_right" (formula "10") (term "0"))
            (rule "leq_literals" (formula "10"))
            (rule "closeFalse" (formula "10"))
         )
      )
      (branch "CUT: self.sorted_splitters[classJ_0] >= j_0 FALSE"
          (builtin "One Step Simplification" (formula "7"))
         (rule "notLeft" (formula "7"))
         (rule "inEqSimp_geqRight" (formula "17"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_geqRight" (formula "17"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1"))
         (rule "polySimp_rightDist" (formula "2") (term "1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
         (rule "mul_literals" (formula "2") (term "0,1"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "1"))
         (rule "applyEq" (formula "17") (term "1,1,0,0") (ifseqformula "11"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
         (rule "inEqSimp_homoInEq0" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,0"))
         (rule "times_zero_1" (formula "1") (term "0"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "10"))
         (rule "inEqSimp_homoInEq1" (formula "5") (term "0"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
         (rule "mul_literals" (formula "5") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
         (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
         (rule "add_literals" (formula "5") (term "0,0,0,0"))
         (rule "applyEq" (formula "4") (term "1,1,0,0") (ifseqformula "10"))
         (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
         (rule "inEqSimp_homoInEq1" (formula "11"))
         (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
         (rule "add_literals" (formula "11") (term "1,0"))
         (rule "times_zero_1" (formula "11") (term "0"))
         (rule "leq_literals" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "applyEq" (formula "15") (term "1,0,0,0,1,0") (ifseqformula "10"))
         (rule "applyEq" (formula "16") (term "1") (ifseqformula "10"))
         (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
         (rule "polySimp_elimOne" (formula "5") (term "0,0"))
         (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "cut_direct" (formula "3") (term "0"))
         (branch "CUT: classI_0 >= 1 TRUE"
             (builtin "One Step Simplification" (formula "4"))
            (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "3"))
            (rule "leq_literals" (formula "9") (term "0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "true_left" (formula "9"))
            (rule "cut_direct" (formula "8") (term "0"))
            (branch "CUT: classJ_0 >= 1 TRUE"
                (builtin "One Step Simplification" (formula "9"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
               (rule "polySimp_addComm0" (formula "7") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "polySimp_elimOne" (formula "7") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
               (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1"))
               (rule "polySimp_rightDist" (formula "6") (term "1"))
               (rule "mul_literals" (formula "6") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1"))
               (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "2"))
               (rule "andLeft" (formula "6"))
               (rule "inEqSimp_homoInEq1" (formula "6"))
               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "times_zero_1" (formula "6") (term "1,0"))
               (rule "add_zero_right" (formula "6") (term "0"))
               (rule "leq_literals" (formula "6"))
               (rule "closeFalse" (formula "6"))
            )
            (branch "CUT: classJ_0 >= 1 FALSE"
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "inEqSimp_geqRight" (formula "16"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
               (rule "add_zero_right" (formula "9") (term "0"))
               (rule "polySimp_rightDist" (formula "9") (term "0"))
               (rule "mul_literals" (formula "9") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
               (rule "polySimp_elimOne" (formula "9") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "4"))
               (rule "qeq_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "closeFalse" (formula "9"))
            )
         )
         (branch "CUT: classI_0 >= 1 FALSE"
             (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "inEqSimp_geqRight" (formula "16"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "1"))
            (rule "applyEq" (formula "6") (term "0,2,1") (ifseqformula "8"))
            (rule "applyEqRigid" (formula "5") (term "0,2,0") (ifseqformula "8"))
            (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "8"))
            (rule "leq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "7"))
            (rule "add_zero_right" (formula "9") (term "1"))
            (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "applyEqRigid" (formula "3") (term "1,1,0,0,0") (ifseqformula "7"))
            (rule "add_zero_right" (formula "3") (term "1,0,0,0"))
            (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "7"))
            (rule "qeq_literals" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "applyEqRigid" (formula "3") (term "0,2,1,1,0") (ifseqformula "7"))
            (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
            (rule "polySimp_addComm0" (formula "5") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "5"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
            (rule "polySimp_elimOne" (formula "5") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
            (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "4") (term "0"))
            (rule "polySimp_addComm0" (formula "4") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
            (rule "mul_literals" (formula "4") (term "0,1"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
            (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "2"))
            (rule "andLeft" (formula "4"))
            (rule "inEqSimp_homoInEq1" (formula "4"))
            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
            (rule "add_literals" (formula "4") (term "1,1,0"))
            (rule "times_zero_1" (formula "4") (term "1,0"))
            (rule "add_zero_right" (formula "4") (term "0"))
            (rule "leq_literals" (formula "4"))
            (rule "closeFalse" (formula "4"))
         )
      )
   )
)
)
}
