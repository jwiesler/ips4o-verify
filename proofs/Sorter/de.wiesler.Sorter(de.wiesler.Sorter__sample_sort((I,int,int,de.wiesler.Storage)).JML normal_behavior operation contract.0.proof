\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Apr 17 01:50:23 CEST 2023
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , finalFields-finalFields\\:immutable
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[Strategy]Timeout=-1
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Mon Apr 17 01:50:23 CEST 2023
contract=de.wiesler.Sorter[de.wiesler.Sorter\\:\\:sample_sort([I,int,int,de.wiesler.Storage)].JML normal_behavior operation contract.0
name=de.wiesler.Sorter[de.wiesler.Sorter\\:\\:sample_sort([I,int,int,de.wiesler.Storage)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "2" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "3" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "4" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "5" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "347157")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "translateJavaSubInt" (formula "1") (term "0,0,1,1,1,0"))
(rule "translateJavaSubInt" (formula "1") (term "0,0,1,1,0"))
(rule "translateJavaSubInt" (formula "1") (term "0,0,1,0,0"))
(rule "translateJavaSubInt" (formula "1") (term "2,0,2,0,0,0,0,1,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "12"))
(rule "eqSymm" (formula "14") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "12"))
 (builtin "One Step Simplification" (formula "3"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "13"))
 (builtin "One Step Simplification" (formula "2"))
(rule "polySimp_elimSub" (formula "14") (term "2,0,2,0,0,0,0,1,0,1"))
(rule "mul_literals" (formula "14") (term "1,2,0,2,0,0,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "4") (term "0,0"))
(rule "polySimp_elimSub" (formula "8") (term "0"))
(rule "polySimp_elimSub" (formula "9") (term "0"))
(rule "polySimp_addComm0" (formula "14") (term "2,0,2,0,0,0,0,1,0,1"))
(rule "polySimp_addComm0" (formula "4") (term "0,0"))
(rule "polySimp_addComm0" (formula "8") (term "0"))
(rule "polySimp_addComm0" (formula "9") (term "0"))
(rule "disjointDefinition" (formula "11"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "assignment" (formula "14") (term "1"))
 (builtin "One Step Simplification" (formula "14"))
(rule "elementOfUnion" (formula "14") (term "0,0,0,0,1,0,1"))
(rule "elementOfArrayRange" (formula "14") (term "0,0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,1,0,0,0,0,0,1,0,1"))
(rule "commuteIntersection" (formula "11") (term "0"))
(rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_sample_sort,savedHeapBefore_sample_sort,_beginBefore_sample_sort,_endBefore_sample_sort,_storageBefore_sample_sort,_valuesBefore_sample_sort,bucket_startsBefore_sample_sort,equal_bucketsBefore_sample_sort,num_bucketsBefore_sample_sort,num_bucketsBefore_sample_sort_0"))
 (builtin "One Step Simplification" (formula "14"))
(rule "variableDeclarationAssign" (formula "14") (term "1"))
(rule "variableDeclaration" (formula "14") (term "1") (newnames "bucket_starts"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "14") (term "1"))
(rule "variableDeclarationAssign" (formula "14") (term "1"))
(rule "variableDeclaration" (formula "14") (term "1") (newnames "var"))
(rule "assignmentAdditionInt" (formula "14") (term "1"))
 (builtin "One Step Simplification" (formula "14"))
(rule "translateJavaAddInt" (formula "14") (term "0,1,0"))
(rule "add_literals" (formula "14") (term "0,1,0"))
 (builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_createArray,result_21,exc_25,heapAfter_createArray,anon_heap_createArray") (contract "de.wiesler.Storage[de.wiesler.Storage::createArray(int)].JML normal_behavior operation contract.0"))
(branch "Post (createArray)"
    (builtin "One Step Simplification" (formula "13"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "andLeft" (formula "13"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,1,0") (ifseqformula "13"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "16"))
   (rule "notLeft" (formula "18"))
   (rule "notLeft" (formula "16"))
   (rule "replace_known_right" (formula "14") (term "0,1") (ifseqformula "18"))
    (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "19")))
   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
   (rule "assignment" (formula "22") (term "1"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "blockEmpty" (formula "22") (term "1"))
    (builtin "Block Contract (Internal)" (formula "22") (newnames "exc_26,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
   (branch "Validity"
       (builtin "One Step Simplification" (formula "18"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "translateJavaSubInt" (formula "18") (term "0,0,0"))
      (rule "andLeft" (formula "18"))
      (rule "eqSymm" (formula "24") (term "0,0,1,0,1"))
      (rule "polySimp_elimSub" (formula "18") (term "0,0"))
      (rule "polySimp_addComm0" (formula "18") (term "0,0"))
      (rule "disjointDefinition" (formula "23") (term "1,0,0,1,1,0,0,1"))
      (rule "disjointDefinition" (formula "23") (term "1,0,1,1,0,0,1"))
      (rule "disjointDefinition" (formula "23") (term "1,1,1,0,0,1"))
      (rule "disjointDefinition" (formula "23") (term "0,0,0,1,1,0,0,1"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "eqSymm" (formula "23") (term "0,0,0,0,1,1,0,0,1"))
      (rule "variableDeclarationAssign" (formula "23") (term "1"))
      (rule "variableDeclaration" (formula "23") (term "1") (newnames "exc_26_1"))
      (rule "assignment" (formula "23") (term "1"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "emptyStatement" (formula "23") (term "1"))
      (rule "emptyStatement" (formula "23") (term "1"))
      (rule "commute_and" (formula "16") (term "0,0"))
      (rule "tryEmpty" (formula "23") (term "1"))
      (rule "blockEmptyLabel" (formula "23") (term "1"))
      (rule "blockEmpty" (formula "23") (term "1"))
      (rule "methodCallEmpty" (formula "23") (term "1"))
      (rule "emptyModality" (formula "23") (term "1"))
      (rule "andRight" (formula "23"))
      (branch "Case 1"
         (rule "andRight" (formula "23"))
         (branch "Case 1"
             (builtin "One Step Simplification" (formula "23"))
            (rule "closeTrue" (formula "23"))
         )
         (branch "Case 2"
            (rule "andRight" (formula "23"))
            (branch "Case 1"
                (builtin "One Step Simplification" (formula "23"))
               (rule "eqTermCut" (formula "23") (term "0") (inst "s=seqDef{int j;}(begin,
               end,
               any::select(heap, values, arr(j)))") (userinteraction))
               (branch "Assume seqDef{int j;}(begin, end, any::select(heapAfter_createArray, values, arr(j))) = seqDef{int j;}(begin, end, any::select(heap, values, arr(j)))"
                  (rule "seqPermReflRightFirst" (formula "24") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "closeTrue" (formula "24"))
               )
               (branch "Assume seqDef{int j;}(begin, end, any::select(heapAfter_createArray, values, arr(j))) != seqDef{int j;}(begin, end, any::select(heap, values, arr(j)))"
                  (rule "notLeft" (formula "1"))
                  (rule "narrowSelectArrayType" (formula "24") (term "2,0") (ifseqformula "18") (ifseqformula "23"))
                  (rule "narrowSelectArrayType" (formula "19") (term "2,1") (ifseqformula "1") (ifseqformula "23"))
                  (rule "narrowSelectArrayType" (formula "24") (term "2,1") (ifseqformula "1") (ifseqformula "23"))
                  (rule "narrowSelectArrayType" (formula "19") (term "2,0") (ifseqformula "18") (ifseqformula "23"))
                  (rule "inEqSimp_gtToGeq" (formula "8"))
                  (rule "mul_literals" (formula "8") (term "1,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                  (rule "mul_literals" (formula "8") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
                  (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0"))
                  (rule "qeq_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "equalityToSeqGetAndSeqLenRight" (formula "18") (inst "iv=iv"))
                  (rule "getOfSeqDef" (formula "18") (term "1,1,0,1"))
                  (rule "castDel" (formula "18") (term "2,1,1,0,1"))
                  (rule "castDel" (formula "18") (term "1,1,1,0,1"))
                  (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0,1"))
                  (rule "polySimp_addComm0" (formula "18") (term "0,2,1,1,1,0,1"))
                  (rule "polySimp_addComm0" (formula "18") (term "1,1,0,1,1,0,1"))
                  (rule "lenOfSeqDef" (formula "18") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "18") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "18") (term "1,1,0"))
                  (rule "lenOfSeqDef" (formula "18") (term "0,0"))
                  (rule "polySimp_elimSub" (formula "18") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "18") (term "1,0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "allRight" (formula "18") (inst "sk=iv_0"))
                  (rule "impRight" (formula "18"))
                  (rule "andLeft" (formula "1"))
                  (rule "replace_known_left" (formula "20") (term "0,0,1") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "lenOfSeqDef" (formula "2") (term "1"))
                  (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "2") (term "1,1"))
                  (rule "getOfSeqDef" (formula "20") (term "0"))
                  (rule "castDel" (formula "20") (term "1,0"))
                  (rule "castDel" (formula "20") (term "2,0"))
                  (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "polySimp_elimSub" (formula "20") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "20") (term "0,2,1,0"))
                  (rule "polySimp_addComm0" (formula "20") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1"))
                  (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0"))
                  (rule "eqSymm" (formula "20"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1"))
                  (rule "eqSymm" (formula "20"))
                  (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,0"))
                  (rule "eqSymm" (formula "20"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1"))
                  (rule "eqSymm" (formula "20"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0"))
                  (rule "eqSymm" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,1,0,1"))
                  (rule "mul_literals" (formula "20") (term "0,0,1,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                  (rule "eqSymm" (formula "20"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,1,0,1"))
                  (rule "mul_literals" (formula "20") (term "0,0,1,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "2") (term "0,0") (ifseqformula "9"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                  (rule "qeq_literals" (formula "2") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                  (rule "mul_literals" (formula "2") (term "0,0,1"))
                  (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "2")))
                  (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "5")))
                  (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "closeTrue" (formula "21"))
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "23"))
               (branch "Case 1"
                  (rule "andRight" (formula "23"))
                  (branch "Case 1"
                     (rule "andRight" (formula "23"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "notRight" (formula "23"))
                        (rule "eqSymm" (formula "1"))
                        (rule "inEqSimp_gtToGeq" (formula "9"))
                        (rule "mul_literals" (formula "9") (term "1,0,0"))
                        (rule "add_literals" (formula "9") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "10"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0"))
                        (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                        (rule "close" (formula "20") (ifseqformula "3"))
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "11")))
                        (rule "closeTrue" (formula "23"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "inEqSimp_gtToGeq" (formula "8"))
                     (rule "mul_literals" (formula "8") (term "1,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1"))
                     (rule "polySimp_rightDist" (formula "8") (term "1"))
                     (rule "mul_literals" (formula "8") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
                     (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "qeq_literals" (formula "6") (term "0"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "nnf_imp2or" (formula "15") (term "0"))
                     (rule "nnf_notAnd" (formula "15") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                     (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "9"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "translateJavaMulInt" (formula "9") (term "1,1,0,0,0,0,0,1,0,0"))
                     (rule "translateJavaMulInt" (formula "9") (term "1,1,0,0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,1,0,0,0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,1,0,0,0,0,1,0,0"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "9"))
                     (rule "notLeft" (formula "11"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "15"))
                     (rule "notLeft" (formula "10"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "16"))
                     (rule "notLeft" (formula "10"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "17"))
                     (rule "andLeft" (formula "9"))
                     (rule "notLeft" (formula "11"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "9"))
                     (rule "notLeft" (formula "11"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "19"))
                     (rule "andLeft" (formula "9"))
                     (rule "notLeft" (formula "11"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "9"))
                     (rule "notLeft" (formula "9"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "disjointDefinition" (formula "45"))
                      (builtin "One Step Simplification" (formula "45"))
                     (rule "notLeft" (formula "45"))
                     (rule "disjointDefinition" (formula "44"))
                      (builtin "One Step Simplification" (formula "44"))
                     (rule "notLeft" (formula "44"))
                     (rule "disjointDefinition" (formula "43"))
                      (builtin "One Step Simplification" (formula "43"))
                     (rule "notLeft" (formula "43"))
                     (rule "eqSymm" (formula "51"))
                     (rule "disjointDefinition" (formula "42"))
                      (builtin "One Step Simplification" (formula "42"))
                     (rule "notLeft" (formula "42"))
                     (rule "eqSymm" (formula "50"))
                     (rule "disjointDefinition" (formula "41"))
                      (builtin "One Step Simplification" (formula "41"))
                     (rule "notLeft" (formula "41"))
                     (rule "eqSymm" (formula "49"))
                     (rule "disjointDefinition" (formula "40"))
                      (builtin "One Step Simplification" (formula "40"))
                     (rule "notLeft" (formula "40"))
                     (rule "eqSymm" (formula "48"))
                     (rule "disjointDefinition" (formula "39"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "notLeft" (formula "39"))
                     (rule "eqSymm" (formula "47"))
                     (rule "disjointDefinition" (formula "38"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "notLeft" (formula "38"))
                     (rule "eqSymm" (formula "46"))
                     (rule "disjointDefinition" (formula "37"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "notLeft" (formula "37"))
                     (rule "eqSymm" (formula "45"))
                     (rule "disjointDefinition" (formula "36"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "notLeft" (formula "36"))
                     (rule "eqSymm" (formula "44"))
                     (rule "disjointDefinition" (formula "35"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "notLeft" (formula "35"))
                     (rule "eqSymm" (formula "43"))
                     (rule "disjointDefinition" (formula "34"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "notLeft" (formula "34"))
                     (rule "eqSymm" (formula "42"))
                     (rule "disjointDefinition" (formula "33"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "notLeft" (formula "33"))
                     (rule "eqSymm" (formula "41"))
                     (rule "disjointDefinition" (formula "32"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "notLeft" (formula "32"))
                     (rule "eqSymm" (formula "40"))
                     (rule "disjointDefinition" (formula "31"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "notLeft" (formula "31"))
                     (rule "eqSymm" (formula "39"))
                     (rule "disjointDefinition" (formula "30"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "notLeft" (formula "30"))
                     (rule "disjointDefinition" (formula "29"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "notLeft" (formula "29"))
                     (rule "eqSymm" (formula "37"))
                     (rule "disjointDefinition" (formula "28"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "notLeft" (formula "28"))
                     (rule "eqSymm" (formula "36"))
                     (rule "disjointDefinition" (formula "27"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "notLeft" (formula "27"))
                     (rule "disjointDefinition" (formula "26"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "notLeft" (formula "26"))
                     (rule "disjointDefinition" (formula "25"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "notLeft" (formula "25"))
                     (rule "disjointDefinition" (formula "24"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "notLeft" (formula "24"))
                     (rule "disjointDefinition" (formula "23"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "notLeft" (formula "23"))
                     (rule "disjointDefinition" (formula "22"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "notLeft" (formula "22"))
                     (rule "disjointDefinition" (formula "21"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "notLeft" (formula "21"))
                     (rule "disjointDefinition" (formula "20"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "notLeft" (formula "20"))
                     (rule "disjointDefinition" (formula "18"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "notLeft" (formula "18"))
                     (rule "disjointDefinition" (formula "18"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "notLeft" (formula "18"))
                     (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "17"))
                     (rule "distributeIntersection" (formula "18") (term "0"))
                     (rule "distributeIntersection" (formula "66") (term "0"))
                     (rule "distributeIntersection" (formula "18") (term "1,0"))
                     (rule "distributeIntersection" (formula "18") (term "0,0"))
                     (rule "distributeIntersection" (formula "66") (term "0,0"))
                     (rule "distributeIntersection" (formula "66") (term "1,0"))
                     (rule "distributeIntersection" (formula "18") (term "0,1,0"))
                     (rule "distributeIntersection" (formula "18") (term "1,1,0"))
                     (rule "distributeIntersection" (formula "18") (term "0,0,0"))
                     (rule "distributeIntersection" (formula "18") (term "1,0,0"))
                     (rule "distributeIntersection" (formula "66") (term "1,0,0"))
                     (rule "distributeIntersection" (formula "66") (term "0,0,0"))
                     (rule "distributeIntersection" (formula "66") (term "1,1,0"))
                     (rule "distributeIntersection" (formula "66") (term "0,1,0"))
                     (rule "unionEqualsEmpty" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "unionEqualsEmpty" (formula "67"))
                     (rule "unionEqualsEmpty" (formula "19"))
                     (rule "andLeft" (formula "19"))
                     (rule "unionEqualsEmpty" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "unionEqualsEmpty" (formula "69") (term "0"))
                     (rule "unionEqualsEmpty" (formula "69") (term "1"))
                     (rule "unionEqualsEmpty" (formula "20"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "20"))
                     (rule "notLeft" (formula "20"))
                     (rule "eqSymm" (formula "29"))
                     (rule "eqSymm" (formula "28"))
                     (rule "unionEqualsEmpty" (formula "20"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "21"))
                     (rule "notLeft" (formula "20"))
                     (rule "eqSymm" (formula "28"))
                     (rule "eqSymm" (formula "27"))
                     (rule "unionEqualsEmpty" (formula "19"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "andLeft" (formula "19"))
                     (rule "notLeft" (formula "19"))
                     (rule "notLeft" (formula "19"))
                     (rule "eqSymm" (formula "27"))
                     (rule "eqSymm" (formula "26"))
                     (rule "unionEqualsEmpty" (formula "18"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "notLeft" (formula "18"))
                     (rule "notLeft" (formula "18"))
                     (rule "eqSymm" (formula "26"))
                     (rule "eqSymm" (formula "25"))
                     (rule "unionEqualsEmpty" (formula "73") (term "0,0"))
                      (builtin "One Step Simplification" (formula "73"))
                     (rule "eqSymm" (formula "73") (term "0,0,0,0"))
                     (rule "eqSymm" (formula "73") (term "0,1,0,0"))
                     (rule "unionEqualsEmpty" (formula "73") (term "1,0"))
                      (builtin "One Step Simplification" (formula "73"))
                     (rule "eqSymm" (formula "73") (term "0,1,1,0"))
                     (rule "eqSymm" (formula "73") (term "0,0,1,0"))
                     (rule "unionEqualsEmpty" (formula "73") (term "0,1"))
                      (builtin "One Step Simplification" (formula "73"))
                     (rule "eqSymm" (formula "73") (term "0,1,0,1"))
                     (rule "eqSymm" (formula "73") (term "0,0,0,1"))
                     (rule "unionEqualsEmpty" (formula "73") (term "1,1"))
                      (builtin "One Step Simplification" (formula "73"))
                     (rule "eqSymm" (formula "73") (term "0,1,1,1"))
                     (rule "eqSymm" (formula "73") (term "0,0,1,1"))
                     (rule "commuteUnion" (formula "17") (term "1,1,1"))
                     (rule "commuteUnion" (formula "17") (term "0,1"))
                     (rule "commuteUnion" (formula "17") (term "1,0,1"))
                     (rule "commute_or" (formula "22") (term "0,0"))
                     (rule "commute_and_2" (formula "73") (term "0"))
                     (rule "commute_and" (formula "73") (term "1,1"))
                     (rule "commute_and" (formula "73") (term "0,0"))
                     (rule "commute_and_2" (formula "73") (term "0"))
                     (rule "shift_paren_and" (formula "73") (term "1"))
                     (rule "commute_and_2" (formula "73"))
                     (rule "commute_and_2" (formula "73") (term "0,1,0"))
                     (rule "shift_paren_and" (formula "73") (term "0"))
                     (rule "associativeLawUnion" (formula "17") (term "1"))
                     (rule "arrayLengthNotNegative" (formula "6") (term "0"))
                     (rule "arrayLengthIsAShort" (formula "7") (term "0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                     (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                     (rule "qeq_literals" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "associativeLawUnion" (formula "18") (term "1"))
                     (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                     (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                     (rule "qeq_literals" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                     (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                     (rule "qeq_literals" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "shift_paren_and" (formula "74") (term "0,0"))
                     (rule "commute_and_2" (formula "74") (term "0,0,0"))
                     (rule "arrayLengthNotNegative" (formula "15") (term "0"))
                     (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                     (rule "qeq_literals" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "arrayLengthNotNegative" (formula "14") (term "0"))
                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                     (rule "qeq_literals" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "arrayLengthIsAShort" (formula "14") (term "0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "arrayLengthNotNegative" (formula "13") (term "0"))
                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                     (rule "qeq_literals" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "arrayLengthIsAShort" (formula "13") (term "0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "arrayLengthNotNegative" (formula "12") (term "0"))
                     (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                     (rule "qeq_literals" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "arrayLengthIsAShort" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                     (rule "qeq_literals" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "arrayLengthIsAShort" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                     (rule "qeq_literals" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "arrayLengthIsAShort" (formula "11") (term "0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "associativeLawUnion" (formula "18") (term "0,0,1"))
                     (rule "commuteUnion_2" (formula "18") (term "0,0,0,1"))
                     (rule "commuteUnion_2" (formula "18") (term "0,1"))
                     (rule "commuteUnion_2" (formula "18") (term "0,0,1"))
                     (rule "shift_paren_and" (formula "74") (term "0,0,0,0"))
                     (rule "associativeLawUnion" (formula "18") (term "0,0,1"))
                     (rule "commuteUnion_2" (formula "18") (term "0,1"))
                     (rule "commuteUnion_2" (formula "18") (term "1"))
                     (rule "cut_direct" (formula "74") (term "0,1"))
                     (branch "CUT: storage.tree = result_21 TRUE"
                         (builtin "One Step Simplification" (formula "75"))
                        (rule "false_right" (formula "75"))
                        (rule "applyEq" (formula "37") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "37"))
                        (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "35"))
                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "41"))
                        (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "28"))
                        (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "40"))
                        (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "36"))
                        (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "38"))
                        (rule "applyEq" (formula "39") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "39"))
                        (rule "applyEq" (formula "64") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "11") (term "0") (ifseqformula "23"))
                        (rule "equal_literals" (formula "11"))
                        (rule "closeFalse" (formula "11"))
                     )
                     (branch "CUT: storage.tree = result_21 FALSE"
                         (builtin "One Step Simplification" (formula "75"))
                        (rule "onlyCreatedObjectsAreReferencedFinal" (formula "17") (term "0,0") (ifseqformula "1") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "70"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "onlyCreatedObjectsAreReferencedFinal" (formula "16") (term "0,0") (ifseqformula "1") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "70"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "onlyCreatedObjectsAreReferencedFinal" (formula "15") (term "0,0") (ifseqformula "1") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "70"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "onlyCreatedObjectsAreReferencedFinal" (formula "14") (term "0,0") (ifseqformula "1") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "70"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "onlyCreatedObjectsAreReferencedFinal" (formula "13") (term "0,0") (ifseqformula "1") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "70"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "onlyCreatedObjectsAreReferencedFinal" (formula "12") (term "0,0") (ifseqformula "1") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "70"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "onlyCreatedObjectsAreReferencedFinal" (formula "10") (term "0,0") (ifseqformula "1") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "70"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "onlyCreatedObjectsAreReferencedFinal" (formula "12") (term "0,0") (ifseqformula "1") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "70"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "cut_direct" (formula "83") (term "0,1,0"))
                        (branch "CUT: storage.swap_1 = result_21 TRUE"
                            (builtin "One Step Simplification" (formula "84"))
                           (rule "false_right" (formula "84"))
                           (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "62"))
                           (rule "applyEq" (formula "47") (term "1") (ifseqformula "1"))
                           (rule "applyEq" (formula "27") (term "0,1,0,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "57") (term "0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "57"))
                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "41"))
                           (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "64") (term "0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "64"))
                           (rule "applyEq" (formula "75") (term "0") (ifseqformula "1"))
                           (rule "applyEq" (formula "67") (term "1") (ifseqformula "1"))
                           (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "1"))
                           (rule "close" (formula "77") (ifseqformula "21"))
                        )
                        (branch "CUT: storage.swap_1 = result_21 FALSE"
                            (builtin "One Step Simplification" (formula "84"))
                           (rule "cut_direct" (formula "84") (term "0,1,0,0,0"))
                           (branch "CUT: storage.buffers_indices = result_21 TRUE"
                               (builtin "One Step Simplification" (formula "85"))
                              (rule "false_right" (formula "85"))
                              (rule "applyEq" (formula "42") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "42"))
                              (rule "applyEq" (formula "27") (term "0,1,0,0,0,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "52") (term "1") (ifseqformula "1"))
                              (rule "applyEq" (formula "75") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "65") (term "1") (ifseqformula "1"))
                              (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                              (rule "close" (formula "77") (ifseqformula "19"))
                           )
                           (branch "CUT: storage.buffers_indices = result_21 FALSE"
                               (builtin "One Step Simplification" (formula "85"))
                              (rule "cut_direct" (formula "85") (term "0,1,0,0,0"))
                              (branch "CUT: storage.buffers_buffer = result_21 TRUE"
                                  (builtin "One Step Simplification" (formula "86"))
                                 (rule "false_right" (formula "86"))
                                 (rule "applyEq" (formula "45") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "63") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "50") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "27") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "61") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "1"))
                                 (rule "close" (formula "77") (ifseqformula "17"))
                              )
                              (branch "CUT: storage.buffers_buffer = result_21 FALSE"
                                  (builtin "One Step Simplification" (formula "86"))
                                 (rule "cut_direct" (formula "86") (term "0,1,0,0"))
                                 (branch "CUT: storage.overflow = result_21 TRUE"
                                     (builtin "One Step Simplification" (formula "87"))
                                    (rule "false_right" (formula "87"))
                                    (rule "applyEq" (formula "27") (term "0,1,0,0,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "70") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "1"))
                                    (rule "close" (formula "79") (ifseqformula "25"))
                                 )
                                 (branch "CUT: storage.overflow = result_21 FALSE"
                                     (builtin "One Step Simplification" (formula "87"))
                                    (rule "cut_direct" (formula "87") (term "0,0,0"))
                                    (branch "CUT: storage.bucket_pointers = result_21 TRUE"
                                        (builtin "One Step Simplification" (formula "88"))
                                       (rule "false_right" (formula "88"))
                                       (rule "applyEq" (formula "50") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "73") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "43") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "59") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "57") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "57") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "27") (term "0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "applyEq" (formula "55") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "1"))
                                       (rule "close" (formula "74") (ifseqformula "15"))
                                    )
                                    (branch "CUT: storage.bucket_pointers = result_21 FALSE"
                                        (builtin "One Step Simplification" (formula "88"))
                                       (rule "cut_direct" (formula "88") (term "0,1"))
                                       (branch "CUT: storage.swap_2 = result_21 TRUE"
                                           (builtin "One Step Simplification" (formula "89"))
                                          (rule "false_right" (formula "89"))
                                          (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "1"))
                                          (rule "close" (formula "79") (ifseqformula "23"))
                                       )
                                       (branch "CUT: storage.swap_2 = result_21 FALSE"
                                           (builtin "One Step Simplification" (formula "89"))
                                          (rule "notRight" (formula "89"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "35"))
                                          (rule "applyEq" (formula "53") (term "1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1"))
                                          (rule "close" (formula "78") (ifseqformula "13"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "inEqSimp_gtToGeq" (formula "8"))
                  (rule "mul_literals" (formula "8") (term "1,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                  (rule "mul_literals" (formula "8") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
                  (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "qeq_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "nnf_imp2or" (formula "15") (term "0"))
                  (rule "nnf_notAnd" (formula "15") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                  (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "9"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "translateJavaMulInt" (formula "9") (term "1,1,0,0,0,0,1,0,0"))
                  (rule "translateJavaMulInt" (formula "9") (term "1,1,0,0,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,1,0,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,1,0,0,0,0,0,1,0,0"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "15"))
                  (rule "notLeft" (formula "10"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "16"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "17"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "19"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "20"))
                  (rule "notLeft" (formula "9"))
                  (rule "notLeft" (formula "9"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "disjointDefinition" (formula "45"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "notLeft" (formula "45"))
                  (rule "disjointDefinition" (formula "44"))
                   (builtin "One Step Simplification" (formula "44"))
                  (rule "notLeft" (formula "44"))
                  (rule "disjointDefinition" (formula "43"))
                   (builtin "One Step Simplification" (formula "43"))
                  (rule "notLeft" (formula "43"))
                  (rule "eqSymm" (formula "51"))
                  (rule "disjointDefinition" (formula "42"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "notLeft" (formula "42"))
                  (rule "eqSymm" (formula "50"))
                  (rule "disjointDefinition" (formula "41"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "notLeft" (formula "41"))
                  (rule "eqSymm" (formula "49"))
                  (rule "disjointDefinition" (formula "40"))
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "notLeft" (formula "40"))
                  (rule "eqSymm" (formula "48"))
                  (rule "disjointDefinition" (formula "39"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "notLeft" (formula "39"))
                  (rule "eqSymm" (formula "47"))
                  (rule "disjointDefinition" (formula "38"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "notLeft" (formula "38"))
                  (rule "eqSymm" (formula "46"))
                  (rule "disjointDefinition" (formula "37"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "notLeft" (formula "37"))
                  (rule "eqSymm" (formula "45"))
                  (rule "disjointDefinition" (formula "36"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "notLeft" (formula "36"))
                  (rule "eqSymm" (formula "44"))
                  (rule "disjointDefinition" (formula "35"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "notLeft" (formula "35"))
                  (rule "eqSymm" (formula "43"))
                  (rule "disjointDefinition" (formula "34"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "notLeft" (formula "34"))
                  (rule "eqSymm" (formula "42"))
                  (rule "disjointDefinition" (formula "33"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "notLeft" (formula "33"))
                  (rule "eqSymm" (formula "41"))
                  (rule "disjointDefinition" (formula "32"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "notLeft" (formula "32"))
                  (rule "eqSymm" (formula "40"))
                  (rule "disjointDefinition" (formula "31"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "notLeft" (formula "31"))
                  (rule "eqSymm" (formula "39"))
                  (rule "disjointDefinition" (formula "30"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "notLeft" (formula "30"))
                  (rule "disjointDefinition" (formula "29"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "notLeft" (formula "29"))
                  (rule "eqSymm" (formula "37"))
                  (rule "disjointDefinition" (formula "28"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "notLeft" (formula "28"))
                  (rule "eqSymm" (formula "36"))
                  (rule "disjointDefinition" (formula "27"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "notLeft" (formula "27"))
                  (rule "disjointDefinition" (formula "26"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "notLeft" (formula "26"))
                  (rule "disjointDefinition" (formula "25"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "notLeft" (formula "25"))
                  (rule "disjointDefinition" (formula "24"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "notLeft" (formula "24"))
                  (rule "disjointDefinition" (formula "23"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "notLeft" (formula "23"))
                  (rule "disjointDefinition" (formula "22"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "notLeft" (formula "22"))
                  (rule "disjointDefinition" (formula "21"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "notLeft" (formula "21"))
                  (rule "disjointDefinition" (formula "20"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "notLeft" (formula "20"))
                  (rule "disjointDefinition" (formula "18"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "notLeft" (formula "18"))
                  (rule "disjointDefinition" (formula "18"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "notLeft" (formula "18"))
                  (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "17"))
                  (rule "distributeIntersection" (formula "66") (term "0"))
                  (rule "distributeIntersection" (formula "18") (term "0"))
                  (rule "distributeIntersection" (formula "66") (term "0,0"))
                  (rule "distributeIntersection" (formula "66") (term "1,0"))
                  (rule "distributeIntersection" (formula "18") (term "1,0"))
                  (rule "distributeIntersection" (formula "18") (term "0,0"))
                  (rule "distributeIntersection" (formula "66") (term "0,0,0"))
                  (rule "distributeIntersection" (formula "66") (term "1,0,0"))
                  (rule "distributeIntersection" (formula "66") (term "0,1,0"))
                  (rule "distributeIntersection" (formula "66") (term "1,1,0"))
                  (rule "distributeIntersection" (formula "18") (term "0,1,0"))
                  (rule "distributeIntersection" (formula "18") (term "1,1,0"))
                  (rule "distributeIntersection" (formula "18") (term "0,0,0"))
                  (rule "distributeIntersection" (formula "18") (term "1,0,0"))
                  (rule "unionEqualsEmpty" (formula "66"))
                  (rule "unionEqualsEmpty" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "unionEqualsEmpty" (formula "67") (term "0"))
                  (rule "unionEqualsEmpty" (formula "67") (term "1"))
                  (rule "unionEqualsEmpty" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "unionEqualsEmpty" (formula "20"))
                  (rule "andLeft" (formula "20"))
                  (rule "unionEqualsEmpty" (formula "69") (term "1,0"))
                   (builtin "One Step Simplification" (formula "69"))
                  (rule "eqSymm" (formula "69") (term "0,1,1,0"))
                  (rule "eqSymm" (formula "69") (term "0,0,1,0"))
                  (rule "sortsDisjointModuloNull" (formula "69") (term "0,1,1,0"))
                  (rule "replace_known_right" (formula "69") (term "0,0,1,1,0") (ifseqformula "60"))
                   (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "67")))
                  (rule "sortsDisjointModuloNull" (formula "69") (term "0,1,0"))
                  (rule "replace_known_right" (formula "69") (term "1,0,1,0") (ifseqformula "67"))
                   (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "59")))
                  (rule "unionEqualsEmpty" (formula "18"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "notLeft" (formula "18"))
                  (rule "notLeft" (formula "18"))
                  (rule "eqSymm" (formula "29"))
                  (rule "eqSymm" (formula "28"))
                  (rule "unionEqualsEmpty" (formula "18"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "notLeft" (formula "19"))
                  (rule "notLeft" (formula "18"))
                  (rule "eqSymm" (formula "28"))
                  (rule "eqSymm" (formula "27"))
                  (rule "unionEqualsEmpty" (formula "19"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "notLeft" (formula "20"))
                  (rule "notLeft" (formula "19"))
                  (rule "eqSymm" (formula "27"))
                  (rule "eqSymm" (formula "26"))
                  (rule "unionEqualsEmpty" (formula "18"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "notLeft" (formula "18"))
                  (rule "notLeft" (formula "18"))
                  (rule "eqSymm" (formula "26"))
                  (rule "eqSymm" (formula "25"))
                  (rule "unionEqualsEmpty" (formula "73") (term "0,1"))
                   (builtin "One Step Simplification" (formula "73"))
                  (rule "eqSymm" (formula "73") (term "0,1,0,1"))
                  (rule "eqSymm" (formula "73") (term "0,0,0,1"))
                  (rule "sortsDisjointModuloNull" (formula "73") (term "0,1,0,1"))
                  (rule "replace_known_right" (formula "73") (term "1,0,1,0,1") (ifseqformula "71"))
                   (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "66")))
                  (rule "sortsDisjointModuloNull" (formula "73") (term "0,0,1"))
                  (rule "replace_known_right" (formula "73") (term "1,0,0,1") (ifseqformula "71"))
                   (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "65")))
                  (rule "unionEqualsEmpty" (formula "73") (term "0"))
                   (builtin "One Step Simplification" (formula "73"))
                  (rule "eqSymm" (formula "73") (term "0,0,0"))
                  (rule "eqSymm" (formula "73") (term "0,1,0"))
                  (rule "sortsDisjointModuloNull" (formula "73") (term "0,0,0"))
                  (rule "replace_known_right" (formula "73") (term "0,0,0,0") (ifseqformula "62"))
                   (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "71")))
                  (rule "sortsDisjointModuloNull" (formula "73") (term "0,0"))
                  (rule "replace_known_right" (formula "73") (term "1,0,0") (ifseqformula "71"))
                   (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "61")))
                  (rule "unionEqualsEmpty" (formula "73"))
                   (builtin "One Step Simplification" (formula "73"))
                  (rule "eqSymm" (formula "73") (term "0,0"))
                  (rule "eqSymm" (formula "73") (term "0,1"))
                  (rule "sortsDisjointModuloNull" (formula "73") (term "0,0"))
                  (rule "replace_known_right" (formula "73") (term "1,0,0") (ifseqformula "71"))
                   (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "67")))
                  (rule "notRight" (formula "73"))
                  (rule "sortsDisjointModuloNull" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "close" (formula "70") (ifseqformula "1"))
               )
            )
         )
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "23"))
         (rule "closeTrue" (formula "23"))
      )
   )
   (branch "Precondition"
      (rule "andRight" (formula "22"))
      (branch "Case 1"
          (builtin "One Step Simplification" (formula "22"))
         (rule "translateJavaSubInt" (formula "22") (term "0,0"))
         (rule "polySimp_elimSub" (formula "22") (term "0,0"))
         (rule "polySimp_addComm0" (formula "22") (term "0,0"))
         (rule "close" (formula "22") (ifseqformula "4"))
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "22"))
         (rule "wellFormedAnonEQ" (formula "22") (ifseqformula "13"))
         (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "12")))
         (rule "closeTrue" (formula "22"))
      )
   )
   (branch "Usage"
       (builtin "One Step Simplification" (formula "18"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1,1") (ifseqformula "13"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "18"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "true_left" (formula "24"))
      (rule "disjointDefinition" (formula "23"))
      (rule "disjointDefinition" (formula "22"))
      (rule "disjointDefinition" (formula "20"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "notLeft" (formula "20"))
      (rule "disjointDefinition" (formula "20"))
      (rule "narrowSelectArrayType" (formula "19") (term "2,1") (ifseqformula "1") (ifseqformula "26"))
      (rule "commute_and" (formula "16") (term "0,0"))
      (rule "ifUnfold" (formula "27") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "27") (term "1") (newnames "x"))
      (rule "inequality_comparison_simple" (formula "27") (term "1"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "replace_known_left" (formula "27") (term "0,0,1,0") (ifseqformula "18"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "arrayLengthNotNegative" (formula "7") (term "0"))
      (rule "arrayLengthIsAShort" (formula "8") (term "0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "ifSplit" (formula "28"))
      (branch "if x true"
          (builtin "One Step Simplification" (formula "29"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x false"
          (builtin "One Step Simplification" (formula "29"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "blockEmpty" (formula "28") (term "1"))
         (rule "variableDeclarationAssign" (formula "28") (term "1"))
         (rule "variableDeclaration" (formula "28") (term "1") (newnames "partition"))
          (builtin "Use Operation Contract" (formula "28") (newnames "heapBefore_partition,result_22,exc_27,heapAfter_partition,anon_heap_partition") (contract "de.wiesler.Sorter[de.wiesler.Sorter::partition([I,int,int,[I,de.wiesler.Storage)].JML normal_behavior operation contract.0"))
         (branch "Post (partition)"
             (builtin "One Step Simplification" (formula "30"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "translateJavaSubInt" (formula "24") (term "1,1,0,0,0,0,1,0,1,0,1,1"))
            (rule "translateJavaSubInt" (formula "24") (term "7,0,1,1,0,1,0,1,0,1,1"))
            (rule "translateJavaSubInt" (formula "24") (term "3,0,1,1,0,1,0,1,1"))
            (rule "translateJavaSubInt" (formula "24") (term "2,0,0,1,0,0"))
            (rule "translateJavaMod" (formula "24") (term "0,0,0,0,0,0,0,1,0,1,0,1,1"))
            (rule "andLeft" (formula "24"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,1,0") (ifseqformula "24"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1,1,0") (ifseqformula "14"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "27"))
            (rule "andLeft" (formula "27"))
            (rule "andLeft" (formula "28"))
            (rule "polySimp_elimSub" (formula "24") (term "2,0,0,1,0"))
            (rule "mul_literals" (formula "24") (term "1,2,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "28") (term "3,0,1,1"))
            (rule "polySimp_elimSub" (formula "28") (term "7,0,1,1,0,1"))
            (rule "mul_literals" (formula "28") (term "1,7,0,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "28") (term "1,1,0,0,0,0,1"))
            (rule "polySimp_addComm0" (formula "24") (term "2,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "28") (term "3,0,1,1"))
            (rule "polySimp_addComm0" (formula "28") (term "7,0,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "28") (term "1,1,0,0,0,0,1"))
            (rule "assignment" (formula "35") (term "1"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "pullOutSelect" (formula "28") (term "0,1,0,0,0,0,1") (inst "selectSK=arr_0"))
            (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "24"))
             (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "33")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,0,0") (ifseqformula "14"))
            (rule "replace_known_right" (formula "28") (term "0,0,1,0,0") (ifseqformula "32"))
             (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "15")))
            (rule "elementOfUnion" (formula "28") (term "0,0"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "applyEqReverse" (formula "29") (term "0,1,0,0,0,0,1") (ifseqformula "28"))
            (rule "hideAuxiliaryEq" (formula "28"))
            (rule "commuteUnion" (formula "24") (term "1,0"))
            (rule "commuteUnion" (formula "24") (term "1,1,0"))
            (rule "shift_paren_or" (formula "26"))
            (rule "shift_paren_or" (formula "26") (term "0"))
            (rule "commute_and_2" (formula "28") (term "0,0,0,1"))
            (rule "commute_and_2" (formula "28") (term "0,0,1"))
            (rule "associativeLawUnion" (formula "24") (term "1,0"))
            (rule "commute_and" (formula "28") (term "0,0,0,0,0,1"))
            (rule "commute_and_2" (formula "28") (term "0,0,0,0,1"))
            (rule "commute_and_2" (formula "28") (term "0,0,0,1"))
            (rule "ifUnfold" (formula "35") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "35") (term "1") (newnames "x_1"))
            (rule "equality_comparison_simple" (formula "35") (term "1"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "arrayLengthIsAShort" (formula "16") (term "0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "arrayLengthNotNegative" (formula "16") (term "0"))
            (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
            (rule "qeq_literals" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "ifSplit" (formula "35"))
            (branch "if x_1 true"
                (builtin "One Step Simplification" (formula "36"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "true_left" (formula "29"))
               (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "1"))
                (builtin "Use Operation Contract" (formula "34") (newnames "heapBefore_fallback_sort,exc_28,heapAfter_fallback_sort,anon_heap_fallback_sort") (contract "de.wiesler.Sorter[de.wiesler.Sorter::fallback_sort([I,int,int)].JML normal_behavior operation contract.0"))
               (branch "Post (fallback_sort)"
                   (builtin "One Step Simplification" (formula "30"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "translateJavaSubInt" (formula "30") (term "2,1,0,0"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "31"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "33"))
                  (rule "eqSymm" (formula "33") (term "0"))
                  (rule "polySimp_elimSub" (formula "30") (term "2,1,0"))
                  (rule "mul_literals" (formula "30") (term "1,2,1,0"))
                  (rule "polySimp_addComm0" (formula "30") (term "2,1,0"))
                  (rule "blockReturnNoValue" (formula "40") (term "1"))
                  (rule "methodCallEmptyReturn" (formula "40") (term "1"))
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "tryEmpty" (formula "40") (term "1"))
                  (rule "emptyModality" (formula "40") (term "1"))
                  (rule "andRight" (formula "40"))
                  (branch "Case 1"
                     (rule "andRight" (formula "40"))
                     (branch "Case 1"
                        (rule "andRight" (formula "40"))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "seqPermTrans" (formula "32") (ifseqformula "27") (userinteraction))
                           (rule "seqPermTrans" (formula "27") (ifseqformula "21") (userinteraction))
                           (rule "narrowSelectArrayType" (formula "42") (term "2,1") (ifseqformula "2") (ifseqformula "41"))
                           (rule "seqPermTransRight" (formula "42") (ifseqformula "33") (ifseqformula "21"))
                           (rule "close" (formula "43") (ifseqformula "1"))
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "40"))
                           (branch "Case 1"
                               (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "34")))
                              (rule "closeTrue" (formula "40"))
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "10"))
                              (rule "mul_literals" (formula "10") (term "1,0,0"))
                              (rule "add_literals" (formula "10") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                              (rule "mul_literals" (formula "10") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                              (rule "polySimp_elimOne" (formula "11") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                              (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0"))
                              (rule "qeq_literals" (formula "7") (term "0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "nnf_imp2or" (formula "17") (term "0"))
                              (rule "nnf_notAnd" (formula "17") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                              (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                              (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "32") (term "1,0") (inst "i=i"))
                              (rule "eqSymm" (formula "32") (term "0"))
                              (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "27"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "translateJavaMulInt" (formula "27") (term "1,1,0,0,0,0,1,0,0"))
                              (rule "translateJavaMulInt" (formula "27") (term "1,1,0,0,0,0,0,1,0,0"))
                              (rule "mul_literals" (formula "27") (term "1,1,0,0,0,0,0,1,0,0"))
                              (rule "mul_literals" (formula "27") (term "1,1,0,0,0,0,1,0,0"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "29"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "30"))
                              (rule "andLeft" (formula "28"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "32"))
                              (rule "andLeft" (formula "29"))
                              (rule "notLeft" (formula "28"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "33"))
                              (rule "andLeft" (formula "29"))
                              (rule "andLeft" (formula "27"))
                              (rule "notLeft" (formula "29"))
                              (rule "andLeft" (formula "34"))
                              (rule "andLeft" (formula "29"))
                              (rule "notLeft" (formula "28"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "35"))
                              (rule "andLeft" (formula "29"))
                              (rule "notLeft" (formula "28"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "29"))
                              (rule "andLeft" (formula "27"))
                              (rule "notLeft" (formula "29"))
                              (rule "andLeft" (formula "37"))
                              (rule "andLeft" (formula "29"))
                              (rule "andLeft" (formula "27"))
                              (rule "notLeft" (formula "29"))
                              (rule "andLeft" (formula "38"))
                              (rule "notLeft" (formula "27"))
                              (rule "notLeft" (formula "27"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "disjointDefinition" (formula "63"))
                               (builtin "One Step Simplification" (formula "63"))
                              (rule "notLeft" (formula "63"))
                              (rule "disjointDefinition" (formula "62"))
                               (builtin "One Step Simplification" (formula "62"))
                              (rule "notLeft" (formula "62"))
                              (rule "disjointDefinition" (formula "61"))
                               (builtin "One Step Simplification" (formula "61"))
                              (rule "notLeft" (formula "61"))
                              (rule "eqSymm" (formula "67"))
                              (rule "disjointDefinition" (formula "60"))
                               (builtin "One Step Simplification" (formula "60"))
                              (rule "notLeft" (formula "60"))
                              (rule "eqSymm" (formula "66"))
                              (rule "disjointDefinition" (formula "59"))
                               (builtin "One Step Simplification" (formula "59"))
                              (rule "notLeft" (formula "59"))
                              (rule "eqSymm" (formula "65"))
                              (rule "disjointDefinition" (formula "58"))
                               (builtin "One Step Simplification" (formula "58"))
                              (rule "notLeft" (formula "58"))
                              (rule "eqSymm" (formula "64"))
                              (rule "disjointDefinition" (formula "57"))
                               (builtin "One Step Simplification" (formula "57"))
                              (rule "notLeft" (formula "57"))
                              (rule "eqSymm" (formula "63"))
                              (rule "disjointDefinition" (formula "56"))
                               (builtin "One Step Simplification" (formula "56"))
                              (rule "notLeft" (formula "56"))
                              (rule "eqSymm" (formula "62"))
                              (rule "disjointDefinition" (formula "55"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "notLeft" (formula "55"))
                              (rule "eqSymm" (formula "61"))
                              (rule "disjointDefinition" (formula "54"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "notLeft" (formula "54"))
                              (rule "eqSymm" (formula "60"))
                              (rule "disjointDefinition" (formula "53"))
                               (builtin "One Step Simplification" (formula "53"))
                              (rule "notLeft" (formula "53"))
                              (rule "eqSymm" (formula "59"))
                              (rule "disjointDefinition" (formula "52"))
                               (builtin "One Step Simplification" (formula "52"))
                              (rule "notLeft" (formula "52"))
                              (rule "eqSymm" (formula "58"))
                              (rule "disjointDefinition" (formula "51"))
                               (builtin "One Step Simplification" (formula "51"))
                              (rule "notLeft" (formula "51"))
                              (rule "eqSymm" (formula "57"))
                              (rule "disjointDefinition" (formula "50"))
                               (builtin "One Step Simplification" (formula "50"))
                              (rule "notLeft" (formula "50"))
                              (rule "eqSymm" (formula "56"))
                              (rule "disjointDefinition" (formula "49"))
                               (builtin "One Step Simplification" (formula "49"))
                              (rule "notLeft" (formula "49"))
                              (rule "eqSymm" (formula "55"))
                              (rule "disjointDefinition" (formula "48"))
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "notLeft" (formula "48"))
                              (rule "disjointDefinition" (formula "47"))
                               (builtin "One Step Simplification" (formula "47"))
                              (rule "notLeft" (formula "47"))
                              (rule "eqSymm" (formula "53"))
                              (rule "disjointDefinition" (formula "46"))
                               (builtin "One Step Simplification" (formula "46"))
                              (rule "notLeft" (formula "46"))
                              (rule "eqSymm" (formula "52"))
                              (rule "disjointDefinition" (formula "45"))
                               (builtin "One Step Simplification" (formula "45"))
                              (rule "notLeft" (formula "45"))
                              (rule "disjointDefinition" (formula "44"))
                               (builtin "One Step Simplification" (formula "44"))
                              (rule "notLeft" (formula "44"))
                              (rule "disjointDefinition" (formula "43"))
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "notLeft" (formula "43"))
                              (rule "disjointDefinition" (formula "42"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "notLeft" (formula "42"))
                              (rule "disjointDefinition" (formula "41"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "notLeft" (formula "41"))
                              (rule "disjointDefinition" (formula "40"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "notLeft" (formula "40"))
                              (rule "disjointDefinition" (formula "39"))
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "notLeft" (formula "39"))
                              (rule "disjointDefinition" (formula "38"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "notLeft" (formula "38"))
                              (rule "disjointDefinition" (formula "36"))
                               (builtin "One Step Simplification" (formula "36"))
                              (rule "notLeft" (formula "36"))
                              (rule "disjointDefinition" (formula "36"))
                               (builtin "One Step Simplification" (formula "36"))
                              (rule "notLeft" (formula "36"))
                              (rule "applyEq" (formula "24") (term "1,0,1,0") (ifseqformula "35"))
                              (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "35"))
                              (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "35"))
                              (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "35"))
                              (rule "distributeIntersection" (formula "12") (term "0"))
                              (rule "distributeIntersection" (formula "21") (term "0"))
                              (rule "distributeIntersection" (formula "22") (term "0"))
                              (rule "distributeIntersection" (formula "12") (term "0,0"))
                              (rule "distributeIntersection" (formula "12") (term "1,0"))
                              (rule "distributeIntersection" (formula "21") (term "1,0"))
                              (rule "distributeIntersection" (formula "21") (term "0,0"))
                              (rule "unionEqualsEmpty" (formula "22"))
                              (rule "andLeft" (formula "22"))
                              (rule "distributeIntersection" (formula "12") (term "1,0,0"))
                              (rule "distributeIntersection" (formula "12") (term "0,0,0"))
                              (rule "distributeIntersection" (formula "12") (term "1,1,0"))
                              (rule "distributeIntersection" (formula "12") (term "0,1,0"))
                              (rule "distributeIntersection" (formula "21") (term "1,1,0"))
                              (rule "distributeIntersection" (formula "21") (term "0,1,0"))
                              (rule "distributeIntersection" (formula "21") (term "0,0,0"))
                              (rule "distributeIntersection" (formula "21") (term "1,0,0"))
                              (rule "distributeIntersection" (formula "22") (term "0"))
                              (rule "distributeIntersection" (formula "23") (term "0"))
                              (rule "unionEqualsEmpty" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "unionEqualsEmpty" (formula "22"))
                              (rule "andLeft" (formula "22"))
                              (rule "unionEqualsEmpty" (formula "24"))
                              (rule "andLeft" (formula "24"))
                              (rule "unionEqualsEmpty" (formula "26"))
                              (rule "andLeft" (formula "26"))
                              (rule "unionEqualsEmpty" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "unionEqualsEmpty" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "unionEqualsEmpty" (formula "25"))
                              (rule "andLeft" (formula "25"))
                              (rule "unionEqualsEmpty" (formula "24"))
                              (rule "andLeft" (formula "24"))
                              (rule "distributeIntersection" (formula "28") (term "0"))
                              (rule "distributeIntersection" (formula "29") (term "0"))
                              (rule "distributeIntersection" (formula "30") (term "0"))
                              (rule "distributeIntersection" (formula "31") (term "0"))
                              (rule "unionEqualsEmpty" (formula "15"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "andLeft" (formula "15"))
                              (rule "notLeft" (formula "16"))
                              (rule "notLeft" (formula "15"))
                              (rule "eqSymm" (formula "51"))
                              (rule "eqSymm" (formula "50"))
                              (rule "unionEqualsEmpty" (formula "14"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "notLeft" (formula "14"))
                              (rule "notLeft" (formula "14"))
                              (rule "eqSymm" (formula "50"))
                              (rule "eqSymm" (formula "49"))
                              (rule "unionEqualsEmpty" (formula "12"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "notLeft" (formula "12"))
                              (rule "notLeft" (formula "12"))
                              (rule "eqSymm" (formula "49"))
                              (rule "eqSymm" (formula "48"))
                              (rule "unionEqualsEmpty" (formula "12"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "notLeft" (formula "13"))
                              (rule "notLeft" (formula "12"))
                              (rule "eqSymm" (formula "48"))
                              (rule "eqSymm" (formula "47"))
                              (rule "unionEqualsEmpty" (formula "23"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "andLeft" (formula "23"))
                              (rule "notLeft" (formula "23"))
                              (rule "notLeft" (formula "23"))
                              (rule "eqSymm" (formula "47"))
                              (rule "eqSymm" (formula "46"))
                              (rule "unionEqualsEmpty" (formula "22"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "andLeft" (formula "22"))
                              (rule "notLeft" (formula "23"))
                              (rule "notLeft" (formula "22"))
                              (rule "eqSymm" (formula "46"))
                              (rule "eqSymm" (formula "45"))
                              (rule "unionEqualsEmpty" (formula "21"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "andLeft" (formula "21"))
                              (rule "notLeft" (formula "21"))
                              (rule "notLeft" (formula "21"))
                              (rule "eqSymm" (formula "45"))
                              (rule "eqSymm" (formula "44"))
                              (rule "unionEqualsEmpty" (formula "20"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "eqSymm" (formula "44"))
                              (rule "eqSymm" (formula "43"))
                              (rule "unionEqualsEmpty" (formula "20"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "eqSymm" (formula "43"))
                              (rule "eqSymm" (formula "42"))
                              (rule "sortsDisjointModuloNull" (formula "43"))
                              (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "99"))
                               (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "89")))
                              (rule "false_right" (formula "43"))
                              (rule "sortsDisjointModuloNull" (formula "42"))
                              (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "98"))
                               (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "87")))
                              (rule "false_right" (formula "42"))
                              (rule "unionEqualsEmpty" (formula "20"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "eqSymm" (formula "42"))
                              (rule "eqSymm" (formula "41"))
                              (rule "sortsDisjointModuloNull" (formula "42"))
                              (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "98"))
                               (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "89")))
                              (rule "false_right" (formula "42"))
                              (rule "sortsDisjointModuloNull" (formula "41"))
                              (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "97"))
                               (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "89")))
                              (rule "false_right" (formula "41"))
                              (rule "unionEqualsEmpty" (formula "20"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "eqSymm" (formula "41"))
                              (rule "eqSymm" (formula "40"))
                              (rule "sortsDisjointModuloNull" (formula "41"))
                              (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "90"))
                               (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "97")))
                              (rule "false_right" (formula "41"))
                              (rule "sortsDisjointModuloNull" (formula "40"))
                              (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "96"))
                               (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "90")))
                              (rule "false_right" (formula "40"))
                              (rule "unionEqualsEmpty" (formula "20"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "eqSymm" (formula "40"))
                              (rule "eqSymm" (formula "39"))
                              (rule "sortsDisjointModuloNull" (formula "40"))
                              (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "96"))
                               (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "91")))
                              (rule "false_right" (formula "40"))
                              (rule "sortsDisjointModuloNull" (formula "39"))
                              (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "95"))
                               (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "91")))
                              (rule "false_right" (formula "39"))
                              (rule "commuteUnion" (formula "32") (term "1,1,1"))
                              (rule "commuteUnion_2" (formula "32") (term "0,1"))
                              (rule "commuteUnion" (formula "21") (term "0,1,0,1,0"))
                              (rule "commuteUnion" (formula "21") (term "1,1,1,0,1,0"))
                              (rule "commuteUnion" (formula "32") (term "0,0,1"))
                              (rule "commuteUnion" (formula "21") (term "1,0,1,0,1,0"))
                              (rule "commuteUnion_2" (formula "32") (term "0,1"))
                              (rule "commuteUnion_2" (formula "32") (term "1"))
                              (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "38") (term "0"))
                              (rule "wellFormedAnonEQ" (formula "38") (term "1,0") (ifseqformula "34"))
                              (rule "wellFormedAnonEQ" (formula "38") (term "0,1,0") (ifseqformula "21"))
                              (rule "wellFormedAnonEQ" (formula "38") (term "0,0,1,0") (ifseqformula "13"))
                              (rule "replace_known_right" (formula "38") (term "0,0,0") (ifseqformula "96"))
                               (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "2")) (ifInst ""  (formula "12")) (ifInst ""  (formula "20")) (ifInst ""  (formula "33")) (ifInst ""  (formula "39")))
                              (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "37") (term "1,0") (inst "i=i"))
                              (rule "eqSymm" (formula "37") (term "0"))
                              (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "39") (term "0") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "translateJavaSubInt" (formula "39") (term "1,1,0,0"))
                              (rule "translateJavaAddInt" (formula "39") (term "0,2,1,1,0"))
                              (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "39") (term "1,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "39") (term "0,2,1,1,0"))
                              (rule "polySimp_addComm0" (formula "39") (term "1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                              (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "97"))
                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "85")) (ifInst ""  (formula "84")) (ifInst ""  (formula "86")) (ifInst ""  (formula "87")) (ifInst ""  (formula "88")) (ifInst ""  (formula "89")) (ifInst ""  (formula "90")) (ifInst ""  (formula "91")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                              (rule "translateJavaMulInt" (formula "97") (term "1,0,0,0"))
                              (rule "translateJavaMulInt" (formula "97") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "97") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "97") (term "1,1,0,0"))
                              (rule "replace_known_left" (formula "97") (term "1,0,0") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "26")))
                              (rule "disjointDefinition" (formula "97") (term "1,0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "eqSymm" (formula "97") (term "0,1,0,0,0,0,1"))
                              (rule "replace_known_right" (formula "97") (term "0,1,0,0,0,0,1") (ifseqformula "79"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "disjointDefinition" (formula "97") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "65")))
                              (rule "disjointDefinition" (formula "97") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "56")))
                              (rule "disjointDefinition" (formula "97") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "64")))
                              (rule "disjointDefinition" (formula "97") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "57")))
                              (rule "disjointDefinition" (formula "97") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "eqSymm" (formula "97") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                              (rule "replace_known_right" (formula "97") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "66"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "disjointDefinition" (formula "97") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "59")))
                              (rule "disjointDefinition" (formula "97") (term "1,0,1"))
                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "82")))
                              (rule "disjointDefinition" (formula "97") (term "1,0,0,0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "eqSymm" (formula "97") (term "0,1,0,0,0,0,0,0,1"))
                              (rule "replace_known_right" (formula "97") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "75"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "disjointDefinition" (formula "97") (term "1,0,0,0,0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "eqSymm" (formula "97") (term "0,1,0,0,0,0,0,0,0,1"))
                              (rule "replace_known_right" (formula "97") (term "0,1,0,0,0,0,0,0,0,1") (ifseqformula "73"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "disjointDefinition" (formula "97") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "eqSymm" (formula "97") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                              (rule "replace_known_right" (formula "97") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "67"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "disjointDefinition" (formula "97") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "60")))
                              (rule "disjointDefinition" (formula "97") (term "1,0,0,0,0,0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "eqSymm" (formula "97") (term "0,1,0,0,0,0,0,0,0,0,1"))
                              (rule "replace_known_right" (formula "97") (term "0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "71"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "disjointDefinition" (formula "97") (term "1,0,0,0,0,0,0,0,0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "63")))
                              (rule "disjointDefinition" (formula "97") (term "1,1"))
                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "83")))
                              (rule "disjointDefinition" (formula "97") (term "1,0,1"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "eqSymm" (formula "97") (term "0,1,0,1"))
                              (rule "replace_known_right" (formula "97") (term "0,1,0,1") (ifseqformula "80"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "disjointDefinition" (formula "97") (term "1,0,0,0,0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "eqSymm" (formula "97") (term "0,1,0,0,0,0,0,0,0,1"))
                              (rule "replace_known_right" (formula "97") (term "0,1,0,0,0,0,0,0,0,1") (ifseqformula "69"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "disjointDefinition" (formula "97") (term "0,0,0,0,0,0,0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "58")))
                              (rule "disjointDefinition" (formula "97") (term "0,0,0,0,0,0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "61")))
                              (rule "disjointDefinition" (formula "97") (term "1,0,0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "eqSymm" (formula "97") (term "0,1,0,0,0,0,0,1"))
                              (rule "replace_known_right" (formula "97") (term "0,1,0,0,0,0,0,1") (ifseqformula "72"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "disjointDefinition" (formula "97") (term "1,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "eqSymm" (formula "97") (term "0,1,0,0,0,1"))
                              (rule "replace_known_right" (formula "97") (term "0,1,0,0,0,1") (ifseqformula "76"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "disjointDefinition" (formula "97") (term "1,1"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "eqSymm" (formula "97") (term "0,1,1"))
                              (rule "replace_known_right" (formula "97") (term "0,1,1") (ifseqformula "81"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "disjointDefinition" (formula "97") (term "1,0,1"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "eqSymm" (formula "97") (term "0,1,0,1"))
                              (rule "replace_known_right" (formula "97") (term "0,1,0,1") (ifseqformula "77"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "disjointDefinition" (formula "97") (term "1,0,0,1"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "eqSymm" (formula "97") (term "0,1,0,0,1"))
                              (rule "replace_known_right" (formula "97") (term "0,1,0,0,1") (ifseqformula "70"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "disjointDefinition" (formula "97") (term "1,0,1"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "eqSymm" (formula "97") (term "0,1,0,1"))
                              (rule "replace_known_right" (formula "97") (term "0,1,0,1") (ifseqformula "74"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "disjointDefinition" (formula "97") (term "1,0,1"))
                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "68")))
                              (rule "disjointDefinition" (formula "97") (term "1,1"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "eqSymm" (formula "97") (term "0,1,1"))
                              (rule "replace_known_right" (formula "97") (term "0,1,1") (ifseqformula "78"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "disjointDefinition" (formula "97") (term "1"))
                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "62")))
                              (rule "applyEq" (formula "97") (term "0") (ifseqformula "32"))
                              (rule "eqSymm" (formula "97"))
                              (rule "commuteUnion" (formula "97") (term "0,0"))
                              (rule "commuteUnion" (formula "97") (term "1,1,0"))
                              (rule "commuteUnion" (formula "97") (term "1,0,0"))
                              (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "11"))
                               (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "85")) (ifInst ""  (formula "84")) (ifInst ""  (formula "86")) (ifInst ""  (formula "87")) (ifInst ""  (formula "88")) (ifInst ""  (formula "89")) (ifInst ""  (formula "90")) (ifInst ""  (formula "91")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                              (rule "translateJavaMulInt" (formula "11") (term "1,1,0,0"))
                              (rule "translateJavaMulInt" (formula "11") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                              (rule "andLeft" (formula "11"))
                              (rule "andLeft" (formula "11"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "11"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "disjointDefinition" (formula "39"))
                               (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "111")))
                              (rule "true_left" (formula "39"))
                              (rule "disjointDefinition" (formula "38"))
                               (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "109")))
                              (rule "true_left" (formula "38"))
                              (rule "disjointDefinition" (formula "37"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "notLeft" (formula "37"))
                              (rule "eqSymm" (formula "65"))
                              (rule "disjointDefinition" (formula "36"))
                               (builtin "One Step Simplification" (formula "36"))
                              (rule "notLeft" (formula "36"))
                              (rule "eqSymm" (formula "64"))
                              (rule "disjointDefinition" (formula "35"))
                               (builtin "One Step Simplification" (formula "35"))
                              (rule "notLeft" (formula "35"))
                              (rule "eqSymm" (formula "63"))
                              (rule "disjointDefinition" (formula "34"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "notLeft" (formula "34"))
                              (rule "eqSymm" (formula "62"))
                              (rule "disjointDefinition" (formula "33"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "notLeft" (formula "33"))
                              (rule "eqSymm" (formula "61"))
                              (rule "disjointDefinition" (formula "32"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "notLeft" (formula "32"))
                              (rule "eqSymm" (formula "60"))
                              (rule "disjointDefinition" (formula "31"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "notLeft" (formula "31"))
                              (rule "eqSymm" (formula "59"))
                              (rule "disjointDefinition" (formula "30"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "notLeft" (formula "30"))
                              (rule "eqSymm" (formula "58"))
                              (rule "disjointDefinition" (formula "29"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "notLeft" (formula "29"))
                              (rule "eqSymm" (formula "57"))
                              (rule "disjointDefinition" (formula "28"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "notLeft" (formula "28"))
                              (rule "eqSymm" (formula "56"))
                              (rule "disjointDefinition" (formula "27"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "notLeft" (formula "27"))
                              (rule "eqSymm" (formula "55"))
                              (rule "disjointDefinition" (formula "26"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "notLeft" (formula "26"))
                              (rule "eqSymm" (formula "54"))
                              (rule "disjointDefinition" (formula "25"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "notLeft" (formula "25"))
                              (rule "eqSymm" (formula "53"))
                              (rule "disjointDefinition" (formula "24"))
                               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "81")))
                              (rule "true_left" (formula "24"))
                              (rule "disjointDefinition" (formula "23"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "notLeft" (formula "23"))
                              (rule "eqSymm" (formula "51"))
                              (rule "disjointDefinition" (formula "22"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "notLeft" (formula "22"))
                              (rule "eqSymm" (formula "50"))
                              (rule "disjointDefinition" (formula "21"))
                               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "75")))
                              (rule "true_left" (formula "21"))
                              (rule "disjointDefinition" (formula "20"))
                               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "73")))
                              (rule "true_left" (formula "20"))
                              (rule "disjointDefinition" (formula "19"))
                               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "71")))
                              (rule "true_left" (formula "19"))
                              (rule "disjointDefinition" (formula "18"))
                               (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "69")))
                              (rule "true_left" (formula "18"))
                              (rule "disjointDefinition" (formula "17"))
                               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "67")))
                              (rule "true_left" (formula "17"))
                              (rule "disjointDefinition" (formula "16"))
                               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "65")))
                              (rule "true_left" (formula "16"))
                              (rule "disjointDefinition" (formula "15"))
                               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "63")))
                              (rule "true_left" (formula "15"))
                              (rule "disjointDefinition" (formula "14"))
                               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "61")))
                              (rule "true_left" (formula "14"))
                              (rule "disjointDefinition" (formula "13"))
                               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "58")))
                              (rule "true_left" (formula "13"))
                              (rule "disjointDefinition" (formula "12"))
                               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "58")))
                              (rule "true_left" (formula "12"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "32"))
                              (rule "eqSymm" (formula "11"))
                              (rule "commute_or" (formula "16") (term "0,0"))
                              (rule "commuteUnion_2" (formula "11") (term "0,0"))
                              (rule "commuteUnion" (formula "11") (term "1,1,0"))
                              (rule "commuteUnion" (formula "11") (term "0,0,0"))
                              (rule "commuteUnion_2" (formula "11") (term "0,0"))
                              (rule "commuteUnion_2" (formula "11") (term "0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "nnf_imp2or" (formula "38") (term "0"))
                              (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "37") (term "0"))
                              (rule "wellFormedAnonEQ" (formula "37") (term "1,0") (ifseqformula "33"))
                              (rule "wellFormedAnonEQ" (formula "37") (term "0,1,0") (ifseqformula "20"))
                              (rule "wellFormedAnonEQ" (formula "37") (term "0,0,1,0") (ifseqformula "12"))
                              (rule "replace_known_right" (formula "37") (term "0,0,0") (ifseqformula "96"))
                               (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "2")) (ifInst ""  (formula "11")) (ifInst ""  (formula "19")) (ifInst ""  (formula "32")) (ifInst ""  (formula "38")))
                              (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "38") (term "0") (inst "i=i") (inst "j=j"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0"))
                              (rule "arrayLengthNotNegative" (formula "8") (term "0"))
                              (rule "arrayLengthIsAShort" (formula "8") (term "0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "arrayLengthIsAShort" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "arrayLengthNotNegative" (formula "14") (term "0"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "arrayLengthIsAShort" (formula "30") (term "0"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "arrayLengthNotNegative" (formula "30") (term "0"))
                              (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                              (rule "qeq_literals" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "arrayLengthIsAShort" (formula "29") (term "0"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "arrayLengthNotNegative" (formula "29") (term "0"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                              (rule "qeq_literals" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "arrayLengthNotNegative" (formula "28") (term "0"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                              (rule "qeq_literals" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "arrayLengthIsAShort" (formula "28") (term "0"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "arrayLengthIsAShort" (formula "27") (term "0"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "arrayLengthNotNegative" (formula "27") (term "0"))
                              (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
                              (rule "qeq_literals" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "arrayLengthNotNegative" (formula "26") (term "0"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                              (rule "qeq_literals" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "arrayLengthIsAShort" (formula "26") (term "0"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                              (rule "qeq_literals" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "arrayLengthIsAShort" (formula "25") (term "0"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "nnf_notAnd" (formula "39") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                              (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "arrayLengthNotNegative" (formula "24") (term "0"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                              (rule "qeq_literals" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                              (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                              (rule "qeq_literals" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "nnf_imp2or" (formula "38") (term "0"))
                              (rule "associativeLawUnion" (formula "31") (term "0,1"))
                              (rule "associativeLawUnion" (formula "20") (term "0,1,0"))
                              (rule "nnf_notAnd" (formula "38") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                              (rule "nnf_imp2or" (formula "38") (term "0,1,0"))
                              (rule "nnf_notAnd" (formula "38") (term "0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,1,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,1,0"))
                              (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,1,0"))
                              (rule "associativeLawUnion" (formula "97") (term "0"))
                              (rule "associativeLawUnion" (formula "97") (term "0,1"))
                              (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "37") (term "0") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "translateJavaSubInt" (formula "37") (term "1,1,0,0"))
                              (rule "translateJavaAddInt" (formula "37") (term "0,2,1,1,0"))
                              (rule "polySimp_elimSub" (formula "37") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "37") (term "1,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "37") (term "0,2,1,1,0"))
                              (rule "polySimp_addComm0" (formula "37") (term "1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "37") (term "0"))
                              (rule "nnf_notAnd" (formula "37") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                              (rule "commute_or" (formula "37") (term "0,0,1,0"))
                              (rule "associativeLawUnion" (formula "31") (term "0,1"))
                              (rule "associativeLawUnion" (formula "96") (term "0"))
                              (rule "associativeLawUnion" (formula "20") (term "0,1,0"))
                              (rule "associativeLawUnion" (formula "96") (term "0,1"))
                              (rule "equalityToElementOfRight" (formula "96") (inst "ov=ov") (inst "fv=fv"))
                              (rule "allRight" (formula "96") (inst "sk=ov_0"))
                              (rule "allRight" (formula "96") (inst "sk=fv_0"))
                              (rule "elementOfUnion" (formula "96") (term "1"))
                               (builtin "One Step Simplification" (formula "96"))
                              (rule "elementOfUnion" (formula "96") (term "0"))
                               (builtin "One Step Simplification" (formula "96"))
                              (rule "elementOfUnion" (formula "96") (term "0,1"))
                               (builtin "One Step Simplification" (formula "96"))
                              (rule "elementOfUnion" (formula "96") (term "0,0"))
                               (builtin "One Step Simplification" (formula "96"))
                              (rule "elementOfUnion" (formula "96") (term "0,0,0"))
                              (rule "elementOfUnion" (formula "96") (term "0,0,1"))
                               (builtin "One Step Simplification" (formula "96"))
                              (rule "elementOfUnion" (formula "96") (term "0,0,0,1"))
                              (rule "elementOfUnion" (formula "96") (term "0,0,0,0"))
                              (rule "elementOfUnion" (formula "96") (term "1,0,0,0"))
                               (builtin "One Step Simplification" (formula "96"))
                              (rule "elementOfUnion" (formula "96") (term "1,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "96"))
                              (rule "elementOfUnion" (formula "96") (term "1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "96"))
                              (rule "elementOfUnion" (formula "96") (term "0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "96"))
                              (rule "elementOfUnion" (formula "96") (term "0,0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "96"))
                              (rule "elementOfUnion" (formula "96") (term "0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "96"))
                              (rule "shift_paren_or" (formula "96") (term "0,0,0,1"))
                              (rule "commute_or_2" (formula "96") (term "0,0,1"))
                              (rule "shift_paren_or" (formula "96") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "96") (term "0,0,0"))
                              (rule "commute_or_2" (formula "96") (term "0,0,0,0,1"))
                              (rule "commute_or_2" (formula "96") (term "0,0,0,1"))
                              (rule "shift_paren_or" (formula "96") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "96") (term "0,0"))
                              (rule "commute_or_2" (formula "96") (term "0"))
                              (rule "commute_or_2" (formula "96") (term "0,0,0"))
                              (rule "commute_or_2" (formula "96") (term "0,0,0,0,0"))
                              (rule "commute_or_2" (formula "96") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "96"))
                              (rule "closeTrue" (formula "96"))
                           )
                        )
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "closeTrue" (formula "40"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "40"))
                     (rule "allRight" (formula "40") (inst "sk=f_0"))
                     (rule "allRight" (formula "40") (inst "sk=o_0"))
                     (rule "orRight" (formula "40"))
                     (rule "orRight" (formula "40"))
                     (rule "orRight" (formula "40"))
                     (rule "eqSymm" (formula "43"))
                     (rule "eqSymm" (formula "40") (term "0,0,0,1"))
                     (rule "inEqSimp_gtToGeq" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                     (rule "mul_literals" (formula "10") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0"))
                     (rule "qeq_literals" (formula "7") (term "0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "25"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "15"))
                     (rule "eqSymm" (formula "43"))
                     (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "40"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "16"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                     (rule "elementOfArrayRange" (formula "1") (term "1,0,0,0,0") (inst "iv=iv"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,1,1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,1,0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "41"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "nnf_imp2or" (formula "19") (term "0"))
                     (rule "nnf_notAnd" (formula "19") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                     (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                     (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                     (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                     (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "29"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "translateJavaMulInt" (formula "29") (term "1,1,0,0,0,0,0,1,0,0"))
                     (rule "translateJavaMulInt" (formula "29") (term "1,1,0,0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "29") (term "1,1,0,0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "29") (term "1,1,0,0,0,0,0,1,0,0"))
                     (rule "andLeft" (formula "29"))
                     (rule "andLeft" (formula "29"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "29"))
                     (rule "andLeft" (formula "32"))
                     (rule "andLeft" (formula "29"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "34"))
                     (rule "andLeft" (formula "29"))
                     (rule "notLeft" (formula "31"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "35"))
                     (rule "andLeft" (formula "29"))
                     (rule "notLeft" (formula "31"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "36"))
                     (rule "andLeft" (formula "29"))
                     (rule "notLeft" (formula "31"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "37"))
                     (rule "andLeft" (formula "29"))
                     (rule "notLeft" (formula "31"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "29"))
                     (rule "notLeft" (formula "31"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "39"))
                     (rule "notLeft" (formula "30"))
                     (rule "andLeft" (formula "29"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "40"))
                     (rule "notLeft" (formula "29"))
                     (rule "notLeft" (formula "29"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "disjointDefinition" (formula "65"))
                      (builtin "One Step Simplification" (formula "65"))
                     (rule "notLeft" (formula "65"))
                     (rule "disjointDefinition" (formula "64"))
                      (builtin "One Step Simplification" (formula "64"))
                     (rule "notLeft" (formula "64"))
                     (rule "disjointDefinition" (formula "63"))
                      (builtin "One Step Simplification" (formula "63"))
                     (rule "notLeft" (formula "63"))
                     (rule "eqSymm" (formula "69"))
                     (rule "disjointDefinition" (formula "62"))
                      (builtin "One Step Simplification" (formula "62"))
                     (rule "notLeft" (formula "62"))
                     (rule "eqSymm" (formula "68"))
                     (rule "disjointDefinition" (formula "61"))
                      (builtin "One Step Simplification" (formula "61"))
                     (rule "notLeft" (formula "61"))
                     (rule "eqSymm" (formula "67"))
                     (rule "disjointDefinition" (formula "60"))
                      (builtin "One Step Simplification" (formula "60"))
                     (rule "notLeft" (formula "60"))
                     (rule "eqSymm" (formula "66"))
                     (rule "disjointDefinition" (formula "59"))
                      (builtin "One Step Simplification" (formula "59"))
                     (rule "notLeft" (formula "59"))
                     (rule "eqSymm" (formula "65"))
                     (rule "disjointDefinition" (formula "58"))
                      (builtin "One Step Simplification" (formula "58"))
                     (rule "notLeft" (formula "58"))
                     (rule "eqSymm" (formula "64"))
                     (rule "disjointDefinition" (formula "57"))
                      (builtin "One Step Simplification" (formula "57"))
                     (rule "notLeft" (formula "57"))
                     (rule "eqSymm" (formula "63"))
                     (rule "disjointDefinition" (formula "56"))
                      (builtin "One Step Simplification" (formula "56"))
                     (rule "notLeft" (formula "56"))
                     (rule "eqSymm" (formula "62"))
                     (rule "disjointDefinition" (formula "55"))
                      (builtin "One Step Simplification" (formula "55"))
                     (rule "notLeft" (formula "55"))
                     (rule "eqSymm" (formula "61"))
                     (rule "disjointDefinition" (formula "54"))
                      (builtin "One Step Simplification" (formula "54"))
                     (rule "notLeft" (formula "54"))
                     (rule "eqSymm" (formula "60"))
                     (rule "disjointDefinition" (formula "53"))
                      (builtin "One Step Simplification" (formula "53"))
                     (rule "notLeft" (formula "53"))
                     (rule "eqSymm" (formula "59"))
                     (rule "disjointDefinition" (formula "52"))
                      (builtin "One Step Simplification" (formula "52"))
                     (rule "notLeft" (formula "52"))
                     (rule "eqSymm" (formula "58"))
                     (rule "disjointDefinition" (formula "51"))
                      (builtin "One Step Simplification" (formula "51"))
                     (rule "notLeft" (formula "51"))
                     (rule "eqSymm" (formula "57"))
                     (rule "disjointDefinition" (formula "50"))
                      (builtin "One Step Simplification" (formula "50"))
                     (rule "notLeft" (formula "50"))
                     (rule "disjointDefinition" (formula "49"))
                      (builtin "One Step Simplification" (formula "49"))
                     (rule "notLeft" (formula "49"))
                     (rule "eqSymm" (formula "55"))
                     (rule "disjointDefinition" (formula "48"))
                      (builtin "One Step Simplification" (formula "48"))
                     (rule "notLeft" (formula "48"))
                     (rule "eqSymm" (formula "54"))
                     (rule "disjointDefinition" (formula "47"))
                      (builtin "One Step Simplification" (formula "47"))
                     (rule "notLeft" (formula "47"))
                     (rule "disjointDefinition" (formula "46"))
                      (builtin "One Step Simplification" (formula "46"))
                     (rule "notLeft" (formula "46"))
                     (rule "disjointDefinition" (formula "45"))
                      (builtin "One Step Simplification" (formula "45"))
                     (rule "notLeft" (formula "45"))
                     (rule "disjointDefinition" (formula "44"))
                      (builtin "One Step Simplification" (formula "44"))
                     (rule "notLeft" (formula "44"))
                     (rule "disjointDefinition" (formula "43"))
                      (builtin "One Step Simplification" (formula "43"))
                     (rule "notLeft" (formula "43"))
                     (rule "disjointDefinition" (formula "42"))
                      (builtin "One Step Simplification" (formula "42"))
                     (rule "notLeft" (formula "42"))
                     (rule "disjointDefinition" (formula "41"))
                      (builtin "One Step Simplification" (formula "41"))
                     (rule "notLeft" (formula "41"))
                     (rule "disjointDefinition" (formula "40"))
                      (builtin "One Step Simplification" (formula "40"))
                     (rule "notLeft" (formula "40"))
                     (rule "disjointDefinition" (formula "39"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "notLeft" (formula "39"))
                     (rule "disjointDefinition" (formula "38"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "notLeft" (formula "38"))
                     (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "86") (term "2") (ifseqformula "37"))
                     (rule "applyEq" (formula "26") (term "1,0,1,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "37"))
                     (rule "distributeIntersection" (formula "24") (term "0"))
                     (rule "distributeIntersection" (formula "14") (term "0"))
                     (rule "elementOfUnion" (formula "86"))
                     (rule "orRight" (formula "86"))
                     (rule "distributeIntersection" (formula "23") (term "0"))
                     (rule "distributeIntersection" (formula "24") (term "1,0"))
                     (rule "distributeIntersection" (formula "24") (term "0,0"))
                     (rule "distributeIntersection" (formula "14") (term "0,0"))
                     (rule "distributeIntersection" (formula "14") (term "1,0"))
                     (rule "elementOfUnion" (formula "87"))
                     (rule "orRight" (formula "87"))
                     (rule "elementOfUnion" (formula "86"))
                     (rule "orRight" (formula "86"))
                     (rule "distributeIntersection" (formula "23") (term "1,0"))
                     (rule "distributeIntersection" (formula "23") (term "0,0"))
                     (rule "distributeIntersection" (formula "24") (term "1,1,0"))
                     (rule "distributeIntersection" (formula "24") (term "0,1,0"))
                     (rule "distributeIntersection" (formula "24") (term "1,0,0"))
                     (rule "distributeIntersection" (formula "24") (term "0,0,0"))
                     (rule "distributeIntersection" (formula "14") (term "1,0,0"))
                     (rule "distributeIntersection" (formula "14") (term "0,0,0"))
                     (rule "distributeIntersection" (formula "14") (term "0,1,0"))
                     (rule "distributeIntersection" (formula "14") (term "1,1,0"))
                     (rule "elementOfUnion" (formula "89"))
                      (builtin "One Step Simplification" (formula "89"))
                     (rule "orRight" (formula "89"))
                     (rule "elementOfUnion" (formula "88"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "orRight" (formula "88"))
                     (rule "elementOfUnion" (formula "86"))
                      (builtin "One Step Simplification" (formula "86"))
                     (rule "orRight" (formula "86"))
                     (rule "elementOfUnion" (formula "88"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "orRight" (formula "88"))
                     (rule "distributeIntersection" (formula "23") (term "0,1,0"))
                     (rule "distributeIntersection" (formula "23") (term "1,1,0"))
                     (rule "distributeIntersection" (formula "23") (term "1,0,0"))
                     (rule "distributeIntersection" (formula "23") (term "0,0,0"))
                     (rule "unionEqualsEmpty" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "unionEqualsEmpty" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "unionEqualsEmpty" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "unionEqualsEmpty" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "unionEqualsEmpty" (formula "26"))
                     (rule "andLeft" (formula "26"))
                     (rule "unionEqualsEmpty" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "unionEqualsEmpty" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "unionEqualsEmpty" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "unionEqualsEmpty" (formula "26"))
                     (rule "andLeft" (formula "26"))
                     (rule "unionEqualsEmpty" (formula "33"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "andLeft" (formula "33"))
                     (rule "notLeft" (formula "33"))
                     (rule "notLeft" (formula "33"))
                     (rule "eqSymm" (formula "53"))
                     (rule "eqSymm" (formula "52"))
                     (rule "sortsDisjointModuloNull" (formula "53"))
                     (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "93"))
                      (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "88")))
                     (rule "false_right" (formula "53"))
                     (rule "sortsDisjointModuloNull" (formula "52"))
                     (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "92"))
                      (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "88")))
                     (rule "false_right" (formula "52"))
                     (rule "unionEqualsEmpty" (formula "32"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "andLeft" (formula "32"))
                     (rule "notLeft" (formula "32"))
                     (rule "notLeft" (formula "32"))
                     (rule "eqSymm" (formula "52"))
                     (rule "eqSymm" (formula "51"))
                     (rule "sortsDisjointModuloNull" (formula "52"))
                     (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "92"))
                      (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "85")))
                     (rule "false_right" (formula "52"))
                     (rule "sortsDisjointModuloNull" (formula "51"))
                     (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "85"))
                      (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "91")))
                     (rule "false_right" (formula "51"))
                     (rule "unionEqualsEmpty" (formula "30"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "notLeft" (formula "30"))
                     (rule "notLeft" (formula "30"))
                     (rule "eqSymm" (formula "51"))
                     (rule "eqSymm" (formula "50"))
                     (rule "sortsDisjointModuloNull" (formula "51"))
                     (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "91"))
                      (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "81")))
                     (rule "false_right" (formula "51"))
                     (rule "sortsDisjointModuloNull" (formula "50"))
                     (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "90"))
                      (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "79")))
                     (rule "false_right" (formula "50"))
                     (rule "unionEqualsEmpty" (formula "30"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "notLeft" (formula "30"))
                     (rule "notLeft" (formula "30"))
                     (rule "eqSymm" (formula "50"))
                     (rule "eqSymm" (formula "49"))
                     (rule "sortsDisjointModuloNull" (formula "50"))
                     (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "90"))
                      (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "81")))
                     (rule "false_right" (formula "50"))
                     (rule "sortsDisjointModuloNull" (formula "49"))
                     (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "89"))
                      (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "81")))
                     (rule "false_right" (formula "49"))
                     (rule "unionEqualsEmpty" (formula "16"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "andLeft" (formula "16"))
                     (rule "notLeft" (formula "17"))
                     (rule "notLeft" (formula "16"))
                     (rule "eqSymm" (formula "49"))
                     (rule "eqSymm" (formula "48"))
                     (rule "unionEqualsEmpty" (formula "16"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "andLeft" (formula "16"))
                     (rule "notLeft" (formula "17"))
                     (rule "notLeft" (formula "16"))
                     (rule "eqSymm" (formula "48"))
                     (rule "eqSymm" (formula "47"))
                     (rule "unionEqualsEmpty" (formula "15"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "notLeft" (formula "15"))
                     (rule "notLeft" (formula "15"))
                     (rule "eqSymm" (formula "47"))
                     (rule "eqSymm" (formula "46"))
                     (rule "unionEqualsEmpty" (formula "14"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "notLeft" (formula "14"))
                     (rule "notLeft" (formula "14"))
                     (rule "eqSymm" (formula "46"))
                     (rule "eqSymm" (formula "45"))
                     (rule "unionEqualsEmpty" (formula "24"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "notLeft" (formula "24"))
                     (rule "notLeft" (formula "24"))
                     (rule "eqSymm" (formula "45"))
                     (rule "eqSymm" (formula "44"))
                     (rule "unionEqualsEmpty" (formula "24"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "notLeft" (formula "24"))
                     (rule "notLeft" (formula "24"))
                     (rule "eqSymm" (formula "44"))
                     (rule "eqSymm" (formula "43"))
                     (rule "unionEqualsEmpty" (formula "22"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "notLeft" (formula "22"))
                     (rule "notLeft" (formula "22"))
                     (rule "eqSymm" (formula "43"))
                     (rule "eqSymm" (formula "42"))
                     (rule "unionEqualsEmpty" (formula "22"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "notLeft" (formula "23"))
                     (rule "notLeft" (formula "22"))
                     (rule "eqSymm" (formula "42"))
                     (rule "eqSymm" (formula "41"))
                     (rule "commuteUnion" (formula "34") (term "1,1,1"))
                     (rule "commuteUnion" (formula "34") (term "0,0,1"))
                     (rule "commuteUnion_2" (formula "23") (term "0,1,0,1,0"))
                     (rule "commuteUnion" (formula "23") (term "1,1,1,0,1,0"))
                     (rule "commuteUnion" (formula "34") (term "0,1"))
                     (rule "commuteUnion" (formula "23") (term "0,0,1,0,1,0"))
                     (rule "commuteUnion_2" (formula "23") (term "0,1,0,1,0"))
                     (rule "commuteUnion_2" (formula "23") (term "1,0,1,0"))
                     (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "39") (term "0,0") (inst "i=i"))
                     (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "13"))
                      (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "86")) (ifInst ""  (formula "85")) (ifInst ""  (formula "87")) (ifInst ""  (formula "88")) (ifInst ""  (formula "89")) (ifInst ""  (formula "90")) (ifInst ""  (formula "91")) (ifInst ""  (formula "92")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                     (rule "translateJavaMulInt" (formula "13") (term "1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "13") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "15"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "disjointDefinition" (formula "41"))
                      (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "112")))
                     (rule "true_left" (formula "41"))
                     (rule "disjointDefinition" (formula "40"))
                      (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "110")))
                     (rule "true_left" (formula "40"))
                     (rule "disjointDefinition" (formula "39"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "notLeft" (formula "39"))
                     (rule "eqSymm" (formula "66"))
                     (rule "disjointDefinition" (formula "38"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "notLeft" (formula "38"))
                     (rule "eqSymm" (formula "65"))
                     (rule "disjointDefinition" (formula "37"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "notLeft" (formula "37"))
                     (rule "eqSymm" (formula "64"))
                     (rule "disjointDefinition" (formula "36"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "notLeft" (formula "36"))
                     (rule "eqSymm" (formula "63"))
                     (rule "disjointDefinition" (formula "35"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "notLeft" (formula "35"))
                     (rule "eqSymm" (formula "62"))
                     (rule "disjointDefinition" (formula "34"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "notLeft" (formula "34"))
                     (rule "eqSymm" (formula "61"))
                     (rule "disjointDefinition" (formula "33"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "notLeft" (formula "33"))
                     (rule "eqSymm" (formula "60"))
                     (rule "disjointDefinition" (formula "32"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "notLeft" (formula "32"))
                     (rule "eqSymm" (formula "59"))
                     (rule "disjointDefinition" (formula "31"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "notLeft" (formula "31"))
                     (rule "eqSymm" (formula "58"))
                     (rule "disjointDefinition" (formula "30"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "notLeft" (formula "30"))
                     (rule "eqSymm" (formula "57"))
                     (rule "disjointDefinition" (formula "29"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "notLeft" (formula "29"))
                     (rule "eqSymm" (formula "56"))
                     (rule "disjointDefinition" (formula "28"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "notLeft" (formula "28"))
                     (rule "eqSymm" (formula "55"))
                     (rule "disjointDefinition" (formula "27"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "notLeft" (formula "27"))
                     (rule "eqSymm" (formula "54"))
                     (rule "disjointDefinition" (formula "26"))
                      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "82")))
                     (rule "true_left" (formula "26"))
                     (rule "disjointDefinition" (formula "25"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "notLeft" (formula "25"))
                     (rule "eqSymm" (formula "52"))
                     (rule "disjointDefinition" (formula "24"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "notLeft" (formula "24"))
                     (rule "eqSymm" (formula "51"))
                     (rule "disjointDefinition" (formula "23"))
                      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "76")))
                     (rule "true_left" (formula "23"))
                     (rule "disjointDefinition" (formula "22"))
                      (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "74")))
                     (rule "true_left" (formula "22"))
                     (rule "disjointDefinition" (formula "21"))
                      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "72")))
                     (rule "true_left" (formula "21"))
                     (rule "disjointDefinition" (formula "20"))
                      (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "70")))
                     (rule "true_left" (formula "20"))
                     (rule "disjointDefinition" (formula "19"))
                      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "68")))
                     (rule "true_left" (formula "19"))
                     (rule "disjointDefinition" (formula "18"))
                      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "66")))
                     (rule "true_left" (formula "18"))
                     (rule "disjointDefinition" (formula "17"))
                      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "64")))
                     (rule "true_left" (formula "17"))
                     (rule "disjointDefinition" (formula "16"))
                      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "62")))
                     (rule "true_left" (formula "16"))
                     (rule "disjointDefinition" (formula "15"))
                      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "60")))
                     (rule "true_left" (formula "15"))
                     (rule "disjointDefinition" (formula "14"))
                      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "58")))
                     (rule "true_left" (formula "14"))
                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "34"))
                     (rule "eqSymm" (formula "13"))
                     (rule "commuteUnion" (formula "13") (term "0,0"))
                     (rule "commuteUnion" (formula "13") (term "1,1,0"))
                     (rule "commuteUnion" (formula "13") (term "1,0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "39") (term "0") (inst "i=i"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "translateJavaAddInt" (formula "39") (term "0,2,1,1,0"))
                     (rule "translateJavaSubInt" (formula "39") (term "1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "39") (term "1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "39") (term "0,2,1,1,0"))
                     (rule "polySimp_addComm0" (formula "39") (term "1,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                     (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "38") (term "1,0") (inst "i=i"))
                     (rule "commute_or" (formula "17") (term "0,0"))
                     (rule "commute_and" (formula "1") (term "0,0,0"))
                     (rule "nnf_imp2or" (formula "39") (term "0"))
                     (rule "nnf_notAnd" (formula "39") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                     (rule "cut_direct" (formula "106") (term "0,0"))
                     (branch "CUT: o_0 = null TRUE"
                         (builtin "One Step Simplification" (formula "107"))
                        (rule "false_right" (formula "107"))
                        (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "107") (term "1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEqRigid" (formula "103") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "103"))
                        (rule "applyEqRigid" (formula "102") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "102"))
                        (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "2") (term "1,0,0"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "94"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "104") (term "1") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "applyEqRigid" (formula "99") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "99"))
                        (rule "applyEqRigid" (formula "97") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "97"))
                        (rule "applyEq" (formula "99") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "99"))
                        (rule "applyEq" (formula "98") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "98"))
                        (rule "applyEqRigid" (formula "97") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "97"))
                        (rule "applyEq" (formula "97") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "97"))
                        (rule "applyEqRigid" (formula "96") (term "0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "96") (term "0"))
                        (rule "replace_known_right" (formula "96") (term "0") (ifseqformula "95"))
                         (builtin "One Step Simplification" (formula "96"))
                        (rule "false_right" (formula "96"))
                        (rule "applyEq" (formula "96") (term "1,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "96"))
                        (rule "closeTrue" (formula "96"))
                     )
                     (branch "CUT: o_0 = null FALSE"
                         (builtin "One Step Simplification" (formula "107"))
                        (rule "notRight" (formula "107"))
                        (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "107"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                        (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "107"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                        (rule "applyEqReverse" (formula "108") (term "1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "arrayLengthNotNegative" (formula "9") (term "0"))
                        (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "arrayLengthIsAShort" (formula "10") (term "0"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "cut_direct" (formula "97") (term "0"))
                        (branch "CUT: o_0 = values TRUE"
                            (builtin "One Step Simplification" (formula "98"))
                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "104") (term "0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "104"))
                           (rule "applyEq" (formula "101") (term "0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "101"))
                           (rule "applyEq" (formula "101") (term "0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "101"))
                           (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                           (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "92"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "104")))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "CUT: o_0 = values FALSE"
                            (builtin "One Step Simplification" (formula "98"))
                           (rule "false_right" (formula "98"))
                           (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                           (rule "qeq_literals" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "arrayLengthIsAShort" (formula "32") (term "0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "arrayLengthNotNegative" (formula "32") (term "0"))
                           (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
                           (rule "qeq_literals" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "arrayLengthNotNegative" (formula "31") (term "0"))
                           (rule "applyEq" (formula "31") (term "0") (ifseqformula "32"))
                           (rule "qeq_literals" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "arrayLengthIsAShort" (formula "31") (term "0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "arrayLengthNotNegative" (formula "30") (term "0"))
                           (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                           (rule "qeq_literals" (formula "30"))
                           (rule "true_left" (formula "30"))
                           (rule "arrayLengthIsAShort" (formula "30") (term "0"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "true_left" (formula "30"))
                           (rule "arrayLengthNotNegative" (formula "29") (term "0"))
                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                           (rule "qeq_literals" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "arrayLengthIsAShort" (formula "29") (term "0"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "arrayLengthNotNegative" (formula "28") (term "0"))
                           (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                           (rule "qeq_literals" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "arrayLengthIsAShort" (formula "28") (term "0"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "arrayLengthNotNegative" (formula "27") (term "0"))
                           (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
                           (rule "qeq_literals" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "arrayLengthIsAShort" (formula "27") (term "0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "arrayLengthIsAShort" (formula "26") (term "0"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "arrayLengthNotNegative" (formula "26") (term "0"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                           (rule "qeq_literals" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "arrayLengthIsAShort" (formula "25") (term "0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                           (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                           (rule "qeq_literals" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "associativeLawUnion" (formula "33") (term "1"))
                           (rule "associativeLawUnion" (formula "22") (term "0,1,0"))
                           (rule "associativeLawUnion" (formula "33") (term "1"))
                           (rule "associativeLawUnion" (formula "33") (term "0,0,1"))
                           (rule "commuteUnion_2" (formula "33") (term "0,1"))
                           (rule "commuteUnion_2" (formula "33") (term "0,0,0,1"))
                           (rule "commuteUnion_2" (formula "33") (term "0,0,1"))
                           (rule "associativeLawUnion" (formula "33") (term "0,0,1"))
                           (rule "commuteUnion_2" (formula "33") (term "0,1"))
                           (rule "commuteUnion_2" (formula "33") (term "1"))
                           (rule "associativeLawUnion" (formula "22") (term "0,0,1,0"))
                           (rule "associativeLawUnion" (formula "22") (term "0,0,1,0"))
                           (rule "associativeLawUnion" (formula "22") (term "0,0,1,0"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "!f_0 = java.lang.Object::<created> & o_0 = result_21 TRUE"
                              (rule "andLeft" (formula "2"))
                              (rule "notLeft" (formula "2"))
                              (rule "applyEqReverse" (formula "109") (term "1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "eqSymm" (formula "108"))
                              (rule "applyEq" (formula "103") (term "0") (ifseqformula "2"))
                              (rule "eqSymm" (formula "103"))
                              (rule "applyEq" (formula "103") (term "0") (ifseqformula "2"))
                              (rule "eqSymm" (formula "103"))
                              (rule "applyEq" (formula "105") (term "0") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                              (rule "close" (formula "94") (ifseqformula "1"))
                           )
                           (branch "!f_0 = java.lang.Object::<created> & o_0 = result_21 FALSE"
                              (rule "close" (formula "108") (ifseqformula "2"))
                           )
                        )
                     )
                  )
               )
               (branch "Exceptional Post (fallback_sort)"
                   (builtin "One Step Simplification" (formula "30"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "translateJavaSubInt" (formula "30") (term "2,1,0,0"))
                  (rule "andLeft" (formula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1,0") (ifseqformula "25"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,1,0") (ifseqformula "15"))
                  (rule "andLeft" (formula "31"))
                  (rule "andLeft" (formula "31"))
                  (rule "andLeft" (formula "33"))
                  (rule "notLeft" (formula "31"))
                  (rule "close" (formula "34") (ifseqformula "33"))
               )
               (branch "Pre (fallback_sort)"
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "33")) (ifInst ""  (formula "33")))
                  (rule "wellFormedAnonEQ" (formula "34") (term "0,1") (ifseqformula "25"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,1") (ifseqformula "25"))
                  (rule "wellFormedAnonEQ" (formula "34") (term "0,0,1") (ifseqformula "15"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,1,1") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "34") (term "0,0,0,1") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "14")) (ifInst ""  (formula "24")) (ifInst ""  (formula "3")))
                  (rule "inEqSimp_gtToGeq" (formula "10"))
                  (rule "mul_literals" (formula "10") (term "1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0"))
                  (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "inEqSimp_commuteLeq" (formula "34") (term "0"))
                  (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "6"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "inEqSimp_leqRight" (formula "34"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_homoInEq0" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                  (rule "mul_literals" (formula "11") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                  (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
                  (rule "andLeft" (formula "10"))
                  (rule "inEqSimp_homoInEq1" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "1,1,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0"))
                  (rule "add_zero_right" (formula "10") (term "0"))
                  (rule "leq_literals" (formula "10"))
                  (rule "closeFalse" (formula "10"))
               )
            )
            (branch "if x_1 false"
                (builtin "One Step Simplification" (formula "36"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "30"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "36"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "variableDeclarationAssign" (formula "42") (term "1"))
               (rule "variableDeclaration" (formula "42") (term "1") (newnames "num_buckets"))
               (rule "assignment_read_attribute_final" (formula "42"))
               (branch "Normal Execution (partition != null)"
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "variableDeclarationAssign" (formula "42") (term "1"))
                  (rule "variableDeclaration" (formula "42") (term "1") (newnames "equal_buckets"))
                  (rule "assignment_read_attribute_final" (formula "42"))
                  (branch "Normal Execution (partition != null)"
                      (builtin "One Step Simplification" (formula "42"))
                      (builtin "Block Contract (Internal)" (formula "42") (newnames "anonOut_heap,exc_28,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,o,f,f,anonOut_bucket"))
                     (branch "Validity"
                         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")) (ifInst ""  (formula "42")))
                         (builtin "One Step Simplification" (formula "43"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "1,1") (ifseqformula "24"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,1") (ifseqformula "24"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "1,0,1") (ifseqformula "24"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,1,1") (ifseqformula "14"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,1,0,1") (ifseqformula "14"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,1") (ifseqformula "14"))
                        (rule "translateJavaSubInt" (formula "36") (term "0,0,0,0,0"))
                        (rule "translateJavaSubInt" (formula "43") (term "2,0,2,0,0,0,0,1,0,1"))
                        (rule "andLeft" (formula "36"))
                        (rule "andLeft" (formula "37"))
                        (rule "andLeft" (formula "36"))
                        (rule "andLeft" (formula "38"))
                        (rule "andLeft" (formula "36"))
                        (rule "andLeft" (formula "37"))
                        (rule "andLeft" (formula "37"))
                        (rule "andLeft" (formula "37"))
                        (rule "andLeft" (formula "37"))
                        (rule "andLeft" (formula "37"))
                        (rule "eqSymm" (formula "53") (term "1,0,0,1,0,1"))
                        (rule "replace_known_left" (formula "45") (term "0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "45"))
                        (rule "true_left" (formula "45"))
                        (rule "replace_known_left" (formula "44") (term "1,0") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "48")))
                        (rule "true_left" (formula "44"))
                        (rule "replace_known_left" (formula "44") (term "0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "true_left" (formula "44"))
                        (rule "polySimp_elimSub" (formula "50") (term "2,0,2,0,0,0,0,1,0,1"))
                        (rule "mul_literals" (formula "50") (term "1,2,0,2,0,0,0,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "36") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "50") (term "2,0,2,0,0,0,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                        (rule "disjointDefinition" (formula "41"))
                        (rule "disjointDefinition" (formula "40"))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "notLeft" (formula "40"))
                        (rule "eqSymm" (formula "42"))
                        (rule "disjointDefinition" (formula "39"))
                        (rule "disjointDefinition" (formula "38"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "notLeft" (formula "38"))
                        (rule "eqSymm" (formula "40"))
                        (rule "disjointDefinition" (formula "37"))
                        (rule "disjointDefinition" (formula "36"))
                         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "42")))
                        (rule "true_left" (formula "36"))
                        (rule "narrowSelectArrayType" (formula "27") (term "2,0") (ifseqformula "37") (ifseqformula "45"))
                        (rule "sortsDisjointModuloNull" (formula "39"))
                        (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "43"))
                         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "44")))
                        (rule "false_right" (formula "39"))
                        (rule "sortsDisjointModuloNull" (formula "38"))
                        (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "44"))
                         (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "43")))
                        (rule "false_right" (formula "38"))
                        (rule "variableDeclarationAssign" (formula "44") (term "1"))
                        (rule "variableDeclaration" (formula "44") (term "1") (newnames "exc_28_1"))
                        (rule "assignment" (formula "44") (term "1"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "elementOfUnion" (formula "44") (term "0,0,0,0,1,0,1"))
                        (rule "elementOfArrayRange" (formula "44") (term "0,0,0,0,0,1,0,1") (inst "iv=iv"))
                        (rule "inEqSimp_commuteLeq" (formula "44") (term "1,0,0,1,0,0,0,0,0,1,0,1"))
                        (rule "commuteIntersection" (formula "36") (term "0"))
                        (rule "for_to_while" (formula "43") (term "1") (inst "#innerLabel=_label0") (inst "#outerLabel=_label1"))
                        (rule "variableDeclarationAssign" (formula "43") (term "1"))
                        (rule "variableDeclaration" (formula "43") (term "1") (newnames "bucket"))
                        (rule "assignment" (formula "43") (term "1"))
                         (builtin "One Step Simplification" (formula "43"))
                        (rule "elim_double_block_3" (formula "43") (term "1"))
                         (builtin "Loop Invariant" (formula "43") (newnames "variant,b,heapBefore_LOOP,bucketBefore_LOOP,bucket_0,heap_After_LOOP,anon_heap_LOOP,o_0,f"))
                        (branch "Invariant Initially Valid"
                           (rule "andRight" (formula "43"))
                           (branch "Case 1"
                              (rule "andRight" (formula "43"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "43"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "43"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "43"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "43"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "43"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "43"))
                                                (branch "Case 1"
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "leq_literals" (formula "43"))
                                                   (rule "closeTrue" (formula "43"))
                                                )
                                                (branch "Case 2"
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "inEqSimp_leqRight" (formula "43"))
                                                   (rule "add_zero_right" (formula "1") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "10"))
                                                   (rule "mul_literals" (formula "10") (term "1,0,0"))
                                                   (rule "add_literals" (formula "10") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                   (rule "jmod_axiom" (formula "32") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "32"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                   (rule "mul_literals" (formula "10") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                                                   (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0,0"))
                                                   (rule "qeq_literals" (formula "7") (term "0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "newSym_eq" (formula "31") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                                   (rule "times_zero_1" (formula "31") (term "1,1"))
                                                   (rule "add_zero_right" (formula "31") (term "1"))
                                                   (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                                                   (rule "eqSymm" (formula "32"))
                                                   (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "32"))
                                                   (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                   (rule "applyEq" (formula "29") (term "5,0") (ifseqformula "32"))
                                                   (rule "applyEq" (formula "34") (term "5,0,1") (ifseqformula "32"))
                                                   (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "32"))
                                                   (rule "applyEq" (formula "30") (term "7,0") (ifseqformula "32"))
                                                   (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "32"))
                                                   (rule "applyEq" (formula "34") (term "1,7,0,1") (ifseqformula "32"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "32"))
                                                   (rule "applyEq" (formula "33") (term "0,2,0") (ifseqformula "32"))
                                                   (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,1,0"))
                                                   (rule "neg_literal" (formula "1") (term "0,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "1") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "nnf_imp2or" (formula "17") (term "0"))
                                                   (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                                   (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "36"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "translateJavaMulInt" (formula "36") (term "1,1,0,0,0,0,1,0,0"))
                                                   (rule "translateJavaMulInt" (formula "36") (term "1,1,0,0,0,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "36") (term "1,1,0,0,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "36") (term "1,1,0,0,0,0,0,1,0,0"))
                                                   (rule "andLeft" (formula "36"))
                                                   (rule "andLeft" (formula "37"))
                                                   (rule "andLeft" (formula "36"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "andLeft" (formula "36"))
                                                   (rule "andLeft" (formula "39"))
                                                   (rule "andLeft" (formula "37"))
                                                   (rule "andLeft" (formula "36"))
                                                   (rule "andLeft" (formula "41"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "notLeft" (formula "37"))
                                                   (rule "andLeft" (formula "36"))
                                                   (rule "andLeft" (formula "42"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "andLeft" (formula "36"))
                                                   (rule "notLeft" (formula "38"))
                                                   (rule "andLeft" (formula "43"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "andLeft" (formula "36"))
                                                   (rule "notLeft" (formula "38"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "notLeft" (formula "37"))
                                                   (rule "andLeft" (formula "36"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "notLeft" (formula "37"))
                                                   (rule "andLeft" (formula "36"))
                                                   (rule "andLeft" (formula "46"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "notLeft" (formula "37"))
                                                   (rule "andLeft" (formula "36"))
                                                   (rule "andLeft" (formula "47"))
                                                   (rule "notLeft" (formula "36"))
                                                   (rule "notLeft" (formula "36"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "disjointDefinition" (formula "72"))
                                                    (builtin "One Step Simplification" (formula "72"))
                                                   (rule "notLeft" (formula "72"))
                                                   (rule "disjointDefinition" (formula "71"))
                                                    (builtin "One Step Simplification" (formula "71"))
                                                   (rule "notLeft" (formula "71"))
                                                   (rule "disjointDefinition" (formula "70"))
                                                    (builtin "One Step Simplification" (formula "70"))
                                                   (rule "notLeft" (formula "70"))
                                                   (rule "eqSymm" (formula "71"))
                                                   (rule "disjointDefinition" (formula "69"))
                                                    (builtin "One Step Simplification" (formula "69"))
                                                   (rule "notLeft" (formula "69"))
                                                   (rule "eqSymm" (formula "70"))
                                                   (rule "disjointDefinition" (formula "68"))
                                                    (builtin "One Step Simplification" (formula "68"))
                                                   (rule "notLeft" (formula "68"))
                                                   (rule "eqSymm" (formula "69"))
                                                   (rule "disjointDefinition" (formula "67"))
                                                    (builtin "One Step Simplification" (formula "67"))
                                                   (rule "notLeft" (formula "67"))
                                                   (rule "eqSymm" (formula "68"))
                                                   (rule "disjointDefinition" (formula "66"))
                                                    (builtin "One Step Simplification" (formula "66"))
                                                   (rule "notLeft" (formula "66"))
                                                   (rule "eqSymm" (formula "67"))
                                                   (rule "disjointDefinition" (formula "65"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                   (rule "notLeft" (formula "65"))
                                                   (rule "eqSymm" (formula "66"))
                                                   (rule "disjointDefinition" (formula "64"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "notLeft" (formula "64"))
                                                   (rule "eqSymm" (formula "65"))
                                                   (rule "disjointDefinition" (formula "63"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "notLeft" (formula "63"))
                                                   (rule "eqSymm" (formula "64"))
                                                   (rule "disjointDefinition" (formula "62"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "notLeft" (formula "62"))
                                                   (rule "eqSymm" (formula "63"))
                                                   (rule "disjointDefinition" (formula "61"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "notLeft" (formula "61"))
                                                   (rule "eqSymm" (formula "62"))
                                                   (rule "disjointDefinition" (formula "60"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "notLeft" (formula "60"))
                                                   (rule "eqSymm" (formula "61"))
                                                   (rule "disjointDefinition" (formula "59"))
                                                    (builtin "One Step Simplification" (formula "59"))
                                                   (rule "notLeft" (formula "59"))
                                                   (rule "eqSymm" (formula "60"))
                                                   (rule "disjointDefinition" (formula "58"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "notLeft" (formula "58"))
                                                   (rule "eqSymm" (formula "59"))
                                                   (rule "disjointDefinition" (formula "57"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "notLeft" (formula "57"))
                                                   (rule "disjointDefinition" (formula "56"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "notLeft" (formula "56"))
                                                   (rule "eqSymm" (formula "57"))
                                                   (rule "disjointDefinition" (formula "55"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "notLeft" (formula "55"))
                                                   (rule "eqSymm" (formula "56"))
                                                   (rule "disjointDefinition" (formula "54"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "notLeft" (formula "54"))
                                                   (rule "disjointDefinition" (formula "53"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "notLeft" (formula "53"))
                                                   (rule "disjointDefinition" (formula "52"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "notLeft" (formula "52"))
                                                   (rule "disjointDefinition" (formula "51"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "notLeft" (formula "51"))
                                                   (rule "disjointDefinition" (formula "50"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "notLeft" (formula "50"))
                                                   (rule "disjointDefinition" (formula "49"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "notLeft" (formula "49"))
                                                   (rule "disjointDefinition" (formula "48"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "notLeft" (formula "48"))
                                                   (rule "disjointDefinition" (formula "47"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "notLeft" (formula "47"))
                                                   (rule "disjointDefinition" (formula "46"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "notLeft" (formula "46"))
                                                   (rule "disjointDefinition" (formula "45"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "notLeft" (formula "45"))
                                                   (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "44"))
                                                   (rule "applyEq" (formula "24") (term "1,0,1,0") (ifseqformula "44"))
                                                   (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "44"))
                                                   (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "44"))
                                                   (rule "distributeIntersection" (formula "22") (term "0"))
                                                   (rule "distributeIntersection" (formula "21") (term "0"))
                                                   (rule "distributeIntersection" (formula "12") (term "0"))
                                                   (rule "distributeIntersection" (formula "22") (term "0,0"))
                                                   (rule "distributeIntersection" (formula "22") (term "1,0"))
                                                   (rule "distributeIntersection" (formula "21") (term "1,0"))
                                                   (rule "distributeIntersection" (formula "21") (term "0,0"))
                                                   (rule "unionEqualsEmpty" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "distributeIntersection" (formula "23") (term "1,0,0"))
                                                   (rule "distributeIntersection" (formula "23") (term "0,0,0"))
                                                   (rule "distributeIntersection" (formula "23") (term "0,1,0"))
                                                   (rule "distributeIntersection" (formula "23") (term "1,1,0"))
                                                   (rule "distributeIntersection" (formula "22") (term "0,1,0"))
                                                   (rule "distributeIntersection" (formula "22") (term "1,1,0"))
                                                   (rule "distributeIntersection" (formula "22") (term "1,0,0"))
                                                   (rule "distributeIntersection" (formula "22") (term "0,0,0"))
                                                   (rule "distributeIntersection" (formula "12") (term "0"))
                                                   (rule "distributeIntersection" (formula "13") (term "0"))
                                                   (rule "unionEqualsEmpty" (formula "23"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "unionEqualsEmpty" (formula "22"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "distributeIntersection" (formula "12") (term "1,0"))
                                                   (rule "distributeIntersection" (formula "12") (term "0,0"))
                                                   (rule "distributeIntersection" (formula "13") (term "1,0"))
                                                   (rule "distributeIntersection" (formula "13") (term "0,0"))
                                                   (rule "unionEqualsEmpty" (formula "25"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "unionEqualsEmpty" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "unionEqualsEmpty" (formula "22"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "unionEqualsEmpty" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "unionEqualsEmpty" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "unionEqualsEmpty" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "unionEqualsEmpty" (formula "31"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "notLeft" (formula "31"))
                                                   (rule "notLeft" (formula "31"))
                                                   (rule "eqSymm" (formula "55"))
                                                   (rule "eqSymm" (formula "54"))
                                                   (rule "sortsDisjointModuloNull" (formula "55"))
                                                   (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "90"))
                                                    (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "96")))
                                                   (rule "false_right" (formula "55"))
                                                   (rule "sortsDisjointModuloNull" (formula "54"))
                                                   (rule "replace_known_right" (formula "54") (term "0") (ifseqformula "90"))
                                                    (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "95")))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "unionEqualsEmpty" (formula "30"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "andLeft" (formula "30"))
                                                   (rule "notLeft" (formula "31"))
                                                   (rule "notLeft" (formula "30"))
                                                   (rule "eqSymm" (formula "54"))
                                                   (rule "eqSymm" (formula "53"))
                                                   (rule "sortsDisjointModuloNull" (formula "54"))
                                                   (rule "replace_known_right" (formula "54") (term "1") (ifseqformula "95"))
                                                    (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "88")))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "sortsDisjointModuloNull" (formula "53"))
                                                   (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "86"))
                                                    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "94")))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "unionEqualsEmpty" (formula "28"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "andLeft" (formula "28"))
                                                   (rule "notLeft" (formula "28"))
                                                   (rule "notLeft" (formula "28"))
                                                   (rule "eqSymm" (formula "53"))
                                                   (rule "eqSymm" (formula "52"))
                                                   (rule "sortsDisjointModuloNull" (formula "53"))
                                                   (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "94"))
                                                    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "83")))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "sortsDisjointModuloNull" (formula "52"))
                                                   (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "81"))
                                                    (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "93")))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "unionEqualsEmpty" (formula "28"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "andLeft" (formula "28"))
                                                   (rule "notLeft" (formula "29"))
                                                   (rule "notLeft" (formula "28"))
                                                   (rule "eqSymm" (formula "52"))
                                                   (rule "eqSymm" (formula "51"))
                                                   (rule "sortsDisjointModuloNull" (formula "52"))
                                                   (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "93"))
                                                    (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "84")))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "sortsDisjointModuloNull" (formula "51"))
                                                   (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "92"))
                                                    (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "82")))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "unionEqualsEmpty" (formula "24"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "notLeft" (formula "24"))
                                                   (rule "notLeft" (formula "24"))
                                                   (rule "eqSymm" (formula "51"))
                                                   (rule "eqSymm" (formula "50"))
                                                   (rule "unionEqualsEmpty" (formula "24"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "notLeft" (formula "24"))
                                                   (rule "notLeft" (formula "24"))
                                                   (rule "eqSymm" (formula "50"))
                                                   (rule "eqSymm" (formula "49"))
                                                   (rule "unionEqualsEmpty" (formula "25"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "notLeft" (formula "25"))
                                                   (rule "notLeft" (formula "25"))
                                                   (rule "eqSymm" (formula "49"))
                                                   (rule "eqSymm" (formula "48"))
                                                   (rule "unionEqualsEmpty" (formula "24"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "notLeft" (formula "25"))
                                                   (rule "notLeft" (formula "24"))
                                                   (rule "eqSymm" (formula "48"))
                                                   (rule "eqSymm" (formula "47"))
                                                   (rule "unionEqualsEmpty" (formula "12"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "notLeft" (formula "12"))
                                                   (rule "notLeft" (formula "12"))
                                                   (rule "eqSymm" (formula "47"))
                                                   (rule "eqSymm" (formula "46"))
                                                   (rule "unionEqualsEmpty" (formula "12"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "notLeft" (formula "13"))
                                                   (rule "notLeft" (formula "12"))
                                                   (rule "eqSymm" (formula "46"))
                                                   (rule "eqSymm" (formula "45"))
                                                   (rule "unionEqualsEmpty" (formula "13"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "notLeft" (formula "13"))
                                                   (rule "notLeft" (formula "13"))
                                                   (rule "eqSymm" (formula "45"))
                                                   (rule "eqSymm" (formula "44"))
                                                   (rule "unionEqualsEmpty" (formula "12"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "notLeft" (formula "13"))
                                                   (rule "notLeft" (formula "12"))
                                                   (rule "eqSymm" (formula "44"))
                                                   (rule "eqSymm" (formula "43"))
                                                   (rule "commuteUnion" (formula "41") (term "0,1"))
                                                   (rule "commuteUnion" (formula "41") (term "1,1,1"))
                                                   (rule "commuteUnion" (formula "21") (term "0,0,1,0,1,0"))
                                                   (rule "commuteUnion" (formula "21") (term "1,1,1,0,1,0"))
                                                   (rule "commuteUnion" (formula "41") (term "1,0,1"))
                                                   (rule "commuteUnion" (formula "21") (term "0,1,0,1,0"))
                                                   (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "11"))
                                                    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "88")) (ifInst ""  (formula "87")) (ifInst ""  (formula "89")) (ifInst ""  (formula "90")) (ifInst ""  (formula "91")) (ifInst ""  (formula "92")) (ifInst ""  (formula "93")) (ifInst ""  (formula "94")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                   (rule "translateJavaMulInt" (formula "11") (term "1,0,0,0"))
                                                   (rule "translateJavaMulInt" (formula "11") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "disjointDefinition" (formula "39"))
                                                    (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "114")))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "disjointDefinition" (formula "38"))
                                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "112")))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "disjointDefinition" (formula "37"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "notLeft" (formula "37"))
                                                   (rule "eqSymm" (formula "68"))
                                                   (rule "disjointDefinition" (formula "36"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "notLeft" (formula "36"))
                                                   (rule "eqSymm" (formula "67"))
                                                   (rule "disjointDefinition" (formula "35"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "notLeft" (formula "35"))
                                                   (rule "eqSymm" (formula "66"))
                                                   (rule "disjointDefinition" (formula "34"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "notLeft" (formula "34"))
                                                   (rule "eqSymm" (formula "65"))
                                                   (rule "disjointDefinition" (formula "33"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "notLeft" (formula "33"))
                                                   (rule "eqSymm" (formula "64"))
                                                   (rule "disjointDefinition" (formula "32"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "notLeft" (formula "32"))
                                                   (rule "eqSymm" (formula "63"))
                                                   (rule "disjointDefinition" (formula "31"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "notLeft" (formula "31"))
                                                   (rule "eqSymm" (formula "62"))
                                                   (rule "disjointDefinition" (formula "30"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "notLeft" (formula "30"))
                                                   (rule "eqSymm" (formula "61"))
                                                   (rule "disjointDefinition" (formula "29"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "notLeft" (formula "29"))
                                                   (rule "eqSymm" (formula "60"))
                                                   (rule "disjointDefinition" (formula "28"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "notLeft" (formula "28"))
                                                   (rule "eqSymm" (formula "59"))
                                                   (rule "disjointDefinition" (formula "27"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "notLeft" (formula "27"))
                                                   (rule "eqSymm" (formula "58"))
                                                   (rule "disjointDefinition" (formula "26"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "notLeft" (formula "26"))
                                                   (rule "eqSymm" (formula "57"))
                                                   (rule "disjointDefinition" (formula "25"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "notLeft" (formula "25"))
                                                   (rule "eqSymm" (formula "56"))
                                                   (rule "disjointDefinition" (formula "24"))
                                                    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "84")))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "disjointDefinition" (formula "23"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "notLeft" (formula "23"))
                                                   (rule "eqSymm" (formula "54"))
                                                   (rule "disjointDefinition" (formula "22"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "notLeft" (formula "22"))
                                                   (rule "eqSymm" (formula "53"))
                                                   (rule "disjointDefinition" (formula "21"))
                                                    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "78")))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "disjointDefinition" (formula "20"))
                                                    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "76")))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "disjointDefinition" (formula "19"))
                                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "74")))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "disjointDefinition" (formula "18"))
                                                    (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "72")))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "disjointDefinition" (formula "17"))
                                                    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "70")))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "disjointDefinition" (formula "16"))
                                                    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "68")))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "disjointDefinition" (formula "15"))
                                                    (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "66")))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "disjointDefinition" (formula "14"))
                                                    (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "64")))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "disjointDefinition" (formula "12"))
                                                    (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "61")))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "disjointDefinition" (formula "12"))
                                                    (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "61")))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "applyEq" (formula "11") (term "0") (ifseqformula "41"))
                                                   (rule "eqSymm" (formula "11"))
                                                   (rule "commuteUnion" (formula "11") (term "0,0"))
                                                   (rule "commuteUnion" (formula "11") (term "1,1,0"))
                                                   (rule "commuteUnion" (formula "11") (term "1,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "31") (term "0") (inst "b=b_1"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "translateJavaSubInt" (formula "31") (term "0,1,0"))
                                                   (rule "translateJavaAddInt" (formula "31") (term "0,2,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "31") (term "0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "31") (term "0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "31") (term "0,2,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,0,0,1,1,0"))
                                                   (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "25") (term "0") (inst "b=b_1"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "translateJavaAddInt" (formula "25") (term "0,2,5,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "25") (term "0,2,5,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "25") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                                   (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "26") (term "0") (inst "b=b_1"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "translateJavaAddInt" (formula "26") (term "0,2,5,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,2,5,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "26") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                                   (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "24") (term "0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "translateJavaAddInt" (formula "24") (term "0,1,0,0"))
                                                   (rule "translateJavaAddInt" (formula "24") (term "3,0,1,0"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "3,0"))
                                                   (rule "polySimp_addComm0" (formula "25") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "24"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25"))
                                                   (rule "applyEq" (formula "25") (term "0") (ifseqformula "14"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25"))
                                                   (rule "mul_literals" (formula "25") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                   (rule "add_literals" (formula "25") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                   (rule "mul_literals" (formula "25") (term "1"))
                                                   (rule "inEqSimp_contradInEq3" (formula "24") (ifseqformula "1"))
                                                   (rule "greater_literals" (formula "24") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "mul_literals" (formula "24") (term "0,0"))
                                                   (rule "qeq_literals" (formula "24") (term "0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "closeFalse" (formula "24"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "impRight" (formula "43"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "translateJavaMod" (formula "44") (term "0"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "closeTrue" (formula "44"))
                                             )
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "narrowSelectArrayType" (formula "43") (term "2,0") (ifseqformula "36") (ifseqformula "42"))
                                             (rule "narrowSelectArrayType" (formula "43") (term "2,1") (ifseqformula "1") (ifseqformula "42"))
                                             (rule "seqPermTransRight" (formula "43") (ifseqformula "27") (ifseqformula "20"))
                                             (rule "close" (formula "44") (ifseqformula "1"))
                                          )
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "translateJavaSubInt" (formula "43") (term "2,7,0"))
                                          (rule "polySimp_elimSub" (formula "43") (term "2,7,0"))
                                          (rule "mul_literals" (formula "43") (term "1,2,7,0"))
                                          (rule "polySimp_addComm0" (formula "43") (term "2,7,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,7,0"))
                                          (rule "add_zero_right" (formula "43") (term "0,0,0,7,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,7,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "10"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                          (rule "jmod_axiom" (formula "31") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "31"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1"))
                                          (rule "mul_literals" (formula "9") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,7,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,7,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "0,0,0,7,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0"))
                                          (rule "qeq_literals" (formula "6") (term "0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "newSym_eq" (formula "30") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                          (rule "times_zero_1" (formula "30") (term "1,1"))
                                          (rule "add_zero_right" (formula "30") (term "1"))
                                          (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "30"))
                                          (rule "eqSymm" (formula "31"))
                                          (rule "applyEq" (formula "28") (term "5,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "43") (term "1,2,7,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "29") (term "7,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "43") (term "5,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "29") (term "5,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "27") (term "2,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "43") (term "0,0,0,7,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "33") (term "1,7,0,1") (ifseqformula "31"))
                                          (rule "applyEq" (formula "34") (term "2,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "33") (term "5,0,1") (ifseqformula "31"))
                                          (rule "applyEq" (formula "32") (term "0,2,0") (ifseqformula "31"))
                                          (rule "elimGcdGeq" (formula "43") (term "0,0,7,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                                          (rule "sub_literals" (formula "43") (term "0,0,0,0,0,0,0,0,0,7,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,0,0,7,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,0,1,0,0,0,7,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0,0,7,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0,0,0,0,0,7,0"))
                                          (rule "mul_literals" (formula "43") (term "0,0,0,0,1,0,0,0,7,0"))
                                          (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0,0,0,0,7,0"))
                                          (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0,7,0"))
                                          (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0,0,7,0"))
                                          (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0,7,0"))
                                          (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0,7,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,1,0,0,0,7,0"))
                                          (rule "add_literals" (formula "43") (term "1,1,0,1,0,0,0,7,0"))
                                          (rule "times_zero_1" (formula "43") (term "1,0,1,0,0,0,7,0"))
                                          (rule "add_zero_right" (formula "43") (term "0,1,0,0,0,7,0"))
                                          (rule "leq_literals" (formula "43") (term "1,0,0,0,7,0"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,0,0,7,0"))
                                          (rule "add_literals" (formula "43") (term "1,0,0,0,0,7,0"))
                                          (rule "times_zero_1" (formula "43") (term "0,0,0,0,7,0"))
                                          (rule "qeq_literals" (formula "43") (term "0,0,0,7,0"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "nnf_imp2or" (formula "16") (term "0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "10"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "translateJavaMulInt" (formula "10") (term "1,1,0,0,0,0,1,0,0"))
                                          (rule "translateJavaMulInt" (formula "10") (term "1,1,0,0,0,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "1,1,0,0,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "1,1,0,0,0,0,0,1,0,0"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "andLeft" (formula "15"))
                                          (rule "notLeft" (formula "11"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "notLeft" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "notLeft" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "notLeft" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "notLeft" (formula "11"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "notLeft" (formula "11"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "andLeft" (formula "21"))
                                          (rule "notLeft" (formula "11"))
                                          (rule "notLeft" (formula "10"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "disjointDefinition" (formula "46"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "notLeft" (formula "46"))
                                          (rule "disjointDefinition" (formula "45"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "notLeft" (formula "45"))
                                          (rule "disjointDefinition" (formula "44"))
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "notLeft" (formula "44"))
                                          (rule "eqSymm" (formula "70"))
                                          (rule "disjointDefinition" (formula "43"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "notLeft" (formula "43"))
                                          (rule "eqSymm" (formula "69"))
                                          (rule "disjointDefinition" (formula "42"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "notLeft" (formula "42"))
                                          (rule "eqSymm" (formula "68"))
                                          (rule "disjointDefinition" (formula "41"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "notLeft" (formula "41"))
                                          (rule "eqSymm" (formula "67"))
                                          (rule "disjointDefinition" (formula "40"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "notLeft" (formula "40"))
                                          (rule "eqSymm" (formula "66"))
                                          (rule "disjointDefinition" (formula "39"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "notLeft" (formula "39"))
                                          (rule "eqSymm" (formula "65"))
                                          (rule "disjointDefinition" (formula "38"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "notLeft" (formula "38"))
                                          (rule "eqSymm" (formula "64"))
                                          (rule "disjointDefinition" (formula "37"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "notLeft" (formula "37"))
                                          (rule "eqSymm" (formula "63"))
                                          (rule "disjointDefinition" (formula "36"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "notLeft" (formula "36"))
                                          (rule "eqSymm" (formula "62"))
                                          (rule "disjointDefinition" (formula "35"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "notLeft" (formula "35"))
                                          (rule "eqSymm" (formula "61"))
                                          (rule "disjointDefinition" (formula "34"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "notLeft" (formula "34"))
                                          (rule "eqSymm" (formula "60"))
                                          (rule "disjointDefinition" (formula "33"))
                                           (builtin "One Step Simplification" (formula "33"))
                                          (rule "notLeft" (formula "33"))
                                          (rule "eqSymm" (formula "59"))
                                          (rule "disjointDefinition" (formula "32"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "eqSymm" (formula "58"))
                                          (rule "disjointDefinition" (formula "31"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "notLeft" (formula "31"))
                                          (rule "disjointDefinition" (formula "30"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "notLeft" (formula "30"))
                                          (rule "eqSymm" (formula "56"))
                                          (rule "disjointDefinition" (formula "29"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "notLeft" (formula "29"))
                                          (rule "eqSymm" (formula "55"))
                                          (rule "disjointDefinition" (formula "28"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "notLeft" (formula "28"))
                                          (rule "disjointDefinition" (formula "27"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "notLeft" (formula "27"))
                                          (rule "disjointDefinition" (formula "26"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "notLeft" (formula "26"))
                                          (rule "disjointDefinition" (formula "25"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "notLeft" (formula "25"))
                                          (rule "disjointDefinition" (formula "24"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "notLeft" (formula "24"))
                                          (rule "disjointDefinition" (formula "23"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "notLeft" (formula "23"))
                                          (rule "disjointDefinition" (formula "22"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "notLeft" (formula "22"))
                                          (rule "disjointDefinition" (formula "21"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "notLeft" (formula "21"))
                                          (rule "disjointDefinition" (formula "20"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "notLeft" (formula "20"))
                                          (rule "disjointDefinition" (formula "19"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "notLeft" (formula "19"))
                                          (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "18"))
                                          (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "18"))
                                          (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "18"))
                                          (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "18"))
                                          (rule "distributeIntersection" (formula "28") (term "0"))
                                          (rule "distributeIntersection" (formula "29") (term "0"))
                                          (rule "distributeIntersection" (formula "19") (term "0"))
                                          (rule "distributeIntersection" (formula "28") (term "0,0"))
                                          (rule "distributeIntersection" (formula "28") (term "1,0"))
                                          (rule "distributeIntersection" (formula "29") (term "1,0"))
                                          (rule "distributeIntersection" (formula "29") (term "0,0"))
                                          (rule "distributeIntersection" (formula "19") (term "0,0"))
                                          (rule "distributeIntersection" (formula "19") (term "1,0"))
                                          (rule "distributeIntersection" (formula "28") (term "0,0,0"))
                                          (rule "distributeIntersection" (formula "28") (term "1,0,0"))
                                          (rule "distributeIntersection" (formula "28") (term "0,1,0"))
                                          (rule "distributeIntersection" (formula "28") (term "1,1,0"))
                                          (rule "distributeIntersection" (formula "29") (term "1,1,0"))
                                          (rule "distributeIntersection" (formula "29") (term "0,1,0"))
                                          (rule "distributeIntersection" (formula "29") (term "1,0,0"))
                                          (rule "distributeIntersection" (formula "29") (term "0,0,0"))
                                          (rule "distributeIntersection" (formula "19") (term "0,0,0"))
                                          (rule "distributeIntersection" (formula "19") (term "1,0,0"))
                                          (rule "distributeIntersection" (formula "19") (term "0,1,0"))
                                          (rule "distributeIntersection" (formula "19") (term "1,1,0"))
                                          (rule "unionEqualsEmpty" (formula "28"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "unionEqualsEmpty" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "unionEqualsEmpty" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "unionEqualsEmpty" (formula "29"))
                                          (rule "andLeft" (formula "29"))
                                          (rule "unionEqualsEmpty" (formula "31"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "unionEqualsEmpty" (formula "33"))
                                          (rule "andLeft" (formula "33"))
                                          (rule "unionEqualsEmpty" (formula "35"))
                                          (rule "andLeft" (formula "35"))
                                          (rule "unionEqualsEmpty" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "unionEqualsEmpty" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "unionEqualsEmpty" (formula "32"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "notLeft" (formula "33"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "eqSymm" (formula "54"))
                                          (rule "eqSymm" (formula "53"))
                                          (rule "unionEqualsEmpty" (formula "31"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "notLeft" (formula "31"))
                                          (rule "eqSymm" (formula "53"))
                                          (rule "eqSymm" (formula "52"))
                                          (rule "unionEqualsEmpty" (formula "32"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "eqSymm" (formula "52"))
                                          (rule "eqSymm" (formula "51"))
                                          (rule "unionEqualsEmpty" (formula "31"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "notLeft" (formula "31"))
                                          (rule "eqSymm" (formula "51"))
                                          (rule "eqSymm" (formula "50"))
                                          (rule "unionEqualsEmpty" (formula "31"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "notLeft" (formula "31"))
                                          (rule "eqSymm" (formula "50"))
                                          (rule "eqSymm" (formula "49"))
                                          (rule "sortsDisjointModuloNull" (formula "50"))
                                          (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "99"))
                                           (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "88")))
                                          (rule "false_right" (formula "50"))
                                          (rule "sortsDisjointModuloNull" (formula "49"))
                                          (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "98"))
                                           (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "86")))
                                          (rule "false_right" (formula "49"))
                                          (rule "unionEqualsEmpty" (formula "31"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "notLeft" (formula "31"))
                                          (rule "eqSymm" (formula "49"))
                                          (rule "eqSymm" (formula "48"))
                                          (rule "sortsDisjointModuloNull" (formula "49"))
                                          (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "98"))
                                           (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "89")))
                                          (rule "false_right" (formula "49"))
                                          (rule "sortsDisjointModuloNull" (formula "48"))
                                          (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "97"))
                                           (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "87")))
                                          (rule "false_right" (formula "48"))
                                          (rule "unionEqualsEmpty" (formula "31"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "notLeft" (formula "31"))
                                          (rule "eqSymm" (formula "48"))
                                          (rule "eqSymm" (formula "47"))
                                          (rule "sortsDisjointModuloNull" (formula "48"))
                                          (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "97"))
                                           (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "90")))
                                          (rule "false_right" (formula "48"))
                                          (rule "sortsDisjointModuloNull" (formula "47"))
                                          (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "96"))
                                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "88")))
                                          (rule "false_right" (formula "47"))
                                          (rule "unionEqualsEmpty" (formula "31"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "notLeft" (formula "31"))
                                          (rule "eqSymm" (formula "47"))
                                          (rule "eqSymm" (formula "46"))
                                          (rule "sortsDisjointModuloNull" (formula "47"))
                                          (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "96"))
                                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "91")))
                                          (rule "false_right" (formula "47"))
                                          (rule "sortsDisjointModuloNull" (formula "46"))
                                          (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "89"))
                                           (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "95")))
                                          (rule "false_right" (formula "46"))
                                          (rule "unionEqualsEmpty" (formula "22"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "notLeft" (formula "23"))
                                          (rule "notLeft" (formula "22"))
                                          (rule "eqSymm" (formula "46"))
                                          (rule "eqSymm" (formula "45"))
                                          (rule "unionEqualsEmpty" (formula "21"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "andLeft" (formula "21"))
                                          (rule "notLeft" (formula "21"))
                                          (rule "notLeft" (formula "21"))
                                          (rule "eqSymm" (formula "45"))
                                          (rule "eqSymm" (formula "44"))
                                          (rule "unionEqualsEmpty" (formula "19"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "notLeft" (formula "20"))
                                          (rule "notLeft" (formula "19"))
                                          (rule "eqSymm" (formula "44"))
                                          (rule "eqSymm" (formula "43"))
                                          (rule "unionEqualsEmpty" (formula "19"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "notLeft" (formula "19"))
                                          (rule "notLeft" (formula "19"))
                                          (rule "eqSymm" (formula "43"))
                                          (rule "eqSymm" (formula "42"))
                                          (rule "commuteUnion" (formula "18") (term "1,1,1"))
                                          (rule "commuteUnion" (formula "18") (term "0,1"))
                                          (rule "commuteUnion" (formula "28") (term "0,0,1,0,1,0"))
                                          (rule "commuteUnion" (formula "28") (term "1,1,1,0,1,0"))
                                          (rule "commuteUnion" (formula "18") (term "1,0,1"))
                                          (rule "commuteUnion_2" (formula "28") (term "0,1,0,1,0"))
                                          (rule "commuteUnion" (formula "28") (term "0,0,1,0,1,0"))
                                          (rule "commuteUnion_2" (formula "28") (term "1,0,1,0"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "40"))
                                           (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "86")) (ifInst ""  (formula "87")) (ifInst ""  (formula "88")) (ifInst ""  (formula "89")) (ifInst ""  (formula "90")) (ifInst ""  (formula "91")) (ifInst ""  (formula "92")) (ifInst ""  (formula "93")) (ifInst ""  (formula "10")) (ifInst ""  (formula "11")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")))
                                          (rule "translateJavaMulInt" (formula "40") (term "1,1,0,0"))
                                          (rule "translateJavaMulInt" (formula "40") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                          (rule "andLeft" (formula "40"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "40"))
                                          (rule "andLeft" (formula "42"))
                                          (rule "andLeft" (formula "40"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "disjointDefinition" (formula "68"))
                                           (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "113")))
                                          (rule "true_left" (formula "68"))
                                          (rule "disjointDefinition" (formula "67"))
                                           (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "111")))
                                          (rule "true_left" (formula "67"))
                                          (rule "disjointDefinition" (formula "66"))
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "notLeft" (formula "66"))
                                          (rule "eqSymm" (formula "67"))
                                          (rule "disjointDefinition" (formula "65"))
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "notLeft" (formula "65"))
                                          (rule "eqSymm" (formula "66"))
                                          (rule "disjointDefinition" (formula "64"))
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "notLeft" (formula "64"))
                                          (rule "eqSymm" (formula "65"))
                                          (rule "disjointDefinition" (formula "63"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "notLeft" (formula "63"))
                                          (rule "eqSymm" (formula "64"))
                                          (rule "disjointDefinition" (formula "62"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "notLeft" (formula "62"))
                                          (rule "eqSymm" (formula "63"))
                                          (rule "disjointDefinition" (formula "61"))
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "notLeft" (formula "61"))
                                          (rule "eqSymm" (formula "62"))
                                          (rule "disjointDefinition" (formula "60"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "notLeft" (formula "60"))
                                          (rule "eqSymm" (formula "61"))
                                          (rule "disjointDefinition" (formula "59"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "notLeft" (formula "59"))
                                          (rule "eqSymm" (formula "60"))
                                          (rule "disjointDefinition" (formula "58"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "notLeft" (formula "58"))
                                          (rule "eqSymm" (formula "59"))
                                          (rule "disjointDefinition" (formula "57"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "notLeft" (formula "57"))
                                          (rule "eqSymm" (formula "58"))
                                          (rule "disjointDefinition" (formula "56"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "notLeft" (formula "56"))
                                          (rule "eqSymm" (formula "57"))
                                          (rule "disjointDefinition" (formula "55"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "notLeft" (formula "55"))
                                          (rule "eqSymm" (formula "56"))
                                          (rule "disjointDefinition" (formula "54"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "notLeft" (formula "54"))
                                          (rule "eqSymm" (formula "55"))
                                          (rule "disjointDefinition" (formula "53"))
                                           (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "83")))
                                          (rule "true_left" (formula "53"))
                                          (rule "disjointDefinition" (formula "52"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "notLeft" (formula "52"))
                                          (rule "eqSymm" (formula "53"))
                                          (rule "disjointDefinition" (formula "51"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "notLeft" (formula "51"))
                                          (rule "eqSymm" (formula "52"))
                                          (rule "disjointDefinition" (formula "50"))
                                           (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "77")))
                                          (rule "true_left" (formula "50"))
                                          (rule "disjointDefinition" (formula "49"))
                                           (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "75")))
                                          (rule "true_left" (formula "49"))
                                          (rule "disjointDefinition" (formula "48"))
                                           (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "73")))
                                          (rule "true_left" (formula "48"))
                                          (rule "disjointDefinition" (formula "47"))
                                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "71")))
                                          (rule "true_left" (formula "47"))
                                          (rule "disjointDefinition" (formula "46"))
                                           (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "69")))
                                          (rule "true_left" (formula "46"))
                                          (rule "disjointDefinition" (formula "45"))
                                           (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "67")))
                                          (rule "true_left" (formula "45"))
                                          (rule "disjointDefinition" (formula "44"))
                                           (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "65")))
                                          (rule "true_left" (formula "44"))
                                          (rule "disjointDefinition" (formula "43"))
                                           (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "63")))
                                          (rule "true_left" (formula "43"))
                                          (rule "disjointDefinition" (formula "41"))
                                           (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "60")))
                                          (rule "true_left" (formula "41"))
                                          (rule "disjointDefinition" (formula "41"))
                                           (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "60")))
                                          (rule "true_left" (formula "41"))
                                          (rule "applyEq" (formula "40") (term "0") (ifseqformula "18"))
                                          (rule "eqSymm" (formula "40"))
                                          (rule "commuteUnion" (formula "40") (term "0,0,0"))
                                          (rule "commuteUnion" (formula "40") (term "1,1,0"))
                                          (rule "commuteUnion" (formula "40") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "33") (term "0") (inst "b=b_1"))
                                           (builtin "One Step Simplification" (formula "33"))
                                          (rule "translateJavaAddInt" (formula "33") (term "0,2,5,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "33") (term "0,2,5,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "33") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                          (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "34") (term "0") (inst "b=b_1"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "translateJavaAddInt" (formula "34") (term "0,2,5,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "34") (term "0,2,5,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "34") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                          (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "32") (term "0"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "translateJavaAddInt" (formula "32") (term "0,1,0,0"))
                                          (rule "translateJavaAddInt" (formula "32") (term "3,0,1,0"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "polySimp_addComm0" (formula "34") (term "3,0"))
                                          (rule "polySimp_addComm0" (formula "33") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "32"))
                                          (rule "inEqSimp_commuteLeq" (formula "33"))
                                          (rule "applyEq" (formula "33") (term "0") (ifseqformula "22"))
                                          (rule "inEqSimp_homoInEq1" (formula "33"))
                                          (rule "mul_literals" (formula "33") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "33") (term "0"))
                                          (rule "add_literals" (formula "33") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                          (rule "mul_literals" (formula "33") (term "1"))
                                          (rule "elimGcdLeq_antec" (formula "33") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(6(5(2(#))))"))
                                          (rule "neg_literal" (formula "33") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "33") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "33"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "33") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                                          (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "33") (term "0,0"))
                                          (rule "qeq_literals" (formula "33") (term "0"))
                                           (builtin "One Step Simplification" (formula "33"))
                                          (rule "elimGcdGeq_antec" (formula "32") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "32") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "32") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0"))
                                          (rule "leq_literals" (formula "32") (term "0"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "replace_known_left" (formula "102") (term "0,0,7,0") (ifseqformula "32"))
                                           (builtin "One Step Simplification" (formula "102"))
                                          (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "28"))
                                           (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "100")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,0") (ifseqformula "20"))
                                          (rule "replace_known_left" (formula "35") (term "1,0,1,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "99")))
                                          (rule "applyEqRigid" (formula "35") (term "1") (ifseqformula "36"))
                                          (rule "ifEqualsInteger" (formula "35"))
                                          (rule "elementOfUnion" (formula "35") (term "0,0,1"))
                                          (rule "elementOfArrayRangeConcrete" (formula "35") (term "1,0,0,1"))
                                          (rule "eqSymm" (formula "35") (term "0,0,1,0,0,1"))
                                          (rule "replace_known_right" (formula "35") (term "0,0,1,0,0,1") (ifseqformula "98"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "elementOfUnion" (formula "35") (term "0,0"))
                                          (rule "elementOfArrayRangeConcrete" (formula "35") (term "1,0,0"))
                                          (rule "eqSymm" (formula "35") (term "0,0,1,0,0"))
                                          (rule "replace_known_right" (formula "35") (term "0,0,1,0,0") (ifseqformula "98"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "elementOfUnion" (formula "35") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "elementOfUnion" (formula "35") (term "0,0,1"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "43") (term "0") (inst "b=b_1"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "translateJavaSubInt" (formula "43") (term "0,1,0"))
                                          (rule "translateJavaAddInt" (formula "43") (term "0,2,0,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "43") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "43") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "43") (term "0,2,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "43") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "43") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "0,0,1,1,0"))
                                          (rule "mul_literals" (formula "43") (term "0,0,0,1,1,0"))
                                          (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "42") (term "0,1") (inst "b=b_1"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "translateJavaAddInt" (formula "42") (term "3,0,1,0,1"))
                                          (rule "translateJavaAddInt" (formula "42") (term "2,0,1,0,1"))
                                          (rule "translateJavaMod" (formula "42") (term "0,1,0,0,1"))
                                          (rule "translateJavaAddInt" (formula "42") (term "0,2,1,3,0,1,0,1"))
                                          (rule "polySimp_addComm0" (formula "42") (term "0,2,1,3,0,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1"))
                                          (rule "jmod_axiom" (formula "42") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,0,1"))
                                          (rule "polySimp_homoEq" (formula "42") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,0,1"))
                                          (rule "polySimp_sepPosMonomial" (formula "42") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1"))
                                          (rule "commute_or" (formula "23") (term "0,0"))
                                          (rule "jdiv_axiom" (formula "39") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "applyEq" (formula "39") (term "1") (ifseqformula "40"))
                                          (rule "inEqSimp_subsumption6" (formula "39") (term "0,0") (ifseqformula "32"))
                                          (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                                          (rule "greater_literals" (formula "39") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "leq_literals" (formula "39") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "polyDiv_pullOut" (formula "39") (term "0") (inst "polyDivCoeff=l_0"))
                                          (rule "equal_literals" (formula "39") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                                          (rule "polySimp_homoEq" (formula "39"))
                                          (rule "polySimp_pullOutFactor0" (formula "39") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "39") (term "1,0,0,0,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "0,0,0,1,0"))
                                          (rule "div_literals" (formula "39") (term "0,0,1,0"))
                                          (rule "add_zero_left" (formula "39") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "39") (term "0"))
                                          (rule "add_literals" (formula "39") (term "1,0"))
                                          (rule "times_zero_1" (formula "39") (term "0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                          (rule "nnf_imp2or" (formula "37") (term "0"))
                                          (rule "arrayLengthIsAShort" (formula "6") (term "0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                          (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                          (rule "qeq_literals" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "cut_direct" (formula "30") (term "0,0"))
                                          (branch "CUT: result_22.<created> = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "arrayLengthNotNegative" (formula "6") (term "0"))
                                             (rule "nnf_imp2or" (formula "38") (term "0"))
                                             (rule "nnf_imp2or" (formula "43") (term "0"))
                                             (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                             (rule "qeq_literals" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                             (rule "qeq_literals" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "arrayLengthNotNegative" (formula "15") (term "0"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                             (rule "qeq_literals" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "arrayLengthIsAShort" (formula "14") (term "0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "arrayLengthNotNegative" (formula "14") (term "0"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                             (rule "qeq_literals" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "arrayLengthNotNegative" (formula "13") (term "0"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "arrayLengthIsAShort" (formula "13") (term "0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "arrayLengthIsAShort" (formula "12") (term "0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "arrayLengthNotNegative" (formula "12") (term "0"))
                                             (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                             (rule "qeq_literals" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                                             (rule "qeq_literals" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "arrayLengthIsAShort" (formula "10") (term "0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                                             (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "arrayLengthIsAShort" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "nnf_imp2or" (formula "42") (term "0,1"))
                                             (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                             (rule "associativeLawUnion" (formula "18") (term "1"))
                                             (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                             (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                                             (rule "associativeLawUnion" (formula "28") (term "0,1,0"))
                                             (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "34") (term "0"))
                                             (rule "wellFormedAnonEQ" (formula "34") (term "1,0") (ifseqformula "28"))
                                             (rule "wellFormedAnonEQ" (formula "34") (term "0,1,0") (ifseqformula "20"))
                                             (rule "replace_known_left" (formula "34") (term "0,1") (ifseqformula "35"))
                                              (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "101")) (ifInst ""  (formula "1")) (ifInst ""  (formula "19")) (ifInst ""  (formula "27")))
                                             (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "35") (term "0") (inst "j=j") (inst "i=i"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1,0"))
                                             (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "43") (term "0,0,1"))
                                             (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "104") (term "0") (inst "b=b_1"))
                                              (builtin "One Step Simplification" (formula "104"))
                                             (rule "translateJavaAddInt" (formula "104") (term "2,0,1,0"))
                                             (rule "translateJavaAddInt" (formula "104") (term "3,0,1,0"))
                                             (rule "translateJavaAddInt" (formula "104") (term "0,2,1,3,0,1,0"))
                                             (rule "allRight" (formula "104") (inst "sk=b_1_0"))
                                             (rule "impRight" (formula "104"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addComm0" (formula "106") (term "0,2,1,3,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: result_22.<created> = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "arrayLengthNotNegative" (formula "6") (term "0"))
                                             (rule "nnf_imp2or" (formula "38") (term "0"))
                                             (rule "nnf_imp2or" (formula "43") (term "0"))
                                             (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                             (rule "qeq_literals" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                             (rule "qeq_literals" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "arrayLengthNotNegative" (formula "15") (term "0"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                             (rule "qeq_literals" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "arrayLengthNotNegative" (formula "14") (term "0"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                             (rule "qeq_literals" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "arrayLengthIsAShort" (formula "14") (term "0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "arrayLengthNotNegative" (formula "13") (term "0"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "arrayLengthIsAShort" (formula "13") (term "0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "arrayLengthIsAShort" (formula "12") (term "0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "arrayLengthNotNegative" (formula "12") (term "0"))
                                             (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                             (rule "qeq_literals" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                                             (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                                             (rule "qeq_literals" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "arrayLengthIsAShort" (formula "10") (term "0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "arrayLengthIsAShort" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "nnf_imp2or" (formula "42") (term "0,1"))
                                             (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                             (rule "associativeLawUnion" (formula "18") (term "1"))
                                             (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                             (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                                             (rule "associativeLawUnion" (formula "28") (term "0,1,0"))
                                             (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "34") (term "0") (inst "j=j") (inst "i=i"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0"))
                                             (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0"))
                                             (rule "nnf_notAnd" (formula "42") (term "0,0,1"))
                                             (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "104") (term "0") (inst "b=b_1"))
                                              (builtin "One Step Simplification" (formula "104"))
                                             (rule "translateJavaAddInt" (formula "104") (term "2,0,1,0"))
                                             (rule "translateJavaAddInt" (formula "104") (term "3,0,1,0"))
                                             (rule "translateJavaAddInt" (formula "104") (term "0,2,1,3,0,1,0"))
                                             (rule "allRight" (formula "104") (inst "sk=b_1_0"))
                                             (rule "impRight" (formula "104"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addComm0" (formula "106") (term "0,2,1,3,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "29")))
                                       (rule "closeTrue" (formula "43"))
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "translateJavaSubInt" (formula "43") (term "2,6,0"))
                                    (rule "polySimp_elimSub" (formula "43") (term "2,6,0"))
                                    (rule "mul_literals" (formula "43") (term "1,2,6,0"))
                                    (rule "polySimp_addComm0" (formula "43") (term "2,6,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "9"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,6,0"))
                                    (rule "add_zero_right" (formula "43") (term "0,0,0,6,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,6,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "jmod_axiom" (formula "31") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "31"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1"))
                                    (rule "mul_literals" (formula "9") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,6,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,6,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "0,0,0,6,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "qeq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "newSym_eq" (formula "30") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                    (rule "times_zero_1" (formula "30") (term "1,1"))
                                    (rule "add_zero_right" (formula "30") (term "1"))
                                    (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "30"))
                                    (rule "eqSymm" (formula "31"))
                                    (rule "applyEq" (formula "32") (term "0,2,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "43") (term "0,0,0,6,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "43") (term "7,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "43") (term "1,2,6,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "34") (term "2,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "33") (term "5,0,1") (ifseqformula "31"))
                                    (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "27") (term "2,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "33") (term "1,7,0,1") (ifseqformula "31"))
                                    (rule "applyEq" (formula "29") (term "7,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "43") (term "5,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "29") (term "5,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "28") (term "5,0") (ifseqformula "31"))
                                    (rule "elimGcdGeq" (formula "43") (term "0,0,6,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0,0,0,0,0,6,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,0,0,6,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,0,1,0,0,0,6,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0,0,6,0"))
                                    (rule "sub_literals" (formula "43") (term "0,0,0,0,0,0,0,0,0,6,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0,0,0,0,6,0"))
                                    (rule "mul_literals" (formula "43") (term "0,0,0,0,1,0,0,0,6,0"))
                                    (rule "polySimp_addLiterals" (formula "43") (term "0,0,0,0,0,0,0,6,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0,6,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0,6,0"))
                                    (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0,6,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,1,0,0,0,6,0"))
                                    (rule "add_literals" (formula "43") (term "1,1,0,1,0,0,0,6,0"))
                                    (rule "times_zero_1" (formula "43") (term "1,0,1,0,0,0,6,0"))
                                    (rule "add_zero_right" (formula "43") (term "0,1,0,0,0,6,0"))
                                    (rule "leq_literals" (formula "43") (term "1,0,0,0,6,0"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,0,0,6,0"))
                                    (rule "add_literals" (formula "43") (term "1,0,0,0,0,6,0"))
                                    (rule "times_zero_1" (formula "43") (term "0,0,0,0,6,0"))
                                    (rule "qeq_literals" (formula "43") (term "0,0,0,6,0"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                    (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "35"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "translateJavaMulInt" (formula "35") (term "1,1,0,0,0,0,1,0,0"))
                                    (rule "translateJavaMulInt" (formula "35") (term "1,1,0,0,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,1,0,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,1,0,0,0,0,0,1,0,0"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "40"))
                                    (rule "notLeft" (formula "36"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "41"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "43"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "notLeft" (formula "36"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "45"))
                                    (rule "notLeft" (formula "36"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "46"))
                                    (rule "notLeft" (formula "36"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "disjointDefinition" (formula "71"))
                                     (builtin "One Step Simplification" (formula "71"))
                                    (rule "notLeft" (formula "71"))
                                    (rule "disjointDefinition" (formula "70"))
                                     (builtin "One Step Simplification" (formula "70"))
                                    (rule "notLeft" (formula "70"))
                                    (rule "disjointDefinition" (formula "69"))
                                     (builtin "One Step Simplification" (formula "69"))
                                    (rule "notLeft" (formula "69"))
                                    (rule "eqSymm" (formula "70"))
                                    (rule "disjointDefinition" (formula "68"))
                                     (builtin "One Step Simplification" (formula "68"))
                                    (rule "notLeft" (formula "68"))
                                    (rule "eqSymm" (formula "69"))
                                    (rule "disjointDefinition" (formula "67"))
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "notLeft" (formula "67"))
                                    (rule "eqSymm" (formula "68"))
                                    (rule "disjointDefinition" (formula "66"))
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "notLeft" (formula "66"))
                                    (rule "eqSymm" (formula "67"))
                                    (rule "disjointDefinition" (formula "65"))
                                     (builtin "One Step Simplification" (formula "65"))
                                    (rule "notLeft" (formula "65"))
                                    (rule "eqSymm" (formula "66"))
                                    (rule "disjointDefinition" (formula "64"))
                                     (builtin "One Step Simplification" (formula "64"))
                                    (rule "notLeft" (formula "64"))
                                    (rule "eqSymm" (formula "65"))
                                    (rule "disjointDefinition" (formula "63"))
                                     (builtin "One Step Simplification" (formula "63"))
                                    (rule "notLeft" (formula "63"))
                                    (rule "eqSymm" (formula "64"))
                                    (rule "disjointDefinition" (formula "62"))
                                     (builtin "One Step Simplification" (formula "62"))
                                    (rule "notLeft" (formula "62"))
                                    (rule "eqSymm" (formula "63"))
                                    (rule "disjointDefinition" (formula "61"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "notLeft" (formula "61"))
                                    (rule "eqSymm" (formula "62"))
                                    (rule "disjointDefinition" (formula "60"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "notLeft" (formula "60"))
                                    (rule "eqSymm" (formula "61"))
                                    (rule "disjointDefinition" (formula "59"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "notLeft" (formula "59"))
                                    (rule "eqSymm" (formula "60"))
                                    (rule "disjointDefinition" (formula "58"))
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "notLeft" (formula "58"))
                                    (rule "eqSymm" (formula "59"))
                                    (rule "disjointDefinition" (formula "57"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "notLeft" (formula "57"))
                                    (rule "eqSymm" (formula "58"))
                                    (rule "disjointDefinition" (formula "56"))
                                     (builtin "One Step Simplification" (formula "56"))
                                    (rule "notLeft" (formula "56"))
                                    (rule "disjointDefinition" (formula "55"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "notLeft" (formula "55"))
                                    (rule "eqSymm" (formula "56"))
                                    (rule "disjointDefinition" (formula "54"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "notLeft" (formula "54"))
                                    (rule "eqSymm" (formula "55"))
                                    (rule "disjointDefinition" (formula "53"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "notLeft" (formula "53"))
                                    (rule "disjointDefinition" (formula "52"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "notLeft" (formula "52"))
                                    (rule "disjointDefinition" (formula "51"))
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "notLeft" (formula "51"))
                                    (rule "disjointDefinition" (formula "50"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "notLeft" (formula "50"))
                                    (rule "disjointDefinition" (formula "49"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "notLeft" (formula "49"))
                                    (rule "disjointDefinition" (formula "48"))
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "notLeft" (formula "48"))
                                    (rule "disjointDefinition" (formula "47"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "notLeft" (formula "47"))
                                    (rule "disjointDefinition" (formula "46"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "notLeft" (formula "46"))
                                    (rule "disjointDefinition" (formula "45"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "notLeft" (formula "45"))
                                    (rule "disjointDefinition" (formula "44"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "notLeft" (formula "44"))
                                    (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "23") (term "1,0,1,0") (ifseqformula "43"))
                                    (rule "distributeIntersection" (formula "20") (term "0"))
                                    (rule "distributeIntersection" (formula "21") (term "0"))
                                    (rule "distributeIntersection" (formula "11") (term "0"))
                                    (rule "distributeIntersection" (formula "20") (term "1,0"))
                                    (rule "distributeIntersection" (formula "20") (term "0,0"))
                                    (rule "distributeIntersection" (formula "21") (term "0,0"))
                                    (rule "distributeIntersection" (formula "21") (term "1,0"))
                                    (rule "unionEqualsEmpty" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "distributeIntersection" (formula "21") (term "1,1,0"))
                                    (rule "distributeIntersection" (formula "21") (term "0,1,0"))
                                    (rule "distributeIntersection" (formula "21") (term "1,0,0"))
                                    (rule "distributeIntersection" (formula "21") (term "0,0,0"))
                                    (rule "distributeIntersection" (formula "22") (term "0,0,0"))
                                    (rule "distributeIntersection" (formula "22") (term "1,0,0"))
                                    (rule "distributeIntersection" (formula "22") (term "0,1,0"))
                                    (rule "distributeIntersection" (formula "22") (term "1,1,0"))
                                    (rule "distributeIntersection" (formula "12") (term "0"))
                                    (rule "distributeIntersection" (formula "11") (term "0"))
                                    (rule "unionEqualsEmpty" (formula "21"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "unionEqualsEmpty" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "distributeIntersection" (formula "12") (term "1,0"))
                                    (rule "distributeIntersection" (formula "12") (term "0,0"))
                                    (rule "distributeIntersection" (formula "11") (term "1,0"))
                                    (rule "distributeIntersection" (formula "11") (term "0,0"))
                                    (rule "unionEqualsEmpty" (formula "21"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "unionEqualsEmpty" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "unionEqualsEmpty" (formula "25"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "unionEqualsEmpty" (formula "27"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "unionEqualsEmpty" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "unionEqualsEmpty" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "unionEqualsEmpty" (formula "24"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "eqSymm" (formula "54"))
                                    (rule "eqSymm" (formula "53"))
                                    (rule "unionEqualsEmpty" (formula "23"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "eqSymm" (formula "53"))
                                    (rule "eqSymm" (formula "52"))
                                    (rule "unionEqualsEmpty" (formula "24"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "eqSymm" (formula "52"))
                                    (rule "eqSymm" (formula "51"))
                                    (rule "unionEqualsEmpty" (formula "23"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "eqSymm" (formula "51"))
                                    (rule "eqSymm" (formula "50"))
                                    (rule "unionEqualsEmpty" (formula "24"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "eqSymm" (formula "50"))
                                    (rule "eqSymm" (formula "49"))
                                    (rule "sortsDisjointModuloNull" (formula "50"))
                                    (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "99"))
                                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "90")))
                                    (rule "false_right" (formula "50"))
                                    (rule "sortsDisjointModuloNull" (formula "49"))
                                    (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "98"))
                                     (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "88")))
                                    (rule "false_right" (formula "49"))
                                    (rule "unionEqualsEmpty" (formula "23"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "eqSymm" (formula "49"))
                                    (rule "eqSymm" (formula "48"))
                                    (rule "sortsDisjointModuloNull" (formula "49"))
                                    (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "98"))
                                     (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "87")))
                                    (rule "false_right" (formula "49"))
                                    (rule "sortsDisjointModuloNull" (formula "48"))
                                    (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "97"))
                                     (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "85")))
                                    (rule "false_right" (formula "48"))
                                    (rule "unionEqualsEmpty" (formula "24"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "eqSymm" (formula "48"))
                                    (rule "eqSymm" (formula "47"))
                                    (rule "sortsDisjointModuloNull" (formula "48"))
                                    (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "97"))
                                     (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "92")))
                                    (rule "false_right" (formula "48"))
                                    (rule "sortsDisjointModuloNull" (formula "47"))
                                    (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "96"))
                                     (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "90")))
                                    (rule "false_right" (formula "47"))
                                    (rule "unionEqualsEmpty" (formula "23"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "eqSymm" (formula "47"))
                                    (rule "eqSymm" (formula "46"))
                                    (rule "sortsDisjointModuloNull" (formula "47"))
                                    (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "96"))
                                     (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "89")))
                                    (rule "false_right" (formula "47"))
                                    (rule "sortsDisjointModuloNull" (formula "46"))
                                    (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "87"))
                                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "95")))
                                    (rule "false_right" (formula "46"))
                                    (rule "unionEqualsEmpty" (formula "14"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "notLeft" (formula "15"))
                                    (rule "notLeft" (formula "14"))
                                    (rule "eqSymm" (formula "46"))
                                    (rule "eqSymm" (formula "45"))
                                    (rule "unionEqualsEmpty" (formula "13"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "notLeft" (formula "13"))
                                    (rule "notLeft" (formula "13"))
                                    (rule "eqSymm" (formula "45"))
                                    (rule "eqSymm" (formula "44"))
                                    (rule "unionEqualsEmpty" (formula "12"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "notLeft" (formula "13"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "eqSymm" (formula "44"))
                                    (rule "eqSymm" (formula "43"))
                                    (rule "unionEqualsEmpty" (formula "11"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "11"))
                                    (rule "notLeft" (formula "11"))
                                    (rule "eqSymm" (formula "43"))
                                    (rule "eqSymm" (formula "42"))
                                    (rule "commuteUnion_2" (formula "40") (term "0,1"))
                                    (rule "commuteUnion" (formula "40") (term "1,1,1"))
                                    (rule "commuteUnion" (formula "20") (term "0,1,0,1,0"))
                                    (rule "commuteUnion" (formula "20") (term "1,1,1,0,1,0"))
                                    (rule "commuteUnion" (formula "40") (term "0,0,1"))
                                    (rule "commuteUnion" (formula "20") (term "1,0,1,0,1,0"))
                                    (rule "commuteUnion_2" (formula "40") (term "0,1"))
                                    (rule "commuteUnion_2" (formula "40") (term "1"))
                                    (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "10"))
                                     (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "86")) (ifInst ""  (formula "87")) (ifInst ""  (formula "88")) (ifInst ""  (formula "89")) (ifInst ""  (formula "90")) (ifInst ""  (formula "91")) (ifInst ""  (formula "92")) (ifInst ""  (formula "93")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                    (rule "translateJavaMulInt" (formula "10") (term "1,0,0,0"))
                                    (rule "translateJavaMulInt" (formula "10") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "disjointDefinition" (formula "38"))
                                     (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "113")))
                                    (rule "true_left" (formula "38"))
                                    (rule "disjointDefinition" (formula "37"))
                                     (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "111")))
                                    (rule "true_left" (formula "37"))
                                    (rule "disjointDefinition" (formula "36"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "notLeft" (formula "36"))
                                    (rule "eqSymm" (formula "67"))
                                    (rule "disjointDefinition" (formula "35"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "eqSymm" (formula "66"))
                                    (rule "disjointDefinition" (formula "34"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "notLeft" (formula "34"))
                                    (rule "eqSymm" (formula "65"))
                                    (rule "disjointDefinition" (formula "33"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "notLeft" (formula "33"))
                                    (rule "eqSymm" (formula "64"))
                                    (rule "disjointDefinition" (formula "32"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "notLeft" (formula "32"))
                                    (rule "eqSymm" (formula "63"))
                                    (rule "disjointDefinition" (formula "31"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "notLeft" (formula "31"))
                                    (rule "eqSymm" (formula "62"))
                                    (rule "disjointDefinition" (formula "30"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "notLeft" (formula "30"))
                                    (rule "eqSymm" (formula "61"))
                                    (rule "disjointDefinition" (formula "29"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "notLeft" (formula "29"))
                                    (rule "eqSymm" (formula "60"))
                                    (rule "disjointDefinition" (formula "28"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "notLeft" (formula "28"))
                                    (rule "eqSymm" (formula "59"))
                                    (rule "disjointDefinition" (formula "27"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "notLeft" (formula "27"))
                                    (rule "eqSymm" (formula "58"))
                                    (rule "disjointDefinition" (formula "26"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "notLeft" (formula "26"))
                                    (rule "eqSymm" (formula "57"))
                                    (rule "disjointDefinition" (formula "25"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "eqSymm" (formula "56"))
                                    (rule "disjointDefinition" (formula "24"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "eqSymm" (formula "55"))
                                    (rule "disjointDefinition" (formula "23"))
                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "83")))
                                    (rule "true_left" (formula "23"))
                                    (rule "disjointDefinition" (formula "22"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "notLeft" (formula "22"))
                                    (rule "eqSymm" (formula "53"))
                                    (rule "disjointDefinition" (formula "21"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "eqSymm" (formula "52"))
                                    (rule "disjointDefinition" (formula "20"))
                                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "77")))
                                    (rule "true_left" (formula "20"))
                                    (rule "disjointDefinition" (formula "19"))
                                     (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "75")))
                                    (rule "true_left" (formula "19"))
                                    (rule "disjointDefinition" (formula "18"))
                                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "73")))
                                    (rule "true_left" (formula "18"))
                                    (rule "disjointDefinition" (formula "17"))
                                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "71")))
                                    (rule "true_left" (formula "17"))
                                    (rule "disjointDefinition" (formula "16"))
                                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "69")))
                                    (rule "true_left" (formula "16"))
                                    (rule "disjointDefinition" (formula "15"))
                                     (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "67")))
                                    (rule "true_left" (formula "15"))
                                    (rule "disjointDefinition" (formula "14"))
                                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "65")))
                                    (rule "true_left" (formula "14"))
                                    (rule "disjointDefinition" (formula "13"))
                                     (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "63")))
                                    (rule "true_left" (formula "13"))
                                    (rule "disjointDefinition" (formula "11"))
                                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "60")))
                                    (rule "true_left" (formula "11"))
                                    (rule "disjointDefinition" (formula "11"))
                                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "60")))
                                    (rule "true_left" (formula "11"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "40"))
                                    (rule "eqSymm" (formula "10"))
                                    (rule "commuteUnion_2" (formula "10") (term "0,0"))
                                    (rule "commuteUnion" (formula "10") (term "1,1,0"))
                                    (rule "commuteUnion" (formula "10") (term "0,0,0"))
                                    (rule "commuteUnion_2" (formula "10") (term "0,0"))
                                    (rule "commuteUnion_2" (formula "10") (term "0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "30") (term "0") (inst "b=b_1"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "translateJavaAddInt" (formula "30") (term "0,2,0,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "30") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "30") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,2,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "0,0,1,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,0,0,1,1,0"))
                                    (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "23") (term "0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "translateJavaAddInt" (formula "23") (term "3,0,1,0"))
                                    (rule "translateJavaAddInt" (formula "23") (term "0,1,0,0"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "polySimp_addComm0" (formula "25") (term "3,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "23"))
                                    (rule "inEqSimp_commuteLeq" (formula "24"))
                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "13"))
                                    (rule "inEqSimp_homoInEq1" (formula "24"))
                                    (rule "mul_literals" (formula "24") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0"))
                                    (rule "add_literals" (formula "24") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                    (rule "mul_literals" (formula "24") (term "1"))
                                    (rule "elimGcdLeq_antec" (formula "24") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(6(5(2(#))))"))
                                    (rule "leq_literals" (formula "24") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "neg_literal" (formula "24") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "24") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0"))
                                    (rule "qeq_literals" (formula "24") (term "0"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                    (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0"))
                                    (rule "leq_literals" (formula "23") (term "0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "replace_known_left" (formula "102") (term "0,0,6,0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "28")))
                                    (rule "closeTrue" (formula "102"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "impRight" (formula "43"))
                                 (rule "andRight" (formula "44"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "44"))
                                    (branch "Case 1"
                                        (builtin "One Step Simplification" (formula "1"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "translateJavaMod" (formula "44") (term "0"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "closeTrue" (formula "44"))
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "1"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "translateJavaSubInt" (formula "44") (term "1,0"))
                                       (rule "notRight" (formula "44"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "polySimp_elimSub" (formula "1") (term "0"))
                                       (rule "mul_literals" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                       (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                       (rule "jmod_axiom" (formula "33") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "applyEq" (formula "32") (term "5,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "35") (term "1,7,0") (ifseqformula "1"))
                                       (rule "add_literals" (formula "35") (term "7,0"))
                                       (rule "applyEq" (formula "35") (term "5,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "31") (term "5,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "34") (term "0,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "32") (term "7,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "1"))
                                       (rule "jdiv_axiom_inline" (formula "33") (term "0,1,0"))
                                       (rule "mul_literals" (formula "33") (term "0,0,2,0,1,0"))
                                       (rule "qeq_literals" (formula "33") (term "0,0,1,0"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "div_literals" (formula "33") (term "0,1,0"))
                                       (rule "mul_literals" (formula "33") (term "1,0"))
                                       (rule "add_zero_right" (formula "33") (term "0"))
                                       (rule "applyEq" (formula "30") (term "2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "33"))
                                       (rule "equal_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "1"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "translateJavaAddInt" (formula "44") (term "6,0"))
                                    (rule "translateJavaSubInt" (formula "44") (term "7,0"))
                                    (rule "add_zero_left" (formula "44") (term "6,0"))
                                    (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "polySimp_elimSub" (formula "44") (term "7,0"))
                                    (rule "mul_literals" (formula "44") (term "1,7,0"))
                                    (rule "polySimp_addComm0" (formula "44") (term "7,0"))
                                    (rule "close" (formula "44") (ifseqformula "34"))
                                 )
                              )
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "36")))
                              (rule "closeTrue" (formula "43"))
                           )
                        )
                        (branch "Body Preserves Invariant"
                            (builtin "One Step Simplification" (formula "45"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "translateJavaSubInt" (formula "45") (term "1,0,1,0,1,1,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "45") (term "0,1,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "45") (term "0,1,1,1,0,1"))
                           (rule "translateJavaSubInt" (formula "45") (term "2,0,2,0,0,0,0,1,0,1,1,0,1,1"))
                           (rule "translateJavaMod" (formula "45") (term "0,1,1,0,0,0,0,0,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "45") (term "2,0,1,0,1,0,1,1,0,1"))
                           (rule "translateJavaMod" (formula "45") (term "0,0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "translateJavaAddInt" (formula "45") (term "6,0,1,1,1,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "45") (term "7,0,1,1,1,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "45") (term "2,6,0,1,0,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "45") (term "2,7,0,1,0,0,0,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "45") (term "2,0,1,0,1,1,0,0"))
                           (rule "translateJavaMod" (formula "38") (term "0,1,1,0,0,0,0,0"))
                           (rule "translateJavaMod" (formula "38") (term "0,0,0,1,1"))
                           (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,0,1,0"))
                           (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,2,0,1,0,0,0,0"))
                           (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,0,1,1,1"))
                           (rule "translateJavaAddInt" (formula "38") (term "6,0,1,1,1"))
                           (rule "translateJavaSubInt" (formula "38") (term "7,0,1,1,1"))
                           (rule "translateJavaSubInt" (formula "38") (term "2,6,0,1,0"))
                           (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,0,1,0,0"))
                           (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,0,1,0,0,0"))
                           (rule "translateJavaSubInt" (formula "38") (term "2,7,0,1,0,0,0"))
                           (rule "translateJavaSubInt" (formula "38") (term "1,0,1,0,1,1"))
                           (rule "impRight" (formula "45"))
                           (rule "andLeft" (formula "39"))
                           (rule "andLeft" (formula "39"))
                           (rule "andLeft" (formula "39"))
                           (rule "andLeft" (formula "39"))
                           (rule "andLeft" (formula "39"))
                           (rule "andLeft" (formula "39"))
                           (rule "andLeft" (formula "39"))
                           (rule "eqSymm" (formula "53") (term "0,1,0,1,1,0,0,1,1,0,1"))
                           (rule "eqSymm" (formula "53") (term "1,0,0,1,0,1,1,0,1"))
                           (rule "eqSymm" (formula "46") (term "0,1,0,1"))
                           (rule "polySimp_elimSub" (formula "53") (term "0,1,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "53") (term "2,0,2,0,0,0,0,1,0,1,1,0,1"))
                           (rule "mul_literals" (formula "53") (term "1,2,0,2,0,0,0,0,1,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "53") (term "7,0,1,1,1,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "53") (term "1,7,0,1,1,1,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,1,1,0"))
                           (rule "mul_literals" (formula "1") (term "1,2,0,1,0,1,1,0"))
                           (rule "polySimp_elimSub" (formula "53") (term "0,1,1,1,0"))
                           (rule "polySimp_elimSub" (formula "53") (term "2,7,0,1,0,0,0,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "53") (term "1,2,7,0,1,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "53") (term "2,6,0,1,0,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "53") (term "1,2,6,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "53") (term "2,0,1,0,1,0,1,1,0"))
                           (rule "mul_literals" (formula "53") (term "1,2,0,1,0,1,0,1,1,0"))
                           (rule "polySimp_elimSub" (formula "46") (term "7,0,1,1"))
                           (rule "mul_literals" (formula "46") (term "1,7,0,1,1"))
                           (rule "polySimp_elimSub" (formula "46") (term "2,0,1,0,0,1,1"))
                           (rule "mul_literals" (formula "46") (term "1,2,0,1,0,0,1,1"))
                           (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,2,0,1,0,0"))
                           (rule "polySimp_elimSub" (formula "45") (term "2,6,0"))
                           (rule "mul_literals" (formula "45") (term "1,2,6,0"))
                           (rule "polySimp_elimSub" (formula "44") (term "2,0,1,0,0"))
                           (rule "mul_literals" (formula "44") (term "1,2,0,1,0,0"))
                           (rule "polySimp_elimSub" (formula "43") (term "2,0,1,0,0"))
                           (rule "mul_literals" (formula "43") (term "1,2,0,1,0,0"))
                           (rule "polySimp_elimSub" (formula "43") (term "2,7,0"))
                           (rule "mul_literals" (formula "43") (term "1,2,7,0"))
                           (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,2,0"))
                           (rule "mul_literals" (formula "42") (term "1,2,0,1,0,2,0"))
                           (rule "polySimp_elimSub" (formula "53") (term "0,0,1,0,1,1,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "53") (term "1,0,0,1,0,1,1,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "46") (term "0,0,1,0,1"))
                           (rule "mul_literals" (formula "46") (term "1,0,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "53") (term "6,0,1,1,1,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "46") (term "6,0,1,1"))
                           (rule "polySimp_addComm0" (formula "53") (term "0,1,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "53") (term "2,0,2,0,0,0,0,1,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "53") (term "7,0,1,1,1,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "1") (term "2,0,1,0,1,1,0"))
                           (rule "polySimp_addComm0" (formula "53") (term "0,1,1,1,0"))
                           (rule "polySimp_addComm0" (formula "53") (term "2,7,0,1,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "53") (term "2,6,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "53") (term "2,0,1,0,1,0,1,1,0"))
                           (rule "polySimp_addComm0" (formula "46") (term "7,0,1,1"))
                           (rule "polySimp_addComm0" (formula "46") (term "2,0,1,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "45") (term "2,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "45") (term "2,6,0"))
                           (rule "polySimp_addComm0" (formula "44") (term "2,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "43") (term "2,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "43") (term "2,7,0"))
                           (rule "polySimp_addComm0" (formula "42") (term "2,0,1,0,2,0"))
                           (rule "polySimp_addComm0" (formula "53") (term "0,0,1,0,1,1,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "46") (term "0,0,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "53") (term "1,0,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "narrowSelectArrayType" (formula "42") (term "2,1") (ifseqformula "2") (ifseqformula "52"))
                           (rule "inEqSimp_commuteLeq" (formula "40"))
                           (rule "inEqSimp_commuteLeq" (formula "39"))
                           (rule "variableDeclarationAssign" (formula "1") (term "1"))
                           (rule "variableDeclarationAssign" (formula "53") (term "1"))
                           (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_1"))
                           (rule "variableDeclaration" (formula "53") (term "1") (newnames "exc_1"))
                           (rule "assignment" (formula "53") (term "1"))
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "variableDeclaration" (formula "53") (term "1") (newnames "thrownExc"))
                           (rule "blockThrow" (formula "53") (term "1,0,0,1"))
                           (rule "elementOfUnion" (formula "53") (term "0,0,0,0,1,0,1,1,0,1"))
                           (rule "elementOfArrayRange" (formula "53") (term "0,0,0,0,0,1,0,1,1,0,1") (inst "iv=iv"))
                           (rule "inEqSimp_commuteLeq" (formula "53") (term "1,0,0,1,0,0,0,0,0,1,0,1,1,0,1"))
                           (rule "boxToDiamond" (formula "1") (term "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "commuteUnion" (formula "45") (term "1,0,0,1,1"))
                           (rule "commuteUnion" (formula "44") (term "1,0,0"))
                           (rule "commuteUnion" (formula "43") (term "1,0,0"))
                           (rule "commuteUnion" (formula "42") (term "1,0,0"))
                           (rule "commuteUnion" (formula "41") (term "1,0,2,0"))
                           (rule "commuteUnion" (formula "53") (term "1,0,1,0,1,1,0,0"))
                           (rule "commuteUnion" (formula "46") (term "1,0,1,1,0"))
                           (rule "commute_or" (formula "44") (term "0,6,0"))
                           (rule "commute_or" (formula "42") (term "0,7,0"))
                           (rule "commute_and_2" (formula "45") (term "1"))
                           (rule "commute_and" (formula "45") (term "0,1"))
                           (rule "less_than_comparison_simple" (formula "46") (term "1"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "methodCallEmpty" (formula "46") (term "1"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "emptyModality" (formula "46") (term "1"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "notRight" (formula "46"))
                           (rule "replace_known_left" (formula "43") (term "1,0,7,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "replace_known_left" (formula "45") (term "1,0,6,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "arrayLengthNotNegative" (formula "9") (term "0"))
                           (rule "arrayLengthIsAShort" (formula "9") (term "0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                           (rule "qeq_literals" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "ifUnfold" (formula "53") (term "1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_2"))
                           (rule "less_than_comparison_simple" (formula "53") (term "1"))
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "replace_known_left" (formula "53") (term "0,0,1,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "ifSplit" (formula "53"))
                           (branch "if x_2 true"
                               (builtin "One Step Simplification" (formula "1"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "true_left" (formula "1"))
                               (builtin "Use Operation Contract" (formula "53") (newnames "heapBefore_sample_sort_recurse_on,exc_0,heapAfter_sample_sort_recurse_on,anon_heap_sample_sort_recurse_on") (contract "de.wiesler.Sorter[de.wiesler.Sorter::sample_sort_recurse_on([I,int,int,de.wiesler.Storage,[I,int,boolean,int)].JML normal_behavior operation contract.0"))
                              (branch "Post (sample_sort_recurse_on)"
                                  (builtin "One Step Simplification" (formula "48"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "translateJavaSubInt" (formula "48") (term "7,0,1,0,1,1,1,1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "48") (term "6,0,0,1,1,1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "48") (term "6,0,1,0,1,1,1,1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "48") (term "7,0,0,1,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,0"))
                                 (rule "andLeft" (formula "48"))
                                 (rule "andLeft" (formula "49"))
                                 (rule "andLeft" (formula "50"))
                                 (rule "andLeft" (formula "50"))
                                 (rule "andLeft" (formula "51"))
                                 (rule "andLeft" (formula "52"))
                                 (rule "andLeft" (formula "53"))
                                 (rule "andLeft" (formula "54"))
                                 (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0"))
                                 (rule "mul_literals" (formula "48") (term "1,2,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "54") (term "7,0,1"))
                                 (rule "mul_literals" (formula "54") (term "1,7,0,1"))
                                 (rule "polySimp_addComm0" (formula "51") (term "7,0"))
                                 (rule "polySimp_addComm0" (formula "53") (term "6,0"))
                                 (rule "polySimp_addComm0" (formula "54") (term "6,0,1"))
                                 (rule "polySimp_addComm0" (formula "48") (term "2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "54") (term "7,0,1"))
                                 (rule "blockEmpty" (formula "62") (term "1"))
                                 (rule "commuteUnion" (formula "48") (term "1,0"))
                                 (rule "compound_assignment_op_plus" (formula "62") (term "1"))
                                 (rule "compound_int_cast_expression" (formula "62") (term "1") (inst "#v=x"))
                                 (rule "variableDeclarationAssign" (formula "62") (term "1"))
                                 (rule "variableDeclaration" (formula "62") (term "1") (newnames "x_3"))
                                 (rule "remove_parentheses_right" (formula "62") (term "1"))
                                 (rule "compound_addition_2" (formula "62") (term "1") (inst "#v0=x_4") (inst "#v1=x_5"))
                                 (rule "variableDeclarationAssign" (formula "62") (term "1"))
                                 (rule "variableDeclaration" (formula "62") (term "1") (newnames "x_4"))
                                 (rule "assignment" (formula "62") (term "1"))
                                  (builtin "One Step Simplification" (formula "62"))
                                 (rule "variableDeclarationAssign" (formula "62") (term "1"))
                                 (rule "variableDeclaration" (formula "62") (term "1") (newnames "x_5"))
                                 (rule "remove_parentheses_right" (formula "62") (term "1"))
                                 (rule "compound_addition_2" (formula "62") (term "1") (inst "#v0=x_6") (inst "#v1=x_7"))
                                 (rule "variableDeclarationAssign" (formula "62") (term "1"))
                                 (rule "variableDeclaration" (formula "62") (term "1") (newnames "x_6"))
                                 (rule "assignment" (formula "62") (term "1"))
                                  (builtin "One Step Simplification" (formula "62"))
                                 (rule "variableDeclarationAssign" (formula "62") (term "1"))
                                 (rule "variableDeclaration" (formula "62") (term "1") (newnames "x_7"))
                                 (rule "tryCatchThrow" (formula "62") (term "1,0,0,1"))
                                 (rule "ifElseUnfold" (formula "62") (term "1,0,0,1") (inst "#boolv=x"))
                                 (rule "variableDeclaration" (formula "62") (term "1,0,0,1") (newnames "x_8"))
                                 (rule "equality_comparison_simple" (formula "62") (term "1,0,0,1"))
                                 (rule "unusedLabel" (formula "62") (term "1,1,0,0,1"))
                                 (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "62") (term "1") (inst "#v0=x_8"))
                                 (rule "variableDeclaration" (formula "62") (term "1") (newnames "x_9"))
                                 (rule "variableDeclarationAssign" (formula "62") (term "1"))
                                 (rule "variableDeclaration" (formula "62") (term "1") (newnames "b_2"))
                                 (rule "assignment" (formula "62") (term "1"))
                                  (builtin "One Step Simplification" (formula "62"))
                                 (rule "methodBodyExpand" (formula "62") (term "1") (newnames "heapBefore_toInt,savedHeapBefore_toInt"))
                                  (builtin "One Step Simplification" (formula "62"))
                                 (rule "returnUnfold" (formula "62") (term "1") (inst "#v0=x_10"))
                                 (rule "variableDeclarationAssign" (formula "62") (term "1"))
                                 (rule "variableDeclaration" (formula "62") (term "1") (newnames "x_10"))
                                 (rule "condition_simple" (formula "62") (term "1"))
                                  (builtin "One Step Simplification" (formula "62"))
                                 (rule "methodCallReturn" (formula "62") (term "1"))
                                 (rule "assignment" (formula "62") (term "1"))
                                  (builtin "One Step Simplification" (formula "62"))
                                 (rule "methodCallEmpty" (formula "62") (term "1"))
                                 (rule "blockEmpty" (formula "62") (term "1"))
                                 (rule "assignment" (formula "62") (term "1"))
                                  (builtin "One Step Simplification" (formula "62"))
                                 (rule "assignmentAdditionInt" (formula "62") (term "1"))
                                  (builtin "One Step Simplification" (formula "62"))
                                 (rule "translateJavaAddInt" (formula "62") (term "0,1,0"))
                                 (rule "assignmentAdditionInt" (formula "62") (term "1"))
                                  (builtin "One Step Simplification" (formula "62"))
                                 (rule "translateJavaAddInt" (formula "62") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "62") (term "0,0,1,0"))
                                 (rule "widening_identity_cast_5" (formula "62") (term "1"))
                                 (rule "assignment" (formula "62") (term "1"))
                                  (builtin "One Step Simplification" (formula "62"))
                                 (rule "tryEmpty" (formula "62") (term "1"))
                                 (rule "methodCallEmpty" (formula "62") (term "1"))
                                 (rule "emptyModality" (formula "62") (term "1"))
                                  (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "52")))
                                 (rule "andRight" (formula "62"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "62"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "62"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "62"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "62"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "62"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "62"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "62"))
                                                      (branch "Case 1"
                                                         (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
                                                         (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1"))
                                                         (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,1"))
                                                         (rule "inEqSimp_geqRight" (formula "62"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "11"))
                                                         (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "12"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                         (rule "jmod_axiom" (formula "33") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                                         (rule "jmod_axiom" (formula "47") (term "0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0,1"))
                                                         (rule "jmod_axiom" (formula "42") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1"))
                                                         (rule "polySimp_sepNegMonomial" (formula "47") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "0,0,1,1"))
                                                         (rule "polySimp_sepNegMonomial" (formula "33"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "47") (term "1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0,1"))
                                                         (rule "polySimp_sepNegMonomial" (formula "42") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                         (rule "mul_literals" (formula "11") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "41") (term "0,0"))
                                                         (rule "qeq_literals" (formula "41") (term "0"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "8") (term "0,0"))
                                                         (rule "qeq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "newSym_eq" (formula "32") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                                         (rule "times_zero_1" (formula "32") (term "1,1"))
                                                         (rule "add_zero_right" (formula "32") (term "1"))
                                                         (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                                         (rule "eqSymm" (formula "33"))
                                                         (rule "applyEq" (formula "53") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "53") (term "7,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "45") (term "7,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "31") (term "7,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "31") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "45") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "43") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "52") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "35") (term "1,7,0,1") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "51") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "33"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "applyEq" (formula "54") (term "1,7,0,1") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "54") (term "5,0,1") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "46") (term "1,7,0,0,0,1") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "46") (term "5,0,0,0,1") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "34") (term "0,2,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "46") (term "0,0,1,1") (ifseqformula "33"))
                                                         (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,1,1"))
                                                         (rule "polySimp_addComm1" (formula "46") (term "0,0,1,1"))
                                                         (rule "applyEq" (formula "35") (term "5,0,1") (ifseqformula "33"))
                                                         (rule "polySimp_sepPosMonomial" (formula "46") (term "0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,1"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1,0,1,1"))
                                                         (rule "mul_literals" (formula "46") (term "0,1,0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "2"))
                                                         (rule "times_zero_1" (formula "40") (term "0,0"))
                                                         (rule "add_zero_left" (formula "40") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                         (rule "mul_literals" (formula "40") (term "1"))
                                                         (rule "elimGcdGeq_antec" (formula "40") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                                                         (rule "leq_literals" (formula "40") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "40") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                                         (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "40") (term "0,0"))
                                                         (rule "leq_literals" (formula "40") (term "0"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "nnf_imp2or" (formula "18") (term "0"))
                                                         (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                                         (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "12"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "translateJavaMulInt" (formula "12") (term "1,1,0,0,0,0,0,1,0,0"))
                                                         (rule "translateJavaMulInt" (formula "12") (term "1,1,0,0,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "1,1,0,0,0,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "1,1,0,0,0,0,1,0,0"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "andLeft" (formula "15"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "notLeft" (formula "13"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "notLeft" (formula "13"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "19"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "notLeft" (formula "14"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "notLeft" (formula "13"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "notLeft" (formula "13"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "notLeft" (formula "13"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "23"))
                                                         (rule "notLeft" (formula "12"))
                                                         (rule "notLeft" (formula "12"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "disjointDefinition" (formula "48"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "notLeft" (formula "48"))
                                                         (rule "disjointDefinition" (formula "47"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "notLeft" (formula "47"))
                                                         (rule "disjointDefinition" (formula "46"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "notLeft" (formula "46"))
                                                         (rule "eqSymm" (formula "90"))
                                                         (rule "disjointDefinition" (formula "45"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "notLeft" (formula "45"))
                                                         (rule "eqSymm" (formula "89"))
                                                         (rule "disjointDefinition" (formula "44"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "notLeft" (formula "44"))
                                                         (rule "eqSymm" (formula "88"))
                                                         (rule "disjointDefinition" (formula "43"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "notLeft" (formula "43"))
                                                         (rule "eqSymm" (formula "87"))
                                                         (rule "disjointDefinition" (formula "42"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "notLeft" (formula "42"))
                                                         (rule "eqSymm" (formula "86"))
                                                         (rule "disjointDefinition" (formula "41"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "notLeft" (formula "41"))
                                                         (rule "eqSymm" (formula "85"))
                                                         (rule "disjointDefinition" (formula "40"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "notLeft" (formula "40"))
                                                         (rule "eqSymm" (formula "84"))
                                                         (rule "disjointDefinition" (formula "39"))
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "notLeft" (formula "39"))
                                                         (rule "eqSymm" (formula "83"))
                                                         (rule "disjointDefinition" (formula "38"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "notLeft" (formula "38"))
                                                         (rule "eqSymm" (formula "82"))
                                                         (rule "disjointDefinition" (formula "37"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "notLeft" (formula "37"))
                                                         (rule "eqSymm" (formula "81"))
                                                         (rule "disjointDefinition" (formula "36"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "notLeft" (formula "36"))
                                                         (rule "eqSymm" (formula "80"))
                                                         (rule "disjointDefinition" (formula "35"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "notLeft" (formula "35"))
                                                         (rule "eqSymm" (formula "79"))
                                                         (rule "disjointDefinition" (formula "34"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "notLeft" (formula "34"))
                                                         (rule "eqSymm" (formula "78"))
                                                         (rule "disjointDefinition" (formula "33"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "notLeft" (formula "33"))
                                                         (rule "disjointDefinition" (formula "32"))
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "notLeft" (formula "32"))
                                                         (rule "eqSymm" (formula "76"))
                                                         (rule "disjointDefinition" (formula "31"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "notLeft" (formula "31"))
                                                         (rule "eqSymm" (formula "75"))
                                                         (rule "disjointDefinition" (formula "30"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "notLeft" (formula "30"))
                                                         (rule "disjointDefinition" (formula "29"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "notLeft" (formula "29"))
                                                         (rule "disjointDefinition" (formula "28"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "notLeft" (formula "28"))
                                                         (rule "disjointDefinition" (formula "27"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "notLeft" (formula "27"))
                                                         (rule "disjointDefinition" (formula "26"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "notLeft" (formula "26"))
                                                         (rule "disjointDefinition" (formula "25"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "notLeft" (formula "25"))
                                                         (rule "disjointDefinition" (formula "24"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "notLeft" (formula "24"))
                                                         (rule "disjointDefinition" (formula "23"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "notLeft" (formula "23"))
                                                         (rule "disjointDefinition" (formula "22"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "notLeft" (formula "22"))
                                                         (rule "disjointDefinition" (formula "21"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "applyEq" (formula "52") (term "0,1,0,0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "54") (term "0,1,0,0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "59") (term "0,1,0,2,1") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "55") (term "0,1,0,0,0,0,1") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "57") (term "0,1,0,0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "33") (term "1,0,1,0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "51") (term "0,1,0,2,0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "53") (term "0,1,0,0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "20"))
                                                         (rule "distributeIntersection" (formula "30") (term "0"))
                                                         (rule "distributeIntersection" (formula "21") (term "0"))
                                                         (rule "distributeIntersection" (formula "31") (term "0"))
                                                         (rule "distributeIntersection" (formula "30") (term "0,0"))
                                                         (rule "distributeIntersection" (formula "30") (term "1,0"))
                                                         (rule "distributeIntersection" (formula "21") (term "0,0"))
                                                         (rule "distributeIntersection" (formula "21") (term "1,0"))
                                                         (rule "distributeIntersection" (formula "31") (term "1,0"))
                                                         (rule "distributeIntersection" (formula "31") (term "0,0"))
                                                         (rule "distributeIntersection" (formula "30") (term "1,0,0"))
                                                         (rule "distributeIntersection" (formula "30") (term "0,0,0"))
                                                         (rule "distributeIntersection" (formula "30") (term "1,1,0"))
                                                         (rule "distributeIntersection" (formula "30") (term "0,1,0"))
                                                         (rule "distributeIntersection" (formula "21") (term "1,0,0"))
                                                         (rule "distributeIntersection" (formula "21") (term "0,0,0"))
                                                         (rule "distributeIntersection" (formula "21") (term "1,1,0"))
                                                         (rule "distributeIntersection" (formula "21") (term "0,1,0"))
                                                         (rule "distributeIntersection" (formula "31") (term "0,1,0"))
                                                         (rule "distributeIntersection" (formula "31") (term "1,1,0"))
                                                         (rule "distributeIntersection" (formula "31") (term "1,0,0"))
                                                         (rule "distributeIntersection" (formula "31") (term "0,0,0"))
                                                         (rule "unionEqualsEmpty" (formula "30"))
                                                         (rule "andLeft" (formula "30"))
                                                         (rule "unionEqualsEmpty" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "unionEqualsEmpty" (formula "33"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "unionEqualsEmpty" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "unionEqualsEmpty" (formula "33"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "unionEqualsEmpty" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "unionEqualsEmpty" (formula "23"))
                                                         (rule "andLeft" (formula "23"))
                                                         (rule "unionEqualsEmpty" (formula "37"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "unionEqualsEmpty" (formula "39"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "unionEqualsEmpty" (formula "34"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "notLeft" (formula "35"))
                                                         (rule "notLeft" (formula "34"))
                                                         (rule "eqSymm" (formula "74"))
                                                         (rule "eqSymm" (formula "73"))
                                                         (rule "unionEqualsEmpty" (formula "33"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "notLeft" (formula "33"))
                                                         (rule "notLeft" (formula "33"))
                                                         (rule "eqSymm" (formula "73"))
                                                         (rule "eqSymm" (formula "72"))
                                                         (rule "unionEqualsEmpty" (formula "33"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "notLeft" (formula "33"))
                                                         (rule "notLeft" (formula "33"))
                                                         (rule "eqSymm" (formula "72"))
                                                         (rule "eqSymm" (formula "71"))
                                                         (rule "unionEqualsEmpty" (formula "33"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "notLeft" (formula "34"))
                                                         (rule "notLeft" (formula "33"))
                                                         (rule "eqSymm" (formula "71"))
                                                         (rule "eqSymm" (formula "70"))
                                                         (rule "unionEqualsEmpty" (formula "21"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "eqSymm" (formula "70"))
                                                         (rule "eqSymm" (formula "69"))
                                                         (rule "unionEqualsEmpty" (formula "21"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "notLeft" (formula "22"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "eqSymm" (formula "69"))
                                                         (rule "eqSymm" (formula "68"))
                                                         (rule "unionEqualsEmpty" (formula "21"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "eqSymm" (formula "68"))
                                                         (rule "eqSymm" (formula "67"))
                                                         (rule "unionEqualsEmpty" (formula "21"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "notLeft" (formula "22"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "eqSymm" (formula "67"))
                                                         (rule "eqSymm" (formula "66"))
                                                         (rule "unionEqualsEmpty" (formula "30"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "andLeft" (formula "30"))
                                                         (rule "notLeft" (formula "31"))
                                                         (rule "notLeft" (formula "30"))
                                                         (rule "eqSymm" (formula "66"))
                                                         (rule "eqSymm" (formula "65"))
                                                         (rule "sortsDisjointModuloNull" (formula "66"))
                                                         (rule "replace_known_right" (formula "66") (term "0") (ifseqformula "114"))
                                                          (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "123")))
                                                         (rule "false_right" (formula "66"))
                                                         (rule "sortsDisjointModuloNull" (formula "65"))
                                                         (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "112"))
                                                          (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "122")))
                                                         (rule "false_right" (formula "65"))
                                                         (rule "unionEqualsEmpty" (formula "29"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "andLeft" (formula "29"))
                                                         (rule "notLeft" (formula "30"))
                                                         (rule "notLeft" (formula "29"))
                                                         (rule "eqSymm" (formula "65"))
                                                         (rule "eqSymm" (formula "64"))
                                                         (rule "sortsDisjointModuloNull" (formula "65"))
                                                         (rule "replace_known_right" (formula "65") (term "1") (ifseqformula "122"))
                                                          (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "110")))
                                                         (rule "false_right" (formula "65"))
                                                         (rule "sortsDisjointModuloNull" (formula "64"))
                                                         (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "110"))
                                                          (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "121")))
                                                         (rule "false_right" (formula "64"))
                                                         (rule "unionEqualsEmpty" (formula "29"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "andLeft" (formula "29"))
                                                         (rule "notLeft" (formula "30"))
                                                         (rule "notLeft" (formula "29"))
                                                         (rule "eqSymm" (formula "64"))
                                                         (rule "eqSymm" (formula "63"))
                                                         (rule "sortsDisjointModuloNull" (formula "64"))
                                                         (rule "replace_known_right" (formula "64") (term "1") (ifseqformula "121"))
                                                          (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "114")))
                                                         (rule "false_right" (formula "64"))
                                                         (rule "sortsDisjointModuloNull" (formula "63"))
                                                         (rule "replace_known_right" (formula "63") (term "1") (ifseqformula "120"))
                                                          (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "112")))
                                                         (rule "false_right" (formula "63"))
                                                         (rule "unionEqualsEmpty" (formula "29"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "andLeft" (formula "29"))
                                                         (rule "notLeft" (formula "30"))
                                                         (rule "notLeft" (formula "29"))
                                                         (rule "eqSymm" (formula "63"))
                                                         (rule "eqSymm" (formula "62"))
                                                         (rule "sortsDisjointModuloNull" (formula "63"))
                                                         (rule "replace_known_right" (formula "63") (term "0") (ifseqformula "115"))
                                                          (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "120")))
                                                         (rule "false_right" (formula "63"))
                                                         (rule "sortsDisjointModuloNull" (formula "62"))
                                                         (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "113"))
                                                          (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "119")))
                                                         (rule "false_right" (formula "62"))
                                                         (rule "commuteUnion" (formula "20") (term "0,1"))
                                                         (rule "commuteUnion" (formula "20") (term "1,1,1"))
                                                         (rule "commuteUnion_2" (formula "49") (term "0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "49") (term "1,1,0,1,0,0"))
                                                         (rule "commuteUnion_2" (formula "51") (term "0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "51") (term "1,1,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "56") (term "1,1,0,1,0,2,1"))
                                                         (rule "commuteUnion" (formula "56") (term "0,0,1,0,2,1"))
                                                         (rule "commuteUnion_2" (formula "52") (term "0,0,1,0,0,0,0,1"))
                                                         (rule "commuteUnion" (formula "52") (term "1,1,0,1,0,0,0,0,1"))
                                                         (rule "commuteUnion" (formula "54") (term "1,1,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "54") (term "0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "30") (term "1,1,1,0,1,0"))
                                                         (rule "commuteUnion_2" (formula "30") (term "0,1,0,1,0"))
                                                         (rule "commuteUnion_2" (formula "48") (term "0,0,1,0,2,0"))
                                                         (rule "commuteUnion" (formula "48") (term "1,1,0,1,0,2,0"))
                                                         (rule "commuteUnion" (formula "50") (term "0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "50") (term "1,1,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "54") (term "0,0,1,0"))
                                                         (rule "commuteUnion" (formula "54") (term "1,1,0,1,0"))
                                                         (rule "commuteUnion" (formula "20") (term "1,0,1"))
                                                         (rule "commuteUnion" (formula "49") (term "0,0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "51") (term "0,0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "56") (term "1,0,0,1,0,2,1"))
                                                         (rule "commuteUnion" (formula "52") (term "0,0,0,1,0,0,0,0,1"))
                                                         (rule "commuteUnion" (formula "54") (term "1,0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "30") (term "0,0,1,0,1,0"))
                                                         (rule "commuteUnion" (formula "48") (term "0,0,0,1,0,2,0"))
                                                         (rule "commuteUnion" (formula "50") (term "1,0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "54") (term "1,0,0,1,0"))
                                                         (rule "commuteUnion_2" (formula "49") (term "0,0,1,0,0"))
                                                         (rule "commuteUnion_2" (formula "51") (term "0,0,1,0,0"))
                                                         (rule "commuteUnion_2" (formula "52") (term "0,0,1,0,0,0,0,1"))
                                                         (rule "commuteUnion_2" (formula "30") (term "0,1,0,1,0"))
                                                         (rule "commuteUnion_2" (formula "48") (term "0,0,1,0,2,0"))
                                                         (rule "commuteUnion_2" (formula "49") (term "0,1,0,0"))
                                                         (rule "commuteUnion_2" (formula "51") (term "0,1,0,0"))
                                                         (rule "commuteUnion_2" (formula "52") (term "0,1,0,0,0,0,1"))
                                                         (rule "commuteUnion_2" (formula "30") (term "1,0,1,0"))
                                                         (rule "commuteUnion_2" (formula "48") (term "0,1,0,2,0"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "61"))
                                                          (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "107")) (ifInst ""  (formula "106")) (ifInst ""  (formula "108")) (ifInst ""  (formula "109")) (ifInst ""  (formula "110")) (ifInst ""  (formula "111")) (ifInst ""  (formula "112")) (ifInst ""  (formula "113")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")))
                                                         (rule "translateJavaMulInt" (formula "61") (term "1,0,0,0"))
                                                         (rule "translateJavaMulInt" (formula "61") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "61") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                                         (rule "andLeft" (formula "61"))
                                                         (rule "andLeft" (formula "61"))
                                                         (rule "andLeft" (formula "63"))
                                                         (rule "andLeft" (formula "61"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "disjointDefinition" (formula "89"))
                                                          (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "133")))
                                                         (rule "true_left" (formula "89"))
                                                         (rule "disjointDefinition" (formula "88"))
                                                          (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "131")))
                                                         (rule "true_left" (formula "88"))
                                                         (rule "disjointDefinition" (formula "87"))
                                                          (builtin "One Step Simplification" (formula "87"))
                                                         (rule "notLeft" (formula "87"))
                                                         (rule "eqSymm" (formula "87"))
                                                         (rule "disjointDefinition" (formula "86"))
                                                          (builtin "One Step Simplification" (formula "86"))
                                                         (rule "notLeft" (formula "86"))
                                                         (rule "eqSymm" (formula "86"))
                                                         (rule "disjointDefinition" (formula "85"))
                                                          (builtin "One Step Simplification" (formula "85"))
                                                         (rule "notLeft" (formula "85"))
                                                         (rule "eqSymm" (formula "85"))
                                                         (rule "disjointDefinition" (formula "84"))
                                                          (builtin "One Step Simplification" (formula "84"))
                                                         (rule "notLeft" (formula "84"))
                                                         (rule "eqSymm" (formula "84"))
                                                         (rule "disjointDefinition" (formula "83"))
                                                          (builtin "One Step Simplification" (formula "83"))
                                                         (rule "notLeft" (formula "83"))
                                                         (rule "eqSymm" (formula "83"))
                                                         (rule "disjointDefinition" (formula "82"))
                                                          (builtin "One Step Simplification" (formula "82"))
                                                         (rule "notLeft" (formula "82"))
                                                         (rule "eqSymm" (formula "82"))
                                                         (rule "disjointDefinition" (formula "81"))
                                                          (builtin "One Step Simplification" (formula "81"))
                                                         (rule "notLeft" (formula "81"))
                                                         (rule "eqSymm" (formula "81"))
                                                         (rule "disjointDefinition" (formula "80"))
                                                          (builtin "One Step Simplification" (formula "80"))
                                                         (rule "notLeft" (formula "80"))
                                                         (rule "eqSymm" (formula "80"))
                                                         (rule "disjointDefinition" (formula "79"))
                                                          (builtin "One Step Simplification" (formula "79"))
                                                         (rule "notLeft" (formula "79"))
                                                         (rule "eqSymm" (formula "79"))
                                                         (rule "disjointDefinition" (formula "78"))
                                                          (builtin "One Step Simplification" (formula "78"))
                                                         (rule "notLeft" (formula "78"))
                                                         (rule "eqSymm" (formula "78"))
                                                         (rule "disjointDefinition" (formula "77"))
                                                          (builtin "One Step Simplification" (formula "77"))
                                                         (rule "notLeft" (formula "77"))
                                                         (rule "eqSymm" (formula "77"))
                                                         (rule "disjointDefinition" (formula "76"))
                                                          (builtin "One Step Simplification" (formula "76"))
                                                         (rule "notLeft" (formula "76"))
                                                         (rule "eqSymm" (formula "76"))
                                                         (rule "disjointDefinition" (formula "75"))
                                                          (builtin "One Step Simplification" (formula "75"))
                                                         (rule "notLeft" (formula "75"))
                                                         (rule "eqSymm" (formula "75"))
                                                         (rule "disjointDefinition" (formula "74"))
                                                          (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "103")))
                                                         (rule "true_left" (formula "74"))
                                                         (rule "disjointDefinition" (formula "73"))
                                                          (builtin "One Step Simplification" (formula "73"))
                                                         (rule "notLeft" (formula "73"))
                                                         (rule "eqSymm" (formula "73"))
                                                         (rule "disjointDefinition" (formula "72"))
                                                          (builtin "One Step Simplification" (formula "72"))
                                                         (rule "notLeft" (formula "72"))
                                                         (rule "eqSymm" (formula "72"))
                                                         (rule "disjointDefinition" (formula "71"))
                                                          (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "97")))
                                                         (rule "true_left" (formula "71"))
                                                         (rule "disjointDefinition" (formula "70"))
                                                          (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "95")))
                                                         (rule "true_left" (formula "70"))
                                                         (rule "disjointDefinition" (formula "69"))
                                                          (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "93")))
                                                         (rule "true_left" (formula "69"))
                                                         (rule "disjointDefinition" (formula "68"))
                                                          (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "91")))
                                                         (rule "true_left" (formula "68"))
                                                         (rule "disjointDefinition" (formula "67"))
                                                          (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "89")))
                                                         (rule "true_left" (formula "67"))
                                                         (rule "disjointDefinition" (formula "66"))
                                                          (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "87")))
                                                         (rule "true_left" (formula "66"))
                                                         (rule "disjointDefinition" (formula "65"))
                                                          (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "85")))
                                                         (rule "true_left" (formula "65"))
                                                         (rule "disjointDefinition" (formula "64"))
                                                          (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "83")))
                                                         (rule "true_left" (formula "64"))
                                                         (rule "disjointDefinition" (formula "62"))
                                                          (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "80")))
                                                         (rule "true_left" (formula "62"))
                                                         (rule "disjointDefinition" (formula "62"))
                                                          (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "80")))
                                                         (rule "true_left" (formula "62"))
                                                         (rule "applyEq" (formula "61") (term "0") (ifseqformula "20"))
                                                         (rule "eqSymm" (formula "61"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "42"))
                                                          (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "107")) (ifInst ""  (formula "106")) (ifInst ""  (formula "108")) (ifInst ""  (formula "109")) (ifInst ""  (formula "110")) (ifInst ""  (formula "111")) (ifInst ""  (formula "112")) (ifInst ""  (formula "113")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")))
                                                         (rule "translateJavaMulInt" (formula "42") (term "1,1,0,0"))
                                                         (rule "translateJavaMulInt" (formula "42") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0"))
                                                         (rule "andLeft" (formula "42"))
                                                         (rule "andLeft" (formula "42"))
                                                         (rule "andLeft" (formula "44"))
                                                         (rule "andLeft" (formula "42"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "disjointDefinition" (formula "70"))
                                                          (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "133")))
                                                         (rule "true_left" (formula "70"))
                                                         (rule "disjointDefinition" (formula "69"))
                                                          (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "131")))
                                                         (rule "true_left" (formula "69"))
                                                         (rule "disjointDefinition" (formula "68"))
                                                          (builtin "One Step Simplification" (formula "68"))
                                                         (rule "notLeft" (formula "68"))
                                                         (rule "eqSymm" (formula "87"))
                                                         (rule "disjointDefinition" (formula "67"))
                                                          (builtin "One Step Simplification" (formula "67"))
                                                         (rule "notLeft" (formula "67"))
                                                         (rule "eqSymm" (formula "86"))
                                                         (rule "disjointDefinition" (formula "66"))
                                                          (builtin "One Step Simplification" (formula "66"))
                                                         (rule "notLeft" (formula "66"))
                                                         (rule "eqSymm" (formula "85"))
                                                         (rule "disjointDefinition" (formula "65"))
                                                          (builtin "One Step Simplification" (formula "65"))
                                                         (rule "notLeft" (formula "65"))
                                                         (rule "eqSymm" (formula "84"))
                                                         (rule "disjointDefinition" (formula "64"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "notLeft" (formula "64"))
                                                         (rule "eqSymm" (formula "83"))
                                                         (rule "disjointDefinition" (formula "63"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "notLeft" (formula "63"))
                                                         (rule "eqSymm" (formula "82"))
                                                         (rule "disjointDefinition" (formula "62"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "notLeft" (formula "62"))
                                                         (rule "eqSymm" (formula "81"))
                                                         (rule "disjointDefinition" (formula "61"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "notLeft" (formula "61"))
                                                         (rule "eqSymm" (formula "80"))
                                                         (rule "disjointDefinition" (formula "60"))
                                                          (builtin "One Step Simplification" (formula "60"))
                                                         (rule "notLeft" (formula "60"))
                                                         (rule "eqSymm" (formula "79"))
                                                         (rule "disjointDefinition" (formula "59"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "notLeft" (formula "59"))
                                                         (rule "eqSymm" (formula "78"))
                                                         (rule "disjointDefinition" (formula "58"))
                                                          (builtin "One Step Simplification" (formula "58"))
                                                         (rule "notLeft" (formula "58"))
                                                         (rule "eqSymm" (formula "77"))
                                                         (rule "disjointDefinition" (formula "57"))
                                                          (builtin "One Step Simplification" (formula "57"))
                                                         (rule "notLeft" (formula "57"))
                                                         (rule "eqSymm" (formula "76"))
                                                         (rule "disjointDefinition" (formula "56"))
                                                          (builtin "One Step Simplification" (formula "56"))
                                                         (rule "notLeft" (formula "56"))
                                                         (rule "eqSymm" (formula "75"))
                                                         (rule "disjointDefinition" (formula "55"))
                                                          (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "103")))
                                                         (rule "true_left" (formula "55"))
                                                         (rule "disjointDefinition" (formula "54"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "notLeft" (formula "54"))
                                                         (rule "eqSymm" (formula "73"))
                                                         (rule "disjointDefinition" (formula "53"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "notLeft" (formula "53"))
                                                         (rule "eqSymm" (formula "72"))
                                                         (rule "disjointDefinition" (formula "52"))
                                                          (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "97")))
                                                         (rule "true_left" (formula "52"))
                                                         (rule "disjointDefinition" (formula "51"))
                                                          (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "95")))
                                                         (rule "true_left" (formula "51"))
                                                         (rule "disjointDefinition" (formula "50"))
                                                          (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "93")))
                                                         (rule "true_left" (formula "50"))
                                                         (rule "disjointDefinition" (formula "49"))
                                                          (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "91")))
                                                         (rule "true_left" (formula "49"))
                                                         (rule "disjointDefinition" (formula "48"))
                                                          (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "89")))
                                                         (rule "true_left" (formula "48"))
                                                         (rule "disjointDefinition" (formula "47"))
                                                          (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "87")))
                                                         (rule "true_left" (formula "47"))
                                                         (rule "disjointDefinition" (formula "46"))
                                                          (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "85")))
                                                         (rule "true_left" (formula "46"))
                                                         (rule "disjointDefinition" (formula "45"))
                                                          (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "83")))
                                                         (rule "true_left" (formula "45"))
                                                         (rule "disjointDefinition" (formula "44"))
                                                          (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "81")))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "disjointDefinition" (formula "43"))
                                                          (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "79")))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "applyEq" (formula "20") (term "0") (ifseqformula "42"))
                                                         (rule "applyEq" (formula "41") (term "1") (ifseqformula "60"))
                                                         (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "58") (term "0") (inst "b=b_3"))
                                                          (builtin "One Step Simplification" (formula "58"))
                                                         (rule "translateJavaAddInt" (formula "58") (term "0,2,5,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "58") (term "0,2,5,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "58") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "58") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "58") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0"))
                                                         (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "35") (term "0") (inst "b=b_3"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "translateJavaAddInt" (formula "35") (term "0,2,5,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "35") (term "0,2,5,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "35") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                                         (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "57") (term "0") (inst "b=b_3"))
                                                          (builtin "One Step Simplification" (formula "57"))
                                                         (rule "translateJavaAddInt" (formula "57") (term "0,2,5,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "57") (term "0,2,5,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "57") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "57") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "57") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0"))
                                                         (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "34") (term "0") (inst "b=b_3"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "translateJavaAddInt" (formula "34") (term "0,2,5,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "34") (term "0,2,5,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "34") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                                         (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "56") (term "0") (inst "b=b_3"))
                                                          (builtin "One Step Simplification" (formula "56"))
                                                         (rule "translateJavaAddInt" (formula "56") (term "0,2,1,3,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "56") (term "2,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "56") (term "3,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "56") (term "0,2,1,3,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "56") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "56") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0"))
                                                         (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "59") (term "0,1") (inst "b=b_3"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "translateJavaAddInt" (formula "59") (term "2,0,1,0,1"))
                                                         (rule "translateJavaAddInt" (formula "59") (term "3,0,1,0,1"))
                                                         (rule "translateJavaMod" (formula "59") (term "0,1,0,0,1"))
                                                         (rule "translateJavaAddInt" (formula "59") (term "0,2,1,3,0,1,0,1"))
                                                         (rule "polySimp_addComm0" (formula "59") (term "0,2,1,3,0,1,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,1,0,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0,0,1"))
                                                         (rule "add_literals" (formula "59") (term "0,0,0,1,0,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,0,1"))
                                                         (rule "jmod_axiom" (formula "59") (term "0,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0,0,1"))
                                                         (rule "polySimp_homoEq" (formula "59") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,0,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "59") (term "1,0,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "0,1,0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "59") (term "0,1,0,0,1"))
                                                         (rule "polySimp_sepPosMonomial" (formula "59") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,1"))
                                                         (rule "mul_literals" (formula "59") (term "0,1,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,1"))
                                                         (rule "commuteUnion" (formula "60") (term "0,0"))
                                                         (rule "commuteUnion" (formula "60") (term "1,1,0"))
                                                         (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "33") (term "0"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "translateJavaAddInt" (formula "33") (term "0,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "33") (term "3,0,1,0"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "polySimp_addComm0" (formula "35") (term "3,0"))
                                                         (rule "polySimp_addComm0" (formula "34") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "33"))
                                                         (rule "inEqSimp_commuteLeq" (formula "34"))
                                                         (rule "applyEq" (formula "34") (term "0") (ifseqformula "23"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34"))
                                                         (rule "mul_literals" (formula "34") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                         (rule "add_literals" (formula "34") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                                         (rule "mul_literals" (formula "34") (term "1"))
                                                         (rule "inEqSimp_subsumption6" (formula "33") (ifseqformula "47"))
                                                         (rule "greater_literals" (formula "33") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "mul_literals" (formula "33") (term "1,0"))
                                                         (rule "leq_literals" (formula "33") (term "0"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "elimGcdLeq_antec" (formula "33") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(6(5(2(#))))"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0,1,0"))
                                                         (rule "neg_literal" (formula "33") (term "0,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "33") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "33") (term "0,0,0,0"))
                                                         (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                                                         (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "33") (term "0,0"))
                                                         (rule "qeq_literals" (formula "33") (term "0"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "29"))
                                                          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "119")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,0") (ifseqformula "21"))
                                                         (rule "replace_known_left" (formula "35") (term "1,0,1,0,0") (ifseqformula "22"))
                                                          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "118")))
                                                         (rule "applyEq" (formula "35") (term "1") (ifseqformula "36"))
                                                         (rule "ifEqualsInteger" (formula "35"))
                                                         (rule "elementOfUnion" (formula "35") (term "0,0"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "35") (term "1,0,0"))
                                                         (rule "eqSymm" (formula "35") (term "0,0,1,0,0"))
                                                         (rule "replace_known_right" (formula "35") (term "0,0,1,0,0") (ifseqformula "117"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "elementOfUnion" (formula "35") (term "0,0,1"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "35") (term "1,0,0,1"))
                                                         (rule "eqSymm" (formula "35") (term "0,0,1,0,0,1"))
                                                         (rule "replace_known_right" (formula "35") (term "0,0,1,0,0,1") (ifseqformula "117"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "elementOfUnion" (formula "35") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "elementOfUnion" (formula "35") (term "0,0,1"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "43") (term "0") (inst "b=b_3"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "translateJavaSubInt" (formula "43") (term "0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "43") (term "0,2,0,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "43") (term "0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "43") (term "0,2,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "43") (term "0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "43") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "43") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "43") (term "0,0,0,1,1,0"))
                                                         (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "42") (term "0,1") (inst "b=b_3"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "translateJavaAddInt" (formula "42") (term "2,0,1,0,1"))
                                                         (rule "translateJavaAddInt" (formula "42") (term "3,0,1,0,1"))
                                                         (rule "translateJavaMod" (formula "42") (term "0,1,0,0,1"))
                                                         (rule "translateJavaAddInt" (formula "42") (term "0,2,1,3,0,1,0,1"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "0,2,1,3,0,1,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1"))
                                                         (rule "jmod_axiom" (formula "42") (term "0,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,0,1"))
                                                         (rule "polySimp_homoEq" (formula "42") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,0,1"))
                                                         (rule "polySimp_sepPosMonomial" (formula "42") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1"))
                                                         (rule "commute_or" (formula "24") (term "0,0"))
                                                         (rule "ifthenelse_split" (formula "1") (term "0"))
                                                         (branch "result_22.equal_buckets = TRUE TRUE"
                                                            (rule "replace_known_left" (formula "63") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "63"))
                                                            (rule "replace_known_left" (formula "50") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "50")))
                                                            (rule "andLeft" (formula "55"))
                                                            (rule "notLeft" (formula "56"))
                                                            (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "inEqSimp_homoInEq0" (formula "2"))
                                                            (rule "mul_literals" (formula "2") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "65"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                            (rule "add_literals" (formula "3") (term "0,1"))
                                                            (rule "inEqSimp_contradEq3" (formula "65") (ifseqformula "3"))
                                                            (rule "polySimp_rightDist" (formula "65") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "65") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "65") (term "0,0,0"))
                                                            (rule "add_literals" (formula "65") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "65") (term "0,0"))
                                                            (rule "add_literals" (formula "65") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "65") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "65") (term "0,0"))
                                                            (rule "qeq_literals" (formula "65") (term "0"))
                                                             (builtin "One Step Simplification" (formula "65"))
                                                            (rule "false_right" (formula "65"))
                                                            (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "49"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                         (branch "result_22.equal_buckets = TRUE FALSE"
                                                            (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "true_left" (formula "49"))
                                                            (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "true_left" (formula "53"))
                                                            (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "42"))
                                                            (rule "true_left" (formula "42"))
                                                            (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "61"))
                                                             (builtin "One Step Simplification" (formula "59"))
                                                            (rule "true_left" (formula "59"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1"))
                                                            (rule "times_zero_2" (formula "1") (term "1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "47"))
                                                            (rule "qeq_literals" (formula "1") (term "0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
                                                         (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1"))
                                                         (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,1"))
                                                         (rule "inEqSimp_geqRight" (formula "62"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "11"))
                                                         (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "12"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                         (rule "jmod_axiom" (formula "42") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1"))
                                                         (rule "jmod_axiom" (formula "33") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                                         (rule "jmod_axiom" (formula "47") (term "0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0,1"))
                                                         (rule "polySimp_sepNegMonomial" (formula "47") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "0,0,1,1"))
                                                         (rule "polySimp_sepNegMonomial" (formula "42") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "0,1"))
                                                         (rule "polySimp_sepNegMonomial" (formula "33"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "47") (term "1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                         (rule "mul_literals" (formula "11") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "8") (term "0,0"))
                                                         (rule "qeq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "40") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                         (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "40") (term "0,0"))
                                                         (rule "qeq_literals" (formula "40") (term "0"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "true_left" (formula "40"))
                                                         (rule "newSym_eq" (formula "32") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                                         (rule "times_zero_1" (formula "32") (term "1,1"))
                                                         (rule "add_zero_right" (formula "32") (term "1"))
                                                         (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                                         (rule "eqSymm" (formula "33"))
                                                         (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "33"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "35") (term "5,0,1") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "45") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "43") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "31") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "46") (term "5,0,0,0,1") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "53") (term "7,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "46") (term "1,7,0,0,0,1") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "45") (term "7,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "52") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "51") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "35") (term "1,7,0,1") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "31") (term "7,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "33"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "1"))
                                                         (rule "applyEq" (formula "53") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "46") (term "0,0,1,1") (ifseqformula "33"))
                                                         (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,1,1"))
                                                         (rule "polySimp_addComm1" (formula "46") (term "0,0,1,1"))
                                                         (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "54") (term "5,0,1") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "34") (term "0,2,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "54") (term "1,7,0,1") (ifseqformula "33"))
                                                         (rule "polySimp_sepPosMonomial" (formula "46") (term "0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,1"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1,0,1,1"))
                                                         (rule "mul_literals" (formula "46") (term "0,1,0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "2"))
                                                         (rule "times_zero_1" (formula "40") (term "0,0"))
                                                         (rule "add_zero_left" (formula "40") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                         (rule "mul_literals" (formula "40") (term "1"))
                                                         (rule "elimGcdGeq_antec" (formula "40") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "40") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "40") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                                         (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "40") (term "0,0"))
                                                         (rule "leq_literals" (formula "40") (term "0"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "nnf_imp2or" (formula "18") (term "0"))
                                                         (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "37"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "translateJavaMulInt" (formula "37") (term "1,1,0,0,0,0,1,0,0"))
                                                         (rule "translateJavaMulInt" (formula "37") (term "1,1,0,0,0,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0,0,1,0,0"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "andLeft" (formula "38"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "andLeft" (formula "40"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "andLeft" (formula "42"))
                                                         (rule "notLeft" (formula "38"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "notLeft" (formula "38"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "andLeft" (formula "44"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "notLeft" (formula "39"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "andLeft" (formula "45"))
                                                         (rule "notLeft" (formula "38"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "notLeft" (formula "38"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "andLeft" (formula "47"))
                                                         (rule "notLeft" (formula "38"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "andLeft" (formula "48"))
                                                         (rule "notLeft" (formula "37"))
                                                         (rule "notLeft" (formula "37"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "disjointDefinition" (formula "73"))
                                                          (builtin "One Step Simplification" (formula "73"))
                                                         (rule "notLeft" (formula "73"))
                                                         (rule "disjointDefinition" (formula "72"))
                                                          (builtin "One Step Simplification" (formula "72"))
                                                         (rule "notLeft" (formula "72"))
                                                         (rule "disjointDefinition" (formula "71"))
                                                          (builtin "One Step Simplification" (formula "71"))
                                                         (rule "notLeft" (formula "71"))
                                                         (rule "eqSymm" (formula "90"))
                                                         (rule "disjointDefinition" (formula "70"))
                                                          (builtin "One Step Simplification" (formula "70"))
                                                         (rule "notLeft" (formula "70"))
                                                         (rule "eqSymm" (formula "89"))
                                                         (rule "disjointDefinition" (formula "69"))
                                                          (builtin "One Step Simplification" (formula "69"))
                                                         (rule "notLeft" (formula "69"))
                                                         (rule "eqSymm" (formula "88"))
                                                         (rule "disjointDefinition" (formula "68"))
                                                          (builtin "One Step Simplification" (formula "68"))
                                                         (rule "notLeft" (formula "68"))
                                                         (rule "eqSymm" (formula "87"))
                                                         (rule "disjointDefinition" (formula "67"))
                                                          (builtin "One Step Simplification" (formula "67"))
                                                         (rule "notLeft" (formula "67"))
                                                         (rule "eqSymm" (formula "86"))
                                                         (rule "disjointDefinition" (formula "66"))
                                                          (builtin "One Step Simplification" (formula "66"))
                                                         (rule "notLeft" (formula "66"))
                                                         (rule "eqSymm" (formula "85"))
                                                         (rule "disjointDefinition" (formula "65"))
                                                          (builtin "One Step Simplification" (formula "65"))
                                                         (rule "notLeft" (formula "65"))
                                                         (rule "eqSymm" (formula "84"))
                                                         (rule "disjointDefinition" (formula "64"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "notLeft" (formula "64"))
                                                         (rule "eqSymm" (formula "83"))
                                                         (rule "disjointDefinition" (formula "63"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "notLeft" (formula "63"))
                                                         (rule "eqSymm" (formula "82"))
                                                         (rule "disjointDefinition" (formula "62"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "notLeft" (formula "62"))
                                                         (rule "eqSymm" (formula "81"))
                                                         (rule "disjointDefinition" (formula "61"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "notLeft" (formula "61"))
                                                         (rule "eqSymm" (formula "80"))
                                                         (rule "disjointDefinition" (formula "60"))
                                                          (builtin "One Step Simplification" (formula "60"))
                                                         (rule "notLeft" (formula "60"))
                                                         (rule "eqSymm" (formula "79"))
                                                         (rule "disjointDefinition" (formula "59"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "notLeft" (formula "59"))
                                                         (rule "eqSymm" (formula "78"))
                                                         (rule "disjointDefinition" (formula "58"))
                                                          (builtin "One Step Simplification" (formula "58"))
                                                         (rule "notLeft" (formula "58"))
                                                         (rule "disjointDefinition" (formula "57"))
                                                          (builtin "One Step Simplification" (formula "57"))
                                                         (rule "notLeft" (formula "57"))
                                                         (rule "eqSymm" (formula "76"))
                                                         (rule "disjointDefinition" (formula "56"))
                                                          (builtin "One Step Simplification" (formula "56"))
                                                         (rule "notLeft" (formula "56"))
                                                         (rule "eqSymm" (formula "75"))
                                                         (rule "disjointDefinition" (formula "55"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "notLeft" (formula "55"))
                                                         (rule "disjointDefinition" (formula "54"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "notLeft" (formula "54"))
                                                         (rule "disjointDefinition" (formula "53"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "notLeft" (formula "53"))
                                                         (rule "disjointDefinition" (formula "52"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "notLeft" (formula "52"))
                                                         (rule "disjointDefinition" (formula "51"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "notLeft" (formula "51"))
                                                         (rule "disjointDefinition" (formula "50"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "notLeft" (formula "50"))
                                                         (rule "disjointDefinition" (formula "49"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "notLeft" (formula "49"))
                                                         (rule "disjointDefinition" (formula "48"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "notLeft" (formula "48"))
                                                         (rule "disjointDefinition" (formula "46"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "notLeft" (formula "46"))
                                                         (rule "disjointDefinition" (formula "46"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "notLeft" (formula "46"))
                                                         (rule "applyEq" (formula "59") (term "0,1,0,2,1") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "51") (term "0,1,0,2,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "52") (term "0,1,0,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "57") (term "0,1,0,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "53") (term "0,1,0,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "25") (term "1,0,1,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "54") (term "0,1,0,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "55") (term "0,1,0,0,0,0,1") (ifseqformula "45"))
                                                         (rule "distributeIntersection" (formula "13") (term "0"))
                                                         (rule "distributeIntersection" (formula "23") (term "0"))
                                                         (rule "distributeIntersection" (formula "22") (term "0"))
                                                         (rule "distributeIntersection" (formula "13") (term "0,0"))
                                                         (rule "distributeIntersection" (formula "13") (term "1,0"))
                                                         (rule "unionEqualsEmpty" (formula "23"))
                                                         (rule "andLeft" (formula "23"))
                                                         (rule "distributeIntersection" (formula "22") (term "1,0"))
                                                         (rule "distributeIntersection" (formula "22") (term "0,0"))
                                                         (rule "distributeIntersection" (formula "13") (term "1,0,0"))
                                                         (rule "distributeIntersection" (formula "13") (term "0,0,0"))
                                                         (rule "distributeIntersection" (formula "13") (term "1,1,0"))
                                                         (rule "distributeIntersection" (formula "13") (term "0,1,0"))
                                                         (rule "distributeIntersection" (formula "24") (term "0"))
                                                         (rule "distributeIntersection" (formula "23") (term "0"))
                                                         (rule "distributeIntersection" (formula "22") (term "0,1,0"))
                                                         (rule "distributeIntersection" (formula "22") (term "1,1,0"))
                                                         (rule "distributeIntersection" (formula "22") (term "0,0,0"))
                                                         (rule "distributeIntersection" (formula "22") (term "1,0,0"))
                                                         (rule "unionEqualsEmpty" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "unionEqualsEmpty" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "distributeIntersection" (formula "24") (term "0,0"))
                                                         (rule "distributeIntersection" (formula "24") (term "1,0"))
                                                         (rule "unionEqualsEmpty" (formula "23"))
                                                         (rule "andLeft" (formula "23"))
                                                         (rule "unionEqualsEmpty" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "unionEqualsEmpty" (formula "15"))
                                                         (rule "andLeft" (formula "15"))
                                                         (rule "distributeIntersection" (formula "29") (term "0"))
                                                         (rule "distributeIntersection" (formula "28") (term "0"))
                                                         (rule "unionEqualsEmpty" (formula "27"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "unionEqualsEmpty" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "unionEqualsEmpty" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "unionEqualsEmpty" (formula "14"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "notLeft" (formula "15"))
                                                         (rule "notLeft" (formula "14"))
                                                         (rule "eqSymm" (formula "74"))
                                                         (rule "eqSymm" (formula "73"))
                                                         (rule "unionEqualsEmpty" (formula "13"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "notLeft" (formula "13"))
                                                         (rule "notLeft" (formula "13"))
                                                         (rule "eqSymm" (formula "73"))
                                                         (rule "eqSymm" (formula "72"))
                                                         (rule "unionEqualsEmpty" (formula "13"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "notLeft" (formula "13"))
                                                         (rule "notLeft" (formula "13"))
                                                         (rule "eqSymm" (formula "72"))
                                                         (rule "eqSymm" (formula "71"))
                                                         (rule "unionEqualsEmpty" (formula "13"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "notLeft" (formula "14"))
                                                         (rule "notLeft" (formula "13"))
                                                         (rule "eqSymm" (formula "71"))
                                                         (rule "eqSymm" (formula "70"))
                                                         (rule "unionEqualsEmpty" (formula "28"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "andLeft" (formula "28"))
                                                         (rule "notLeft" (formula "28"))
                                                         (rule "notLeft" (formula "28"))
                                                         (rule "eqSymm" (formula "70"))
                                                         (rule "eqSymm" (formula "69"))
                                                         (rule "sortsDisjointModuloNull" (formula "70"))
                                                         (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "119"))
                                                          (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "113")))
                                                         (rule "false_right" (formula "70"))
                                                         (rule "sortsDisjointModuloNull" (formula "69"))
                                                         (rule "replace_known_right" (formula "69") (term "1") (ifseqformula "118"))
                                                          (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "113")))
                                                         (rule "false_right" (formula "69"))
                                                         (rule "unionEqualsEmpty" (formula "27"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "notLeft" (formula "27"))
                                                         (rule "notLeft" (formula "27"))
                                                         (rule "eqSymm" (formula "69"))
                                                         (rule "eqSymm" (formula "68"))
                                                         (rule "sortsDisjointModuloNull" (formula "69"))
                                                         (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "110"))
                                                          (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "118")))
                                                         (rule "false_right" (formula "69"))
                                                         (rule "sortsDisjointModuloNull" (formula "68"))
                                                         (rule "replace_known_right" (formula "68") (term "1") (ifseqformula "117"))
                                                          (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "110")))
                                                         (rule "false_right" (formula "68"))
                                                         (rule "unionEqualsEmpty" (formula "25"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "notLeft" (formula "25"))
                                                         (rule "notLeft" (formula "25"))
                                                         (rule "eqSymm" (formula "68"))
                                                         (rule "eqSymm" (formula "67"))
                                                         (rule "sortsDisjointModuloNull" (formula "68"))
                                                         (rule "replace_known_right" (formula "68") (term "0") (ifseqformula "106"))
                                                          (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "117")))
                                                         (rule "false_right" (formula "68"))
                                                         (rule "sortsDisjointModuloNull" (formula "67"))
                                                         (rule "replace_known_right" (formula "67") (term "0") (ifseqformula "104"))
                                                          (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "116")))
                                                         (rule "false_right" (formula "67"))
                                                         (rule "unionEqualsEmpty" (formula "25"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "notLeft" (formula "25"))
                                                         (rule "notLeft" (formula "25"))
                                                         (rule "eqSymm" (formula "67"))
                                                         (rule "eqSymm" (formula "66"))
                                                         (rule "sortsDisjointModuloNull" (formula "67"))
                                                         (rule "replace_known_right" (formula "67") (term "1") (ifseqformula "116"))
                                                          (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "106")))
                                                         (rule "false_right" (formula "67"))
                                                         (rule "sortsDisjointModuloNull" (formula "66"))
                                                         (rule "replace_known_right" (formula "66") (term "1") (ifseqformula "115"))
                                                          (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "106")))
                                                         (rule "false_right" (formula "66"))
                                                         (rule "unionEqualsEmpty" (formula "23"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "andLeft" (formula "23"))
                                                         (rule "notLeft" (formula "23"))
                                                         (rule "notLeft" (formula "23"))
                                                         (rule "eqSymm" (formula "66"))
                                                         (rule "eqSymm" (formula "65"))
                                                         (rule "unionEqualsEmpty" (formula "23"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "andLeft" (formula "23"))
                                                         (rule "notLeft" (formula "24"))
                                                         (rule "notLeft" (formula "23"))
                                                         (rule "eqSymm" (formula "65"))
                                                         (rule "eqSymm" (formula "64"))
                                                         (rule "unionEqualsEmpty" (formula "21"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "eqSymm" (formula "64"))
                                                         (rule "eqSymm" (formula "63"))
                                                         (rule "unionEqualsEmpty" (formula "21"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "notLeft" (formula "22"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "eqSymm" (formula "63"))
                                                         (rule "eqSymm" (formula "62"))
                                                         (rule "commuteUnion" (formula "42") (term "0,0,1"))
                                                         (rule "commuteUnion" (formula "42") (term "1,1,1"))
                                                         (rule "commuteUnion" (formula "56") (term "0,0,1,0,2,1"))
                                                         (rule "commuteUnion" (formula "56") (term "1,1,0,1,0,2,1"))
                                                         (rule "commuteUnion" (formula "48") (term "0,0,0,1,0,2,0"))
                                                         (rule "commuteUnion" (formula "48") (term "1,1,0,1,0,2,0"))
                                                         (rule "commuteUnion_2" (formula "49") (term "0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "49") (term "1,1,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "54") (term "1,1,0,1,0"))
                                                         (rule "commuteUnion_2" (formula "54") (term "0,0,1,0"))
                                                         (rule "commuteUnion" (formula "54") (term "1,1,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "54") (term "0,0,1,0,0"))
                                                         (rule "commuteUnion_2" (formula "50") (term "0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "50") (term "1,1,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "22") (term "0,1,0,1,0"))
                                                         (rule "commuteUnion" (formula "22") (term "1,1,1,0,1,0"))
                                                         (rule "commuteUnion" (formula "51") (term "0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "51") (term "1,1,0,1,0,0"))
                                                         (rule "commuteUnion_2" (formula "52") (term "0,0,1,0,0,0,0,1"))
                                                         (rule "commuteUnion" (formula "52") (term "1,1,0,1,0,0,0,0,1"))
                                                         (rule "commuteUnion_2" (formula "42") (term "0,1"))
                                                         (rule "commuteUnion" (formula "56") (term "1,0,0,1,0,2,1"))
                                                         (rule "commuteUnion_2" (formula "48") (term "0,0,1,0,2,0"))
                                                         (rule "commuteUnion" (formula "49") (term "0,0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "54") (term "0,0,0,1,0"))
                                                         (rule "commuteUnion" (formula "54") (term "1,0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "50") (term "0,0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "22") (term "1,0,1,0,1,0"))
                                                         (rule "commuteUnion" (formula "51") (term "1,0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "52") (term "0,0,0,1,0,0,0,0,1"))
                                                         (rule "commuteUnion_2" (formula "42") (term "1"))
                                                         (rule "commuteUnion" (formula "48") (term "0,0,0,1,0,2,0"))
                                                         (rule "commuteUnion_2" (formula "49") (term "0,0,1,0,0"))
                                                         (rule "commuteUnion_2" (formula "54") (term "0,0,1,0"))
                                                         (rule "commuteUnion_2" (formula "50") (term "0,0,1,0,0"))
                                                         (rule "commuteUnion_2" (formula "52") (term "0,0,1,0,0,0,0,1"))
                                                         (rule "commuteUnion" (formula "42") (term "0,0,1"))
                                                         (rule "commuteUnion_2" (formula "48") (term "0,1,0,2,0"))
                                                         (rule "commuteUnion_2" (formula "49") (term "0,1,0,0"))
                                                         (rule "commuteUnion_2" (formula "54") (term "0,1,0"))
                                                         (rule "commuteUnion_2" (formula "50") (term "0,1,0,0"))
                                                         (rule "commuteUnion_2" (formula "52") (term "0,1,0,0,0,0,1"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "61"))
                                                          (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "107")) (ifInst ""  (formula "106")) (ifInst ""  (formula "108")) (ifInst ""  (formula "109")) (ifInst ""  (formula "110")) (ifInst ""  (formula "111")) (ifInst ""  (formula "112")) (ifInst ""  (formula "113")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                                         (rule "translateJavaMulInt" (formula "61") (term "1,0,0,0"))
                                                         (rule "translateJavaMulInt" (formula "61") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "61") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                                         (rule "andLeft" (formula "61"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "61"))
                                                         (rule "andLeft" (formula "63"))
                                                         (rule "andLeft" (formula "61"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "andLeft" (formula "62"))
                                                         (rule "disjointDefinition" (formula "89"))
                                                          (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "133")))
                                                         (rule "true_left" (formula "89"))
                                                         (rule "disjointDefinition" (formula "88"))
                                                          (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "131")))
                                                         (rule "true_left" (formula "88"))
                                                         (rule "disjointDefinition" (formula "87"))
                                                          (builtin "One Step Simplification" (formula "87"))
                                                         (rule "notLeft" (formula "87"))
                                                         (rule "eqSymm" (formula "87"))
                                                         (rule "disjointDefinition" (formula "86"))
                                                          (builtin "One Step Simplification" (formula "86"))
                                                         (rule "notLeft" (formula "86"))
                                                         (rule "eqSymm" (formula "86"))
                                                         (rule "disjointDefinition" (formula "85"))
                                                          (builtin "One Step Simplification" (formula "85"))
                                                         (rule "notLeft" (formula "85"))
                                                         (rule "eqSymm" (formula "85"))
                                                         (rule "disjointDefinition" (formula "84"))
                                                          (builtin "One Step Simplification" (formula "84"))
                                                         (rule "notLeft" (formula "84"))
                                                         (rule "eqSymm" (formula "84"))
                                                         (rule "disjointDefinition" (formula "83"))
                                                          (builtin "One Step Simplification" (formula "83"))
                                                         (rule "notLeft" (formula "83"))
                                                         (rule "eqSymm" (formula "83"))
                                                         (rule "disjointDefinition" (formula "82"))
                                                          (builtin "One Step Simplification" (formula "82"))
                                                         (rule "notLeft" (formula "82"))
                                                         (rule "eqSymm" (formula "82"))
                                                         (rule "disjointDefinition" (formula "81"))
                                                          (builtin "One Step Simplification" (formula "81"))
                                                         (rule "notLeft" (formula "81"))
                                                         (rule "eqSymm" (formula "81"))
                                                         (rule "disjointDefinition" (formula "80"))
                                                          (builtin "One Step Simplification" (formula "80"))
                                                         (rule "notLeft" (formula "80"))
                                                         (rule "eqSymm" (formula "80"))
                                                         (rule "disjointDefinition" (formula "79"))
                                                          (builtin "One Step Simplification" (formula "79"))
                                                         (rule "notLeft" (formula "79"))
                                                         (rule "eqSymm" (formula "79"))
                                                         (rule "disjointDefinition" (formula "78"))
                                                          (builtin "One Step Simplification" (formula "78"))
                                                         (rule "notLeft" (formula "78"))
                                                         (rule "eqSymm" (formula "78"))
                                                         (rule "disjointDefinition" (formula "77"))
                                                          (builtin "One Step Simplification" (formula "77"))
                                                         (rule "notLeft" (formula "77"))
                                                         (rule "eqSymm" (formula "77"))
                                                         (rule "disjointDefinition" (formula "76"))
                                                          (builtin "One Step Simplification" (formula "76"))
                                                         (rule "notLeft" (formula "76"))
                                                         (rule "eqSymm" (formula "76"))
                                                         (rule "disjointDefinition" (formula "75"))
                                                          (builtin "One Step Simplification" (formula "75"))
                                                         (rule "notLeft" (formula "75"))
                                                         (rule "eqSymm" (formula "75"))
                                                         (rule "disjointDefinition" (formula "74"))
                                                          (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "103")))
                                                         (rule "true_left" (formula "74"))
                                                         (rule "disjointDefinition" (formula "73"))
                                                          (builtin "One Step Simplification" (formula "73"))
                                                         (rule "notLeft" (formula "73"))
                                                         (rule "eqSymm" (formula "73"))
                                                         (rule "disjointDefinition" (formula "72"))
                                                          (builtin "One Step Simplification" (formula "72"))
                                                         (rule "notLeft" (formula "72"))
                                                         (rule "eqSymm" (formula "72"))
                                                         (rule "disjointDefinition" (formula "71"))
                                                          (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "97")))
                                                         (rule "true_left" (formula "71"))
                                                         (rule "disjointDefinition" (formula "70"))
                                                          (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "95")))
                                                         (rule "true_left" (formula "70"))
                                                         (rule "disjointDefinition" (formula "69"))
                                                          (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "93")))
                                                         (rule "true_left" (formula "69"))
                                                         (rule "disjointDefinition" (formula "68"))
                                                          (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "91")))
                                                         (rule "true_left" (formula "68"))
                                                         (rule "disjointDefinition" (formula "67"))
                                                          (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "89")))
                                                         (rule "true_left" (formula "67"))
                                                         (rule "disjointDefinition" (formula "66"))
                                                          (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "87")))
                                                         (rule "true_left" (formula "66"))
                                                         (rule "disjointDefinition" (formula "65"))
                                                          (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "85")))
                                                         (rule "true_left" (formula "65"))
                                                         (rule "disjointDefinition" (formula "64"))
                                                          (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "83")))
                                                         (rule "true_left" (formula "64"))
                                                         (rule "disjointDefinition" (formula "62"))
                                                          (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "81")))
                                                         (rule "true_left" (formula "62"))
                                                         (rule "disjointDefinition" (formula "62"))
                                                          (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "79")))
                                                         (rule "true_left" (formula "62"))
                                                         (rule "applyEq" (formula "61") (term "0") (ifseqformula "42"))
                                                         (rule "eqSymm" (formula "61"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "12"))
                                                          (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "107")) (ifInst ""  (formula "106")) (ifInst ""  (formula "108")) (ifInst ""  (formula "109")) (ifInst ""  (formula "110")) (ifInst ""  (formula "111")) (ifInst ""  (formula "112")) (ifInst ""  (formula "113")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                                         (rule "translateJavaMulInt" (formula "12") (term "1,1,0,0"))
                                                         (rule "translateJavaMulInt" (formula "12") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "disjointDefinition" (formula "40"))
                                                          (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "133")))
                                                         (rule "true_left" (formula "40"))
                                                         (rule "disjointDefinition" (formula "39"))
                                                          (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "131")))
                                                         (rule "true_left" (formula "39"))
                                                         (rule "disjointDefinition" (formula "38"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "notLeft" (formula "38"))
                                                         (rule "eqSymm" (formula "87"))
                                                         (rule "disjointDefinition" (formula "37"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "notLeft" (formula "37"))
                                                         (rule "eqSymm" (formula "86"))
                                                         (rule "disjointDefinition" (formula "36"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "notLeft" (formula "36"))
                                                         (rule "eqSymm" (formula "85"))
                                                         (rule "disjointDefinition" (formula "35"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "notLeft" (formula "35"))
                                                         (rule "eqSymm" (formula "84"))
                                                         (rule "disjointDefinition" (formula "34"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "notLeft" (formula "34"))
                                                         (rule "eqSymm" (formula "83"))
                                                         (rule "disjointDefinition" (formula "33"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "notLeft" (formula "33"))
                                                         (rule "eqSymm" (formula "82"))
                                                         (rule "disjointDefinition" (formula "32"))
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "notLeft" (formula "32"))
                                                         (rule "eqSymm" (formula "81"))
                                                         (rule "disjointDefinition" (formula "31"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "notLeft" (formula "31"))
                                                         (rule "eqSymm" (formula "80"))
                                                         (rule "disjointDefinition" (formula "30"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "notLeft" (formula "30"))
                                                         (rule "eqSymm" (formula "79"))
                                                         (rule "disjointDefinition" (formula "29"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "notLeft" (formula "29"))
                                                         (rule "eqSymm" (formula "78"))
                                                         (rule "disjointDefinition" (formula "28"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "notLeft" (formula "28"))
                                                         (rule "eqSymm" (formula "77"))
                                                         (rule "disjointDefinition" (formula "27"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "notLeft" (formula "27"))
                                                         (rule "eqSymm" (formula "76"))
                                                         (rule "disjointDefinition" (formula "26"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "notLeft" (formula "26"))
                                                         (rule "eqSymm" (formula "75"))
                                                         (rule "disjointDefinition" (formula "25"))
                                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "103")))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "disjointDefinition" (formula "24"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "notLeft" (formula "24"))
                                                         (rule "eqSymm" (formula "73"))
                                                         (rule "disjointDefinition" (formula "23"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "notLeft" (formula "23"))
                                                         (rule "eqSymm" (formula "72"))
                                                         (rule "disjointDefinition" (formula "22"))
                                                          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "97")))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "disjointDefinition" (formula "21"))
                                                          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "95")))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "disjointDefinition" (formula "20"))
                                                          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "93")))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "disjointDefinition" (formula "19"))
                                                          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "91")))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "disjointDefinition" (formula "18"))
                                                          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "89")))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "disjointDefinition" (formula "17"))
                                                          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "87")))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "disjointDefinition" (formula "16"))
                                                          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "85")))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "disjointDefinition" (formula "15"))
                                                          (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "83")))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "disjointDefinition" (formula "13"))
                                                          (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "81")))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "disjointDefinition" (formula "13"))
                                                          (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "79")))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "applyEq" (formula "12") (term "1") (ifseqformula "61"))
                                                         (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "32") (term "0") (inst "b=b_3"))
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "translateJavaSubInt" (formula "32") (term "0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "32") (term "0,2,0,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "32") (term "0,2,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "32") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,0,0,1,1,0"))
                                                         (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "26") (term "0") (inst "b=b_3"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "translateJavaAddInt" (formula "26") (term "0,2,5,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "26") (term "0,2,5,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "26") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                                         (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "25") (term "0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "translateJavaAddInt" (formula "25") (term "3,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "25") (term "0,1,0,0"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "polySimp_addComm0" (formula "27") (term "3,0"))
                                                         (rule "polySimp_addComm0" (formula "26") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "25"))
                                                         (rule "inEqSimp_commuteLeq" (formula "26"))
                                                         (rule "applyEq" (formula "26") (term "0") (ifseqformula "15"))
                                                         (rule "inEqSimp_homoInEq1" (formula "26"))
                                                         (rule "mul_literals" (formula "26") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                         (rule "add_literals" (formula "26") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                         (rule "mul_literals" (formula "26") (term "1"))
                                                         (rule "inEqSimp_subsumption6" (formula "25") (ifseqformula "47"))
                                                         (rule "mul_literals" (formula "25") (term "1,1,0"))
                                                         (rule "greater_literals" (formula "25") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "leq_literals" (formula "25") (term "0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "elimGcdLeq_antec" (formula "25") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(6(5(2(#))))"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0"))
                                                         (rule "neg_literal" (formula "25") (term "0,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "25") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "25") (term "0,0,0,0"))
                                                         (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "25") (term "0,0"))
                                                         (rule "qeq_literals" (formula "25") (term "0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "21"))
                                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "119")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,0,0") (ifseqformula "13"))
                                                         (rule "replace_known_right" (formula "27") (term "0,0,1,0,0") (ifseqformula "118"))
                                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "14")))
                                                         (rule "applyEq" (formula "27") (term "1") (ifseqformula "28"))
                                                         (rule "ifEqualsInteger" (formula "27"))
                                                         (rule "elementOfUnion" (formula "27") (term "0,0"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "27") (term "1,0,0"))
                                                         (rule "eqSymm" (formula "27") (term "0,0,1,0,0"))
                                                         (rule "replace_known_right" (formula "27") (term "0,0,1,0,0") (ifseqformula "117"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "elementOfUnion" (formula "27") (term "0,0,1"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "27") (term "1,0,0,1"))
                                                         (rule "eqSymm" (formula "27") (term "0,0,1,0,0,1"))
                                                         (rule "replace_known_right" (formula "27") (term "0,0,1,0,0,1") (ifseqformula "117"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "elementOfUnion" (formula "27") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "elementOfUnion" (formula "27") (term "0,0,1"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "60") (term "0") (inst "b=b_3"))
                                                          (builtin "One Step Simplification" (formula "60"))
                                                         (rule "translateJavaAddInt" (formula "60") (term "0,2,5,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "60") (term "0,2,5,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "60") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "60") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "60") (term "0,1,1,0,0"))
                                                         (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "59") (term "0") (inst "b=b_3"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "translateJavaAddInt" (formula "59") (term "0,2,1,3,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "59") (term "2,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "59") (term "3,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "59") (term "0,2,1,3,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "59") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "59") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0"))
                                                         (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "34") (term "0,1") (inst "b=b_3"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "translateJavaAddInt" (formula "34") (term "2,0,1,0,1"))
                                                         (rule "translateJavaMod" (formula "34") (term "0,1,0,0,1"))
                                                         (rule "translateJavaAddInt" (formula "34") (term "0,2,1,3,0,1,0,1"))
                                                         (rule "translateJavaAddInt" (formula "34") (term "3,0,1,0,1"))
                                                         (rule "polySimp_addComm0" (formula "34") (term "0,2,1,3,0,1,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,1"))
                                                         (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0,1"))
                                                         (rule "jmod_axiom" (formula "34") (term "0,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0,1"))
                                                         (rule "polySimp_homoEq" (formula "34") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,0,1"))
                                                         (rule "polySimp_sepPosMonomial" (formula "34") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,1"))
                                                         (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "30") (term "0") (inst "b=b_3"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "translateJavaAddInt" (formula "30") (term "0,2,5,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,2,5,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "30") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                                         (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "61") (term "0") (inst "b=b_3"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "translateJavaAddInt" (formula "61") (term "0,2,5,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "61") (term "0,2,5,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "61") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "61") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "61") (term "0,1,1,0,0"))
                                                         (rule "commuteUnion" (formula "63") (term "1,1,0"))
                                                         (rule "commuteUnion_2" (formula "63") (term "0,0"))
                                                         (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "62") (term "0,1") (inst "b=b_3"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "translateJavaAddInt" (formula "62") (term "0,2,1,3,0,1,0,1"))
                                                         (rule "translateJavaAddInt" (formula "62") (term "2,0,1,0,1"))
                                                         (rule "translateJavaMod" (formula "62") (term "0,1,0,0,1"))
                                                         (rule "translateJavaAddInt" (formula "62") (term "3,0,1,0,1"))
                                                         (rule "polySimp_addComm0" (formula "62") (term "0,2,1,3,0,1,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0,0,1"))
                                                         (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0,0,1"))
                                                         (rule "jmod_axiom" (formula "62") (term "0,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "62") (term "1,0,1,0,0,1"))
                                                         (rule "polySimp_homoEq" (formula "62") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "62") (term "1,0,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "62") (term "1,0,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "62") (term "0,1,0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "62") (term "0,1,0,0,1"))
                                                         (rule "polySimp_sepPosMonomial" (formula "62") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,1"))
                                                         (rule "mul_literals" (formula "62") (term "0,1,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0,1"))
                                                         (rule "commute_or" (formula "16") (term "0,0"))
                                                         (rule "ifthenelse_split" (formula "1") (term "0"))
                                                         (branch "result_22.equal_buckets = TRUE TRUE"
                                                            (rule "replace_known_left" (formula "63") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "63"))
                                                            (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "replace_known_left" (formula "50") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "50")))
                                                            (rule "andLeft" (formula "55"))
                                                            (rule "notLeft" (formula "56"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2"))
                                                            (rule "mul_literals" (formula "2") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "65"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                            (rule "add_literals" (formula "3") (term "0,1"))
                                                            (rule "inEqSimp_contradEq3" (formula "65") (ifseqformula "3"))
                                                            (rule "polySimp_rightDist" (formula "65") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "65") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "65") (term "0,0,0"))
                                                            (rule "add_literals" (formula "65") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "65") (term "0,0"))
                                                            (rule "add_literals" (formula "65") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "65") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "65") (term "0,0"))
                                                            (rule "qeq_literals" (formula "65") (term "0"))
                                                             (builtin "One Step Simplification" (formula "65"))
                                                            (rule "false_right" (formula "65"))
                                                            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "3"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0"))
                                                            (rule "leq_literals" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                         (branch "result_22.equal_buckets = TRUE FALSE"
                                                            (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "62"))
                                                            (rule "true_left" (formula "62"))
                                                            (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "true_left" (formula "34"))
                                                            (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "true_left" (formula "48"))
                                                            (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "61"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "true_left" (formula "52"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1"))
                                                            (rule "times_zero_2" (formula "1") (term "1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0"))
                                                            (rule "leq_literals" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "impRight" (formula "62"))
                                                      (rule "replace_known_left" (formula "63") (term "0,1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "andLeft" (formula "47"))
                                                      (rule "andLeft" (formula "47"))
                                                      (rule "notLeft" (formula "49"))
                                                      (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "56"))
                                                      (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "48")))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "polySimp_homoEq" (formula "57"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "64") (term "0,0"))
                                                      (rule "add_literals" (formula "64") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "57") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "11"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "12"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                      (rule "jmod_axiom" (formula "33") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                                      (rule "jmod_axiom" (formula "47") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                                                      (rule "jmod_axiom" (formula "64") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "57"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "57") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "33"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "47"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "64"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                      (rule "mul_literals" (formula "11") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                      (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "57"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                                      (rule "add_literals" (formula "2") (term "0,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "57") (ifseqformula "2"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "57") (term "0,0,0"))
                                                      (rule "add_literals" (formula "57") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0"))
                                                      (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "57") (term "0,0"))
                                                      (rule "leq_literals" (formula "57") (term "0"))
                                                       (builtin "One Step Simplification" (formula "57"))
                                                      (rule "false_right" (formula "57"))
                                                      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "11"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0"))
                                                      (rule "qeq_literals" (formula "8") (term "0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "40") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                      (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                      (rule "add_literals" (formula "40") (term "0,0"))
                                                      (rule "qeq_literals" (formula "40") (term "0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "newSym_eq" (formula "32") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,1"))
                                                      (rule "add_zero_right" (formula "32") (term "1"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                                      (rule "eqSymm" (formula "33"))
                                                      (rule "applyEq" (formula "44") (term "7,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "31") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "42") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "54") (term "1,7,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "35") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "45") (term "1,7,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "51") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "34") (term "0,2,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "31") (term "7,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "43") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "53") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "54") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "35") (term "1,7,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "33"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "applyEq" (formula "52") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "45") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "53") (term "7,0") (ifseqformula "33"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "newSym_eq" (formula "46") (inst "newSymDef=mul(bucket_0, Z(0(#)))") (inst "l=l_1"))
                                                      (rule "times_zero_1" (formula "46") (term "1,1"))
                                                      (rule "add_zero_right" (formula "46") (term "1"))
                                                      (rule "applyEqRigid" (formula "47") (term "0,0") (ifseqformula "46"))
                                                      (rule "eqSymm" (formula "47"))
                                                      (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "47"))
                                                      (rule "applyEqRigid" (formula "42") (term "7,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "52") (term "1,7,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "54") (term "1,6,0") (ifseqformula "47"))
                                                      (rule "applyEqRigid" (formula "55") (term "1,6,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "47"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "applyEqRigid" (formula "45") (term "1,6,0") (ifseqformula "47"))
                                                      (rule "applyEqRigid" (formula "63") (term "1,0,0,0") (ifseqformula "47"))
                                                      (rule "applyEqRigid" (formula "44") (term "6,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "63") (term "1,1") (ifseqformula "47"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "elimGcdEq" (formula "63") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=jdiv(add(Z(2(#)), mul(l_1, Z(2(#)))), Z(2(#)))") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "63") (term "0,1,0,0,1"))
                                                      (rule "mul_literals" (formula "63") (term "0,1,0,1,0"))
                                                      (rule "add_literals" (formula "63") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "63") (term "0,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "63") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "63") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "63") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "63") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "63") (term "0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "63") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0" (formula "63") (term "0,0,0"))
                                                      (rule "add_literals" (formula "63") (term "1,0,0,0"))
                                                      (rule "times_zero_1" (formula "63") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "63") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "polySimp_addAssoc" (formula "63") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "63") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "63") (term "0,0,0,0,1"))
                                                      (rule "add_zero_left" (formula "63") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor0" (formula "63") (term "0,0,1"))
                                                      (rule "add_literals" (formula "63") (term "1,0,0,1"))
                                                      (rule "times_zero_1" (formula "63") (term "0,0,1"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                                                      (rule "add_literals" (formula "63") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "63") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0" (formula "63") (term "0,0"))
                                                      (rule "add_literals" (formula "63") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "63") (term "0,0"))
                                                      (rule "qeq_literals" (formula "63") (term "0"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)"))
                                                      (rule "leq_literals" (formula "2") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "leq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "elimGcdGeq_antec" (formula "40") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "40") (term "0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "40") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "times_zero_1" (formula "40") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                                      (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                      (rule "add_literals" (formula "40") (term "0,0"))
                                                      (rule "leq_literals" (formula "40") (term "0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "nnf_imp2or" (formula "18") (term "0"))
                                                      (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "37"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "translateJavaMulInt" (formula "37") (term "1,1,0,0,0,0,1,0,0"))
                                                      (rule "translateJavaMulInt" (formula "37") (term "1,1,0,0,0,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0,0,1,0,0"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "40"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "andLeft" (formula "42"))
                                                      (rule "notLeft" (formula "38"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "andLeft" (formula "43"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "notLeft" (formula "39"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "notLeft" (formula "39"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "notLeft" (formula "39"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "notLeft" (formula "38"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "andLeft" (formula "47"))
                                                      (rule "notLeft" (formula "38"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "andLeft" (formula "48"))
                                                      (rule "notLeft" (formula "38"))
                                                      (rule "notLeft" (formula "37"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "disjointDefinition" (formula "73"))
                                                       (builtin "One Step Simplification" (formula "73"))
                                                      (rule "notLeft" (formula "73"))
                                                      (rule "disjointDefinition" (formula "72"))
                                                       (builtin "One Step Simplification" (formula "72"))
                                                      (rule "notLeft" (formula "72"))
                                                      (rule "disjointDefinition" (formula "71"))
                                                       (builtin "One Step Simplification" (formula "71"))
                                                      (rule "notLeft" (formula "71"))
                                                      (rule "eqSymm" (formula "90"))
                                                      (rule "disjointDefinition" (formula "70"))
                                                       (builtin "One Step Simplification" (formula "70"))
                                                      (rule "notLeft" (formula "70"))
                                                      (rule "eqSymm" (formula "89"))
                                                      (rule "disjointDefinition" (formula "69"))
                                                       (builtin "One Step Simplification" (formula "69"))
                                                      (rule "notLeft" (formula "69"))
                                                      (rule "eqSymm" (formula "88"))
                                                      (rule "disjointDefinition" (formula "68"))
                                                       (builtin "One Step Simplification" (formula "68"))
                                                      (rule "notLeft" (formula "68"))
                                                      (rule "eqSymm" (formula "87"))
                                                      (rule "disjointDefinition" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "notLeft" (formula "67"))
                                                      (rule "eqSymm" (formula "86"))
                                                      (rule "disjointDefinition" (formula "66"))
                                                       (builtin "One Step Simplification" (formula "66"))
                                                      (rule "notLeft" (formula "66"))
                                                      (rule "eqSymm" (formula "85"))
                                                      (rule "disjointDefinition" (formula "65"))
                                                       (builtin "One Step Simplification" (formula "65"))
                                                      (rule "notLeft" (formula "65"))
                                                      (rule "eqSymm" (formula "84"))
                                                      (rule "disjointDefinition" (formula "64"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "notLeft" (formula "64"))
                                                      (rule "eqSymm" (formula "83"))
                                                      (rule "disjointDefinition" (formula "63"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "notLeft" (formula "63"))
                                                      (rule "eqSymm" (formula "82"))
                                                      (rule "disjointDefinition" (formula "62"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "notLeft" (formula "62"))
                                                      (rule "eqSymm" (formula "81"))
                                                      (rule "disjointDefinition" (formula "61"))
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "notLeft" (formula "61"))
                                                      (rule "eqSymm" (formula "80"))
                                                      (rule "disjointDefinition" (formula "60"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "notLeft" (formula "60"))
                                                      (rule "eqSymm" (formula "79"))
                                                      (rule "disjointDefinition" (formula "59"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                      (rule "notLeft" (formula "59"))
                                                      (rule "eqSymm" (formula "78"))
                                                      (rule "disjointDefinition" (formula "58"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "notLeft" (formula "58"))
                                                      (rule "disjointDefinition" (formula "57"))
                                                       (builtin "One Step Simplification" (formula "57"))
                                                      (rule "notLeft" (formula "57"))
                                                      (rule "eqSymm" (formula "76"))
                                                      (rule "disjointDefinition" (formula "56"))
                                                       (builtin "One Step Simplification" (formula "56"))
                                                      (rule "notLeft" (formula "56"))
                                                      (rule "eqSymm" (formula "75"))
                                                      (rule "disjointDefinition" (formula "55"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "notLeft" (formula "55"))
                                                      (rule "disjointDefinition" (formula "54"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "notLeft" (formula "54"))
                                                      (rule "disjointDefinition" (formula "53"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "notLeft" (formula "53"))
                                                      (rule "disjointDefinition" (formula "52"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "notLeft" (formula "52"))
                                                      (rule "disjointDefinition" (formula "51"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "notLeft" (formula "51"))
                                                      (rule "disjointDefinition" (formula "50"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "notLeft" (formula "50"))
                                                      (rule "disjointDefinition" (formula "49"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "notLeft" (formula "49"))
                                                      (rule "disjointDefinition" (formula "48"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "notLeft" (formula "48"))
                                                      (rule "disjointDefinition" (formula "47"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "notLeft" (formula "47"))
                                                      (rule "disjointDefinition" (formula "46"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "notLeft" (formula "46"))
                                                      (rule "applyEq" (formula "25") (term "1,0,1,0") (ifseqformula "45"))
                                                      (rule "applyEq" (formula "53") (term "0,1,0,0") (ifseqformula "45"))
                                                      (rule "applyEq" (formula "57") (term "0,1,0,0") (ifseqformula "45"))
                                                      (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "45"))
                                                      (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "45"))
                                                      (rule "applyEq" (formula "51") (term "0,1,0,0") (ifseqformula "45"))
                                                      (rule "applyEq" (formula "52") (term "0,1,0,0") (ifseqformula "45"))
                                                      (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "45"))
                                                      (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "45"))
                                                      (rule "applyEq" (formula "49") (term "0,1,0,2,0") (ifseqformula "45"))
                                                      (rule "applyEq" (formula "50") (term "0,1,0,0") (ifseqformula "45"))
                                                      (rule "applyEq" (formula "59") (term "0,1,0,2,1") (ifseqformula "45"))
                                                      (rule "distributeIntersection" (formula "13") (term "0"))
                                                      (rule "distributeIntersection" (formula "22") (term "0"))
                                                      (rule "distributeIntersection" (formula "23") (term "0"))
                                                      (rule "unionEqualsEmpty" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "unionEqualsEmpty" (formula "23"))
                                                      (rule "andLeft" (formula "23"))
                                                      (rule "distributeIntersection" (formula "25") (term "1,0"))
                                                      (rule "distributeIntersection" (formula "25") (term "0,0"))
                                                      (rule "distributeIntersection" (formula "14") (term "0"))
                                                      (rule "distributeIntersection" (formula "13") (term "0"))
                                                      (rule "distributeIntersection" (formula "24") (term "0"))
                                                      (rule "distributeIntersection" (formula "23") (term "0"))
                                                      (rule "distributeIntersection" (formula "25") (term "1,1,0"))
                                                      (rule "distributeIntersection" (formula "25") (term "0,1,0"))
                                                      (rule "distributeIntersection" (formula "25") (term "0,0,0"))
                                                      (rule "distributeIntersection" (formula "25") (term "1,0,0"))
                                                      (rule "distributeIntersection" (formula "14") (term "1,0"))
                                                      (rule "distributeIntersection" (formula "14") (term "0,0"))
                                                      (rule "unionEqualsEmpty" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "distributeIntersection" (formula "25") (term "0,0"))
                                                      (rule "distributeIntersection" (formula "25") (term "1,0"))
                                                      (rule "distributeIntersection" (formula "24") (term "0,0"))
                                                      (rule "distributeIntersection" (formula "24") (term "1,0"))
                                                      (rule "unionEqualsEmpty" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "unionEqualsEmpty" (formula "15"))
                                                      (rule "andLeft" (formula "15"))
                                                      (rule "distributeIntersection" (formula "13") (term "0"))
                                                      (rule "distributeIntersection" (formula "14") (term "0"))
                                                      (rule "unionEqualsEmpty" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "unionEqualsEmpty" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "unionEqualsEmpty" (formula "29"))
                                                      (rule "andLeft" (formula "29"))
                                                      (rule "unionEqualsEmpty" (formula "31"))
                                                      (rule "andLeft" (formula "31"))
                                                      (rule "unionEqualsEmpty" (formula "16"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "andLeft" (formula "16"))
                                                      (rule "notLeft" (formula "17"))
                                                      (rule "notLeft" (formula "16"))
                                                      (rule "eqSymm" (formula "74"))
                                                      (rule "eqSymm" (formula "73"))
                                                      (rule "unionEqualsEmpty" (formula "15"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "andLeft" (formula "15"))
                                                      (rule "notLeft" (formula "16"))
                                                      (rule "notLeft" (formula "15"))
                                                      (rule "eqSymm" (formula "73"))
                                                      (rule "eqSymm" (formula "72"))
                                                      (rule "unionEqualsEmpty" (formula "13"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "notLeft" (formula "13"))
                                                      (rule "notLeft" (formula "13"))
                                                      (rule "eqSymm" (formula "72"))
                                                      (rule "eqSymm" (formula "71"))
                                                      (rule "unionEqualsEmpty" (formula "13"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "notLeft" (formula "13"))
                                                      (rule "eqSymm" (formula "71"))
                                                      (rule "eqSymm" (formula "70"))
                                                      (rule "unionEqualsEmpty" (formula "23"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "andLeft" (formula "23"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "notLeft" (formula "23"))
                                                      (rule "eqSymm" (formula "70"))
                                                      (rule "eqSymm" (formula "69"))
                                                      (rule "unionEqualsEmpty" (formula "23"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "andLeft" (formula "23"))
                                                      (rule "notLeft" (formula "23"))
                                                      (rule "notLeft" (formula "23"))
                                                      (rule "eqSymm" (formula "69"))
                                                      (rule "eqSymm" (formula "68"))
                                                      (rule "unionEqualsEmpty" (formula "22"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "notLeft" (formula "23"))
                                                      (rule "notLeft" (formula "22"))
                                                      (rule "eqSymm" (formula "68"))
                                                      (rule "eqSymm" (formula "67"))
                                                      (rule "unionEqualsEmpty" (formula "21"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "andLeft" (formula "21"))
                                                      (rule "notLeft" (formula "21"))
                                                      (rule "notLeft" (formula "21"))
                                                      (rule "eqSymm" (formula "67"))
                                                      (rule "eqSymm" (formula "66"))
                                                      (rule "unionEqualsEmpty" (formula "22"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "notLeft" (formula "22"))
                                                      (rule "notLeft" (formula "22"))
                                                      (rule "eqSymm" (formula "66"))
                                                      (rule "eqSymm" (formula "65"))
                                                      (rule "sortsDisjointModuloNull" (formula "66"))
                                                      (rule "replace_known_right" (formula "66") (term "0") (ifseqformula "113"))
                                                       (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "123")))
                                                      (rule "false_right" (formula "66"))
                                                      (rule "sortsDisjointModuloNull" (formula "65"))
                                                      (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "113"))
                                                       (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "122")))
                                                      (rule "false_right" (formula "65"))
                                                      (rule "unionEqualsEmpty" (formula "21"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "andLeft" (formula "21"))
                                                      (rule "notLeft" (formula "21"))
                                                      (rule "notLeft" (formula "21"))
                                                      (rule "eqSymm" (formula "65"))
                                                      (rule "eqSymm" (formula "64"))
                                                      (rule "sortsDisjointModuloNull" (formula "65"))
                                                      (rule "replace_known_right" (formula "65") (term "1") (ifseqformula "122"))
                                                       (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "110")))
                                                      (rule "false_right" (formula "65"))
                                                      (rule "sortsDisjointModuloNull" (formula "64"))
                                                      (rule "replace_known_right" (formula "64") (term "1") (ifseqformula "121"))
                                                       (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "110")))
                                                      (rule "false_right" (formula "64"))
                                                      (rule "unionEqualsEmpty" (formula "22"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "notLeft" (formula "22"))
                                                      (rule "notLeft" (formula "22"))
                                                      (rule "eqSymm" (formula "64"))
                                                      (rule "eqSymm" (formula "63"))
                                                      (rule "sortsDisjointModuloNull" (formula "64"))
                                                      (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "115"))
                                                       (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "121")))
                                                      (rule "false_right" (formula "64"))
                                                      (rule "sortsDisjointModuloNull" (formula "63"))
                                                      (rule "replace_known_right" (formula "63") (term "1") (ifseqformula "120"))
                                                       (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "115")))
                                                      (rule "false_right" (formula "63"))
                                                      (rule "unionEqualsEmpty" (formula "21"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "andLeft" (formula "21"))
                                                      (rule "notLeft" (formula "21"))
                                                      (rule "notLeft" (formula "21"))
                                                      (rule "eqSymm" (formula "63"))
                                                      (rule "eqSymm" (formula "62"))
                                                      (rule "sortsDisjointModuloNull" (formula "63"))
                                                      (rule "replace_known_right" (formula "63") (term "0") (ifseqformula "112"))
                                                       (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "120")))
                                                      (rule "false_right" (formula "63"))
                                                      (rule "sortsDisjointModuloNull" (formula "62"))
                                                      (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "119"))
                                                       (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "112")))
                                                      (rule "false_right" (formula "62"))
                                                      (rule "commuteUnion_2" (formula "42") (term "0,1"))
                                                      (rule "commuteUnion" (formula "42") (term "1,1,1"))
                                                      (rule "commuteUnion_2" (formula "22") (term "0,1,0,1,0"))
                                                      (rule "commuteUnion" (formula "22") (term "1,1,1,0,1,0"))
                                                      (rule "commuteUnion" (formula "50") (term "0,0,0,1,0,0"))
                                                      (rule "commuteUnion" (formula "50") (term "1,1,0,1,0,0"))
                                                      (rule "commuteUnion" (formula "54") (term "0,0,1,0,0"))
                                                      (rule "commuteUnion" (formula "54") (term "1,1,0,1,0,0"))
                                                      (rule "commuteUnion" (formula "54") (term "0,0,0,1,0"))
                                                      (rule "commuteUnion" (formula "54") (term "1,1,0,1,0"))
                                                      (rule "commuteUnion" (formula "48") (term "0,0,0,1,0,0"))
                                                      (rule "commuteUnion" (formula "48") (term "1,1,0,1,0,0"))
                                                      (rule "commuteUnion_2" (formula "49") (term "0,0,1,0,0"))
                                                      (rule "commuteUnion" (formula "49") (term "1,1,0,1,0,0"))
                                                      (rule "commuteUnion_2" (formula "46") (term "0,0,1,0,2,0"))
                                                      (rule "commuteUnion" (formula "46") (term "1,1,0,1,0,2,0"))
                                                      (rule "commuteUnion" (formula "47") (term "0,0,0,1,0,0"))
                                                      (rule "commuteUnion" (formula "47") (term "1,1,0,1,0,0"))
                                                      (rule "commuteUnion" (formula "56") (term "0,0,0,1,0,2,1"))
                                                      (rule "commuteUnion" (formula "56") (term "1,1,0,1,0,2,1"))
                                                      (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "12"))
                                                       (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "106")) (ifInst ""  (formula "107")) (ifInst ""  (formula "108")) (ifInst ""  (formula "109")) (ifInst ""  (formula "110")) (ifInst ""  (formula "111")) (ifInst ""  (formula "112")) (ifInst ""  (formula "113")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                                      (rule "translateJavaMulInt" (formula "12") (term "1,0,0,0"))
                                                      (rule "translateJavaMulInt" (formula "12") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "disjointDefinition" (formula "40"))
                                                       (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "133")))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "disjointDefinition" (formula "39"))
                                                       (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "131")))
                                                      (rule "true_left" (formula "39"))
                                                      (rule "disjointDefinition" (formula "38"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "notLeft" (formula "38"))
                                                      (rule "eqSymm" (formula "87"))
                                                      (rule "disjointDefinition" (formula "37"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "notLeft" (formula "37"))
                                                      (rule "eqSymm" (formula "86"))
                                                      (rule "disjointDefinition" (formula "36"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "notLeft" (formula "36"))
                                                      (rule "eqSymm" (formula "85"))
                                                      (rule "disjointDefinition" (formula "35"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "notLeft" (formula "35"))
                                                      (rule "eqSymm" (formula "84"))
                                                      (rule "disjointDefinition" (formula "34"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "notLeft" (formula "34"))
                                                      (rule "eqSymm" (formula "83"))
                                                      (rule "disjointDefinition" (formula "33"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "notLeft" (formula "33"))
                                                      (rule "eqSymm" (formula "82"))
                                                      (rule "disjointDefinition" (formula "32"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "notLeft" (formula "32"))
                                                      (rule "eqSymm" (formula "81"))
                                                      (rule "disjointDefinition" (formula "31"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "notLeft" (formula "31"))
                                                      (rule "eqSymm" (formula "80"))
                                                      (rule "disjointDefinition" (formula "30"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "notLeft" (formula "30"))
                                                      (rule "eqSymm" (formula "79"))
                                                      (rule "disjointDefinition" (formula "29"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "notLeft" (formula "29"))
                                                      (rule "eqSymm" (formula "78"))
                                                      (rule "disjointDefinition" (formula "28"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "notLeft" (formula "28"))
                                                      (rule "eqSymm" (formula "77"))
                                                      (rule "disjointDefinition" (formula "27"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "notLeft" (formula "27"))
                                                      (rule "eqSymm" (formula "76"))
                                                      (rule "disjointDefinition" (formula "26"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "notLeft" (formula "26"))
                                                      (rule "eqSymm" (formula "75"))
                                                      (rule "disjointDefinition" (formula "25"))
                                                       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "103")))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "disjointDefinition" (formula "24"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "eqSymm" (formula "73"))
                                                      (rule "disjointDefinition" (formula "23"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "notLeft" (formula "23"))
                                                      (rule "eqSymm" (formula "72"))
                                                      (rule "disjointDefinition" (formula "22"))
                                                       (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "97")))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "disjointDefinition" (formula "21"))
                                                       (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "95")))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "disjointDefinition" (formula "20"))
                                                       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "93")))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "disjointDefinition" (formula "19"))
                                                       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "91")))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "disjointDefinition" (formula "18"))
                                                       (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "89")))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "disjointDefinition" (formula "17"))
                                                       (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "87")))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "disjointDefinition" (formula "16"))
                                                       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "85")))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "disjointDefinition" (formula "15"))
                                                       (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "83")))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "disjointDefinition" (formula "13"))
                                                       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "80")))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "disjointDefinition" (formula "13"))
                                                       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "80")))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "applyEq" (formula "12") (term "0") (ifseqformula "42"))
                                                      (rule "eqSymm" (formula "12"))
                                                      (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "61"))
                                                       (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "106")) (ifInst ""  (formula "107")) (ifInst ""  (formula "108")) (ifInst ""  (formula "109")) (ifInst ""  (formula "110")) (ifInst ""  (formula "111")) (ifInst ""  (formula "112")) (ifInst ""  (formula "113")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                                      (rule "translateJavaMulInt" (formula "61") (term "1,1,0,0"))
                                                      (rule "translateJavaMulInt" (formula "61") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "61") (term "1,0,0,0"))
                                                      (rule "andLeft" (formula "61"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "61"))
                                                      (rule "andLeft" (formula "63"))
                                                      (rule "andLeft" (formula "61"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "disjointDefinition" (formula "89"))
                                                       (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "133")))
                                                      (rule "true_left" (formula "89"))
                                                      (rule "disjointDefinition" (formula "88"))
                                                       (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "131")))
                                                      (rule "true_left" (formula "88"))
                                                      (rule "disjointDefinition" (formula "87"))
                                                       (builtin "One Step Simplification" (formula "87"))
                                                      (rule "notLeft" (formula "87"))
                                                      (rule "eqSymm" (formula "87"))
                                                      (rule "disjointDefinition" (formula "86"))
                                                       (builtin "One Step Simplification" (formula "86"))
                                                      (rule "notLeft" (formula "86"))
                                                      (rule "eqSymm" (formula "86"))
                                                      (rule "disjointDefinition" (formula "85"))
                                                       (builtin "One Step Simplification" (formula "85"))
                                                      (rule "notLeft" (formula "85"))
                                                      (rule "eqSymm" (formula "85"))
                                                      (rule "disjointDefinition" (formula "84"))
                                                       (builtin "One Step Simplification" (formula "84"))
                                                      (rule "notLeft" (formula "84"))
                                                      (rule "eqSymm" (formula "84"))
                                                      (rule "disjointDefinition" (formula "83"))
                                                       (builtin "One Step Simplification" (formula "83"))
                                                      (rule "notLeft" (formula "83"))
                                                      (rule "eqSymm" (formula "83"))
                                                      (rule "disjointDefinition" (formula "82"))
                                                       (builtin "One Step Simplification" (formula "82"))
                                                      (rule "notLeft" (formula "82"))
                                                      (rule "eqSymm" (formula "82"))
                                                      (rule "disjointDefinition" (formula "81"))
                                                       (builtin "One Step Simplification" (formula "81"))
                                                      (rule "notLeft" (formula "81"))
                                                      (rule "eqSymm" (formula "81"))
                                                      (rule "disjointDefinition" (formula "80"))
                                                       (builtin "One Step Simplification" (formula "80"))
                                                      (rule "notLeft" (formula "80"))
                                                      (rule "eqSymm" (formula "80"))
                                                      (rule "disjointDefinition" (formula "79"))
                                                       (builtin "One Step Simplification" (formula "79"))
                                                      (rule "notLeft" (formula "79"))
                                                      (rule "eqSymm" (formula "79"))
                                                      (rule "disjointDefinition" (formula "78"))
                                                       (builtin "One Step Simplification" (formula "78"))
                                                      (rule "notLeft" (formula "78"))
                                                      (rule "eqSymm" (formula "78"))
                                                      (rule "disjointDefinition" (formula "77"))
                                                       (builtin "One Step Simplification" (formula "77"))
                                                      (rule "notLeft" (formula "77"))
                                                      (rule "eqSymm" (formula "77"))
                                                      (rule "disjointDefinition" (formula "76"))
                                                       (builtin "One Step Simplification" (formula "76"))
                                                      (rule "notLeft" (formula "76"))
                                                      (rule "eqSymm" (formula "76"))
                                                      (rule "disjointDefinition" (formula "75"))
                                                       (builtin "One Step Simplification" (formula "75"))
                                                      (rule "notLeft" (formula "75"))
                                                      (rule "eqSymm" (formula "75"))
                                                      (rule "disjointDefinition" (formula "74"))
                                                       (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "103")))
                                                      (rule "true_left" (formula "74"))
                                                      (rule "disjointDefinition" (formula "73"))
                                                       (builtin "One Step Simplification" (formula "73"))
                                                      (rule "notLeft" (formula "73"))
                                                      (rule "eqSymm" (formula "73"))
                                                      (rule "disjointDefinition" (formula "72"))
                                                       (builtin "One Step Simplification" (formula "72"))
                                                      (rule "notLeft" (formula "72"))
                                                      (rule "eqSymm" (formula "72"))
                                                      (rule "disjointDefinition" (formula "71"))
                                                       (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "97")))
                                                      (rule "true_left" (formula "71"))
                                                      (rule "disjointDefinition" (formula "70"))
                                                       (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "95")))
                                                      (rule "true_left" (formula "70"))
                                                      (rule "disjointDefinition" (formula "69"))
                                                       (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "93")))
                                                      (rule "true_left" (formula "69"))
                                                      (rule "disjointDefinition" (formula "68"))
                                                       (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "91")))
                                                      (rule "true_left" (formula "68"))
                                                      (rule "disjointDefinition" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "89")))
                                                      (rule "true_left" (formula "67"))
                                                      (rule "disjointDefinition" (formula "66"))
                                                       (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "87")))
                                                      (rule "true_left" (formula "66"))
                                                      (rule "disjointDefinition" (formula "65"))
                                                       (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "85")))
                                                      (rule "true_left" (formula "65"))
                                                      (rule "disjointDefinition" (formula "64"))
                                                       (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "83")))
                                                      (rule "true_left" (formula "64"))
                                                      (rule "disjointDefinition" (formula "62"))
                                                       (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "80")))
                                                      (rule "true_left" (formula "62"))
                                                      (rule "disjointDefinition" (formula "62"))
                                                       (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "80")))
                                                      (rule "true_left" (formula "62"))
                                                      (rule "applyEq" (formula "42") (term "0") (ifseqformula "61"))
                                                      (rule "applyEq" (formula "60") (term "1") (ifseqformula "12"))
                                                      (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                                      (rule "commuteUnion" (formula "22") (term "0,0,1,0,1,0"))
                                                      (rule "commuteUnion" (formula "49") (term "0,0,1,0,0"))
                                                      (rule "commuteUnion" (formula "53") (term "1,0,0,1,0,0"))
                                                      (rule "commuteUnion" (formula "53") (term "0,0,1,0"))
                                                      (rule "commuteUnion" (formula "47") (term "0,0,1,0,0"))
                                                      (rule "commuteUnion" (formula "48") (term "0,0,0,1,0,0"))
                                                      (rule "commuteUnion" (formula "45") (term "0,0,0,1,0,2,0"))
                                                      (rule "commuteUnion" (formula "46") (term "0,0,1,0,0"))
                                                      (rule "commuteUnion" (formula "55") (term "0,0,1,0,2,1"))
                                                      (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "27") (term "0") (inst "b=b_3"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "translateJavaAddInt" (formula "27") (term "0,2,5,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "27") (term "0,2,5,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                      (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "28") (term "0") (inst "b=b_3"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "translateJavaAddInt" (formula "28") (term "0,2,5,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "0,2,5,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                                      (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "33") (term "0") (inst "b=b_3"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "translateJavaAddInt" (formula "33") (term "0,2,0,0,1,0"))
                                                      (rule "translateJavaSubInt" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_elimSub" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "0,2,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,0,0,1,1,0"))
                                                      (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "32") (term "0") (inst "b=b_3"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "translateJavaMod" (formula "32") (term "0,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "32") (term "2,0,1,0"))
                                                      (rule "translateJavaAddInt" (formula "32") (term "3,0,1,0"))
                                                      (rule "translateJavaAddInt" (formula "32") (term "0,2,1,3,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "0,2,1,3,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,0"))
                                                      (rule "jmod_axiom" (formula "32") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0"))
                                                      (rule "polySimp_homoEq" (formula "32") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,1,0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "32") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                                      (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "57") (term "0") (inst "b=b_3"))
                                                       (builtin "One Step Simplification" (formula "57"))
                                                      (rule "translateJavaAddInt" (formula "57") (term "0,2,5,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "57") (term "0,2,5,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "57") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,1,0,0"))
                                                      (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "translateJavaAddInt" (formula "26") (term "0,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "26") (term "3,0,1,0"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "3,0"))
                                                      (rule "polySimp_addComm0" (formula "27") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "26"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27"))
                                                      (rule "applyEq" (formula "27") (term "0") (ifseqformula "16"))
                                                      (rule "inEqSimp_homoInEq1" (formula "27"))
                                                      (rule "mul_literals" (formula "27") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                      (rule "add_literals" (formula "27") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                                      (rule "mul_literals" (formula "27") (term "1"))
                                                      (rule "elimGcdLeq_antec" (formula "27") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(6(5(2(#))))"))
                                                      (rule "neg_literal" (formula "27") (term "0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "27") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "27") (term "0,0,0,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0,0"))
                                                      (rule "qeq_literals" (formula "27") (term "0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "elimGcdGeq_antec" (formula "26") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "26") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "26") (term "0,0,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0"))
                                                      (rule "leq_literals" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "22"))
                                                       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "120")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,0,0") (ifseqformula "14"))
                                                      (rule "replace_known_left" (formula "29") (term "1,0,1,0,0") (ifseqformula "15"))
                                                       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "119")))
                                                      (rule "applyEqRigid" (formula "29") (term "1") (ifseqformula "30"))
                                                      (rule "ifEqualsInteger" (formula "29"))
                                                      (rule "elementOfUnion" (formula "29") (term "0,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "29") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "29") (term "0,0,1,0,0"))
                                                      (rule "replace_known_right" (formula "29") (term "0,0,1,0,0") (ifseqformula "118"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "elementOfUnion" (formula "29") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "elementOfUnion" (formula "29") (term "0,0,1"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "29") (term "1,0,0,1"))
                                                      (rule "eqSymm" (formula "29") (term "0,0,1,0,0,1"))
                                                      (rule "replace_known_right" (formula "29") (term "0,0,1,0,0,1") (ifseqformula "118"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "elementOfUnion" (formula "29") (term "0,0,1"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "27"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "61") (term "0") (inst "b=b_3"))
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "translateJavaAddInt" (formula "61") (term "3,0,1,0"))
                                                      (rule "translateJavaAddInt" (formula "61") (term "2,0,1,0"))
                                                      (rule "translateJavaAddInt" (formula "61") (term "0,2,1,3,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "61") (term "0,2,1,3,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "61") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "61") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0"))
                                                      (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "63") (term "0") (inst "b=b_3"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "translateJavaAddInt" (formula "63") (term "0,2,5,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "63") (term "0,2,5,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "63") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "63") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "63") (term "0,1,1,0,0"))
                                                      (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "64") (term "0") (inst "b=b_3"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "translateJavaAddInt" (formula "64") (term "0,2,1,3,0,1,0"))
                                                      (rule "translateJavaAddInt" (formula "64") (term "2,0,1,0"))
                                                      (rule "translateJavaMod" (formula "64") (term "0,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "64") (term "3,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "64") (term "0,2,1,3,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "64") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "64") (term "0,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0,0"))
                                                      (rule "jmod_axiom" (formula "64") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,0"))
                                                      (rule "polySimp_homoEq" (formula "64") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "64") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "64") (term "0,1,0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "64") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "64") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "64") (term "0,1,1,0,0,0"))
                                                      (rule "commuteUnion" (formula "13") (term "1,1,0"))
                                                      (rule "commuteUnion" (formula "13") (term "0,0"))
                                                      (rule "eqSymm" (formula "13"))
                                                      (rule "applyEq" (formula "65") (term "1") (ifseqformula "13"))
                                                      (rule "commuteUnion_2" (formula "23") (term "0,1,0,1,0"))
                                                      (rule "commuteUnion_2" (formula "53") (term "0,0,1,0,0"))
                                                      (rule "commuteUnion_2" (formula "50") (term "0,0,1,0,2,0"))
                                                      (rule "cut_direct" (formula "25") (term "0,0"))
                                                      (branch "CUT: result_22.<created> = TRUE TRUE"
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "jdiv_axiom" (formula "34") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "0,0,2,1"))
                                                         (rule "eqSymm" (formula "34"))
                                                         (rule "applyEq" (formula "34") (term "1") (ifseqformula "35"))
                                                         (rule "inEqSimp_subsumption6" (formula "34") (term "0,0") (ifseqformula "27"))
                                                         (rule "mul_literals" (formula "34") (term "1,1,0,0,0"))
                                                         (rule "greater_literals" (formula "34") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "leq_literals" (formula "34") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "polyDiv_pullOut" (formula "34") (term "0") (inst "polyDivCoeff=l_0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,2,0"))
                                                         (rule "equal_literals" (formula "34") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "polySimp_pullOutFactor0" (formula "34") (term "0,0,0"))
                                                         (rule "add_literals" (formula "34") (term "1,0,0,0"))
                                                         (rule "times_zero_1" (formula "34") (term "0,0,0"))
                                                         (rule "div_literals" (formula "34") (term "0,0"))
                                                         (rule "add_zero_left" (formula "34") (term "0"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "jdiv_axiom" (formula "55") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "55") (term "0,0,2,1"))
                                                         (rule "eqSymm" (formula "55"))
                                                         (rule "applyEqRigid" (formula "55") (term "1") (ifseqformula "56"))
                                                         (rule "inEqSimp_subsumption6" (formula "55") (term "0,0") (ifseqformula "49"))
                                                         (rule "greater_literals" (formula "55") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "times_zero_1" (formula "55") (term "1,0,0,0"))
                                                         (rule "leq_literals" (formula "55") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "polyDiv_pullOut" (formula "55") (term "0") (inst "polyDivCoeff=l_1"))
                                                         (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,2,0"))
                                                         (rule "equal_literals" (formula "55") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "polySimp_pullOutFactor0" (formula "55") (term "0,0,0"))
                                                         (rule "add_literals" (formula "55") (term "1,0,0,0"))
                                                         (rule "times_zero_1" (formula "55") (term "0,0,0"))
                                                         (rule "div_literals" (formula "55") (term "0,0"))
                                                         (rule "add_zero_left" (formula "55") (term "0"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "true_left" (formula "55"))
                                                         (rule "jdiv_axiom" (formula "124") (term "0"))
                                                         (rule "eqSymm" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0,2,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "50"))
                                                         (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                         (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "eqSymm" (formula "1"))
                                                         (rule "applyEq" (formula "125") (term "0") (ifseqformula "1"))
                                                         (rule "polyDiv_pullOut" (formula "125") (term "0") (inst "polyDivCoeff=l_1"))
                                                         (rule "equal_literals" (formula "125") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "125"))
                                                         (rule "polySimp_mulLiterals" (formula "125") (term "1,0,0,0"))
                                                         (rule "polySimp_homoEq" (formula "125"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "125") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "125") (term "1,1,0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "125") (term "1,0,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "125") (term "0,0,0,1,0"))
                                                         (rule "div_literals" (formula "125") (term "0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "125") (term "0"))
                                                         (rule "add_literals" (formula "125") (term "1,0"))
                                                         (rule "times_zero_1" (formula "125") (term "0"))
                                                          (builtin "One Step Simplification" (formula "125"))
                                                         (rule "closeTrue" (formula "125"))
                                                      )
                                                      (branch "CUT: result_22.<created> = TRUE FALSE"
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "jdiv_axiom" (formula "34") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "0,0,2,1"))
                                                         (rule "eqSymm" (formula "34"))
                                                         (rule "applyEq" (formula "34") (term "1") (ifseqformula "35"))
                                                         (rule "inEqSimp_subsumption6" (formula "34") (term "0,0") (ifseqformula "27"))
                                                         (rule "mul_literals" (formula "34") (term "1,1,0,0,0"))
                                                         (rule "greater_literals" (formula "34") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "leq_literals" (formula "34") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "polyDiv_pullOut" (formula "34") (term "0") (inst "polyDivCoeff=l_0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,2,0"))
                                                         (rule "equal_literals" (formula "34") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "polySimp_homoEq" (formula "34"))
                                                         (rule "polySimp_pullOutFactor0" (formula "34") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "34") (term "1,0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "34") (term "0,0,0,1,0"))
                                                         (rule "div_literals" (formula "34") (term "0,0,1,0"))
                                                         (rule "add_zero_left" (formula "34") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
                                                         (rule "add_literals" (formula "34") (term "1,0"))
                                                         (rule "times_zero_1" (formula "34") (term "0"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "jdiv_axiom" (formula "55") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "55") (term "0,0,2,1"))
                                                         (rule "eqSymm" (formula "55"))
                                                         (rule "applyEqRigid" (formula "55") (term "1") (ifseqformula "56"))
                                                         (rule "inEqSimp_subsumption6" (formula "55") (term "0,0") (ifseqformula "49"))
                                                         (rule "times_zero_1" (formula "55") (term "1,1,0,0,0"))
                                                         (rule "greater_literals" (formula "55") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "leq_literals" (formula "55") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "polyDiv_pullOut" (formula "55") (term "0") (inst "polyDivCoeff=l_1"))
                                                         (rule "equal_literals" (formula "55") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                                                         (rule "polySimp_homoEq" (formula "55"))
                                                         (rule "polySimp_pullOutFactor0" (formula "55") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "55") (term "1,0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "55") (term "0,0,0,1,0"))
                                                         (rule "div_literals" (formula "55") (term "0,0,1,0"))
                                                         (rule "add_zero_left" (formula "55") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "55") (term "0"))
                                                         (rule "add_literals" (formula "55") (term "1,0"))
                                                         (rule "times_zero_1" (formula "55") (term "0"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "true_left" (formula "55"))
                                                         (rule "jdiv_axiom" (formula "125") (term "0"))
                                                         (rule "eqSymm" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0,2,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "50"))
                                                         (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                         (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "eqSymm" (formula "1"))
                                                         (rule "applyEqRigid" (formula "126") (term "0") (ifseqformula "1"))
                                                         (rule "polyDiv_pullOut" (formula "126") (term "0") (inst "polyDivCoeff=l_1"))
                                                         (rule "equal_literals" (formula "126") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "126"))
                                                         (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "126") (term "0,0,0"))
                                                         (rule "add_literals" (formula "126") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "126") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "126") (term "0,0,0"))
                                                         (rule "div_literals" (formula "126") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "126"))
                                                         (rule "closeTrue" (formula "126"))
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
                                                   (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1"))
                                                   (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,1"))
                                                   (rule "narrowSelectArrayType" (formula "62") (term "2,1") (ifseqformula "2") (ifseqformula "61"))
                                                   (rule "seqPermTransRight" (formula "62") (ifseqformula "50") (ifseqformula "42"))
                                                   (rule "close" (formula "63") (ifseqformula "1"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "cut_direct" (formula "62") (term "0,1,0,0,0,7,0") (userinteraction))
                                                (branch "CUT: result_22.equal_buckets = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (userinteraction))
                                                   (rule "ifthenelse_split" (formula "63") (term "7,0") (userinteraction))
                                                   (branch "1 + bucket_0 + 1 < result_22.num_buckets TRUE"
                                                      (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "53") (term "0") (inst "b=b_3") (userinteraction))
                                                       (builtin "One Step Simplification" (formula "53") (userinteraction))
                                                      (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "64") (term "0") (inst "b=b_3") (userinteraction))
                                                       (builtin "One Step Simplification" (formula "64") (userinteraction))
                                                      (rule "allRight" (formula "64") (inst "sk=b_3_0") (userinteraction))
                                                      (rule "instAll" (formula "64") (term "1,0,0") (ifseqformula "53") (userinteraction))
                                                      (rule "impRight" (formula "65"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "impLeft" (formula "3") (userinteraction))
                                                      (branch "Case 1"
                                                         (rule "eqTermCut" (formula "2") (term "0,1") (inst "s=b_3_0") (userinteraction))
                                                         (branch "Assume 1 + bucket_0 = b_3_0"
                                                            (rule "replace_known_left" (formula "59") (term "0") (ifseqformula "5") (userinteraction))
                                                             (builtin "One Step Simplification" (formula "59") (userinteraction))
                                                            (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "59") (term "0") (inst "b=b_3") (userinteraction))
                                                             (builtin "One Step Simplification" (formula "59") (userinteraction))
                                                            (rule "instAll" (formula "68") (term "0,2,1,2,0") (ifseqformula "59") (userinteraction))
                                                            (rule "Definition_axiom_for_isEqualityBucket_in_de_wiesler_Sorter" (formula "1") (term "0,1") (inst "i=i") (userinteraction))
                                                             (builtin "One Step Simplification" (formula "1") (userinteraction))
                                                            (rule "impLeft" (formula "1") (userinteraction))
                                                            (branch "Case 1"
                                                               (rule "andRight" (formula "61"))
                                                               (branch
                                                                  (rule "andRight" (formula "61"))
                                                                  (branch
                                                                     (rule "translateJavaMod" (formula "59") (term "0,1,0,0"))
                                                                     (rule "translateJavaAddInt" (formula "59") (term "2,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "69") (term "2,0"))
                                                                     (rule "translateJavaAddInt" (formula "69") (term "3,0"))
                                                                     (rule "translateJavaAddInt" (formula "59") (term "3,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "56") (term "2,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "56") (term "3,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "69") (term "0,2,1,3,0"))
                                                                     (rule "translateJavaAddInt" (formula "59") (term "0,2,1,3,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "56") (term "0,2,1,3,0,1,0"))
                                                                     (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "5"))
                                                                      (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "replace_known_left" (formula "51") (term "0") (ifseqformula "5"))
                                                                      (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "andLeft" (formula "51"))
                                                                     (rule "notLeft" (formula "52"))
                                                                     (rule "andLeft" (formula "51"))
                                                                     (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "5"))
                                                                      (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "52")))
                                                                     (rule "true_left" (formula "46"))
                                                                     (rule "replace_known_left" (formula "63") (term "0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "63"))
                                                                     (rule "polySimp_homoEq" (formula "2"))
                                                                     (rule "polySimp_homoEq" (formula "61"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                     (rule "add_literals" (formula "4") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                     (rule "add_literals" (formula "3") (term "0,1"))
                                                                     (rule "polySimp_addComm0" (formula "70") (term "0,2,1,3,0"))
                                                                     (rule "polySimp_addComm0" (formula "59") (term "0,2,1,3,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "56") (term "0,2,1,3,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                                                     (rule "mul_literals" (formula "61") (term "0,1,0"))
                                                                     (rule "inEqSimp_leqRight" (formula "62"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "60") (term "0,1,0,0,1,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "16"))
                                                                     (rule "mul_literals" (formula "16") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "16") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "62") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                     (rule "inEqSimp_ltRight" (formula "63"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0,0"))
                                                                     (rule "add_literals" (formula "61") (term "0,0,0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0"))
                                                                     (rule "add_literals" (formula "58") (term "0,0,0,1,0,0"))
                                                                     (rule "add_zero_left" (formula "58") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "5"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "3"))
                                                                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                     (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                     (rule "add_literals" (formula "5") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "18"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "18") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                     (rule "jmod_axiom" (formula "39") (term "0"))
                                                                     (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                                                                     (rule "jmod_axiom" (formula "61") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "61") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_homoEq" (formula "61") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "61") (term "0,1,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "61") (term "0,1,0,0"))
                                                                     (rule "jmod_axiom" (formula "53") (term "0"))
                                                                     (rule "polySimp_mulLiterals" (formula "53") (term "1,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "4"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                     (rule "applyEqRigid" (formula "5") (term "0,1,0") (ifseqformula "4"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                                     (rule "add_literals" (formula "5") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "5") (term "0"))
                                                                     (rule "leq_literals" (formula "5"))
                                                                     (rule "true_left" (formula "5"))
                                                                     (rule "applyEqRigid" (formula "60") (term "1,1,0,0,0,0") (ifseqformula "4"))
                                                                     (rule "polySimp_addAssoc" (formula "60") (term "1,0,0,0,0"))
                                                                     (rule "add_literals" (formula "60") (term "0,1,0,0,0,0"))
                                                                     (rule "add_zero_left" (formula "60") (term "1,0,0,0,0"))
                                                                     (rule "applyEq" (formula "45") (term "0") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "48") (term "7,0") (ifseqformula "4"))
                                                                     (rule "applyEqRigid" (formula "51") (term "1,6,0") (ifseqformula "4"))
                                                                     (rule "polySimp_addAssoc" (formula "51") (term "6,0"))
                                                                     (rule "add_literals" (formula "51") (term "0,6,0"))
                                                                     (rule "add_zero_left" (formula "51") (term "6,0"))
                                                                     (rule "applyEqRigid" (formula "50") (term "6,0") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "46") (term "1") (ifseqformula "4"))
                                                                     (rule "applyEqRigid" (formula "59") (term "1,6,0") (ifseqformula "4"))
                                                                     (rule "polySimp_addAssoc" (formula "59") (term "6,0"))
                                                                     (rule "add_literals" (formula "59") (term "0,6,0"))
                                                                     (rule "add_zero_left" (formula "59") (term "6,0"))
                                                                     (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "4"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                                     (rule "add_literals" (formula "1") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "0"))
                                                                     (rule "qeq_literals" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "1") (term "0"))
                                                                     (rule "qeq_literals" (formula "1"))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                                  (branch
                                                                     (rule "translateJavaMod" (formula "59") (term "0,1,0,0"))
                                                                     (rule "translateJavaAddInt" (formula "59") (term "2,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "69") (term "2,0"))
                                                                     (rule "translateJavaAddInt" (formula "69") (term "3,0"))
                                                                     (rule "translateJavaAddInt" (formula "59") (term "3,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "56") (term "2,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "56") (term "3,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "69") (term "0,2,1,3,0"))
                                                                     (rule "translateJavaAddInt" (formula "59") (term "0,2,1,3,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "56") (term "0,2,1,3,0,1,0"))
                                                                     (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "5"))
                                                                      (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "replace_known_left" (formula "62") (term "0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "replace_known_left" (formula "51") (term "0") (ifseqformula "5"))
                                                                      (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "andLeft" (formula "51"))
                                                                     (rule "notLeft" (formula "52"))
                                                                     (rule "andLeft" (formula "51"))
                                                                     (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "5"))
                                                                      (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "52")))
                                                                     (rule "true_left" (formula "46"))
                                                                     (rule "polySimp_homoEq" (formula "2"))
                                                                     (rule "polySimp_homoEq" (formula "61"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                     (rule "add_literals" (formula "3") (term "0,1"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                     (rule "add_literals" (formula "4") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "70") (term "0,2,1,3,0"))
                                                                     (rule "polySimp_addComm0" (formula "59") (term "0,2,1,3,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "56") (term "0,2,1,3,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                                                     (rule "mul_literals" (formula "61") (term "0,1,0"))
                                                                     (rule "inEqSimp_ltRight" (formula "62"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "60") (term "0,1,0,0,1,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "16"))
                                                                     (rule "mul_literals" (formula "16") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "16") (term "0,0"))
                                                                     (rule "inEqSimp_ltRight" (formula "63"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "63") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0,0"))
                                                                     (rule "add_literals" (formula "61") (term "0,0,0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0"))
                                                                     (rule "add_literals" (formula "58") (term "0,0,0,1,0,0"))
                                                                     (rule "add_zero_left" (formula "58") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "5"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "3"))
                                                                     (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                     (rule "add_literals" (formula "5") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                     (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "18"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "18") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                     (rule "jmod_axiom" (formula "39") (term "0"))
                                                                     (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                                                                     (rule "jmod_axiom" (formula "61") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "61") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_homoEq" (formula "61") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "61") (term "0,1,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "61") (term "0,1,0,0"))
                                                                     (rule "jmod_axiom" (formula "53") (term "0"))
                                                                     (rule "polySimp_mulLiterals" (formula "53") (term "1,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "4"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                     (rule "applyEqRigid" (formula "53") (term "0,0,1,0") (ifseqformula "4"))
                                                                     (rule "polySimp_addComm0" (formula "53") (term "0"))
                                                                     (rule "applyEq" (formula "49") (term "7,0") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "47") (term "1") (ifseqformula "4"))
                                                                     (rule "applyEqRigid" (formula "51") (term "6,0") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "4"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                                     (rule "add_literals" (formula "1") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "0"))
                                                                     (rule "qeq_literals" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "applyEq" (formula "59") (term "1,6,0") (ifseqformula "3"))
                                                                     (rule "polySimp_addAssoc" (formula "59") (term "6,0"))
                                                                     (rule "add_literals" (formula "59") (term "0,6,0"))
                                                                     (rule "add_zero_left" (formula "59") (term "6,0"))
                                                                     (rule "applyEqRigid" (formula "51") (term "1,6,0") (ifseqformula "3"))
                                                                     (rule "polySimp_addAssoc" (formula "51") (term "6,0"))
                                                                     (rule "add_literals" (formula "51") (term "0,6,0"))
                                                                     (rule "add_zero_left" (formula "51") (term "6,0"))
                                                                     (rule "applyEq" (formula "45") (term "0") (ifseqformula "3"))
                                                                     (rule "applyEqRigid" (formula "60") (term "1,1,0,0,0,0") (ifseqformula "3"))
                                                                     (rule "polySimp_addAssoc" (formula "60") (term "1,0,0,0,0"))
                                                                     (rule "add_literals" (formula "60") (term "0,1,0,0,0,0"))
                                                                     (rule "add_zero_left" (formula "60") (term "1,0,0,0,0"))
                                                                     (rule "applyEqRigid" (formula "4") (term "0,1,0") (ifseqformula "3"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                                     (rule "add_literals" (formula "4") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "4") (term "0"))
                                                                     (rule "leq_literals" (formula "4"))
                                                                     (rule "true_left" (formula "4"))
                                                                     (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "3"))
                                                                     (rule "polySimp_addComm0" (formula "51") (term "0"))
                                                                     (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                     (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "6") (term "0,0"))
                                                                     (rule "applyEqRigid" (formula "61") (term "1,0,0") (ifseqformula "3"))
                                                                     (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
                                                                     (rule "add_literals" (formula "61") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "61") (term "0,0"))
                                                                     (rule "applyEqRigid" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                     (rule "add_literals" (formula "4") (term "0,0,0"))
                                                                     (rule "applyEqRigid" (formula "56") (term "0,0,0,1,0,0") (ifseqformula "3"))
                                                                     (rule "polySimp_mulComm0" (formula "56") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "56") (term "0,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "56") (term "0,0,0,1,0,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "37"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "59") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "59") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "51"))
                                                                     (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "61"))
                                                                     (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "61") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                     (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                     (rule "mul_literals" (formula "15") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                                     (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                                     (rule "mul_literals" (formula "44") (term "1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "56") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0"))
                                                                     (rule "inEqSimp_contradEq7" (formula "61") (ifseqformula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0"))
                                                                     (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "61") (term "0,0"))
                                                                     (rule "leq_literals" (formula "61") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "false_right" (formula "61"))
                                                                     (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "44"))
                                                                     (rule "leq_literals" (formula "2") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "true_left" (formula "2"))
                                                                     (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "14"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                                                     (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "11") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "11") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "true_left" (formula "11"))
                                                                     (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "3"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "43") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "43") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                                                     (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "43") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "43") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "43"))
                                                                     (rule "true_left" (formula "43"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                                                     (rule "andLeft" (formula "3"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                     (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                                     (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                                     (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "3") (term "0"))
                                                                     (rule "leq_literals" (formula "3"))
                                                                     (rule "closeFalse" (formula "3"))
                                                                  )
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "applyEqReverse" (formula "61") (term "0,0") (ifseqformula "2") (userinteraction))
                                                                  (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "5") (userinteraction))
                                                                   (builtin "One Step Simplification" (formula "46") (userinteraction))
                                                                  (rule "translateJavaMod" (formula "61") (term "0") (userinteraction))
                                                                  (rule "jmod_axiom" (formula "61") (term "0") (userinteraction))
                                                                  (rule "jmod_axiom" (formula "46") (term "0") (userinteraction))
                                                                  (rule "translateJavaAddInt" (formula "56") (term "3,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "56") (term "2,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "59") (term "3,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "59") (term "2,0,1,0"))
                                                                  (rule "translateJavaMod" (formula "59") (term "0,1,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "69") (term "3,0"))
                                                                  (rule "translateJavaAddInt" (formula "69") (term "2,0"))
                                                                  (rule "translateJavaAddInt" (formula "56") (term "0,2,1,3,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "59") (term "0,2,1,3,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "69") (term "0,2,1,3,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "61") (term "1,0"))
                                                                  (rule "replace_known_left" (formula "62") (term "0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "5"))
                                                                   (builtin "One Step Simplification" (formula "39"))
                                                                  (rule "replace_known_left" (formula "51") (term "0") (ifseqformula "5"))
                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "andLeft" (formula "51"))
                                                                  (rule "andLeft" (formula "51"))
                                                                  (rule "notLeft" (formula "53"))
                                                                  (rule "polySimp_homoEq" (formula "2"))
                                                                  (rule "polySimp_homoEq" (formula "63"))
                                                                  (rule "polySimp_homoEq" (formula "62"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "63") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "62") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                  (rule "add_literals" (formula "3") (term "0,1"))
                                                                  (rule "polySimp_addComm0" (formula "57") (term "0,2,1,3,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "60") (term "0,2,1,3,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "71") (term "0,2,1,3,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "63") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "62") (term "1,0"))
                                                                  (rule "mul_literals" (formula "62") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "63") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "63") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "15"))
                                                                  (rule "mul_literals" (formula "15") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "60") (term "0,1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_ltRight" (formula "64"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "63") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "58") (term "0,0,0,1,0,0"))
                                                                  (rule "add_zero_left" (formula "58") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "61") (term "0,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "4"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                                                                  (rule "add_literals" (formula "64") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "64") (term "0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "2"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "17"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "17") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                                  (rule "jmod_axiom" (formula "38") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "1,0"))
                                                                  (rule "jmod_axiom" (formula "61") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "61") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_homoEq" (formula "61") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "61") (term "0,1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "61") (term "0,1,0,0"))
                                                                  (rule "jmod_axiom" (formula "53") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "47"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                  (rule "applyEqRigid" (formula "49") (term "7,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "52") (term "1,6,0") (ifseqformula "3"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "6,0"))
                                                                  (rule "add_literals" (formula "52") (term "0,6,0"))
                                                                  (rule "add_zero_left" (formula "52") (term "6,0"))
                                                                  (rule "applyEq" (formula "45") (term "0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "3"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                                  (rule "add_literals" (formula "1") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "0"))
                                                                  (rule "qeq_literals" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "applyEqRigid" (formula "50") (term "6,0") (ifseqformula "2"))
                                                                  (rule "applyEqRigid" (formula "46") (term "0,0,0") (ifseqformula "2"))
                                                                  (rule "eqSymm" (formula "46"))
                                                                  (rule "applyEqRigid" (formula "62") (term "1,0,0,1,0") (ifseqformula "2"))
                                                                  (rule "polySimp_addComm0" (formula "62") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "62") (term "0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "62") (term "0,0,0,0"))
                                                                  (rule "applyEq" (formula "58") (term "1,6,0") (ifseqformula "2"))
                                                                  (rule "polySimp_addAssoc" (formula "58") (term "6,0"))
                                                                  (rule "add_literals" (formula "58") (term "0,6,0"))
                                                                  (rule "add_zero_left" (formula "58") (term "6,0"))
                                                                  (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "2"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                                  (rule "add_literals" (formula "3") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "0"))
                                                                  (rule "leq_literals" (formula "3"))
                                                                  (rule "true_left" (formula "3"))
                                                                  (rule "applyEq" (formula "58") (term "1,1,0,0,0,0") (ifseqformula "2"))
                                                                  (rule "polySimp_addAssoc" (formula "58") (term "1,0,0,0,0"))
                                                                  (rule "add_literals" (formula "58") (term "0,1,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "58") (term "1,0,0,0,0"))
                                                                  (rule "applyEq" (formula "44") (term "1") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "45") (term "0") (ifseqformula "2"))
                                                                  (rule "eqSymm" (formula "45"))
                                                                  (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                                                  (rule "mul_literals" (formula "61") (term "0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "61") (term "0"))
                                                                  (rule "applyEq" (formula "60") (term "1,0,0") (ifseqformula "2"))
                                                                  (rule "polySimp_addAssoc" (formula "60") (term "0,0"))
                                                                  (rule "add_literals" (formula "60") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "60") (term "0,0"))
                                                                  (rule "applyEq" (formula "55") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "55") (term "0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "55") (term "0,0,0,1,0,0"))
                                                                  (rule "applyEqRigid" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "5") (term "0,0"))
                                                                  (rule "applyEqRigid" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "36"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "58") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "58") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "61"))
                                                                  (rule "polySimp_mulComm0" (formula "61") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "61") (term "1"))
                                                                  (rule "mul_literals" (formula "61") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "61") (term "1,1"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "60"))
                                                                  (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                                  (rule "mul_literals" (formula "43") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "55") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                                                  (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "60") (term "0,0"))
                                                                  (rule "leq_literals" (formula "60") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "false_right" (formula "60"))
                                                                  (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "3"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "44") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "44") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "44") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                                  (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "44") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "44") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "true_left" (formula "44"))
                                                                  (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "14"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "11") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "11") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "42"))
                                                                  (rule "leq_literals" (formula "1") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "4") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "true_left" (formula "4"))
                                                                  (rule "pullOutSelect" (formula "63") (term "1,2,0") (inst "selectSK=arr_1"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "27"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "17"))
                                                                  (rule "replace_known_left" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "18"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                                                  (rule "polySimp_addComm0" (formula "64") (term "2,0"))
                                                                  (rule "pullOutSelect" (formula "64") (term "1,3,0") (inst "selectSK=arr_2"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "28"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "18"))
                                                                  (rule "replace_known_left" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "19"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                                                                  (rule "polySimp_addComm0" (formula "65") (term "3,0"))
                                                                  (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "2") (term "0,0,0") (ifseqformula "25"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                                  (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "60"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "simplifySelectOfAnon" (formula "2"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "62")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "28"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "18"))
                                                                  (rule "replace_known_left" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "19"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "61")))
                                                                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                  (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "60"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnon" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "28"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "18"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "61"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                                  (rule "newSym_eq" (formula "35") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))"))
                                                                  (rule "times_zero_1" (formula "35") (term "1,1"))
                                                                  (rule "add_zero_right" (formula "35") (term "1"))
                                                                  (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "35"))
                                                                  (rule "eqSymm" (formula "36"))
                                                                  (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "34") (term "7,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "33") (term "5,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "57") (term "1,1,1,0,0,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "48") (term "5,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "47") (term "5,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "48") (term "7,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "32") (term "2,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "4") (term "0") (ifseqformula "36"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                  (rule "applyEq" (formula "49") (term "1,7,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "56") (term "5,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "49") (term "5,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "55") (term "5,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "34") (term "5,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "39") (term "2,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "46") (term "5,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "37") (term "0,2,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "38") (term "1,7,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "56") (term "7,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "38") (term "5,0") (ifseqformula "36"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                  (rule "newSym_eq" (formula "44") (inst "l=l_1") (inst "newSymDef=add(Z(neglit(1(#))), mul(b_3_0, Z(0(#))))"))
                                                                  (rule "times_zero_1" (formula "44") (term "1,1,1"))
                                                                  (rule "add_zero_right" (formula "44") (term "1,1"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "1"))
                                                                  (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "44"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "45") (term "0"))
                                                                  (rule "mul_literals" (formula "45") (term "0,0"))
                                                                  (rule "polySimp_homoEq" (formula "45"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "45") (term "0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "45") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
                                                                  (rule "add_literals" (formula "45") (term "0,0,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "45"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "45") (term "1"))
                                                                  (rule "mul_literals" (formula "45") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "45"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "55") (term "1,1,1,0,0") (ifseqformula "45"))
                                                                  (rule "polySimp_addAssoc" (formula "55") (term "1,1,0,0"))
                                                                  (rule "add_literals" (formula "55") (term "0,1,1,0,0"))
                                                                  (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "45"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                                                                  (rule "add_literals" (formula "44") (term "0,0,0"))
                                                                  (rule "applyEqRigid" (formula "47") (term "1,7,0") (ifseqformula "45"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "7,0"))
                                                                  (rule "add_literals" (formula "47") (term "0,7,0"))
                                                                  (rule "applyEq" (formula "1") (term "1,0,2,2,0") (ifseqformula "45"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,2,2,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,2,2,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,2,2,0"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,2,1,0") (ifseqformula "45"))
                                                                  (rule "applyEqRigid" (formula "50") (term "6,0") (ifseqformula "45"))
                                                                  (rule "applyEqRigid" (formula "49") (term "1,6,0") (ifseqformula "45"))
                                                                  (rule "polySimp_addAssoc" (formula "49") (term "6,0"))
                                                                  (rule "add_literals" (formula "49") (term "0,6,0"))
                                                                  (rule "applyEqRigid" (formula "43") (term "0") (ifseqformula "45"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "43"))
                                                                  (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "43") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                                  (rule "add_literals" (formula "43") (term "0,0"))
                                                                  (rule "applyEq" (formula "57") (term "6,0") (ifseqformula "45"))
                                                                  (rule "applyEq" (formula "2") (term "0,2,2,0") (ifseqformula "45"))
                                                                  (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "45"))
                                                                  (rule "applyEqRigid" (formula "1") (term "1,0,2,1,0") (ifseqformula "45"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,2,1,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,2,1,0"))
                                                                  (rule "applyEqRigid" (formula "58") (term "1,0,0,0,0") (ifseqformula "45"))
                                                                  (rule "applyEqRigid" (formula "60") (term "0,0,0") (ifseqformula "45"))
                                                                  (rule "applyEqRigid" (formula "1") (term "1,0,1,0,0") (ifseqformula "45"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,1,0,0"))
                                                                  (rule "applyEq" (formula "60") (term "1,1") (ifseqformula "45"))
                                                                  (rule "polySimp_addAssoc" (formula "60") (term "1"))
                                                                  (rule "add_literals" (formula "60") (term "0,1"))
                                                                  (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "45"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                                  (rule "add_literals" (formula "3") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                                                                  (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                                  (rule "elimGcdEq" (formula "60") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=jdiv(add(Z(neglit(1(#))), mul(l_1, Z(2(#)))), Z(2(#)))") (inst "elimGcd=Z(2(#))"))
                                                                   (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "mul_literals" (formula "60") (term "0,1,0,0,1"))
                                                                  (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "60") (term "0,1,0,1,0"))
                                                                  (rule "add_literals" (formula "60") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "60") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "60") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "60") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "60") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "60") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "60") (term "0,0,0,0,1"))
                                                                  (rule "add_zero_left" (formula "60") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "60") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "60") (term "1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "60") (term "0,0,1"))
                                                                   (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "polySimp_addAssoc" (formula "60") (term "0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "60") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "60") (term "0,0,0,1,0"))
                                                                  (rule "add_zero_left" (formula "60") (term "0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "60") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "60") (term "1,0,1,0"))
                                                                  (rule "times_zero_1" (formula "60") (term "0,1,0"))
                                                                  (rule "qeq_literals" (formula "60") (term "1,0"))
                                                                   (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "polySimp_addAssoc" (formula "60") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "60") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "60") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "60") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "60") (term "0,0"))
                                                                  (rule "add_literals" (formula "60") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "60") (term "0,0"))
                                                                  (rule "leq_literals" (formula "60") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "elimGcdGeq_antec" (formula "43") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                                  (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "43") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "43") (term "0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "43") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                                                  (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "43") (term "0,0"))
                                                                  (rule "leq_literals" (formula "43") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                                                  (rule "leq_literals" (formula "4") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0"))
                                                                  (rule "leq_literals" (formula "4") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "2") (term "0,0,0") (ifseqformula "25"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                                  (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "28"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "64")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "18"))
                                                                  (rule "replace_known_left" (formula "2") (term "1,0,1,0,0") (ifseqformula "19"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "63")))
                                                                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                  (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "63"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                                  (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "2") (term "1,0,0"))
                                                                  (rule "eqSymm" (formula "2") (term "0,0,1,0,0"))
                                                                  (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                                  (rule "eqSymm" (formula "1") (term "0,0,1,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "67") (term "0,2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "polySimp_addComm0" (formula "66") (term "2,0"))
                                                                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "66") (term "0,3,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "polySimp_addComm0" (formula "65") (term "3,0"))
                                                                  (rule "nnf_imp2or" (formula "19") (term "0"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "38"))
                                                                   (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "translateJavaMulInt" (formula "38") (term "1,1,0,0,0,0,1,0,0"))
                                                                  (rule "translateJavaMulInt" (formula "38") (term "1,1,0,0,0,0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "38") (term "1,1,0,0,0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "38") (term "1,1,0,0,0,0,0,1,0,0"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "41"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "43"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "notLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "45"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "46"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "notLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "notLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "48"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "49"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "disjointDefinition" (formula "74"))
                                                                   (builtin "One Step Simplification" (formula "74"))
                                                                  (rule "notLeft" (formula "74"))
                                                                  (rule "disjointDefinition" (formula "73"))
                                                                   (builtin "One Step Simplification" (formula "73"))
                                                                  (rule "notLeft" (formula "73"))
                                                                  (rule "disjointDefinition" (formula "72"))
                                                                   (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "notLeft" (formula "72"))
                                                                  (rule "eqSymm" (formula "91"))
                                                                  (rule "disjointDefinition" (formula "71"))
                                                                   (builtin "One Step Simplification" (formula "71"))
                                                                  (rule "notLeft" (formula "71"))
                                                                  (rule "eqSymm" (formula "90"))
                                                                  (rule "disjointDefinition" (formula "70"))
                                                                   (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "notLeft" (formula "70"))
                                                                  (rule "eqSymm" (formula "89"))
                                                                  (rule "disjointDefinition" (formula "69"))
                                                                   (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "notLeft" (formula "69"))
                                                                  (rule "eqSymm" (formula "88"))
                                                                  (rule "disjointDefinition" (formula "68"))
                                                                   (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "notLeft" (formula "68"))
                                                                  (rule "eqSymm" (formula "87"))
                                                                  (rule "disjointDefinition" (formula "67"))
                                                                   (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "notLeft" (formula "67"))
                                                                  (rule "eqSymm" (formula "86"))
                                                                  (rule "disjointDefinition" (formula "66"))
                                                                   (builtin "One Step Simplification" (formula "66"))
                                                                  (rule "notLeft" (formula "66"))
                                                                  (rule "eqSymm" (formula "85"))
                                                                  (rule "disjointDefinition" (formula "65"))
                                                                   (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "notLeft" (formula "65"))
                                                                  (rule "eqSymm" (formula "84"))
                                                                  (rule "disjointDefinition" (formula "64"))
                                                                   (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "notLeft" (formula "64"))
                                                                  (rule "eqSymm" (formula "83"))
                                                                  (rule "disjointDefinition" (formula "63"))
                                                                   (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "notLeft" (formula "63"))
                                                                  (rule "eqSymm" (formula "82"))
                                                                  (rule "disjointDefinition" (formula "62"))
                                                                   (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "notLeft" (formula "62"))
                                                                  (rule "eqSymm" (formula "81"))
                                                                  (rule "disjointDefinition" (formula "61"))
                                                                   (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "notLeft" (formula "61"))
                                                                  (rule "eqSymm" (formula "80"))
                                                                  (rule "disjointDefinition" (formula "60"))
                                                                   (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "notLeft" (formula "60"))
                                                                  (rule "eqSymm" (formula "79"))
                                                                  (rule "disjointDefinition" (formula "59"))
                                                                   (builtin "One Step Simplification" (formula "59"))
                                                                  (rule "notLeft" (formula "59"))
                                                                  (rule "disjointDefinition" (formula "58"))
                                                                   (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "notLeft" (formula "58"))
                                                                  (rule "eqSymm" (formula "77"))
                                                                  (rule "disjointDefinition" (formula "57"))
                                                                   (builtin "One Step Simplification" (formula "57"))
                                                                  (rule "notLeft" (formula "57"))
                                                                  (rule "eqSymm" (formula "76"))
                                                                  (rule "disjointDefinition" (formula "56"))
                                                                   (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "notLeft" (formula "56"))
                                                                  (rule "disjointDefinition" (formula "55"))
                                                                   (builtin "One Step Simplification" (formula "55"))
                                                                  (rule "notLeft" (formula "55"))
                                                                  (rule "disjointDefinition" (formula "54"))
                                                                   (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "notLeft" (formula "54"))
                                                                  (rule "disjointDefinition" (formula "53"))
                                                                   (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "notLeft" (formula "53"))
                                                                  (rule "disjointDefinition" (formula "52"))
                                                                   (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "notLeft" (formula "52"))
                                                                  (rule "disjointDefinition" (formula "51"))
                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "notLeft" (formula "51"))
                                                                  (rule "disjointDefinition" (formula "50"))
                                                                   (builtin "One Step Simplification" (formula "50"))
                                                                  (rule "notLeft" (formula "50"))
                                                                  (rule "disjointDefinition" (formula "49"))
                                                                   (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "notLeft" (formula "49"))
                                                                  (rule "disjointDefinition" (formula "48"))
                                                                   (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "notLeft" (formula "48"))
                                                                  (rule "disjointDefinition" (formula "47"))
                                                                   (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "notLeft" (formula "47"))
                                                                  (rule "applyEq" (formula "55") (term "0,1,0,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "26") (term "1,0,1,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "54") (term "0,1,0,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "52") (term "0,1,0,2,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "53") (term "0,1,0,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "58") (term "0,1,0,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "60") (term "0,1,0,2,1") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "56") (term "0,1,0,0") (ifseqformula "46"))
                                                                  (rule "distributeIntersection" (formula "14") (term "0"))
                                                                  (rule "distributeIntersection" (formula "23") (term "0"))
                                                                  (rule "distributeIntersection" (formula "24") (term "0"))
                                                                  (rule "unionEqualsEmpty" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "unionEqualsEmpty" (formula "24"))
                                                                  (rule "andLeft" (formula "24"))
                                                                  (rule "unionEqualsEmpty" (formula "26"))
                                                                  (rule "andLeft" (formula "26"))
                                                                  (rule "distributeIntersection" (formula "14") (term "0"))
                                                                  (rule "distributeIntersection" (formula "15") (term "0"))
                                                                  (rule "distributeIntersection" (formula "25") (term "0"))
                                                                  (rule "distributeIntersection" (formula "24") (term "0"))
                                                                  (rule "distributeIntersection" (formula "27") (term "0"))
                                                                  (rule "distributeIntersection" (formula "26") (term "0"))
                                                                  (rule "distributeIntersection" (formula "14") (term "0,0"))
                                                                  (rule "distributeIntersection" (formula "14") (term "1,0"))
                                                                  (rule "distributeIntersection" (formula "15") (term "0,0"))
                                                                  (rule "distributeIntersection" (formula "15") (term "1,0"))
                                                                  (rule "distributeIntersection" (formula "25") (term "0,0"))
                                                                  (rule "distributeIntersection" (formula "25") (term "1,0"))
                                                                  (rule "distributeIntersection" (formula "24") (term "1,0"))
                                                                  (rule "distributeIntersection" (formula "24") (term "0,0"))
                                                                  (rule "distributeIntersection" (formula "27") (term "0,0"))
                                                                  (rule "distributeIntersection" (formula "27") (term "1,0"))
                                                                  (rule "distributeIntersection" (formula "26") (term "0,0"))
                                                                  (rule "distributeIntersection" (formula "26") (term "1,0"))
                                                                  (rule "unionEqualsEmpty" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "unionEqualsEmpty" (formula "16"))
                                                                  (rule "andLeft" (formula "16"))
                                                                  (rule "unionEqualsEmpty" (formula "27"))
                                                                  (rule "andLeft" (formula "27"))
                                                                  (rule "unionEqualsEmpty" (formula "26"))
                                                                  (rule "andLeft" (formula "26"))
                                                                  (rule "unionEqualsEmpty" (formula "31"))
                                                                  (rule "andLeft" (formula "31"))
                                                                  (rule "unionEqualsEmpty" (formula "30"))
                                                                  (rule "andLeft" (formula "30"))
                                                                  (rule "unionEqualsEmpty" (formula "14"))
                                                                   (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "notLeft" (formula "15"))
                                                                  (rule "notLeft" (formula "14"))
                                                                  (rule "eqSymm" (formula "75"))
                                                                  (rule "eqSymm" (formula "74"))
                                                                  (rule "unionEqualsEmpty" (formula "14"))
                                                                   (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "notLeft" (formula "14"))
                                                                  (rule "notLeft" (formula "14"))
                                                                  (rule "eqSymm" (formula "74"))
                                                                  (rule "eqSymm" (formula "73"))
                                                                  (rule "unionEqualsEmpty" (formula "14"))
                                                                   (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "notLeft" (formula "15"))
                                                                  (rule "notLeft" (formula "14"))
                                                                  (rule "eqSymm" (formula "73"))
                                                                  (rule "eqSymm" (formula "72"))
                                                                  (rule "unionEqualsEmpty" (formula "14"))
                                                                   (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "notLeft" (formula "14"))
                                                                  (rule "notLeft" (formula "14"))
                                                                  (rule "eqSymm" (formula "72"))
                                                                  (rule "eqSymm" (formula "71"))
                                                                  (rule "unionEqualsEmpty" (formula "24"))
                                                                   (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "andLeft" (formula "24"))
                                                                  (rule "notLeft" (formula "25"))
                                                                  (rule "notLeft" (formula "24"))
                                                                  (rule "eqSymm" (formula "71"))
                                                                  (rule "eqSymm" (formula "70"))
                                                                  (rule "unionEqualsEmpty" (formula "24"))
                                                                   (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "andLeft" (formula "24"))
                                                                  (rule "notLeft" (formula "24"))
                                                                  (rule "notLeft" (formula "24"))
                                                                  (rule "eqSymm" (formula "70"))
                                                                  (rule "eqSymm" (formula "69"))
                                                                  (rule "unionEqualsEmpty" (formula "23"))
                                                                   (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "andLeft" (formula "23"))
                                                                  (rule "notLeft" (formula "24"))
                                                                  (rule "notLeft" (formula "23"))
                                                                  (rule "eqSymm" (formula "69"))
                                                                  (rule "eqSymm" (formula "68"))
                                                                  (rule "unionEqualsEmpty" (formula "22"))
                                                                   (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "andLeft" (formula "22"))
                                                                  (rule "notLeft" (formula "22"))
                                                                  (rule "notLeft" (formula "22"))
                                                                  (rule "eqSymm" (formula "68"))
                                                                  (rule "eqSymm" (formula "67"))
                                                                  (rule "unionEqualsEmpty" (formula "24"))
                                                                   (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "andLeft" (formula "24"))
                                                                  (rule "notLeft" (formula "24"))
                                                                  (rule "notLeft" (formula "24"))
                                                                  (rule "eqSymm" (formula "67"))
                                                                  (rule "eqSymm" (formula "66"))
                                                                  (rule "sortsDisjointModuloNull" (formula "67"))
                                                                  (rule "replace_known_right" (formula "67") (term "0") (ifseqformula "116"))
                                                                   (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "125")))
                                                                  (rule "false_right" (formula "67"))
                                                                  (rule "sortsDisjointModuloNull" (formula "66"))
                                                                  (rule "replace_known_right" (formula "66") (term "0") (ifseqformula "116"))
                                                                   (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "124")))
                                                                  (rule "false_right" (formula "66"))
                                                                  (rule "unionEqualsEmpty" (formula "24"))
                                                                   (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "andLeft" (formula "24"))
                                                                  (rule "notLeft" (formula "24"))
                                                                  (rule "notLeft" (formula "24"))
                                                                  (rule "eqSymm" (formula "66"))
                                                                  (rule "eqSymm" (formula "65"))
                                                                  (rule "sortsDisjointModuloNull" (formula "66"))
                                                                  (rule "replace_known_right" (formula "66") (term "0") (ifseqformula "117"))
                                                                   (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "124")))
                                                                  (rule "false_right" (formula "66"))
                                                                  (rule "sortsDisjointModuloNull" (formula "65"))
                                                                  (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "117"))
                                                                   (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "123")))
                                                                  (rule "false_right" (formula "65"))
                                                                  (rule "unionEqualsEmpty" (formula "22"))
                                                                   (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "andLeft" (formula "22"))
                                                                  (rule "notLeft" (formula "22"))
                                                                  (rule "notLeft" (formula "22"))
                                                                  (rule "eqSymm" (formula "65"))
                                                                  (rule "eqSymm" (formula "64"))
                                                                  (rule "sortsDisjointModuloNull" (formula "65"))
                                                                  (rule "replace_known_right" (formula "65") (term "1") (ifseqformula "123"))
                                                                   (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "111")))
                                                                  (rule "false_right" (formula "65"))
                                                                  (rule "sortsDisjointModuloNull" (formula "64"))
                                                                  (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "109"))
                                                                   (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "122")))
                                                                  (rule "false_right" (formula "64"))
                                                                  (rule "unionEqualsEmpty" (formula "22"))
                                                                   (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "andLeft" (formula "22"))
                                                                  (rule "notLeft" (formula "22"))
                                                                  (rule "notLeft" (formula "22"))
                                                                  (rule "eqSymm" (formula "64"))
                                                                  (rule "eqSymm" (formula "63"))
                                                                  (rule "sortsDisjointModuloNull" (formula "64"))
                                                                  (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "111"))
                                                                   (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "122")))
                                                                  (rule "false_right" (formula "64"))
                                                                  (rule "sortsDisjointModuloNull" (formula "63"))
                                                                  (rule "replace_known_right" (formula "63") (term "1") (ifseqformula "121"))
                                                                   (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "111")))
                                                                  (rule "false_right" (formula "63"))
                                                                  (rule "commuteUnion" (formula "43") (term "0,0,1"))
                                                                  (rule "commuteUnion" (formula "43") (term "1,1,1"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "62"))
                                                                   (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "108")) (ifInst ""  (formula "107")) (ifInst ""  (formula "109")) (ifInst ""  (formula "110")) (ifInst ""  (formula "111")) (ifInst ""  (formula "112")) (ifInst ""  (formula "113")) (ifInst ""  (formula "114")) (ifInst ""  (formula "35")) (ifInst ""  (formula "36")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")) (ifInst ""  (formula "42")))
                                                                  (rule "translateJavaMulInt" (formula "62") (term "1,1,0,0"))
                                                                  (rule "translateJavaMulInt" (formula "62") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "62") (term "1,0,0,0"))
                                                                  (rule "andLeft" (formula "62"))
                                                                  (rule "andLeft" (formula "62"))
                                                                  (rule "andLeft" (formula "64"))
                                                                  (rule "andLeft" (formula "62"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "disjointDefinition" (formula "90"))
                                                                   (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "134")))
                                                                  (rule "true_left" (formula "90"))
                                                                  (rule "disjointDefinition" (formula "89"))
                                                                   (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "132")))
                                                                  (rule "true_left" (formula "89"))
                                                                  (rule "disjointDefinition" (formula "88"))
                                                                   (builtin "One Step Simplification" (formula "88"))
                                                                  (rule "notLeft" (formula "88"))
                                                                  (rule "eqSymm" (formula "88"))
                                                                  (rule "disjointDefinition" (formula "87"))
                                                                   (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "notLeft" (formula "87"))
                                                                  (rule "eqSymm" (formula "87"))
                                                                  (rule "disjointDefinition" (formula "86"))
                                                                   (builtin "One Step Simplification" (formula "86"))
                                                                  (rule "notLeft" (formula "86"))
                                                                  (rule "eqSymm" (formula "86"))
                                                                  (rule "disjointDefinition" (formula "85"))
                                                                   (builtin "One Step Simplification" (formula "85"))
                                                                  (rule "notLeft" (formula "85"))
                                                                  (rule "eqSymm" (formula "85"))
                                                                  (rule "disjointDefinition" (formula "84"))
                                                                   (builtin "One Step Simplification" (formula "84"))
                                                                  (rule "notLeft" (formula "84"))
                                                                  (rule "eqSymm" (formula "84"))
                                                                  (rule "disjointDefinition" (formula "83"))
                                                                   (builtin "One Step Simplification" (formula "83"))
                                                                  (rule "notLeft" (formula "83"))
                                                                  (rule "eqSymm" (formula "83"))
                                                                  (rule "disjointDefinition" (formula "82"))
                                                                   (builtin "One Step Simplification" (formula "82"))
                                                                  (rule "notLeft" (formula "82"))
                                                                  (rule "eqSymm" (formula "82"))
                                                                  (rule "disjointDefinition" (formula "81"))
                                                                   (builtin "One Step Simplification" (formula "81"))
                                                                  (rule "notLeft" (formula "81"))
                                                                  (rule "eqSymm" (formula "81"))
                                                                  (rule "disjointDefinition" (formula "80"))
                                                                   (builtin "One Step Simplification" (formula "80"))
                                                                  (rule "notLeft" (formula "80"))
                                                                  (rule "eqSymm" (formula "80"))
                                                                  (rule "disjointDefinition" (formula "79"))
                                                                   (builtin "One Step Simplification" (formula "79"))
                                                                  (rule "notLeft" (formula "79"))
                                                                  (rule "eqSymm" (formula "79"))
                                                                  (rule "disjointDefinition" (formula "78"))
                                                                   (builtin "One Step Simplification" (formula "78"))
                                                                  (rule "notLeft" (formula "78"))
                                                                  (rule "eqSymm" (formula "78"))
                                                                  (rule "disjointDefinition" (formula "77"))
                                                                   (builtin "One Step Simplification" (formula "77"))
                                                                  (rule "notLeft" (formula "77"))
                                                                  (rule "eqSymm" (formula "77"))
                                                                  (rule "disjointDefinition" (formula "76"))
                                                                   (builtin "One Step Simplification" (formula "76"))
                                                                  (rule "notLeft" (formula "76"))
                                                                  (rule "eqSymm" (formula "76"))
                                                                  (rule "disjointDefinition" (formula "75"))
                                                                   (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "104")))
                                                                  (rule "true_left" (formula "75"))
                                                                  (rule "disjointDefinition" (formula "74"))
                                                                   (builtin "One Step Simplification" (formula "74"))
                                                                  (rule "notLeft" (formula "74"))
                                                                  (rule "eqSymm" (formula "74"))
                                                                  (rule "disjointDefinition" (formula "73"))
                                                                   (builtin "One Step Simplification" (formula "73"))
                                                                  (rule "notLeft" (formula "73"))
                                                                  (rule "eqSymm" (formula "73"))
                                                                  (rule "disjointDefinition" (formula "72"))
                                                                   (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "98")))
                                                                  (rule "true_left" (formula "72"))
                                                                  (rule "disjointDefinition" (formula "71"))
                                                                   (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "96")))
                                                                  (rule "true_left" (formula "71"))
                                                                  (rule "disjointDefinition" (formula "70"))
                                                                   (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "94")))
                                                                  (rule "true_left" (formula "70"))
                                                                  (rule "disjointDefinition" (formula "69"))
                                                                   (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "92")))
                                                                  (rule "true_left" (formula "69"))
                                                                  (rule "disjointDefinition" (formula "68"))
                                                                   (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "90")))
                                                                  (rule "true_left" (formula "68"))
                                                                  (rule "disjointDefinition" (formula "67"))
                                                                   (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "88")))
                                                                  (rule "true_left" (formula "67"))
                                                                  (rule "disjointDefinition" (formula "66"))
                                                                   (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "86")))
                                                                  (rule "true_left" (formula "66"))
                                                                  (rule "disjointDefinition" (formula "65"))
                                                                   (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "84")))
                                                                  (rule "true_left" (formula "65"))
                                                                  (rule "disjointDefinition" (formula "64"))
                                                                   (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "82")))
                                                                  (rule "true_left" (formula "64"))
                                                                  (rule "disjointDefinition" (formula "63"))
                                                                   (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "80")))
                                                                  (rule "true_left" (formula "63"))
                                                                  (rule "applyEq" (formula "62") (term "0") (ifseqformula "43"))
                                                                  (rule "eqSymm" (formula "62"))
                                                                  (rule "applyEq" (formula "55") (term "0,1,0,0") (ifseqformula "62"))
                                                                  (rule "applyEq" (formula "57") (term "0,1,0,2,1") (ifseqformula "62"))
                                                                  (rule "applyEq" (formula "52") (term "0,1,0,0") (ifseqformula "62"))
                                                                  (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "62"))
                                                                  (rule "applyEq" (formula "51") (term "0,1,0,0") (ifseqformula "62"))
                                                                  (rule "applyEq" (formula "53") (term "0,1,0,0") (ifseqformula "62"))
                                                                  (rule "applyEq" (formula "49") (term "0,1,0,2,0") (ifseqformula "62"))
                                                                  (rule "applyEq" (formula "50") (term "0,1,0,0") (ifseqformula "62"))
                                                                  (rule "applyEq" (formula "23") (term "1,0,1,0") (ifseqformula "62"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "13"))
                                                                   (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "108")) (ifInst ""  (formula "107")) (ifInst ""  (formula "109")) (ifInst ""  (formula "110")) (ifInst ""  (formula "111")) (ifInst ""  (formula "112")) (ifInst ""  (formula "113")) (ifInst ""  (formula "114")) (ifInst ""  (formula "35")) (ifInst ""  (formula "36")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")) (ifInst ""  (formula "42")))
                                                                  (rule "translateJavaMulInt" (formula "13") (term "1,1,0,0"))
                                                                  (rule "translateJavaMulInt" (formula "13") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                                  (rule "andLeft" (formula "13"))
                                                                  (rule "andLeft" (formula "13"))
                                                                  (rule "andLeft" (formula "15"))
                                                                  (rule "andLeft" (formula "13"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "disjointDefinition" (formula "41"))
                                                                   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "134")))
                                                                  (rule "true_left" (formula "41"))
                                                                  (rule "disjointDefinition" (formula "40"))
                                                                   (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "132")))
                                                                  (rule "true_left" (formula "40"))
                                                                  (rule "disjointDefinition" (formula "39"))
                                                                   (builtin "One Step Simplification" (formula "39"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "eqSymm" (formula "88"))
                                                                  (rule "disjointDefinition" (formula "38"))
                                                                   (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "eqSymm" (formula "87"))
                                                                  (rule "disjointDefinition" (formula "37"))
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "eqSymm" (formula "86"))
                                                                  (rule "disjointDefinition" (formula "36"))
                                                                   (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "notLeft" (formula "36"))
                                                                  (rule "eqSymm" (formula "85"))
                                                                  (rule "disjointDefinition" (formula "35"))
                                                                   (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "notLeft" (formula "35"))
                                                                  (rule "eqSymm" (formula "84"))
                                                                  (rule "disjointDefinition" (formula "34"))
                                                                   (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "notLeft" (formula "34"))
                                                                  (rule "eqSymm" (formula "83"))
                                                                  (rule "disjointDefinition" (formula "33"))
                                                                   (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "notLeft" (formula "33"))
                                                                  (rule "eqSymm" (formula "82"))
                                                                  (rule "disjointDefinition" (formula "32"))
                                                                   (builtin "One Step Simplification" (formula "32"))
                                                                  (rule "notLeft" (formula "32"))
                                                                  (rule "eqSymm" (formula "81"))
                                                                  (rule "disjointDefinition" (formula "31"))
                                                                   (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "notLeft" (formula "31"))
                                                                  (rule "eqSymm" (formula "80"))
                                                                  (rule "disjointDefinition" (formula "30"))
                                                                   (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "notLeft" (formula "30"))
                                                                  (rule "eqSymm" (formula "79"))
                                                                  (rule "disjointDefinition" (formula "29"))
                                                                   (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "notLeft" (formula "29"))
                                                                  (rule "eqSymm" (formula "78"))
                                                                  (rule "disjointDefinition" (formula "28"))
                                                                   (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "notLeft" (formula "28"))
                                                                  (rule "eqSymm" (formula "77"))
                                                                  (rule "disjointDefinition" (formula "27"))
                                                                   (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "notLeft" (formula "27"))
                                                                  (rule "eqSymm" (formula "76"))
                                                                  (rule "disjointDefinition" (formula "26"))
                                                                   (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "104")))
                                                                  (rule "true_left" (formula "26"))
                                                                  (rule "disjointDefinition" (formula "25"))
                                                                   (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "notLeft" (formula "25"))
                                                                  (rule "eqSymm" (formula "74"))
                                                                  (rule "disjointDefinition" (formula "24"))
                                                                   (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "notLeft" (formula "24"))
                                                                  (rule "eqSymm" (formula "73"))
                                                                  (rule "disjointDefinition" (formula "23"))
                                                                   (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "98")))
                                                                  (rule "true_left" (formula "23"))
                                                                  (rule "disjointDefinition" (formula "22"))
                                                                   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "96")))
                                                                  (rule "true_left" (formula "22"))
                                                                  (rule "disjointDefinition" (formula "21"))
                                                                   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "94")))
                                                                  (rule "true_left" (formula "21"))
                                                                  (rule "disjointDefinition" (formula "20"))
                                                                   (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "92")))
                                                                  (rule "true_left" (formula "20"))
                                                                  (rule "disjointDefinition" (formula "19"))
                                                                   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "90")))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "disjointDefinition" (formula "18"))
                                                                   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "88")))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "disjointDefinition" (formula "17"))
                                                                   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "86")))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "disjointDefinition" (formula "16"))
                                                                   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "84")))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "disjointDefinition" (formula "15"))
                                                                   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "82")))
                                                                  (rule "true_left" (formula "15"))
                                                                  (rule "disjointDefinition" (formula "14"))
                                                                   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "80")))
                                                                  (rule "true_left" (formula "14"))
                                                                  (rule "applyEq" (formula "13") (term "1") (ifseqformula "62"))
                                                                  (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "57") (term "0,1,0") (inst "i=i"))
                                                                   (builtin "One Step Simplification" (formula "57"))
                                                                  (rule "translateJavaSubInt" (formula "57") (term "1,1,0,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "57") (term "0,2,1,1,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "57") (term "1,1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "57") (term "1,1,1,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "57") (term "0,2,1,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "57") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "57") (term "0,1,1,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "0,1,0,0,1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "57") (term "0,0,1,0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,1,0,0,1,0"))
                                                                  (rule "add_literals" (formula "57") (term "0,0,0,0,1,0,0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "57") (term "1,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "0,1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1,1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "57") (term "0,0,1,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "57") (term "1,0,1,1,0,0,1,0"))
                                                                  (rule "Definition_axiom_for_isEqualityBucket_in_de_wiesler_Sorter" (formula "60") (term "0,1,0") (inst "i=i"))
                                                                   (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "translateJavaAddInt" (formula "60") (term "0,2,1,1,0,1,0"))
                                                                  (rule "translateJavaSubInt" (formula "60") (term "1,1,0,0,1,0"))
                                                                  (rule "eqSymm" (formula "60") (term "1,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "60") (term "1,1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "60") (term "1,1,1,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "60") (term "0,2,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "60") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "60") (term "0,1,1,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "60") (term "0,0,1,0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,1,0,0,1,0"))
                                                                  (rule "add_literals" (formula "60") (term "0,0,0,0,1,0,0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "60") (term "0,1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "60") (term "0,0,1,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "60") (term "1,0,1,1,0,0,1,0"))
                                                                  (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                                  (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "27") (term "0") (inst "b=b_3"))
                                                                   (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "translateJavaAddInt" (formula "27") (term "0,2,5,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "27") (term "0,2,5,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "27") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                                  (rule "commuteUnion_2" (formula "42") (term "0,1"))
                                                                  (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "26") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "translateJavaAddInt" (formula "26") (term "3,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "26") (term "0,1,0,0"))
                                                                  (rule "andLeft" (formula "26"))
                                                                  (rule "andLeft" (formula "26"))
                                                                  (rule "andLeft" (formula "26"))
                                                                  (rule "polySimp_addComm0" (formula "28") (term "3,0"))
                                                                  (rule "polySimp_addComm0" (formula "27") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "26"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "27"))
                                                                  (rule "applyEq" (formula "27") (term "0") (ifseqformula "16"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "27"))
                                                                  (rule "mul_literals" (formula "27") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                                  (rule "add_literals" (formula "27") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                                                  (rule "mul_literals" (formula "27") (term "1"))
                                                                  (rule "elimGcdLeq_antec" (formula "27") (inst "elimGcdRightDiv=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "27") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "neg_literal" (formula "27") (term "0,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "27") (term "0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                                                                  (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "27") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "27") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "elimGcdGeq_antec" (formula "26") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                                  (rule "leq_literals" (formula "26") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "26") (term "0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                                                  (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "26") (term "0,0"))
                                                                  (rule "leq_literals" (formula "26") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_3"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "22"))
                                                                   (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "122")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,0,0") (ifseqformula "14"))
                                                                  (rule "replace_known_left" (formula "29") (term "1,0,1,0,0") (ifseqformula "15"))
                                                                   (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "121")))
                                                                  (rule "applyEq" (formula "29") (term "1") (ifseqformula "30"))
                                                                  (rule "ifEqualsInteger" (formula "29"))
                                                                  (rule "elementOfUnion" (formula "29") (term "0,0"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "29") (term "1,0,0"))
                                                                  (rule "eqSymm" (formula "29") (term "0,0,1,0,0"))
                                                                  (rule "replace_known_right" (formula "29") (term "0,0,1,0,0") (ifseqformula "120"))
                                                                   (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "elementOfUnion" (formula "29") (term "0,0,1"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "29") (term "1,0,0,1"))
                                                                  (rule "eqSymm" (formula "29") (term "0,0,1,0,0,1"))
                                                                  (rule "replace_known_right" (formula "29") (term "0,0,1,0,0,1") (ifseqformula "120"))
                                                                   (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "elementOfUnion" (formula "29") (term "0,0,1"))
                                                                   (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "andLeft" (formula "29"))
                                                                  (rule "elementOfUnion" (formula "29"))
                                                                   (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "true_left" (formula "29"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "27"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "63") (term "0") (inst "b=b_3"))
                                                                   (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "translateJavaAddInt" (formula "63") (term "0,2,5,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "63") (term "0,2,5,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "63") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "63") (term "0,1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "63") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "63") (term "0,1,1,0,0"))
                                                                  (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "33") (term "0") (inst "b=b_3"))
                                                                   (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "translateJavaAddInt" (formula "33") (term "0,2,5,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "33") (term "0,2,5,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "33") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                                                  (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "38") (term "0") (inst "b=b_3"))
                                                                   (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "translateJavaSubInt" (formula "38") (term "0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "38") (term "0,2,0,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "38") (term "0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "38") (term "0,2,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "38") (term "0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "38") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "0,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "38") (term "0,0,0,1,1,0"))
                                                                  (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "37") (term "0") (inst "b=b_3"))
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "translateJavaAddInt" (formula "37") (term "2,0,1,0"))
                                                                  (rule "translateJavaMod" (formula "37") (term "0,1,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "37") (term "3,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "37") (term "0,2,1,3,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "37") (term "0,2,1,3,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,0"))
                                                                  (rule "jmod_axiom" (formula "37") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_homoEq" (formula "37") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "37") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0"))
                                                                  (rule "arrayLengthIsAShort" (formula "11") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                                                  (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                                                  (rule "qeq_literals" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "cut_direct" (formula "25") (term "0,0"))
                                                                  (branch "CUT: result_22.<created> = TRUE TRUE"
                                                                      (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "true_left" (formula "26"))
                                                                     (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "true_left" (formula "17"))
                                                                     (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                                                                     (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                                                     (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                                                                     (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                                                     (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "64") (term "0") (inst "b=b_3"))
                                                                      (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "translateJavaAddInt" (formula "64") (term "0,2,5,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "64") (term "0,2,5,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "64") (term "1,0,0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "64") (term "0,1,0,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,1,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "64") (term "0,1,1,0,0"))
                                                                     (rule "commuteUnion" (formula "66") (term "0,1"))
                                                                     (rule "commuteUnion" (formula "66") (term "1,1,0"))
                                                                     (rule "commuteUnion" (formula "66") (term "0,0,0"))
                                                                     (rule "applyEq" (formula "23") (term "1,0,1,0") (ifseqformula "66"))
                                                                     (rule "applyEq" (formula "57") (term "0,1,0,0") (ifseqformula "66"))
                                                                     (rule "applyEq" (formula "55") (term "0,1,0,0") (ifseqformula "66"))
                                                                     (rule "applyEq" (formula "54") (term "0,1,0,0") (ifseqformula "66"))
                                                                     (rule "applyEq" (formula "53") (term "0,1,0,2,0") (ifseqformula "66"))
                                                                     (rule "applyEq" (formula "59") (term "0,1,0,0") (ifseqformula "66"))
                                                                     (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "66"))
                                                                     (rule "applyEq" (formula "56") (term "0,1,0,0") (ifseqformula "66"))
                                                                     (rule "applyEq" (formula "61") (term "0,1,0,2,1") (ifseqformula "66"))
                                                                     (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "126") (term "0") (inst "i=i"))
                                                                      (builtin "One Step Simplification" (formula "126"))
                                                                     (rule "translateJavaAddInt" (formula "126") (term "0,2,1,1,0"))
                                                                     (rule "translateJavaSubInt" (formula "126") (term "1,1,0,0"))
                                                                     (rule "allRight" (formula "126") (inst "sk=i_0"))
                                                                     (rule "impRight" (formula "126"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "polySimp_elimSub" (formula "2") (term "1"))
                                                                     (rule "mul_literals" (formula "2") (term "1,1"))
                                                                     (rule "polySimp_addComm0" (formula "128") (term "0,2,1"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "1"))
                                                                     (rule "polySimp_addComm0" (formula "2") (term "0,1"))
                                                                     (rule "inEqSimp_leqRight" (formula "128"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                                                                     (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                     (rule "pullOutSelect" (formula "1") (term "1,1") (inst "selectSK=arr_4"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "63"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "129")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "27"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "19"))
                                                                     (rule "replace_known_left" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "10"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "1,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "1,1,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,1,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,1,0,0,0,0") (ifseqformula "85"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")))
                                                                     (rule "elementOfUnion" (formula "1") (term "1,1,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "1,1,1,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,1,1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,1,1,0,0,0") (ifseqformula "79"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "84"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "81"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "82")))
                                                                     (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_5"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "64"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "130")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "28"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "20"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "11"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "2") (term "1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "2") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1,0,1,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "2") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0,0,1,1,0,0"))
                                                                     (rule "add_literals" (formula "2") (term "0,0,0,1,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1,0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,1,0,1,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0,1,1,0,0"))
                                                                     (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                                                     (rule "elementOfUnion" (formula "2") (term "1,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "2") (term "1,1,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "eqSymm" (formula "2") (term "0,1,1,0,0,0"))
                                                                     (rule "eqSymm" (formula "2") (term "1,1,1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "2") (term "1,1,1,0,0,0") (ifseqformula "81"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "80")))
                                                                     (rule "elementOfUnion" (formula "2") (term "1,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "eqSymm" (formula "2") (term "1,1,0,0,0"))
                                                                     (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "2") (term "1,1,0,0,0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "82")))
                                                                     (rule "elementOfUnion" (formula "2") (term "1,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                                                     (rule "eqSymm" (formula "2") (term "1,1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "87"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "86")))
                                                                     (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "eqSymm" (formula "2") (term "1,0,0,0"))
                                                                     (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "2") (term "1,0,0,0") (ifseqformula "84"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "85")))
                                                                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_6"))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "131")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "29"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "21"))
                                                                     (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "12"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "1,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "0,1,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "1,1,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0,0") (ifseqformula "88"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,1,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,1,0,0,0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "84")))
                                                                     (rule "elementOfUnion" (formula "1") (term "1,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "1,1,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "81"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "82")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "86"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")))
                                                                     (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_7"))
                                                                     (rule "simplifySelectOfAnon" (formula "3"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "132")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "30"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,1,0,0") (ifseqformula "22"))
                                                                     (rule "replace_known_left" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "13"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "3") (term "0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "3") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "1,0,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "3") (term "0,1,0,1,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "3") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1,0,0"))
                                                                     (rule "add_literals" (formula "3") (term "0,0,0,1,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "3") (term "0,1,0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "1,1,0,1,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "0,1,1,0,0"))
                                                                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                                                                     (rule "elementOfUnion" (formula "3") (term "1,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "3") (term "1,1,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "eqSymm" (formula "3") (term "1,1,1,0,0,0"))
                                                                     (rule "eqSymm" (formula "3") (term "0,1,1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "3") (term "1,1,1,0,0,0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "82")))
                                                                     (rule "elementOfUnion" (formula "3") (term "1,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "eqSymm" (formula "3") (term "0,1,0,0,0"))
                                                                     (rule "eqSymm" (formula "3") (term "1,1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "84"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "85")))
                                                                     (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "eqSymm" (formula "3") (term "0,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "3") (term "1,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "3") (term "1,0,0,0,0") (ifseqformula "86"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")))
                                                                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "eqSymm" (formula "3") (term "1,0,0,0"))
                                                                     (rule "eqSymm" (formula "3") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "88"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "89")))
                                                                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_8"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "133")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "23"))
                                                                     (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "14"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "129")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "1,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "88"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                                                                     (rule "elementOfUnion" (formula "1") (term "1,1,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "1,1,1,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,1,1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,1,1,0,0,0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "84")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "89"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "86"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")))
                                                                     (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_9"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "32"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "134")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "24"))
                                                                     (rule "replace_known_left" (formula "4") (term "0,0,1,0,0") (ifseqformula "15"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "elementOfUnion" (formula "4") (term "0,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "4") (term "1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "4") (term "0,1,0,1,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0,0,1,1,0,0"))
                                                                     (rule "add_literals" (formula "4") (term "0,0,0,1,1,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "0,1,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,0,0"))
                                                                     (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "130")))
                                                                     (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                                                                     (rule "elementOfUnion" (formula "4") (term "1,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "4") (term "0,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "4") (term "1,1,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "eqSymm" (formula "4") (term "0,1,1,0,0,0"))
                                                                     (rule "eqSymm" (formula "4") (term "1,1,1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "4") (term "0,1,1,0,0,0") (ifseqformula "84"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "85")))
                                                                     (rule "elementOfUnion" (formula "4") (term "1,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "eqSymm" (formula "4") (term "0,1,0,0,0"))
                                                                     (rule "eqSymm" (formula "4") (term "1,1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "4") (term "0,1,0,0,0") (ifseqformula "86"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "87")))
                                                                     (rule "elementOfUnion" (formula "4") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "eqSymm" (formula "4") (term "0,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "4") (term "1,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "89"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "88")))
                                                                     (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "eqSymm" (formula "4") (term "0,0,0,0"))
                                                                     (rule "eqSymm" (formula "4") (term "1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "91"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "90")))
                                                                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_10"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "135")) (ifInst ""  (formula "16")))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_11"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "25"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "135")) (ifInst ""  (formula "16")))
                                                                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "jdiv_axiom" (formula "43") (term "0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "0,0,2,1"))
                                                                     (rule "eqSymm" (formula "43"))
                                                                     (rule "applyEq" (formula "43") (term "1") (ifseqformula "44"))
                                                                     (rule "inEqSimp_subsumption6" (formula "43") (term "0,0") (ifseqformula "36"))
                                                                     (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                                                                     (rule "greater_literals" (formula "43") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "43"))
                                                                     (rule "leq_literals" (formula "43") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "43"))
                                                                     (rule "polyDiv_pullOut" (formula "43") (term "0") (inst "polyDivCoeff=l_0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,2,0"))
                                                                     (rule "equal_literals" (formula "43") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "43"))
                                                                     (rule "polySimp_homoEq" (formula "43"))
                                                                     (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,0,1,0"))
                                                                     (rule "add_literals" (formula "43") (term "1,0,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "43") (term "0,0,0,1,0"))
                                                                     (rule "div_literals" (formula "43") (term "0,0,1,0"))
                                                                     (rule "add_zero_left" (formula "43") (term "0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                                                                     (rule "add_literals" (formula "43") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "43") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "43"))
                                                                     (rule "true_left" (formula "43"))
                                                                     (rule "jdiv_axiom" (formula "60") (term "0"))
                                                                     (rule "eqSymm" (formula "60"))
                                                                     (rule "polySimp_mulComm0" (formula "60") (term "0,0,2,0"))
                                                                     (rule "polySimp_rightDist" (formula "60") (term "0,0,2,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,2,0"))
                                                                     (rule "mul_literals" (formula "60") (term "0,0,0,2,0"))
                                                                     (rule "applyEqRigid" (formula "60") (term "1") (ifseqformula "61"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0"))
                                                                     (rule "mul_literals" (formula "60") (term "1,0,0"))
                                                                     (rule "inEqSimp_subsumption6" (formula "60") (term "0,0") (ifseqformula "59"))
                                                                     (rule "greater_literals" (formula "60") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "mul_literals" (formula "60") (term "1,0,0,0"))
                                                                     (rule "leq_literals" (formula "60") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "polyDiv_pullOut" (formula "60") (term "0") (inst "polyDivCoeff=l_1"))
                                                                     (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,2,0"))
                                                                     (rule "equal_literals" (formula "60") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "60") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "60") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "60") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "60") (term "0,0,0"))
                                                                     (rule "div_literals" (formula "60") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "true_left" (formula "60"))
                                                                     (rule "commuteUnion_2" (formula "56") (term "1"))
                                                                     (rule "jdiv_axiom" (formula "128") (term "0"))
                                                                     (rule "eqSymm" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0,0,2,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "60"))
                                                                     (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
                                                                     (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1"))
                                                                     (rule "applyEq" (formula "129") (term "0") (ifseqformula "1"))
                                                                     (rule "polyDiv_pullOut" (formula "129") (term "0") (inst "polyDivCoeff=l_1"))
                                                                     (rule "polySimp_mulLiterals" (formula "129") (term "1,0,0,2,0"))
                                                                     (rule "equal_literals" (formula "129") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "129"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "129") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "129") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "129") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "129") (term "0,0,0"))
                                                                     (rule "div_literals" (formula "129") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "129"))
                                                                     (rule "closeTrue" (formula "129"))
                                                                  )
                                                                  (branch "CUT: result_22.<created> = TRUE FALSE"
                                                                      (builtin "One Step Simplification" (formula "25"))
                                                                     (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "true_left" (formula "17"))
                                                                     (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                                                                     (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                                                     (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                                                                     (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                                                     (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "64") (term "0") (inst "b=b_3"))
                                                                      (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "translateJavaAddInt" (formula "64") (term "0,2,5,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "64") (term "0,2,5,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "64") (term "1,0,0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "64") (term "0,1,0,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,1,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "64") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0"))
                                                                     (rule "commuteUnion" (formula "66") (term "1,1,0"))
                                                                     (rule "commuteUnion_2" (formula "66") (term "0,1"))
                                                                     (rule "commuteUnion" (formula "66") (term "0,0"))
                                                                     (rule "commuteUnion" (formula "59") (term "0,0,1,0,0"))
                                                                     (rule "commuteUnion" (formula "61") (term "0,0,1,0,2,1"))
                                                                     (rule "commuteUnion_2" (formula "56") (term "0,0,1,0,0"))
                                                                     (rule "commuteUnion" (formula "59") (term "0,0,1,0"))
                                                                     (rule "commuteUnion" (formula "55") (term "0,0,1,0,0"))
                                                                     (rule "commuteUnion" (formula "57") (term "0,0,1,0,0"))
                                                                     (rule "commuteUnion_2" (formula "53") (term "0,0,1,0,2,0"))
                                                                     (rule "commuteUnion_2" (formula "54") (term "0,0,1,0,0"))
                                                                     (rule "commuteUnion" (formula "23") (term "0,1,0,1,0"))
                                                                     (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "127") (term "0"))
                                                                     (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "60"))
                                                                     (rule "wellFormedAnon" (formula "1") (term "0,1,0"))
                                                                     (rule "wellFormedAnonEQ" (formula "1") (term "0,0,1,0") (ifseqformula "24"))
                                                                     (rule "wellFormedAnonEQ" (formula "1") (term "0,0,0,1,0") (ifseqformula "16"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "128"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "127")) (ifInst ""  (formula "6")) (ifInst ""  (formula "15")) (ifInst ""  (formula "23")) (ifInst ""  (formula "50")) (ifInst ""  (formula "59")))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "127") (term "0") (inst "i=i"))
                                                                      (builtin "One Step Simplification" (formula "127"))
                                                                     (rule "translateJavaAddInt" (formula "127") (term "0,2,1,1,0"))
                                                                     (rule "translateJavaSubInt" (formula "127") (term "1,1,0,0"))
                                                                     (rule "allRight" (formula "127") (inst "sk=i_0"))
                                                                     (rule "impRight" (formula "127"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "polySimp_elimSub" (formula "2") (term "1"))
                                                                     (rule "mul_literals" (formula "2") (term "1,1"))
                                                                     (rule "polySimp_addComm0" (formula "129") (term "0,2,1"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "1"))
                                                                     (rule "polySimp_addComm0" (formula "2") (term "0,1"))
                                                                     (rule "inEqSimp_leqRight" (formula "129"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                                                                     (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                     (rule "pullOutSelect" (formula "1") (term "1,1") (inst "selectSK=arr_4"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "63"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "130")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "27"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "19"))
                                                                     (rule "replace_known_left" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "10"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "1,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,1,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,1,0,0,0") (ifseqformula "82"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                                                                     (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "0,1,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "1,1,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0,0") (ifseqformula "87"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "85"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "84")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "81"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                                     (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_5"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "64"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "131")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "28"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "20"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "11"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "2") (term "1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "2") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1,0,1,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "2") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0,0,1,1,0,0"))
                                                                     (rule "add_literals" (formula "2") (term "0,0,0,1,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,1,0,1,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0,1,1,0,0"))
                                                                     (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                                                     (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "2") (term "1,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "2") (term "1,0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "eqSymm" (formula "2") (term "1,1,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "2") (term "0,1,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,1,0,0,0,0") (ifseqformula "88"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "87")))
                                                                     (rule "elementOfUnion" (formula "2") (term "1,1,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "eqSymm" (formula "2") (term "1,1,1,0,0,0"))
                                                                     (rule "eqSymm" (formula "2") (term "0,1,1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,1,1,0,0,0") (ifseqformula "81"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "82")))
                                                                     (rule "elementOfUnion" (formula "2") (term "1,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                                                     (rule "eqSymm" (formula "2") (term "1,1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "2") (term "1,1,0,0,0") (ifseqformula "84"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "83")))
                                                                     (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                                                     (rule "eqSymm" (formula "2") (term "1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "86"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "85")))
                                                                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_6"))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "132")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "29"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "21"))
                                                                     (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "12"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "1,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0,0") (ifseqformula "86"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,1,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,1,0,0,0") (ifseqformula "84"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "88"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "89")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "82")))
                                                                     (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_7"))
                                                                     (rule "simplifySelectOfAnon" (formula "3"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "133")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "30"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,1,0,0") (ifseqformula "22"))
                                                                     (rule "replace_known_left" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "13"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "3") (term "0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "3") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "1,0,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "3") (term "0,1,0,1,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "3") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1,0,0"))
                                                                     (rule "add_literals" (formula "3") (term "0,0,0,1,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "3") (term "0,1,0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "1,1,0,1,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "0,1,1,0,0"))
                                                                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                                                                     (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "3") (term "1,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "3") (term "0,0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "eqSymm" (formula "3") (term "1,0,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "3") (term "0,0,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "88"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")))
                                                                     (rule "elementOfUnion" (formula "3") (term "1,1,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "eqSymm" (formula "3") (term "1,1,1,0,0,0"))
                                                                     (rule "eqSymm" (formula "3") (term "0,1,1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,1,1,0,0,0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "84")))
                                                                     (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "eqSymm" (formula "3") (term "0,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "3") (term "1,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0,0") (ifseqformula "90"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "89")))
                                                                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "eqSymm" (formula "3") (term "1,0,0,0"))
                                                                     (rule "eqSymm" (formula "3") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "86"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "85")))
                                                                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_8"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "134")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "23"))
                                                                     (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "14"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "130")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "1,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0,0") (ifseqformula "88"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "89")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "91"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "86"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "84"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")))
                                                                     (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_9"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "32"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "135")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "24"))
                                                                     (rule "replace_known_left" (formula "4") (term "0,0,1,0,0") (ifseqformula "15"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "elementOfUnion" (formula "4") (term "0,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "4") (term "1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "4") (term "0,1,0,1,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0,0,1,1,0,0"))
                                                                     (rule "add_literals" (formula "4") (term "0,0,0,1,1,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "0,1,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,0,0"))
                                                                     (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "131")))
                                                                     (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                                                                     (rule "elementOfUnion" (formula "4") (term "0,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "4") (term "1,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "4") (term "1,0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "eqSymm" (formula "4") (term "1,1,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "4") (term "0,1,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "4") (term "1,1,0,0,0,0") (ifseqformula "91"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "92")))
                                                                     (rule "elementOfUnion" (formula "4") (term "0,1,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "eqSymm" (formula "4") (term "1,0,1,0,0,0"))
                                                                     (rule "eqSymm" (formula "4") (term "0,0,1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "4") (term "1,0,1,0,0,0") (ifseqformula "88"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "87")))
                                                                     (rule "elementOfUnion" (formula "4") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "eqSymm" (formula "4") (term "0,0,0,0,0"))
                                                                     (rule "eqSymm" (formula "4") (term "1,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "90"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "89")))
                                                                     (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "eqSymm" (formula "4") (term "0,0,0,0"))
                                                                     (rule "eqSymm" (formula "4") (term "1,0,0,0"))
                                                                     (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "85"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "86")))
                                                                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_10"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "136")) (ifInst ""  (formula "16")))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_11"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "25"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "136")) (ifInst ""  (formula "16")))
                                                                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "jdiv_axiom" (formula "43") (term "0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "0,0,2,1"))
                                                                     (rule "eqSymm" (formula "43"))
                                                                     (rule "applyEq" (formula "43") (term "1") (ifseqformula "44"))
                                                                     (rule "inEqSimp_subsumption6" (formula "43") (term "0,0") (ifseqformula "36"))
                                                                     (rule "greater_literals" (formula "43") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "43"))
                                                                     (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                                                                     (rule "leq_literals" (formula "43") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "43"))
                                                                     (rule "polyDiv_pullOut" (formula "43") (term "0") (inst "polyDivCoeff=l_0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,2,0"))
                                                                     (rule "equal_literals" (formula "43") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "43"))
                                                                     (rule "polySimp_homoEq" (formula "43"))
                                                                     (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,0,1,0"))
                                                                     (rule "add_literals" (formula "43") (term "1,0,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "43") (term "0,0,0,1,0"))
                                                                     (rule "div_literals" (formula "43") (term "0,0,1,0"))
                                                                     (rule "add_zero_left" (formula "43") (term "0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                                                                     (rule "add_literals" (formula "43") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "43") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "43"))
                                                                     (rule "true_left" (formula "43"))
                                                                     (rule "jdiv_axiom" (formula "60") (term "0"))
                                                                     (rule "eqSymm" (formula "60"))
                                                                     (rule "polySimp_mulComm0" (formula "60") (term "0,0,2,0"))
                                                                     (rule "polySimp_rightDist" (formula "60") (term "0,0,2,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,2,0"))
                                                                     (rule "mul_literals" (formula "60") (term "0,0,0,2,0"))
                                                                     (rule "applyEqRigid" (formula "60") (term "1") (ifseqformula "61"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0"))
                                                                     (rule "mul_literals" (formula "60") (term "1,0,0"))
                                                                     (rule "inEqSimp_subsumption6" (formula "60") (term "0,0") (ifseqformula "59"))
                                                                     (rule "greater_literals" (formula "60") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "mul_literals" (formula "60") (term "1,0,0,0"))
                                                                     (rule "leq_literals" (formula "60") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "polyDiv_pullOut" (formula "60") (term "0") (inst "polyDivCoeff=l_1"))
                                                                     (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,2,0"))
                                                                     (rule "equal_literals" (formula "60") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "60") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "60") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "60") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "60") (term "0,0,0"))
                                                                     (rule "div_literals" (formula "60") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "true_left" (formula "60"))
                                                                     (rule "commuteUnion_2" (formula "56") (term "1"))
                                                                     (rule "jdiv_axiom" (formula "129") (term "0"))
                                                                     (rule "eqSymm" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0,0,2,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "60"))
                                                                     (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
                                                                     (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1"))
                                                                     (rule "applyEqRigid" (formula "130") (term "0") (ifseqformula "1"))
                                                                     (rule "polyDiv_pullOut" (formula "130") (term "0") (inst "polyDivCoeff=l_1"))
                                                                     (rule "equal_literals" (formula "130") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "130"))
                                                                     (rule "polySimp_mulLiterals" (formula "130") (term "1,0,0,0"))
                                                                     (rule "polySimp_homoEq" (formula "130"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "130") (term "0,0,0,1,0"))
                                                                     (rule "add_literals" (formula "130") (term "1,1,0,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "130") (term "1,0,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "130") (term "0,0,0,1,0"))
                                                                     (rule "div_literals" (formula "130") (term "0,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "130") (term "0"))
                                                                     (rule "add_literals" (formula "130") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "130") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "130"))
                                                                     (rule "closeTrue" (formula "130"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "69") (term "0") (inst "i=i") (userinteraction))
                                                                (builtin "One Step Simplification" (formula "69") (userinteraction))
                                                               (rule "allRight" (formula "69") (inst "sk=i_0") (userinteraction))
                                                               (rule "impRight" (formula "69"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "allLeftHide" (formula "3") (inst "t=i_0") (userinteraction))
                                                               (rule "translateJavaAddInt" (formula "3") (term "0,0,0"))
                                                               (rule "translateJavaAddInt" (formula "71") (term "0,2,1"))
                                                               (rule "translateJavaAddInt" (formula "1") (term "0"))
                                                               (rule "translateJavaSubInt" (formula "2") (term "1"))
                                                               (rule "translateJavaSubInt" (formula "3") (term "1,1,0"))
                                                               (rule "translateJavaMod" (formula "62") (term "0,1,0,0"))
                                                               (rule "translateJavaAddInt" (formula "62") (term "2,0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "3") (term "0,2,1,1"))
                                                               (rule "translateJavaAddInt" (formula "62") (term "3,0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "59") (term "2,0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "59") (term "3,0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "2") (term "0,1"))
                                                               (rule "translateJavaAddInt" (formula "3") (term "0,1,1,0"))
                                                               (rule "translateJavaAddInt" (formula "62") (term "0,2,1,3,0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "59") (term "0,2,1,3,0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "2") (term "0,2,1,0,1"))
                                                               (rule "translateJavaAddInt" (formula "3") (term "0,2,1,0,1,1,0"))
                                                               (rule "eqSymm" (formula "3") (term "1"))
                                                               (rule "replace_known_left" (formula "54") (term "0") (ifseqformula "8"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "andLeft" (formula "54"))
                                                               (rule "notLeft" (formula "55"))
                                                               (rule "andLeft" (formula "54"))
                                                               (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "8"))
                                                                (builtin "One Step Simplification" (formula "42"))
                                                               (rule "replace_known_left" (formula "66") (term "0") (ifseqformula "4"))
                                                                (builtin "One Step Simplification" (formula "66"))
                                                               (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "8"))
                                                                (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "55")))
                                                               (rule "true_left" (formula "49"))
                                                               (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                                                               (rule "polySimp_homoEq" (formula "5"))
                                                               (rule "polySimp_elimSub" (formula "2") (term "1"))
                                                               (rule "mul_literals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_homoEq" (formula "64"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                               (rule "add_literals" (formula "7") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                               (rule "add_literals" (formula "6") (term "0,1"))
                                                               (rule "polySimp_addComm0" (formula "72") (term "0,2,1"))
                                                               (rule "polySimp_addComm0" (formula "62") (term "0,2,1,3,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "59") (term "0,2,1,3,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "3") (term "0,2,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,2,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                                                               (rule "mul_literals" (formula "64") (term "0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_gtToGeq" (formula "18"))
                                                               (rule "mul_literals" (formula "18") (term "1,0,0"))
                                                               (rule "add_literals" (formula "18") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "9"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltRight" (formula "65"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "65") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "65") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "60") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "60") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_leqRight" (formula "72"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "64") (term "0,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "9"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "6"))
                                                               (rule "inEqSimp_ltToLeq" (formula "8"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "4"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "21"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                               (rule "apply_eq_monomials" (formula "1") (term "1,0") (ifseqformula "5"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "1") (term "1,0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,1,0"))
                                                               (rule "add_zero_right" (formula "1") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0"))
                                                               (rule "add_literals" (formula "1") (term "0"))
                                                               (rule "qeq_literals" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                         )
                                                         (branch "Assume 1 + bucket_0 != b_3_0"
                                                            (rule "translateJavaAddInt" (formula "68") (term "2,0"))
                                                            (rule "translateJavaAddInt" (formula "68") (term "3,0"))
                                                            (rule "translateJavaAddInt" (formula "56") (term "2,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "56") (term "3,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "68") (term "0,2,1,3,0"))
                                                            (rule "translateJavaAddInt" (formula "56") (term "0,2,1,3,0,1,0"))
                                                            (rule "notLeft" (formula "2"))
                                                            (rule "replace_known_left" (formula "61") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "61"))
                                                            (rule "replace_known_left" (formula "58") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "58"))
                                                            (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "38"))
                                                            (rule "replace_known_left" (formula "45") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "replace_known_left" (formula "50") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "45")))
                                                            (rule "andLeft" (formula "50"))
                                                            (rule "notLeft" (formula "51"))
                                                            (rule "polySimp_homoEq" (formula "61"))
                                                            (rule "polySimp_homoEq" (formula "60"))
                                                            (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "60") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "1"))
                                                            (rule "add_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_addComm0" (formula "69") (term "0,2,1,3,0"))
                                                            (rule "polySimp_addComm0" (formula "55") (term "0,2,1,3,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                                            (rule "mul_literals" (formula "61") (term "0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "60") (term "1,0"))
                                                            (rule "mul_literals" (formula "60") (term "0,1,0"))
                                                            (rule "inEqSimp_ltRight" (formula "62"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "15"))
                                                            (rule "mul_literals" (formula "15") (term "1,0,0"))
                                                            (rule "add_literals" (formula "15") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "62") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "61") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "61") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "56") (term "0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "56") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "4"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "3"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "2"))
                                                            (rule "inEqSimp_homoInEq0" (formula "16"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                            (rule "jmod_axiom" (formula "37") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "1,0"))
                                                            (rule "jmod_axiom" (formula "46") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "1,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "62"))
                                                            (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "62") (term "0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "61"))
                                                            (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "61") (term "0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "37"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "46"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                            (rule "mul_literals" (formula "15") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                            (rule "inEqSimp_contradEq7" (formula "61") (ifseqformula "4"))
                                                            (rule "polySimp_rightDist" (formula "61") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "61") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "61") (term "0,0,0"))
                                                            (rule "add_literals" (formula "61") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0"))
                                                            (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "61") (term "0,0"))
                                                            (rule "leq_literals" (formula "61") (term "0"))
                                                             (builtin "One Step Simplification" (formula "61"))
                                                            (rule "false_right" (formula "61"))
                                                            (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "61"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                            (rule "add_literals" (formula "3") (term "0,1"))
                                                            (rule "add_zero_left" (formula "3") (term "1"))
                                                            (rule "inEqSimp_contradEq7" (formula "61") (ifseqformula "3"))
                                                            (rule "polySimp_rightDist" (formula "61") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "61") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "61") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0"))
                                                            (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "61") (term "0,0"))
                                                            (rule "leq_literals" (formula "61") (term "0"))
                                                             (builtin "One Step Simplification" (formula "61"))
                                                            (rule "false_right" (formula "61"))
                                                            (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq0" (formula "45") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0"))
                                                            (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                                            (rule "add_literals" (formula "45") (term "0,0"))
                                                            (rule "qeq_literals" (formula "45") (term "0"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "true_left" (formula "45"))
                                                            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "15"))
                                                            (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0"))
                                                            (rule "qeq_literals" (formula "12") (term "0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0"))
                                                            (rule "qeq_literals" (formula "6") (term "0"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "close" (formula "67") (ifseqformula "3"))
                                                      )
                                                   )
                                                   (branch "1 + bucket_0 + 1 < result_22.num_buckets FALSE"
                                                      (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "42")))
                                                      (rule "andLeft" (formula "47"))
                                                      (rule "notLeft" (formula "48"))
                                                      (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "polySimp_homoEq" (formula "57"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                      (rule "add_literals" (formula "64") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "57") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "11"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "64"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "13"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                      (rule "jmod_axiom" (formula "34") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                                      (rule "jmod_axiom" (formula "43") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "58"))
                                                      (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "58") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "34"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "43"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                      (rule "mul_literals" (formula "12") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                      (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "58"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                      (rule "add_literals" (formula "3") (term "0,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "58") (ifseqformula "3"))
                                                      (rule "polySimp_rightDist" (formula "58") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "58") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "58") (term "0,0,0"))
                                                      (rule "add_literals" (formula "58") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0"))
                                                      (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "58") (term "0,0"))
                                                      (rule "leq_literals" (formula "58") (term "0"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "false_right" (formula "58"))
                                                      (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "12"))
                                                      (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0"))
                                                      (rule "qeq_literals" (formula "9") (term "0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0"))
                                                      (rule "qeq_literals" (formula "41") (term "0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "newSym_eq" (formula "33") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))"))
                                                      (rule "times_zero_1" (formula "33") (term "1,1"))
                                                      (rule "add_zero_right" (formula "33") (term "1"))
                                                      (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "33"))
                                                      (rule "eqSymm" (formula "34"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "47") (term "1,7,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "3") (term "0") (ifseqformula "34"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "applyEq" (formula "35") (term "0,2,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "46") (term "5,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "31") (term "5,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "36") (term "1,7,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "55") (term "5,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "47") (term "5,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "52") (term "5,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "36") (term "5,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "32") (term "5,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "32") (term "7,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "55") (term "1,7,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "45") (term "5,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "63") (term "1,7,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "54") (term "7,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "46") (term "7,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "63") (term "5,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "30") (term "2,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "34"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "applyEq" (formula "53") (term "5,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "54") (term "5,0") (ifseqformula "34"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "newSym_eq" (formula "42") (inst "l=l_1") (inst "newSymDef=mul(bucket_0, Z(0(#)))"))
                                                      (rule "times_zero_1" (formula "42") (term "1,1"))
                                                      (rule "add_zero_right" (formula "42") (term "1"))
                                                      (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "42"))
                                                      (rule "eqSymm" (formula "43"))
                                                      (rule "applyEqRigid" (formula "56") (term "1,6,0") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "43"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "applyEq" (formula "53") (term "1,7,0") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "55") (term "1,6,0") (ifseqformula "43"))
                                                      (rule "applyEqRigid" (formula "48") (term "1,6,0") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "43"))
                                                      (rule "applyEqRigid" (formula "45") (term "7,0") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "47") (term "6,0") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "3") (term "0") (ifseqformula "43"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                      (rule "leq_literals" (formula "3") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0"))
                                                      (rule "leq_literals" (formula "3") (term "0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                      (rule "leq_literals" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "neg_literal" (formula "1") (term "0,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elimGcdGeq_antec" (formula "41") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "41") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0"))
                                                      (rule "leq_literals" (formula "41") (term "0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "57") (term "0,1,7,0") (ifseqformula "3"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,7,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,7,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,7,0"))
                                                      (rule "polySimp_addAssoc" (formula "57") (term "7,0"))
                                                      (rule "add_literals" (formula "57") (term "0,7,0"))
                                                      (rule "applyEq" (formula "57") (term "0,5,0") (ifseqformula "3"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "5,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "5,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,5,0"))
                                                      (rule "applyEqRigid" (formula "37") (term "0,5,0") (ifseqformula "3"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "5,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "5,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,5,0"))
                                                      (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0"))
                                                      (rule "qeq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEqRigid" (formula "31") (term "0,5,0") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "5,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "5,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,5,0"))
                                                      (rule "applyEq" (formula "64") (term "0,5,0") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "64") (term "5,0"))
                                                      (rule "polySimp_rightDist" (formula "64") (term "5,0"))
                                                      (rule "mul_literals" (formula "64") (term "0,5,0"))
                                                      (rule "applyEq" (formula "46") (term "0,5,0") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "5,0"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "5,0"))
                                                      (rule "mul_literals" (formula "46") (term "0,5,0"))
                                                      (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEq" (formula "63") (term "0,1,7,0") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,7,0"))
                                                      (rule "polySimp_rightDist" (formula "63") (term "1,7,0"))
                                                      (rule "mul_literals" (formula "63") (term "0,1,7,0"))
                                                      (rule "polySimp_addAssoc" (formula "63") (term "7,0"))
                                                      (rule "add_literals" (formula "63") (term "0,7,0"))
                                                      (rule "applyEqRigid" (formula "53") (term "0,5,0") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "53") (term "5,0"))
                                                      (rule "polySimp_rightDist" (formula "53") (term "5,0"))
                                                      (rule "mul_literals" (formula "53") (term "0,5,0"))
                                                      (rule "applyEqRigid" (formula "52") (term "0,5,0") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "5,0"))
                                                      (rule "polySimp_rightDist" (formula "52") (term "5,0"))
                                                      (rule "mul_literals" (formula "52") (term "0,5,0"))
                                                      (rule "close" (formula "63") (ifseqformula "52"))
                                                   )
                                                )
                                                (branch "CUT: result_22.equal_buckets = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "62")) (ifInst ""  (formula "62")))
                                                   (rule "add_zero_right" (formula "63") (term "7,0"))
                                                   (rule "close" (formula "63") (ifseqformula "51"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "ifthenelse_split" (formula "62") (term "1,1,6,0") (userinteraction))
                                             (branch "result_22.equal_buckets = TRUE TRUE"
                                                (rule "replace_known_left" (formula "63") (term "0,1,0,0,0,6,0") (ifseqformula "1") (userinteraction))
                                                 (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "1")) (userinteraction))
                                                (rule "ifthenelse_split" (formula "63") (term "6,0") (userinteraction))
                                                (branch "1 + bucket_0 + 1 < result_22.num_buckets TRUE"
                                                   (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "64") (term "0") (inst "b=b_3") (userinteraction))
                                                    (builtin "One Step Simplification" (formula "64") (userinteraction))
                                                   (rule "Definition_axiom_for_smallBucketIsSorted_in_de_wiesler_Sorter" (formula "64") (term "0,1,0") (userinteraction))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "closeTrue" (formula "64"))
                                                )
                                                (branch "1 + bucket_0 + 1 < result_22.num_buckets FALSE"
                                                   (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "42")))
                                                   (rule "andLeft" (formula "47"))
                                                   (rule "notLeft" (formula "48"))
                                                   (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "polySimp_homoEq" (formula "57"))
                                                   (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                   (rule "add_literals" (formula "64") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                   (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "57") (term "0,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "11"))
                                                   (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_ltRight" (formula "64"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "13"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                   (rule "jmod_axiom" (formula "34") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                                   (rule "jmod_axiom" (formula "43") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "58"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "58") (term "0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "34"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "43"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                   (rule "mul_literals" (formula "12") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                   (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "58"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                   (rule "add_literals" (formula "3") (term "0,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "58") (ifseqformula "3"))
                                                   (rule "polySimp_rightDist" (formula "58") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "58") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "58") (term "0,0,0"))
                                                   (rule "add_literals" (formula "58") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0"))
                                                   (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "58") (term "0,0"))
                                                   (rule "leq_literals" (formula "58") (term "0"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "false_right" (formula "58"))
                                                   (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0"))
                                                   (rule "qeq_literals" (formula "9") (term "0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                                                   (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                   (rule "add_literals" (formula "41") (term "0,0"))
                                                   (rule "qeq_literals" (formula "41") (term "0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "true_left" (formula "41"))
                                                   (rule "newSym_eq" (formula "33") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))"))
                                                   (rule "times_zero_1" (formula "33") (term "1,1"))
                                                   (rule "add_zero_right" (formula "33") (term "1"))
                                                   (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "33"))
                                                   (rule "eqSymm" (formula "34"))
                                                   (rule "applyEq" (formula "31") (term "5,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "30") (term "2,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "34"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "32") (term "5,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "52") (term "5,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "63") (term "1,6,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "34"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "applyEq" (formula "53") (term "5,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "55") (term "1,7,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "55") (term "5,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "46") (term "7,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "54") (term "7,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "35") (term "0,2,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "32") (term "7,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "63") (term "7,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "47") (term "5,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "54") (term "5,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "47") (term "1,7,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "36") (term "1,7,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "46") (term "5,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "36") (term "5,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "45") (term "5,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "63") (term "5,0") (ifseqformula "34"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "newSym_eq" (formula "42") (inst "l=l_1") (inst "newSymDef=mul(bucket_0, Z(0(#)))"))
                                                   (rule "times_zero_1" (formula "42") (term "1,1"))
                                                   (rule "add_zero_right" (formula "42") (term "1"))
                                                   (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "42"))
                                                   (rule "eqSymm" (formula "43"))
                                                   (rule "applyEqRigid" (formula "42") (term "0,0") (ifseqformula "43"))
                                                   (rule "applyEqRigid" (formula "55") (term "1,6,0") (ifseqformula "43"))
                                                   (rule "applyEqRigid" (formula "56") (term "1,6,0") (ifseqformula "43"))
                                                   (rule "applyEqRigid" (formula "53") (term "1,7,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "47") (term "6,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                                                   (rule "applyEqRigid" (formula "45") (term "7,0") (ifseqformula "43"))
                                                   (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "43"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "applyEq" (formula "48") (term "1,6,0") (ifseqformula "43"))
                                                   (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "43"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "neg_literal" (formula "1") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                   (rule "leq_literals" (formula "1") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                   (rule "leq_literals" (formula "3") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                   (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                   (rule "leq_literals" (formula "3") (term "0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "elimGcdGeq_antec" (formula "41") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "41") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                   (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                   (rule "add_literals" (formula "41") (term "0,0"))
                                                   (rule "leq_literals" (formula "41") (term "0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "46") (term "0,5,0") (ifseqformula "3"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "5,0"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "5,0"))
                                                   (rule "mul_literals" (formula "46") (term "0,5,0"))
                                                   (rule "applyEq" (formula "48") (term "0,5,0") (ifseqformula "3"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "5,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "5,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,5,0"))
                                                   (rule "applyEqRigid" (formula "55") (term "0,5,0") (ifseqformula "3"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "5,0"))
                                                   (rule "polySimp_rightDist" (formula "55") (term "5,0"))
                                                   (rule "mul_literals" (formula "55") (term "0,5,0"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "0"))
                                                   (rule "qeq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "applyEqRigid" (formula "55") (term "0,5,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "5,0"))
                                                   (rule "polySimp_rightDist" (formula "55") (term "5,0"))
                                                   (rule "mul_literals" (formula "55") (term "0,5,0"))
                                                   (rule "applyEqRigid" (formula "35") (term "0,0,2,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "0,2,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "0,2,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,0,2,0"))
                                                   (rule "applyEq" (formula "46") (term "0,5,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "5,0"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "5,0"))
                                                   (rule "mul_literals" (formula "46") (term "0,5,0"))
                                                   (rule "applyEq" (formula "32") (term "0,7,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "7,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "7,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,7,0"))
                                                   (rule "applyEqRigid" (formula "31") (term "0,5,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "5,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "5,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,5,0"))
                                                   (rule "applyEqRigid" (formula "36") (term "0,1,7,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,7,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,7,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,7,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "7,0"))
                                                   (rule "add_literals" (formula "36") (term "0,7,0"))
                                                   (rule "applyEq" (formula "48") (term "0,1,7,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,7,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,7,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,7,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "7,0"))
                                                   (rule "add_literals" (formula "48") (term "0,7,0"))
                                                   (rule "applyEq" (formula "56") (term "0,1,7,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,7,0"))
                                                   (rule "polySimp_rightDist" (formula "56") (term "1,7,0"))
                                                   (rule "mul_literals" (formula "56") (term "0,1,7,0"))
                                                   (rule "polySimp_addAssoc" (formula "56") (term "7,0"))
                                                   (rule "add_literals" (formula "56") (term "0,7,0"))
                                                   (rule "applyEq" (formula "48") (term "0,5,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "5,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "5,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,5,0"))
                                                   (rule "applyEqRigid" (formula "36") (term "0,5,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "5,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "5,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,5,0"))
                                                   (rule "applyEqRigid" (formula "37") (term "0,2,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "2,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "2,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,2,0"))
                                                   (rule "applyEq" (formula "53") (term "0,5,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "5,0"))
                                                   (rule "polySimp_rightDist" (formula "53") (term "5,0"))
                                                   (rule "mul_literals" (formula "53") (term "0,5,0"))
                                                   (rule "applyEq" (formula "30") (term "0,2,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "2,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "2,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,2,0"))
                                                   (rule "applyEqRigid" (formula "55") (term "0,7,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "7,0"))
                                                   (rule "polySimp_rightDist" (formula "55") (term "7,0"))
                                                   (rule "mul_literals" (formula "55") (term "0,7,0"))
                                                   (rule "applyEqRigid" (formula "32") (term "0,5,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "5,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "5,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,5,0"))
                                                   (rule "applyEq" (formula "64") (term "0,7,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "64") (term "7,0"))
                                                   (rule "polySimp_rightDist" (formula "64") (term "7,0"))
                                                   (rule "mul_literals" (formula "64") (term "0,7,0"))
                                                   (rule "applyEqRigid" (formula "64") (term "0,1,6,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "64") (term "1,6,0"))
                                                   (rule "polySimp_rightDist" (formula "64") (term "1,6,0"))
                                                   (rule "mul_literals" (formula "64") (term "0,1,6,0"))
                                                   (rule "polySimp_addAssoc" (formula "64") (term "6,0"))
                                                   (rule "add_literals" (formula "64") (term "0,6,0"))
                                                   (rule "applyEqRigid" (formula "56") (term "0,5,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "5,0"))
                                                   (rule "polySimp_rightDist" (formula "56") (term "5,0"))
                                                   (rule "mul_literals" (formula "56") (term "0,5,0"))
                                                   (rule "applyEqRigid" (formula "47") (term "0,7,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "7,0"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "7,0"))
                                                   (rule "mul_literals" (formula "47") (term "0,7,0"))
                                                   (rule "applyEqRigid" (formula "64") (term "0,5,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "64") (term "5,0"))
                                                   (rule "polySimp_rightDist" (formula "64") (term "5,0"))
                                                   (rule "mul_literals" (formula "64") (term "0,5,0"))
                                                   (rule "close" (formula "64") (ifseqformula "55"))
                                                )
                                             )
                                             (branch "result_22.equal_buckets = TRUE FALSE"
                                                (rule "add_zero_right" (formula "63") (term "1,6,0"))
                                                (rule "replace_known_right" (formula "63") (term "0,1,0,6,0") (ifseqformula "62"))
                                                 (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "62")) (ifInst ""  (formula "53")))
                                                (rule "closeTrue" (formula "63"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "impRight" (formula "62"))
                                          (rule "andRight" (formula "63"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "63"))
                                             (branch "Case 1"
                                                (rule "replace_known_left" (formula "63") (term "0,1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "andLeft" (formula "47"))
                                                (rule "notLeft" (formula "48"))
                                                (rule "andLeft" (formula "47"))
                                                (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "48")))
                                                (rule "true_left" (formula "42"))
                                                (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "polySimp_homoEq" (formula "57"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "64") (term "0,0"))
                                                (rule "add_literals" (formula "64") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                (rule "polySimp_addComm0" (formula "57") (term "0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "11"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "jmod_axiom" (formula "33") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                                (rule "jmod_axiom" (formula "47") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                                                (rule "jmod_axiom" (formula "64") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "57"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                                (rule "polySimp_elimOne" (formula "57") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "33"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "47"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "64"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                (rule "mul_literals" (formula "11") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "57"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                                (rule "add_literals" (formula "2") (term "0,1"))
                                                (rule "inEqSimp_contradEq7" (formula "57") (ifseqformula "2"))
                                                (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                                                (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "57") (term "0,0,0"))
                                                (rule "add_literals" (formula "57") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0"))
                                                (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "57") (term "0,0"))
                                                (rule "leq_literals" (formula "57") (term "0"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "false_right" (formula "57"))
                                                (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "11"))
                                                (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0"))
                                                (rule "qeq_literals" (formula "8") (term "0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "40") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                (rule "add_literals" (formula "40") (term "0,0"))
                                                (rule "qeq_literals" (formula "40") (term "0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "newSym_eq" (formula "32") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))"))
                                                (rule "times_zero_1" (formula "32") (term "1,1"))
                                                (rule "add_zero_right" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                                (rule "eqSymm" (formula "33"))
                                                (rule "applyEq" (formula "42") (term "5,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "43") (term "5,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "35") (term "1,7,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "54") (term "5,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "35") (term "5,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "53") (term "7,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "45") (term "1,7,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "54") (term "1,7,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "44") (term "7,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "53") (term "5,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "31") (term "7,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "45") (term "5,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "34") (term "0,2,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "52") (term "5,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "33"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "applyEq" (formula "31") (term "5,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "51") (term "5,0") (ifseqformula "33"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "newSym_eq" (formula "46") (inst "l=l_1") (inst "newSymDef=mul(bucket_0, Z(0(#)))"))
                                                (rule "times_zero_1" (formula "46") (term "1,1"))
                                                (rule "add_zero_right" (formula "46") (term "1"))
                                                (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "46"))
                                                (rule "eqSymm" (formula "47"))
                                                (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "47"))
                                                (rule "applyEq" (formula "44") (term "6,0") (ifseqformula "47"))
                                                (rule "applyEq" (formula "45") (term "1,6,0") (ifseqformula "47"))
                                                (rule "applyEqRigid" (formula "55") (term "1,6,0") (ifseqformula "47"))
                                                (rule "applyEqRigid" (formula "52") (term "1,7,0") (ifseqformula "47"))
                                                (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "47"))
                                                (rule "applyEq" (formula "42") (term "7,0") (ifseqformula "47"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "47"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "applyEq" (formula "54") (term "1,6,0") (ifseqformula "47"))
                                                (rule "applyEqRigid" (formula "63") (term "1,0,0,0") (ifseqformula "47"))
                                                (rule "applyEq" (formula "63") (term "1,1") (ifseqformula "47"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "elimGcdEq" (formula "63") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=jdiv(add(Z(2(#)), mul(l_1, Z(2(#)))), Z(2(#)))") (inst "elimGcd=Z(2(#))"))
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "63") (term "0,1,0,0,1"))
                                                (rule "add_literals" (formula "63") (term "1,0,0"))
                                                (rule "mul_literals" (formula "63") (term "0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "63") (term "0,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "63") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "63") (term "0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "63") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "63") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "63") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "63") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "63") (term "0,0,0"))
                                                (rule "add_literals" (formula "63") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "63") (term "0,0,0"))
                                                (rule "leq_literals" (formula "63") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                                                (rule "add_literals" (formula "63") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "63") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "63") (term "0,0"))
                                                (rule "add_literals" (formula "63") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "63") (term "0,0"))
                                                (rule "qeq_literals" (formula "63") (term "0"))
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                                                (rule "add_literals" (formula "63") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "63") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "63") (term "0,0"))
                                                (rule "add_literals" (formula "63") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "63") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "leq_literals" (formula "2") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "leq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "elimGcdGeq_antec" (formula "40") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                                                (rule "add_zero_right" (formula "40") (term "0,0,0,1,0"))
                                                (rule "leq_literals" (formula "40") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "times_zero_1" (formula "40") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                                (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                (rule "add_literals" (formula "40") (term "0,0"))
                                                (rule "leq_literals" (formula "40") (term "0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "nnf_imp2or" (formula "18") (term "0"))
                                                (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "12"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "translateJavaMulInt" (formula "12") (term "1,1,0,0,0,0,1,0,0"))
                                                (rule "translateJavaMulInt" (formula "12") (term "1,1,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "12") (term "1,1,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "12") (term "1,1,0,0,0,0,0,1,0,0"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "15"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "notLeft" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "18"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "notLeft" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "notLeft" (formula "13"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "notLeft" (formula "13"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "notLeft" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "notLeft" (formula "13"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "notLeft" (formula "13"))
                                                (rule "notLeft" (formula "12"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "disjointDefinition" (formula "48"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "notLeft" (formula "48"))
                                                (rule "disjointDefinition" (formula "47"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "notLeft" (formula "47"))
                                                (rule "disjointDefinition" (formula "46"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "notLeft" (formula "46"))
                                                (rule "eqSymm" (formula "90"))
                                                (rule "disjointDefinition" (formula "45"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "notLeft" (formula "45"))
                                                (rule "eqSymm" (formula "89"))
                                                (rule "disjointDefinition" (formula "44"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "notLeft" (formula "44"))
                                                (rule "eqSymm" (formula "88"))
                                                (rule "disjointDefinition" (formula "43"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "notLeft" (formula "43"))
                                                (rule "eqSymm" (formula "87"))
                                                (rule "disjointDefinition" (formula "42"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "notLeft" (formula "42"))
                                                (rule "eqSymm" (formula "86"))
                                                (rule "disjointDefinition" (formula "41"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "notLeft" (formula "41"))
                                                (rule "eqSymm" (formula "85"))
                                                (rule "disjointDefinition" (formula "40"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "notLeft" (formula "40"))
                                                (rule "eqSymm" (formula "84"))
                                                (rule "disjointDefinition" (formula "39"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "notLeft" (formula "39"))
                                                (rule "eqSymm" (formula "83"))
                                                (rule "disjointDefinition" (formula "38"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "notLeft" (formula "38"))
                                                (rule "eqSymm" (formula "82"))
                                                (rule "disjointDefinition" (formula "37"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "notLeft" (formula "37"))
                                                (rule "eqSymm" (formula "81"))
                                                (rule "disjointDefinition" (formula "36"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "notLeft" (formula "36"))
                                                (rule "eqSymm" (formula "80"))
                                                (rule "disjointDefinition" (formula "35"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "notLeft" (formula "35"))
                                                (rule "eqSymm" (formula "79"))
                                                (rule "disjointDefinition" (formula "34"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "notLeft" (formula "34"))
                                                (rule "eqSymm" (formula "78"))
                                                (rule "disjointDefinition" (formula "33"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "notLeft" (formula "33"))
                                                (rule "disjointDefinition" (formula "32"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "notLeft" (formula "32"))
                                                (rule "eqSymm" (formula "76"))
                                                (rule "disjointDefinition" (formula "31"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "notLeft" (formula "31"))
                                                (rule "eqSymm" (formula "75"))
                                                (rule "disjointDefinition" (formula "30"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "notLeft" (formula "30"))
                                                (rule "disjointDefinition" (formula "29"))
                                                 (builtin "One Step Simplification" (formula "29"))
                                                (rule "notLeft" (formula "29"))
                                                (rule "disjointDefinition" (formula "28"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "notLeft" (formula "28"))
                                                (rule "disjointDefinition" (formula "27"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "notLeft" (formula "27"))
                                                (rule "disjointDefinition" (formula "26"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "notLeft" (formula "26"))
                                                (rule "disjointDefinition" (formula "25"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "disjointDefinition" (formula "24"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "notLeft" (formula "24"))
                                                (rule "disjointDefinition" (formula "23"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "notLeft" (formula "23"))
                                                (rule "disjointDefinition" (formula "22"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "notLeft" (formula "22"))
                                                (rule "disjointDefinition" (formula "21"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "notLeft" (formula "21"))
                                                (rule "applyEq" (formula "33") (term "1,0,1,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "52") (term "0,1,0,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "51") (term "0,1,0,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "53") (term "0,1,0,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "57") (term "0,1,0,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "59") (term "0,1,0,2,1") (ifseqformula "20"))
                                                (rule "applyEq" (formula "50") (term "0,1,0,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "49") (term "0,1,0,2,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "20"))
                                                (rule "distributeIntersection" (formula "31") (term "0"))
                                                (rule "distributeIntersection" (formula "30") (term "0"))
                                                (rule "distributeIntersection" (formula "21") (term "0"))
                                                (rule "distributeIntersection" (formula "31") (term "1,0"))
                                                (rule "distributeIntersection" (formula "31") (term "0,0"))
                                                (rule "distributeIntersection" (formula "30") (term "1,0"))
                                                (rule "distributeIntersection" (formula "30") (term "0,0"))
                                                (rule "distributeIntersection" (formula "21") (term "1,0"))
                                                (rule "distributeIntersection" (formula "21") (term "0,0"))
                                                (rule "distributeIntersection" (formula "31") (term "1,1,0"))
                                                (rule "distributeIntersection" (formula "31") (term "0,1,0"))
                                                (rule "distributeIntersection" (formula "31") (term "0,0,0"))
                                                (rule "distributeIntersection" (formula "31") (term "1,0,0"))
                                                (rule "distributeIntersection" (formula "30") (term "1,1,0"))
                                                (rule "distributeIntersection" (formula "30") (term "0,1,0"))
                                                (rule "distributeIntersection" (formula "30") (term "0,0,0"))
                                                (rule "distributeIntersection" (formula "30") (term "1,0,0"))
                                                (rule "distributeIntersection" (formula "21") (term "0,1,0"))
                                                (rule "distributeIntersection" (formula "21") (term "1,1,0"))
                                                (rule "distributeIntersection" (formula "21") (term "1,0,0"))
                                                (rule "distributeIntersection" (formula "21") (term "0,0,0"))
                                                (rule "unionEqualsEmpty" (formula "31"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "unionEqualsEmpty" (formula "30"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "unionEqualsEmpty" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "unionEqualsEmpty" (formula "33"))
                                                (rule "andLeft" (formula "33"))
                                                (rule "unionEqualsEmpty" (formula "35"))
                                                (rule "andLeft" (formula "35"))
                                                (rule "unionEqualsEmpty" (formula "31"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "unionEqualsEmpty" (formula "33"))
                                                (rule "andLeft" (formula "33"))
                                                (rule "unionEqualsEmpty" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "unionEqualsEmpty" (formula "23"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "unionEqualsEmpty" (formula "38"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "andLeft" (formula "38"))
                                                (rule "notLeft" (formula "39"))
                                                (rule "notLeft" (formula "38"))
                                                (rule "eqSymm" (formula "74"))
                                                (rule "eqSymm" (formula "73"))
                                                (rule "sortsDisjointModuloNull" (formula "74"))
                                                (rule "replace_known_right" (formula "74") (term "1") (ifseqformula "115"))
                                                 (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "106")))
                                                (rule "false_right" (formula "74"))
                                                (rule "sortsDisjointModuloNull" (formula "73"))
                                                (rule "replace_known_right" (formula "73") (term "1") (ifseqformula "114"))
                                                 (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "104")))
                                                (rule "false_right" (formula "73"))
                                                (rule "unionEqualsEmpty" (formula "37"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "andLeft" (formula "37"))
                                                (rule "notLeft" (formula "37"))
                                                (rule "notLeft" (formula "37"))
                                                (rule "eqSymm" (formula "73"))
                                                (rule "eqSymm" (formula "72"))
                                                (rule "sortsDisjointModuloNull" (formula "73"))
                                                (rule "replace_known_right" (formula "73") (term "1") (ifseqformula "114"))
                                                 (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "102")))
                                                (rule "false_right" (formula "73"))
                                                (rule "sortsDisjointModuloNull" (formula "72"))
                                                (rule "replace_known_right" (formula "72") (term "1") (ifseqformula "113"))
                                                 (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "102")))
                                                (rule "false_right" (formula "72"))
                                                (rule "unionEqualsEmpty" (formula "38"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "andLeft" (formula "38"))
                                                (rule "notLeft" (formula "38"))
                                                (rule "notLeft" (formula "38"))
                                                (rule "eqSymm" (formula "72"))
                                                (rule "eqSymm" (formula "71"))
                                                (rule "sortsDisjointModuloNull" (formula "72"))
                                                (rule "replace_known_right" (formula "72") (term "0") (ifseqformula "107"))
                                                 (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "113")))
                                                (rule "false_right" (formula "72"))
                                                (rule "sortsDisjointModuloNull" (formula "71"))
                                                (rule "replace_known_right" (formula "71") (term "0") (ifseqformula "107"))
                                                 (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "112")))
                                                (rule "false_right" (formula "71"))
                                                (rule "unionEqualsEmpty" (formula "37"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "andLeft" (formula "37"))
                                                (rule "notLeft" (formula "37"))
                                                (rule "notLeft" (formula "37"))
                                                (rule "eqSymm" (formula "71"))
                                                (rule "eqSymm" (formula "70"))
                                                (rule "sortsDisjointModuloNull" (formula "71"))
                                                (rule "replace_known_right" (formula "71") (term "1") (ifseqformula "112"))
                                                 (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "104")))
                                                (rule "false_right" (formula "71"))
                                                (rule "sortsDisjointModuloNull" (formula "70"))
                                                (rule "replace_known_right" (formula "70") (term "0") (ifseqformula "104"))
                                                 (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "111")))
                                                (rule "false_right" (formula "70"))
                                                (rule "unionEqualsEmpty" (formula "34"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "notLeft" (formula "35"))
                                                (rule "notLeft" (formula "34"))
                                                (rule "eqSymm" (formula "70"))
                                                (rule "eqSymm" (formula "69"))
                                                (rule "unionEqualsEmpty" (formula "33"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "andLeft" (formula "33"))
                                                (rule "notLeft" (formula "34"))
                                                (rule "notLeft" (formula "33"))
                                                (rule "eqSymm" (formula "69"))
                                                (rule "eqSymm" (formula "68"))
                                                (rule "unionEqualsEmpty" (formula "33"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "andLeft" (formula "33"))
                                                (rule "notLeft" (formula "33"))
                                                (rule "notLeft" (formula "33"))
                                                (rule "eqSymm" (formula "68"))
                                                (rule "eqSymm" (formula "67"))
                                                (rule "unionEqualsEmpty" (formula "33"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "andLeft" (formula "33"))
                                                (rule "notLeft" (formula "34"))
                                                (rule "notLeft" (formula "33"))
                                                (rule "eqSymm" (formula "67"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "unionEqualsEmpty" (formula "22"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "notLeft" (formula "23"))
                                                (rule "notLeft" (formula "22"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "unionEqualsEmpty" (formula "21"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "notLeft" (formula "21"))
                                                (rule "notLeft" (formula "21"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "unionEqualsEmpty" (formula "22"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "notLeft" (formula "23"))
                                                (rule "notLeft" (formula "22"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "eqSymm" (formula "63"))
                                                (rule "unionEqualsEmpty" (formula "21"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "notLeft" (formula "22"))
                                                (rule "notLeft" (formula "21"))
                                                (rule "eqSymm" (formula "63"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "commuteUnion_2" (formula "20") (term "0,1"))
                                                (rule "commuteUnion" (formula "20") (term "1,1,1"))
                                                (rule "commuteUnion_2" (formula "30") (term "0,1,0,1,0"))
                                                (rule "commuteUnion" (formula "30") (term "1,1,1,0,1,0"))
                                                (rule "commuteUnion" (formula "49") (term "1,1,0,1,0,0"))
                                                (rule "commuteUnion_2" (formula "49") (term "0,0,1,0,0"))
                                                (rule "commuteUnion" (formula "48") (term "1,1,0,1,0,0"))
                                                (rule "commuteUnion" (formula "48") (term "0,0,1,0,0"))
                                                (rule "commuteUnion_2" (formula "54") (term "0,0,1,0"))
                                                (rule "commuteUnion" (formula "54") (term "1,1,0,1,0"))
                                                (rule "commuteUnion" (formula "50") (term "0,0,0,1,0,0"))
                                                (rule "commuteUnion" (formula "50") (term "1,1,0,1,0,0"))
                                                (rule "commuteUnion" (formula "54") (term "0,0,0,1,0,0"))
                                                (rule "commuteUnion" (formula "54") (term "1,1,0,1,0,0"))
                                                (rule "commuteUnion" (formula "56") (term "1,1,0,1,0,2,1"))
                                                (rule "commuteUnion" (formula "56") (term "0,0,0,1,0,2,1"))
                                                (rule "commuteUnion" (formula "47") (term "1,1,0,1,0,0"))
                                                (rule "commuteUnion_2" (formula "47") (term "0,0,1,0,0"))
                                                (rule "commuteUnion_2" (formula "46") (term "0,0,1,0,2,0"))
                                                (rule "commuteUnion" (formula "46") (term "1,1,0,1,0,2,0"))
                                                (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "61"))
                                                 (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "106")) (ifInst ""  (formula "107")) (ifInst ""  (formula "108")) (ifInst ""  (formula "109")) (ifInst ""  (formula "110")) (ifInst ""  (formula "111")) (ifInst ""  (formula "112")) (ifInst ""  (formula "113")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")))
                                                (rule "translateJavaMulInt" (formula "61") (term "1,1,0,0"))
                                                (rule "translateJavaMulInt" (formula "61") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "61") (term "1,0,0,0"))
                                                (rule "andLeft" (formula "61"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "61"))
                                                (rule "andLeft" (formula "63"))
                                                (rule "andLeft" (formula "61"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "disjointDefinition" (formula "89"))
                                                 (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "133")))
                                                (rule "true_left" (formula "89"))
                                                (rule "disjointDefinition" (formula "88"))
                                                 (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "131")))
                                                (rule "true_left" (formula "88"))
                                                (rule "disjointDefinition" (formula "87"))
                                                 (builtin "One Step Simplification" (formula "87"))
                                                (rule "notLeft" (formula "87"))
                                                (rule "eqSymm" (formula "87"))
                                                (rule "disjointDefinition" (formula "86"))
                                                 (builtin "One Step Simplification" (formula "86"))
                                                (rule "notLeft" (formula "86"))
                                                (rule "eqSymm" (formula "86"))
                                                (rule "disjointDefinition" (formula "85"))
                                                 (builtin "One Step Simplification" (formula "85"))
                                                (rule "notLeft" (formula "85"))
                                                (rule "eqSymm" (formula "85"))
                                                (rule "disjointDefinition" (formula "84"))
                                                 (builtin "One Step Simplification" (formula "84"))
                                                (rule "notLeft" (formula "84"))
                                                (rule "eqSymm" (formula "84"))
                                                (rule "disjointDefinition" (formula "83"))
                                                 (builtin "One Step Simplification" (formula "83"))
                                                (rule "notLeft" (formula "83"))
                                                (rule "eqSymm" (formula "83"))
                                                (rule "disjointDefinition" (formula "82"))
                                                 (builtin "One Step Simplification" (formula "82"))
                                                (rule "notLeft" (formula "82"))
                                                (rule "eqSymm" (formula "82"))
                                                (rule "disjointDefinition" (formula "81"))
                                                 (builtin "One Step Simplification" (formula "81"))
                                                (rule "notLeft" (formula "81"))
                                                (rule "eqSymm" (formula "81"))
                                                (rule "disjointDefinition" (formula "80"))
                                                 (builtin "One Step Simplification" (formula "80"))
                                                (rule "notLeft" (formula "80"))
                                                (rule "eqSymm" (formula "80"))
                                                (rule "disjointDefinition" (formula "79"))
                                                 (builtin "One Step Simplification" (formula "79"))
                                                (rule "notLeft" (formula "79"))
                                                (rule "eqSymm" (formula "79"))
                                                (rule "disjointDefinition" (formula "78"))
                                                 (builtin "One Step Simplification" (formula "78"))
                                                (rule "notLeft" (formula "78"))
                                                (rule "eqSymm" (formula "78"))
                                                (rule "disjointDefinition" (formula "77"))
                                                 (builtin "One Step Simplification" (formula "77"))
                                                (rule "notLeft" (formula "77"))
                                                (rule "eqSymm" (formula "77"))
                                                (rule "disjointDefinition" (formula "76"))
                                                 (builtin "One Step Simplification" (formula "76"))
                                                (rule "notLeft" (formula "76"))
                                                (rule "eqSymm" (formula "76"))
                                                (rule "disjointDefinition" (formula "75"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "notLeft" (formula "75"))
                                                (rule "eqSymm" (formula "75"))
                                                (rule "disjointDefinition" (formula "74"))
                                                 (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "103")))
                                                (rule "true_left" (formula "74"))
                                                (rule "disjointDefinition" (formula "73"))
                                                 (builtin "One Step Simplification" (formula "73"))
                                                (rule "notLeft" (formula "73"))
                                                (rule "eqSymm" (formula "73"))
                                                (rule "disjointDefinition" (formula "72"))
                                                 (builtin "One Step Simplification" (formula "72"))
                                                (rule "notLeft" (formula "72"))
                                                (rule "eqSymm" (formula "72"))
                                                (rule "disjointDefinition" (formula "71"))
                                                 (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "97")))
                                                (rule "true_left" (formula "71"))
                                                (rule "disjointDefinition" (formula "70"))
                                                 (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "95")))
                                                (rule "true_left" (formula "70"))
                                                (rule "disjointDefinition" (formula "69"))
                                                 (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "93")))
                                                (rule "true_left" (formula "69"))
                                                (rule "disjointDefinition" (formula "68"))
                                                 (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "91")))
                                                (rule "true_left" (formula "68"))
                                                (rule "disjointDefinition" (formula "67"))
                                                 (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "89")))
                                                (rule "true_left" (formula "67"))
                                                (rule "disjointDefinition" (formula "66"))
                                                 (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "87")))
                                                (rule "true_left" (formula "66"))
                                                (rule "disjointDefinition" (formula "65"))
                                                 (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "85")))
                                                (rule "true_left" (formula "65"))
                                                (rule "disjointDefinition" (formula "64"))
                                                 (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "83")))
                                                (rule "true_left" (formula "64"))
                                                (rule "disjointDefinition" (formula "62"))
                                                 (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "80")))
                                                (rule "true_left" (formula "62"))
                                                (rule "disjointDefinition" (formula "62"))
                                                 (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "80")))
                                                (rule "true_left" (formula "62"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "20"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "42"))
                                                 (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "106")) (ifInst ""  (formula "107")) (ifInst ""  (formula "108")) (ifInst ""  (formula "109")) (ifInst ""  (formula "110")) (ifInst ""  (formula "111")) (ifInst ""  (formula "112")) (ifInst ""  (formula "113")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")))
                                                (rule "translateJavaMulInt" (formula "42") (term "1,1,0,0"))
                                                (rule "translateJavaMulInt" (formula "42") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "42") (term "1,0,0,0"))
                                                (rule "andLeft" (formula "42"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "42"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "andLeft" (formula "42"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "disjointDefinition" (formula "70"))
                                                 (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "133")))
                                                (rule "true_left" (formula "70"))
                                                (rule "disjointDefinition" (formula "69"))
                                                 (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "131")))
                                                (rule "true_left" (formula "69"))
                                                (rule "disjointDefinition" (formula "68"))
                                                 (builtin "One Step Simplification" (formula "68"))
                                                (rule "notLeft" (formula "68"))
                                                (rule "eqSymm" (formula "87"))
                                                (rule "disjointDefinition" (formula "67"))
                                                 (builtin "One Step Simplification" (formula "67"))
                                                (rule "notLeft" (formula "67"))
                                                (rule "eqSymm" (formula "86"))
                                                (rule "disjointDefinition" (formula "66"))
                                                 (builtin "One Step Simplification" (formula "66"))
                                                (rule "notLeft" (formula "66"))
                                                (rule "eqSymm" (formula "85"))
                                                (rule "disjointDefinition" (formula "65"))
                                                 (builtin "One Step Simplification" (formula "65"))
                                                (rule "notLeft" (formula "65"))
                                                (rule "eqSymm" (formula "84"))
                                                (rule "disjointDefinition" (formula "64"))
                                                 (builtin "One Step Simplification" (formula "64"))
                                                (rule "notLeft" (formula "64"))
                                                (rule "eqSymm" (formula "83"))
                                                (rule "disjointDefinition" (formula "63"))
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "notLeft" (formula "63"))
                                                (rule "eqSymm" (formula "82"))
                                                (rule "disjointDefinition" (formula "62"))
                                                 (builtin "One Step Simplification" (formula "62"))
                                                (rule "notLeft" (formula "62"))
                                                (rule "eqSymm" (formula "81"))
                                                (rule "disjointDefinition" (formula "61"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "notLeft" (formula "61"))
                                                (rule "eqSymm" (formula "80"))
                                                (rule "disjointDefinition" (formula "60"))
                                                 (builtin "One Step Simplification" (formula "60"))
                                                (rule "notLeft" (formula "60"))
                                                (rule "eqSymm" (formula "79"))
                                                (rule "disjointDefinition" (formula "59"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "notLeft" (formula "59"))
                                                (rule "eqSymm" (formula "78"))
                                                (rule "disjointDefinition" (formula "58"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "notLeft" (formula "58"))
                                                (rule "eqSymm" (formula "77"))
                                                (rule "disjointDefinition" (formula "57"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "notLeft" (formula "57"))
                                                (rule "eqSymm" (formula "76"))
                                                (rule "disjointDefinition" (formula "56"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "notLeft" (formula "56"))
                                                (rule "eqSymm" (formula "75"))
                                                (rule "disjointDefinition" (formula "55"))
                                                 (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "103")))
                                                (rule "true_left" (formula "55"))
                                                (rule "disjointDefinition" (formula "54"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "notLeft" (formula "54"))
                                                (rule "eqSymm" (formula "73"))
                                                (rule "disjointDefinition" (formula "53"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "notLeft" (formula "53"))
                                                (rule "eqSymm" (formula "72"))
                                                (rule "disjointDefinition" (formula "52"))
                                                 (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "97")))
                                                (rule "true_left" (formula "52"))
                                                (rule "disjointDefinition" (formula "51"))
                                                 (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "95")))
                                                (rule "true_left" (formula "51"))
                                                (rule "disjointDefinition" (formula "50"))
                                                 (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "93")))
                                                (rule "true_left" (formula "50"))
                                                (rule "disjointDefinition" (formula "49"))
                                                 (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "91")))
                                                (rule "true_left" (formula "49"))
                                                (rule "disjointDefinition" (formula "48"))
                                                 (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "89")))
                                                (rule "true_left" (formula "48"))
                                                (rule "disjointDefinition" (formula "47"))
                                                 (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "87")))
                                                (rule "true_left" (formula "47"))
                                                (rule "disjointDefinition" (formula "46"))
                                                 (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "85")))
                                                (rule "true_left" (formula "46"))
                                                (rule "disjointDefinition" (formula "45"))
                                                 (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "83")))
                                                (rule "true_left" (formula "45"))
                                                (rule "disjointDefinition" (formula "43"))
                                                 (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "80")))
                                                (rule "true_left" (formula "43"))
                                                (rule "disjointDefinition" (formula "43"))
                                                 (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "80")))
                                                (rule "true_left" (formula "43"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "41") (term "1") (ifseqformula "60"))
                                                (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                                                (rule "commuteUnion" (formula "29") (term "0,0,1,0,1,0"))
                                                (rule "commuteUnion" (formula "48") (term "0,0,0,1,0,0"))
                                                (rule "commuteUnion" (formula "47") (term "1,0,0,1,0,0"))
                                                (rule "commuteUnion" (formula "53") (term "0,0,0,1,0"))
                                                (rule "commuteUnion" (formula "49") (term "0,0,1,0,0"))
                                                (rule "commuteUnion" (formula "53") (term "0,0,1,0,0"))
                                                (rule "commuteUnion" (formula "55") (term "0,0,1,0,2,1"))
                                                (rule "commuteUnion" (formula "46") (term "0,0,0,1,0,0"))
                                                (rule "commuteUnion" (formula "45") (term "0,0,0,1,0,2,0"))
                                                (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "33") (term "0"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "translateJavaAddInt" (formula "33") (term "3,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "33") (term "0,1,0,0"))
                                                (rule "andLeft" (formula "33"))
                                                (rule "andLeft" (formula "33"))
                                                (rule "andLeft" (formula "33"))
                                                (rule "polySimp_addComm0" (formula "35") (term "3,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33"))
                                                (rule "inEqSimp_commuteLeq" (formula "34"))
                                                (rule "applyEq" (formula "34") (term "0") (ifseqformula "23"))
                                                (rule "inEqSimp_homoInEq1" (formula "34"))
                                                (rule "mul_literals" (formula "34") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                (rule "add_literals" (formula "34") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                                (rule "mul_literals" (formula "34") (term "1"))
                                                (rule "elimGcdLeq_antec" (formula "34") (inst "elimGcdRightDiv=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "neg_literal" (formula "34") (term "0,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "34") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "34") (term "0,0,0,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0"))
                                                (rule "qeq_literals" (formula "34") (term "0"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "elimGcdGeq_antec" (formula "33") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "33") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "33") (term "0,0,0,0"))
                                                (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                                                (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "33") (term "0,0"))
                                                (rule "leq_literals" (formula "33") (term "0"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "29"))
                                                 (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "120")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,1,0,0") (ifseqformula "21"))
                                                (rule "replace_known_left" (formula "36") (term "1,0,1,0,0") (ifseqformula "22"))
                                                 (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "119")))
                                                (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "37"))
                                                (rule "ifEqualsInteger" (formula "36"))
                                                (rule "elementOfUnion" (formula "36") (term "0,0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "36") (term "1,0,0"))
                                                (rule "eqSymm" (formula "36") (term "0,0,1,0,0"))
                                                (rule "replace_known_right" (formula "36") (term "0,0,1,0,0") (ifseqformula "118"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "elementOfUnion" (formula "36") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "elementOfUnion" (formula "36") (term "0,0,1"))
                                                (rule "elementOfArrayRangeConcrete" (formula "36") (term "1,0,0,1"))
                                                (rule "eqSymm" (formula "36") (term "0,0,1,0,0,1"))
                                                (rule "replace_known_right" (formula "36") (term "0,0,1,0,0,1") (ifseqformula "118"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "elementOfUnion" (formula "36") (term "0,0,1"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "34"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "45") (term "0") (inst "b=b_3"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "translateJavaSubInt" (formula "45") (term "0,1,0"))
                                                (rule "translateJavaAddInt" (formula "45") (term "0,2,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "45") (term "0,1,0"))
                                                (rule "polySimp_addComm0" (formula "45") (term "0,2,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "45") (term "0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "45") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "45") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "45") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "0,0,1,1,0"))
                                                (rule "mul_literals" (formula "45") (term "0,0,0,1,1,0"))
                                                (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "39") (term "0") (inst "b=b_3"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "translateJavaAddInt" (formula "39") (term "0,2,5,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "39") (term "0,2,5,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "39") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                                (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "44") (term "0") (inst "b=b_3"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "translateJavaAddInt" (formula "44") (term "2,0,1,0"))
                                                (rule "translateJavaMod" (formula "44") (term "0,1,0,0"))
                                                (rule "translateJavaAddInt" (formula "44") (term "3,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "44") (term "0,2,1,3,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "44") (term "0,2,1,3,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0"))
                                                (rule "jmod_axiom" (formula "44") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,0"))
                                                (rule "polySimp_homoEq" (formula "44") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "44") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "44") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                                                (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "62") (term "0") (inst "b=b_3"))
                                                 (builtin "One Step Simplification" (formula "62"))
                                                (rule "translateJavaAddInt" (formula "62") (term "0,2,5,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "62") (term "0,2,5,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "62") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "62") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "62") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0"))
                                                (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "40") (term "0") (inst "b=b_3"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "translateJavaAddInt" (formula "40") (term "0,2,5,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "40") (term "0,2,5,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "40") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                                (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "64") (term "0") (inst "b=b_3"))
                                                 (builtin "One Step Simplification" (formula "64"))
                                                (rule "translateJavaAddInt" (formula "64") (term "2,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "64") (term "3,0,1,0"))
                                                (rule "translateJavaMod" (formula "64") (term "0,1,0,0"))
                                                (rule "translateJavaAddInt" (formula "64") (term "0,2,1,3,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "64") (term "0,2,1,3,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "64") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "64") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0,0"))
                                                (rule "jmod_axiom" (formula "64") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,0"))
                                                (rule "polySimp_homoEq" (formula "64") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "64") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "64") (term "0,1,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "64") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "64") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "64") (term "0,1,1,0,0,0"))
                                                (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "61") (term "0") (inst "b=b_3"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "translateJavaAddInt" (formula "61") (term "0,2,1,3,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "61") (term "2,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "61") (term "3,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "61") (term "0,2,1,3,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "61") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "61") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0"))
                                                (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "63") (term "0") (inst "b=b_3"))
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "translateJavaAddInt" (formula "63") (term "0,2,5,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "63") (term "0,2,5,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "63") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "63") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "63") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "63") (term "0,1,1,0,0"))
                                                (rule "commuteUnion" (formula "65") (term "1,1,0"))
                                                (rule "commuteUnion" (formula "65") (term "0,0"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "46") (term "1") (ifseqformula "65"))
                                                (rule "commuteUnion_2" (formula "30") (term "0,1,0,1,0"))
                                                (rule "commuteUnion_2" (formula "53") (term "0,0,1,0,0"))
                                                (rule "commuteUnion_2" (formula "58") (term "0,0,1,0"))
                                                (rule "commuteUnion_2" (formula "51") (term "0,0,1,0,0"))
                                                (rule "commuteUnion_2" (formula "50") (term "0,0,1,0,2,0"))
                                                (rule "arrayLengthIsAShort" (formula "10") (term "0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                                                (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "arrayLengthNotNegative" (formula "24") (term "0"))
                                                (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                                (rule "qeq_literals" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "cut_direct" (formula "32") (term "0,0"))
                                                (branch "CUT: result_22.<created> = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "true_left" (formula "33"))
                                                   (rule "jdiv_axiom" (formula "41") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "0,0,2,1"))
                                                   (rule "eqSymm" (formula "41"))
                                                   (rule "applyEq" (formula "41") (term "1") (ifseqformula "42"))
                                                   (rule "inEqSimp_subsumption6" (formula "41") (term "0,0") (ifseqformula "34"))
                                                   (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                                                   (rule "greater_literals" (formula "41") (term "0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "leq_literals" (formula "41") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "polyDiv_pullOut" (formula "41") (term "0") (inst "polyDivCoeff=l_0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,2,0"))
                                                   (rule "equal_literals" (formula "41") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "polySimp_pullOutFactor0" (formula "41") (term "0,0,0"))
                                                   (rule "add_literals" (formula "41") (term "1,0,0,0"))
                                                   (rule "times_zero_1" (formula "41") (term "0,0,0"))
                                                   (rule "div_literals" (formula "41") (term "0,0"))
                                                   (rule "add_zero_left" (formula "41") (term "0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "true_left" (formula "41"))
                                                   (rule "jdiv_axiom" (formula "55") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "55") (term "0,0,2,1"))
                                                   (rule "eqSymm" (formula "55"))
                                                   (rule "applyEq" (formula "55") (term "1") (ifseqformula "56"))
                                                   (rule "inEqSimp_subsumption6" (formula "55") (term "0,0") (ifseqformula "49"))
                                                   (rule "greater_literals" (formula "55") (term "0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "times_zero_1" (formula "55") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "55") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "polyDiv_pullOut" (formula "55") (term "0") (inst "polyDivCoeff=l_1"))
                                                   (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,2,0"))
                                                   (rule "equal_literals" (formula "55") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "polySimp_pullOutFactor0" (formula "55") (term "0,0,0"))
                                                   (rule "add_literals" (formula "55") (term "1,0,0,0"))
                                                   (rule "times_zero_1" (formula "55") (term "0,0,0"))
                                                   (rule "div_literals" (formula "55") (term "0,0"))
                                                   (rule "add_zero_left" (formula "55") (term "0"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "true_left" (formula "55"))
                                                   (rule "jdiv_axiom" (formula "124") (term "0"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0,2,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "50"))
                                                   (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "applyEqRigid" (formula "125") (term "0") (ifseqformula "1"))
                                                   (rule "polyDiv_pullOut" (formula "125") (term "0") (inst "polyDivCoeff=l_1"))
                                                   (rule "polySimp_mulLiterals" (formula "125") (term "1,0,0,2,0"))
                                                   (rule "equal_literals" (formula "125") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "125"))
                                                   (rule "polySimp_homoEq" (formula "125"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "125") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "125") (term "1,1,0,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "125") (term "1,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "125") (term "0,0,0,1,0"))
                                                   (rule "div_literals" (formula "125") (term "0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "125") (term "0"))
                                                   (rule "add_literals" (formula "125") (term "1,0"))
                                                   (rule "times_zero_1" (formula "125") (term "0"))
                                                    (builtin "One Step Simplification" (formula "125"))
                                                   (rule "closeTrue" (formula "125"))
                                                )
                                                (branch "CUT: result_22.<created> = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "jdiv_axiom" (formula "41") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "0,0,2,1"))
                                                   (rule "eqSymm" (formula "41"))
                                                   (rule "applyEq" (formula "41") (term "1") (ifseqformula "42"))
                                                   (rule "inEqSimp_subsumption6" (formula "41") (term "0,0") (ifseqformula "34"))
                                                   (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                                                   (rule "greater_literals" (formula "41") (term "0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "leq_literals" (formula "41") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "polyDiv_pullOut" (formula "41") (term "0") (inst "polyDivCoeff=l_0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,2,0"))
                                                   (rule "equal_literals" (formula "41") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "polySimp_homoEq" (formula "41"))
                                                   (rule "polySimp_pullOutFactor0" (formula "41") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "41") (term "1,0,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "41") (term "0,0,0,1,0"))
                                                   (rule "div_literals" (formula "41") (term "0,0,1,0"))
                                                   (rule "add_zero_left" (formula "41") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "41") (term "0"))
                                                   (rule "add_literals" (formula "41") (term "1,0"))
                                                   (rule "times_zero_1" (formula "41") (term "0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "true_left" (formula "41"))
                                                   (rule "jdiv_axiom" (formula "55") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "55") (term "0,0,2,1"))
                                                   (rule "eqSymm" (formula "55"))
                                                   (rule "applyEq" (formula "55") (term "1") (ifseqformula "56"))
                                                   (rule "inEqSimp_subsumption6" (formula "55") (term "0,0") (ifseqformula "49"))
                                                   (rule "times_zero_1" (formula "55") (term "1,1,0,0,0"))
                                                   (rule "greater_literals" (formula "55") (term "0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "leq_literals" (formula "55") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "polyDiv_pullOut" (formula "55") (term "0") (inst "polyDivCoeff=l_1"))
                                                   (rule "equal_literals" (formula "55") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                                                   (rule "polySimp_homoEq" (formula "55"))
                                                   (rule "polySimp_pullOutFactor0" (formula "55") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "55") (term "1,0,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "55") (term "0,0,0,1,0"))
                                                   (rule "div_literals" (formula "55") (term "0,0,1,0"))
                                                   (rule "add_zero_left" (formula "55") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "55") (term "0"))
                                                   (rule "add_literals" (formula "55") (term "1,0"))
                                                   (rule "times_zero_1" (formula "55") (term "0"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "true_left" (formula "55"))
                                                   (rule "jdiv_axiom" (formula "125") (term "0"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0,2,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "50"))
                                                   (rule "times_zero_1" (formula "1") (term "1,1,0,0,0"))
                                                   (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "applyEqRigid" (formula "126") (term "0") (ifseqformula "1"))
                                                   (rule "polyDiv_pullOut" (formula "126") (term "0") (inst "polyDivCoeff=l_1"))
                                                   (rule "equal_literals" (formula "126") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "126"))
                                                   (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "126") (term "0,0,0"))
                                                   (rule "add_literals" (formula "126") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "126") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "126") (term "0,0,0"))
                                                   (rule "div_literals" (formula "126") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "126"))
                                                   (rule "closeTrue" (formula "126"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "notRight" (formula "63"))
                                                (rule "replace_known_left" (formula "1") (term "0,1,1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "andLeft" (formula "48"))
                                                (rule "notLeft" (formula "49"))
                                                (rule "andLeft" (formula "48"))
                                                (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "49")))
                                                (rule "true_left" (formula "43"))
                                                (rule "polySimp_homoEq" (formula "1"))
                                                (rule "polySimp_homoEq" (formula "58"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                                (rule "mul_literals" (formula "58") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                                (rule "polySimp_addComm0" (formula "58") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_gtToGeq" (formula "12"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                (rule "jmod_axiom" (formula "34") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                                (rule "jmod_axiom" (formula "48") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "applyEq" (formula "47") (term "1,7,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "7,0"))
                                                (rule "add_literals" (formula "47") (term "0,7,0"))
                                                (rule "applyEq" (formula "31") (term "2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0"))
                                                (rule "applyEq" (formula "56") (term "1,7,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "56") (term "7,0"))
                                                (rule "add_literals" (formula "56") (term "0,7,0"))
                                                (rule "applyEq" (formula "54") (term "5,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "32") (term "5,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "55") (term "5,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "53") (term "5,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "42") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "42"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                (rule "mul_literals" (formula "42") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "42") (term "0"))
                                                (rule "add_literals" (formula "42") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "42") (term "1,0"))
                                                (rule "add_zero_right" (formula "42") (term "0"))
                                                (rule "leq_literals" (formula "42"))
                                                (rule "true_left" (formula "42"))
                                                (rule "applyEq" (formula "45") (term "5,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "35") (term "0,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "33") (term "7,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "46") (term "5,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                (rule "polySimp_addComm1" (formula "57") (term "0,0"))
                                                (rule "add_literals" (formula "57") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "57") (term "0"))
                                                (rule "add_literals" (formula "57") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "57") (term "1,0"))
                                                (rule "add_zero_right" (formula "57") (term "0"))
                                                (rule "equal_literals" (formula "57"))
                                                (rule "false_right" (formula "57"))
                                                (rule "applyEq" (formula "33") (term "5,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0"))
                                                (rule "add_zero_right" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEq" (formula "42") (term "5,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "35") (term "5,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "35") (term "1,7,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "7,0"))
                                                (rule "add_literals" (formula "35") (term "0,7,0"))
                                                (rule "applyEq" (formula "53") (term "7,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "43") (term "5,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "44") (term "7,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "54") (term "5,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                                (rule "polySimp_addComm0" (formula "33") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "46"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "33"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                (rule "mul_literals" (formula "11") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "11"))
                                                (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "8") (term "0,0"))
                                                (rule "qeq_literals" (formula "8") (term "0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "newSym_eq" (formula "32") (inst "l=l_0") (inst "newSymDef=add(Z(1(#)), mul(bucket_0, Z(0(#))))"))
                                                (rule "times_zero_1" (formula "32") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "32") (term "1,1"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "0"))
                                                (rule "mul_literals" (formula "33") (term "0,0"))
                                                (rule "polySimp_homoEq" (formula "33"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "33"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                                (rule "mul_literals" (formula "33") (term "0,1"))
                                                (rule "applyEq" (formula "31") (term "1,5,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "5,0"))
                                                (rule "add_literals" (formula "31") (term "0,5,0"))
                                                (rule "applyEqRigid" (formula "35") (term "1,7,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "7,0"))
                                                (rule "add_literals" (formula "35") (term "0,7,0"))
                                                (rule "applyEqRigid" (formula "44") (term "1,5,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "5,0"))
                                                (rule "add_literals" (formula "44") (term "0,5,0"))
                                                (rule "applyEqRigid" (formula "34") (term "1,0,2,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,2,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,2,0"))
                                                (rule "applyEqRigid" (formula "51") (term "1,5,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "51") (term "5,0"))
                                                (rule "add_literals" (formula "51") (term "0,5,0"))
                                                (rule "applyEqRigid" (formula "42") (term "7,0") (ifseqformula "33"))
                                                (rule "applyEqRigid" (formula "53") (term "1,5,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "53") (term "5,0"))
                                                (rule "add_literals" (formula "53") (term "0,5,0"))
                                                (rule "applyEqRigid" (formula "53") (term "1,6,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "53") (term "6,0"))
                                                (rule "add_literals" (formula "53") (term "0,6,0"))
                                                (rule "add_zero_left" (formula "53") (term "6,0"))
                                                (rule "applyEqRigid" (formula "44") (term "6,0") (ifseqformula "33"))
                                                (rule "applyEqRigid" (formula "43") (term "1,5,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "5,0"))
                                                (rule "add_literals" (formula "43") (term "0,5,0"))
                                                (rule "applyEqRigid" (formula "32") (term "1,0,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "applyEq" (formula "45") (term "1,5,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "5,0"))
                                                (rule "add_literals" (formula "45") (term "0,5,0"))
                                                (rule "applyEqRigid" (formula "54") (term "1,7,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "54") (term "7,0"))
                                                (rule "add_literals" (formula "54") (term "0,7,0"))
                                                (rule "applyEqRigid" (formula "36") (term "1,2,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "2,0"))
                                                (rule "add_literals" (formula "36") (term "0,2,0"))
                                                (rule "applyEqRigid" (formula "45") (term "1,7,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "7,0"))
                                                (rule "add_literals" (formula "45") (term "0,7,0"))
                                                (rule "applyEq" (formula "54") (term "1,5,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "54") (term "5,0"))
                                                (rule "add_literals" (formula "54") (term "0,5,0"))
                                                (rule "applyEq" (formula "51") (term "1,7,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "51") (term "7,0"))
                                                (rule "add_literals" (formula "51") (term "0,7,0"))
                                                (rule "add_zero_left" (formula "51") (term "7,0"))
                                                (rule "applyEqRigid" (formula "35") (term "1,5,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "5,0"))
                                                (rule "add_literals" (formula "35") (term "0,5,0"))
                                                (rule "applyEq" (formula "45") (term "1,6,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "6,0"))
                                                (rule "add_literals" (formula "45") (term "0,6,0"))
                                                (rule "add_zero_left" (formula "45") (term "6,0"))
                                                (rule "applyEq" (formula "30") (term "1,5,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "30") (term "5,0"))
                                                (rule "add_literals" (formula "30") (term "0,5,0"))
                                                (rule "applyEqRigid" (formula "31") (term "1,7,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "7,0"))
                                                (rule "add_literals" (formula "31") (term "0,7,0"))
                                                (rule "applyEq" (formula "44") (term "1,7,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "7,0"))
                                                (rule "add_literals" (formula "44") (term "0,7,0"))
                                                (rule "applyEq" (formula "40") (term "0") (ifseqformula "33"))
                                                (rule "applyEqRigid" (formula "54") (term "1,6,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "54") (term "6,0"))
                                                (rule "add_literals" (formula "54") (term "0,6,0"))
                                                (rule "add_zero_left" (formula "54") (term "6,0"))
                                                (rule "applyEq" (formula "52") (term "1,5,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "52") (term "5,0"))
                                                (rule "add_literals" (formula "52") (term "0,5,0"))
                                                (rule "applyEqRigid" (formula "46") (term "0,0,0") (ifseqformula "33"))
                                                (rule "applyEqRigid" (formula "53") (term "1,7,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "53") (term "7,0"))
                                                (rule "add_literals" (formula "53") (term "0,7,0"))
                                                (rule "applyEqRigid" (formula "42") (term "1,5,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "5,0"))
                                                (rule "add_literals" (formula "42") (term "0,5,0"))
                                                (rule "applyEq" (formula "29") (term "1,2,0") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "2,0"))
                                                (rule "add_literals" (formula "29") (term "0,2,0"))
                                                (rule "applyEq" (formula "46") (term "1") (ifseqformula "33"))
                                                (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "33"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                (rule "add_literals" (formula "1") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                (rule "mul_literals" (formula "40") (term "1"))
                                                (rule "elimGcdEq" (formula "46") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=jdiv(add(Z(neglit(1(#))), mul(l_0, Z(2(#)))), Z(2(#)))") (inst "elimGcd=Z(2(#))"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,1"))
                                                (rule "add_literals" (formula "46") (term "1,0,0"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "46") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "46") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,1,0"))
                                                (rule "add_literals" (formula "46") (term "1,1,0,1,0"))
                                                (rule "times_zero_1" (formula "46") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "46") (term "0,1,0"))
                                                (rule "qeq_literals" (formula "46") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "46") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "46") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,1"))
                                                (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "46") (term "0,0,1"))
                                                (rule "equal_literals" (formula "46") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                                                (rule "add_literals" (formula "46") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                                                (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                                (rule "add_literals" (formula "46") (term "0,0"))
                                                (rule "leq_literals" (formula "46") (term "0"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "closeFalse" (formula "46"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "ifthenelse_split" (formula "63") (term "1,1,6,0") (userinteraction))
                                             (branch "result_22.equal_buckets = TRUE TRUE"
                                                (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "1") (userinteraction))
                                                 (builtin "One Step Simplification" (formula "55") (userinteraction))
                                                (rule "polySimp_addComm1" (formula "63") (term "1,6,0"))
                                                (rule "add_literals" (formula "63") (term "0,1,6,0"))
                                                (rule "polySimp_addAssoc" (formula "63") (term "6,0"))
                                                (rule "add_literals" (formula "63") (term "0,6,0"))
                                                (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "63") (term "0") (inst "b=b_3") (userinteraction))
                                                (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "55") (term "0") (inst "b=b_3") (userinteraction))
                                                 (builtin "One Step Simplification" (formula "55") (userinteraction))
                                                 (builtin "One Step Simplification" (formula "63") (userinteraction))
                                                (rule "allRight" (formula "63") (inst "sk=b_3_0") (userinteraction))
                                                (rule "instAll" (formula "63") (term "1,0,0,0") (ifseqformula "55") (userinteraction))
                                                (rule "translateJavaMod" (formula "56") (term "0,1,0,0"))
                                                (rule "translateJavaAddInt" (formula "64") (term "2,0,1"))
                                                (rule "translateJavaMod" (formula "64") (term "0,1,0"))
                                                (rule "translateJavaAddInt" (formula "56") (term "2,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "64") (term "3,0,1"))
                                                (rule "translateJavaAddInt" (formula "56") (term "3,0,1,0"))
                                                (rule "translateJavaMod" (formula "1") (term "0,1,0"))
                                                (rule "translateJavaAddInt" (formula "1") (term "2,0,1"))
                                                (rule "translateJavaAddInt" (formula "1") (term "3,0,1"))
                                                (rule "translateJavaAddInt" (formula "64") (term "0,2,1,3,0,1"))
                                                (rule "translateJavaAddInt" (formula "56") (term "0,2,1,3,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "1") (term "0,2,1,3,0,1"))
                                                (rule "impRight" (formula "64"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "replace_known_left" (formula "51") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "46")))
                                                (rule "andLeft" (formula "51"))
                                                (rule "notLeft" (formula "52"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")) (ifInst ""  (formula "68")))
                                                (rule "notLeft" (formula "4"))
                                                (rule "polySimp_homoEq" (formula "61"))
                                                (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "58") (term "0,2,1,3,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "68") (term "0,2,1,3,0"))
                                                (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                                (rule "mul_literals" (formula "61") (term "0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "14"))
                                                (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "61") (term "0"))
                                                (rule "polySimp_addComm0" (formula "61") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "58") (term "0,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                (rule "inEqSimp_leqRight" (formula "60"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "16"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                (rule "jmod_axiom" (formula "37") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0"))
                                                (rule "jmod_axiom" (formula "59") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0,0"))
                                                (rule "polySimp_homoEq" (formula "59") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "59") (term "1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "59") (term "0,1,0,0"))
                                                (rule "jmod_axiom" (formula "4") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                (rule "jmod_axiom" (formula "46") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "61"))
                                                (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                                                (rule "polySimp_elimOne" (formula "61") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "37"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                (rule "polySimp_sepPosMonomial" (formula "59") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "59") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                (rule "mul_literals" (formula "4") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "46"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                                (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                (rule "mul_literals" (formula "15") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_strengthen1" (formula "6") (ifseqformula "61"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                                (rule "add_literals" (formula "6") (term "0,1"))
                                                (rule "inEqSimp_contradEq7" (formula "61") (ifseqformula "6"))
                                                (rule "polySimp_rightDist" (formula "61") (term "1,0,0"))
                                                (rule "mul_literals" (formula "61") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "61") (term "0,0,0"))
                                                (rule "add_literals" (formula "61") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0"))
                                                (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "61") (term "0,0"))
                                                (rule "leq_literals" (formula "61") (term "0"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "false_right" (formula "61"))
                                                (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "15"))
                                                (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0"))
                                                (rule "qeq_literals" (formula "12") (term "0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq0" (formula "44") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                (rule "add_literals" (formula "44") (term "0,0"))
                                                (rule "qeq_literals" (formula "44") (term "0"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "true_left" (formula "44"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "result_22.equal_buckets = TRUE FALSE"
                                                (rule "close" (formula "63") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,1,1,0,0,0") (ifseqformula "25"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,0,1,1,0,0,0") (ifseqformula "15"))
                                       (rule "allRight" (formula "62") (inst "sk=f_0"))
                                       (rule "allRight" (formula "62") (inst "sk=o_0_0"))
                                       (rule "orRight" (formula "62"))
                                       (rule "orRight" (formula "62"))
                                       (rule "orRight" (formula "62"))
                                       (rule "eqSymm" (formula "65"))
                                       (rule "eqSymm" (formula "62") (term "0,0,0,1"))
                                       (rule "pullOutSelect" (formula "65") (term "0") (inst "selectSK=f_0_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "26"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "16"))
                                       (rule "eqSymm" (formula "66"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "64"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "63"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "66") (term "0") (inst "selectSK=f_0_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "17"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "elementOfArrayRange" (formula "1") (term "1,0,0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,1,0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "64"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_2"))
                                       (rule "simplifySelectOfAnon" (formula "2"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "replaceKnownSelect_taclet1000100010120_3" (formula "2") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,1,0,0") (ifseqformula "28"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,1,0,0") (ifseqformula "18"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "67"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "66"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "elementOfArrayRange" (formula "2") (term "0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "65"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "!o_0_0 = null & !o_0_0.<created> = TRUE TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "59")))
                                          (rule "replace_known_right" (formula "68") (term "0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "58")))
                                          (rule "notRight" (formula "68"))
                                          (rule "ifthenelse_negated" (formula "3") (term "0"))
                                          (rule "commute_or" (formula "2") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "2") (term "0,0"))
                                          (rule "commute_or" (formula "2") (term "0,0,0"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch " ( !f_0 = java.lang.Object::<created> | ! o_0_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE) & ( o_0_0 = result_21 | ! o_0_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE) TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "71") (term "0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch " o_0_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE | o_0_0.<created>@anon_heap_partition<<anonHeapFunction>> = TRUE TRUE"
                                                (rule "close" (formula "71") (ifseqformula "5"))
                                             )
                                             (branch " o_0_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE | o_0_0.<created>@anon_heap_partition<<anonHeapFunction>> = TRUE FALSE"
                                                (rule "orRight" (formula "60"))
                                                (rule "orRight" (formula "60"))
                                                (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "eqSymm" (formula "72"))
                                                (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "60"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "replace_known_right" (formula "2") (term "0,1") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch " ( !f_0 = java.lang.Object::<created> | ! o_0_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE) & ( o_0_0 = result_21 | ! o_0_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "andRight" (formula "58"))
                                             (branch
                                                (rule "orRight" (formula "58"))
                                                (rule "notRight" (formula "59"))
                                                (rule "notRight" (formula "59"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "70")))
                                                (rule "closeFalse" (formula "4"))
                                             )
                                             (branch
                                                (rule "orRight" (formula "58"))
                                                (rule "notRight" (formula "59"))
                                                (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                          )
                                       )
                                       (branch "!o_0_0 = null & !o_0_0.<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " !f_0 = java.lang.Object::<created> & o_0_0 = result_21 | !o_0_0 = null & !( o_0_0.<created> = TRUE | o_0_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE) TRUE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "69") (term "0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch " !o_0_0 = null & !( o_0_0.<created> = TRUE | o_0_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE | o_0_0.<created>@anon_heap_partition<<anonHeapFunction>> = TRUE) TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "orRight" (formula "58"))
                                                (rule "orRight" (formula "58"))
                                                (rule "orRight" (formula "58"))
                                                (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "72"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,1") (ifseqformula "61"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "59")))
                                                (rule "true_left" (formula "1"))
                                                (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "60"))
                                                 (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "56")))
                                                (rule "closeTrue" (formula "61"))
                                             )
                                             (branch " !o_0_0 = null & !( o_0_0.<created> = TRUE | o_0_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE | o_0_0.<created>@anon_heap_partition<<anonHeapFunction>> = TRUE) FALSE"
                                                (rule "close" (formula "69") (ifseqformula "2"))
                                             )
                                          )
                                          (branch " !f_0 = java.lang.Object::<created> & o_0_0 = result_21 | !o_0_0 = null & !( o_0_0.<created> = TRUE | o_0_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE) FALSE"
                                             (rule "orRight" (formula "58"))
                                             (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " !o_0_0 = null & !( o_0_0.<created> = TRUE | o_0_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE | o_0_0.<created>@anon_heap_partition<<anonHeapFunction>> = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "57"))
                                                (rule "orRight" (formula "57"))
                                                (rule "orRight" (formula "57"))
                                                (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "73"))
                                                (rule "replace_known_right" (formula "63") (term "0,1") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "60")))
                                                (rule "closeTrue" (formula "63"))
                                             )
                                             (branch " !o_0_0 = null & !( o_0_0.<created> = TRUE | o_0_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE | o_0_0.<created>@anon_heap_partition<<anonHeapFunction>> = TRUE) FALSE"
                                                (rule "close" (formula "70") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "62") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "62") (term "0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "62") (term "0,0,0"))
                                    (rule "mul_literals" (formula "62") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,1"))
                                    (rule "precOfInt" (formula "62"))
                                    (rule "inEqSimp_ltToLeq" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "10"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "1"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1"))
                                    (rule "polySimp_mulAssoc" (formula "62") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "0,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "62") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "62") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "62") (term "0,0,1"))
                                    (rule "add_literals" (formula "62") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "62") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "62") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "62") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "62") (term "0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "62") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1" (formula "62") (term "0,0,1"))
                                    (rule "add_literals" (formula "62") (term "1,0,0,1"))
                                    (rule "times_zero_1" (formula "62") (term "0,0,1"))
                                    (rule "add_zero_left" (formula "62") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "62") (term "0"))
                                    (rule "times_zero_2" (formula "62") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "62") (term "0,0"))
                                    (rule "jmod_axiom" (formula "32") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                    (rule "jmod_axiom" (formula "41") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1"))
                                    (rule "jmod_axiom" (formula "46") (term "0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "46") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "46") (term "0,0,1,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "32"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                    (rule "polySimp_sepNegMonomial" (formula "41") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "46") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                    (rule "inEqSimp_invertInEq0" (formula "62") (term "1"))
                                    (rule "times_zero_2" (formula "62") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "62") (term "0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "62") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "40") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                    (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0"))
                                    (rule "qeq_literals" (formula "40") (term "0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "newSym_eq" (formula "31") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))"))
                                    (rule "times_zero_1" (formula "31") (term "1,1"))
                                    (rule "add_zero_right" (formula "31") (term "1"))
                                    (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                                    (rule "eqSymm" (formula "32"))
                                    (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "42") (term "5,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "33") (term "0,2,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "44") (term "7,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "61") (term "1,1,0") (ifseqformula "32"))
                                    (rule "polySimp_addComm1" (formula "61") (term "1,0"))
                                    (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "52") (term "5,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "50") (term "5,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "34") (term "5,0,1") (ifseqformula "32"))
                                    (rule "applyEq" (formula "45") (term "5,0,0,0,1") (ifseqformula "32"))
                                    (rule "applyEq" (formula "53") (term "1,7,0,1") (ifseqformula "32"))
                                    (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "45") (term "0,0,1,1") (ifseqformula "32"))
                                    (rule "polySimp_homoEq" (formula "45") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "45") (term "0,0,1,1"))
                                    (rule "applyEq" (formula "53") (term "5,0,1") (ifseqformula "32"))
                                    (rule "applyEq" (formula "45") (term "1,7,0,0,0,1") (ifseqformula "32"))
                                    (rule "applyEq" (formula "29") (term "5,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "30") (term "7,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "52") (term "7,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "34") (term "1,7,0,1") (ifseqformula "32"))
                                    (rule "applyEq" (formula "43") (term "5,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "32"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "51") (term "5,0") (ifseqformula "32"))
                                    (rule "polySimp_sepPosMonomial" (formula "45") (term "0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,1"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                                    (rule "times_zero_1" (formula "39") (term "0,0"))
                                    (rule "add_zero_left" (formula "39") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                    (rule "mul_literals" (formula "39") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "39") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "39") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "39") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0"))
                                    (rule "leq_literals" (formula "39") (term "0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "nnf_imp2or" (formula "17") (term "0"))
                                    (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                    (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "55"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "translateJavaMulInt" (formula "55") (term "1,1,0,0,0,0,1,0,0"))
                                    (rule "translateJavaMulInt" (formula "55") (term "1,1,0,0,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "55") (term "1,1,0,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "55") (term "1,1,0,0,0,0,0,1,0,0"))
                                    (rule "andLeft" (formula "55"))
                                    (rule "andLeft" (formula "56"))
                                    (rule "andLeft" (formula "55"))
                                    (rule "andLeft" (formula "57"))
                                    (rule "andLeft" (formula "55"))
                                    (rule "andLeft" (formula "58"))
                                    (rule "andLeft" (formula "55"))
                                    (rule "andLeft" (formula "57"))
                                    (rule "andLeft" (formula "60"))
                                    (rule "andLeft" (formula "55"))
                                    (rule "notLeft" (formula "57"))
                                    (rule "andLeft" (formula "57"))
                                    (rule "andLeft" (formula "61"))
                                    (rule "andLeft" (formula "55"))
                                    (rule "notLeft" (formula "57"))
                                    (rule "andLeft" (formula "57"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "notLeft" (formula "56"))
                                    (rule "andLeft" (formula "55"))
                                    (rule "andLeft" (formula "57"))
                                    (rule "andLeft" (formula "63"))
                                    (rule "notLeft" (formula "56"))
                                    (rule "andLeft" (formula "55"))
                                    (rule "andLeft" (formula "57"))
                                    (rule "andLeft" (formula "64"))
                                    (rule "andLeft" (formula "55"))
                                    (rule "notLeft" (formula "57"))
                                    (rule "andLeft" (formula "57"))
                                    (rule "andLeft" (formula "65"))
                                    (rule "notLeft" (formula "56"))
                                    (rule "andLeft" (formula "55"))
                                    (rule "andLeft" (formula "57"))
                                    (rule "andLeft" (formula "66"))
                                    (rule "notLeft" (formula "56"))
                                    (rule "notLeft" (formula "55"))
                                    (rule "andLeft" (formula "64"))
                                    (rule "andLeft" (formula "64"))
                                    (rule "andLeft" (formula "64"))
                                    (rule "andLeft" (formula "64"))
                                    (rule "andLeft" (formula "64"))
                                    (rule "andLeft" (formula "64"))
                                    (rule "andLeft" (formula "64"))
                                    (rule "andLeft" (formula "64"))
                                    (rule "andLeft" (formula "64"))
                                    (rule "andLeft" (formula "64"))
                                    (rule "andLeft" (formula "64"))
                                    (rule "andLeft" (formula "64"))
                                    (rule "andLeft" (formula "64"))
                                    (rule "andLeft" (formula "64"))
                                    (rule "andLeft" (formula "64"))
                                    (rule "andLeft" (formula "64"))
                                    (rule "andLeft" (formula "64"))
                                    (rule "disjointDefinition" (formula "91"))
                                     (builtin "One Step Simplification" (formula "91"))
                                    (rule "notLeft" (formula "91"))
                                    (rule "disjointDefinition" (formula "90"))
                                     (builtin "One Step Simplification" (formula "90"))
                                    (rule "notLeft" (formula "90"))
                                    (rule "disjointDefinition" (formula "89"))
                                     (builtin "One Step Simplification" (formula "89"))
                                    (rule "notLeft" (formula "89"))
                                    (rule "eqSymm" (formula "89"))
                                    (rule "disjointDefinition" (formula "88"))
                                     (builtin "One Step Simplification" (formula "88"))
                                    (rule "notLeft" (formula "88"))
                                    (rule "eqSymm" (formula "88"))
                                    (rule "disjointDefinition" (formula "87"))
                                     (builtin "One Step Simplification" (formula "87"))
                                    (rule "notLeft" (formula "87"))
                                    (rule "eqSymm" (formula "87"))
                                    (rule "disjointDefinition" (formula "86"))
                                     (builtin "One Step Simplification" (formula "86"))
                                    (rule "notLeft" (formula "86"))
                                    (rule "eqSymm" (formula "86"))
                                    (rule "disjointDefinition" (formula "85"))
                                     (builtin "One Step Simplification" (formula "85"))
                                    (rule "notLeft" (formula "85"))
                                    (rule "eqSymm" (formula "85"))
                                    (rule "disjointDefinition" (formula "84"))
                                     (builtin "One Step Simplification" (formula "84"))
                                    (rule "notLeft" (formula "84"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "disjointDefinition" (formula "83"))
                                     (builtin "One Step Simplification" (formula "83"))
                                    (rule "notLeft" (formula "83"))
                                    (rule "eqSymm" (formula "83"))
                                    (rule "disjointDefinition" (formula "82"))
                                     (builtin "One Step Simplification" (formula "82"))
                                    (rule "notLeft" (formula "82"))
                                    (rule "eqSymm" (formula "82"))
                                    (rule "disjointDefinition" (formula "81"))
                                     (builtin "One Step Simplification" (formula "81"))
                                    (rule "notLeft" (formula "81"))
                                    (rule "eqSymm" (formula "81"))
                                    (rule "disjointDefinition" (formula "80"))
                                     (builtin "One Step Simplification" (formula "80"))
                                    (rule "notLeft" (formula "80"))
                                    (rule "eqSymm" (formula "80"))
                                    (rule "disjointDefinition" (formula "79"))
                                     (builtin "One Step Simplification" (formula "79"))
                                    (rule "notLeft" (formula "79"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "disjointDefinition" (formula "78"))
                                     (builtin "One Step Simplification" (formula "78"))
                                    (rule "notLeft" (formula "78"))
                                    (rule "eqSymm" (formula "78"))
                                    (rule "disjointDefinition" (formula "77"))
                                     (builtin "One Step Simplification" (formula "77"))
                                    (rule "notLeft" (formula "77"))
                                    (rule "eqSymm" (formula "77"))
                                    (rule "disjointDefinition" (formula "76"))
                                     (builtin "One Step Simplification" (formula "76"))
                                    (rule "notLeft" (formula "76"))
                                    (rule "disjointDefinition" (formula "75"))
                                     (builtin "One Step Simplification" (formula "75"))
                                    (rule "notLeft" (formula "75"))
                                    (rule "eqSymm" (formula "75"))
                                    (rule "disjointDefinition" (formula "74"))
                                     (builtin "One Step Simplification" (formula "74"))
                                    (rule "notLeft" (formula "74"))
                                    (rule "eqSymm" (formula "74"))
                                    (rule "disjointDefinition" (formula "73"))
                                     (builtin "One Step Simplification" (formula "73"))
                                    (rule "notLeft" (formula "73"))
                                    (rule "disjointDefinition" (formula "72"))
                                     (builtin "One Step Simplification" (formula "72"))
                                    (rule "notLeft" (formula "72"))
                                    (rule "disjointDefinition" (formula "71"))
                                     (builtin "One Step Simplification" (formula "71"))
                                    (rule "notLeft" (formula "71"))
                                    (rule "disjointDefinition" (formula "70"))
                                     (builtin "One Step Simplification" (formula "70"))
                                    (rule "notLeft" (formula "70"))
                                    (rule "disjointDefinition" (formula "69"))
                                     (builtin "One Step Simplification" (formula "69"))
                                    (rule "notLeft" (formula "69"))
                                    (rule "disjointDefinition" (formula "68"))
                                     (builtin "One Step Simplification" (formula "68"))
                                    (rule "notLeft" (formula "68"))
                                    (rule "disjointDefinition" (formula "67"))
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "notLeft" (formula "67"))
                                    (rule "disjointDefinition" (formula "66"))
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "notLeft" (formula "66"))
                                    (rule "disjointDefinition" (formula "65"))
                                     (builtin "One Step Simplification" (formula "65"))
                                    (rule "notLeft" (formula "65"))
                                    (rule "disjointDefinition" (formula "64"))
                                     (builtin "One Step Simplification" (formula "64"))
                                    (rule "notLeft" (formula "64"))
                                    (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "63"))
                                    (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "63"))
                                    (rule "applyEq" (formula "46") (term "0,1,0,0,0,0,1") (ifseqformula "63"))
                                    (rule "applyEq" (formula "48") (term "0,1,0,0") (ifseqformula "63"))
                                    (rule "applyEq" (formula "24") (term "1,0,1,0") (ifseqformula "63"))
                                    (rule "applyEq" (formula "42") (term "0,1,0,2,0") (ifseqformula "63"))
                                    (rule "applyEq" (formula "43") (term "0,1,0,0") (ifseqformula "63"))
                                    (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "63"))
                                    (rule "applyEq" (formula "48") (term "0,1,0") (ifseqformula "63"))
                                    (rule "applyEq" (formula "50") (term "0,1,0,2,1") (ifseqformula "63"))
                                    (rule "applyEq" (formula "45") (term "0,1,0,0") (ifseqformula "63"))
                                    (rule "applyEq" (formula "44") (term "0,1,0,0") (ifseqformula "63"))
                                    (rule "distributeIntersection" (formula "12") (term "0"))
                                    (rule "distributeIntersection" (formula "22") (term "0"))
                                    (rule "distributeIntersection" (formula "21") (term "0"))
                                    (rule "distributeIntersection" (formula "12") (term "1,0"))
                                    (rule "distributeIntersection" (formula "12") (term "0,0"))
                                    (rule "unionEqualsEmpty" (formula "22"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "distributeIntersection" (formula "21") (term "1,0"))
                                    (rule "distributeIntersection" (formula "21") (term "0,0"))
                                    (rule "distributeIntersection" (formula "12") (term "0,1,0"))
                                    (rule "distributeIntersection" (formula "12") (term "1,1,0"))
                                    (rule "distributeIntersection" (formula "12") (term "0,0,0"))
                                    (rule "distributeIntersection" (formula "12") (term "1,0,0"))
                                    (rule "distributeIntersection" (formula "22") (term "0"))
                                    (rule "distributeIntersection" (formula "23") (term "0"))
                                    (rule "distributeIntersection" (formula "21") (term "0,1,0"))
                                    (rule "distributeIntersection" (formula "21") (term "1,1,0"))
                                    (rule "distributeIntersection" (formula "21") (term "0,0,0"))
                                    (rule "distributeIntersection" (formula "21") (term "1,0,0"))
                                    (rule "unionEqualsEmpty" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "distributeIntersection" (formula "23") (term "0,0"))
                                    (rule "distributeIntersection" (formula "23") (term "1,0"))
                                    (rule "distributeIntersection" (formula "24") (term "0,0"))
                                    (rule "distributeIntersection" (formula "24") (term "1,0"))
                                    (rule "unionEqualsEmpty" (formula "22"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "unionEqualsEmpty" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "unionEqualsEmpty" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "unionEqualsEmpty" (formula "26"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "unionEqualsEmpty" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "unionEqualsEmpty" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "unionEqualsEmpty" (formula "26"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "unionEqualsEmpty" (formula "15"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "notLeft" (formula "16"))
                                    (rule "notLeft" (formula "15"))
                                    (rule "eqSymm" (formula "73"))
                                    (rule "eqSymm" (formula "72"))
                                    (rule "unionEqualsEmpty" (formula "14"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "notLeft" (formula "15"))
                                    (rule "notLeft" (formula "14"))
                                    (rule "eqSymm" (formula "72"))
                                    (rule "eqSymm" (formula "71"))
                                    (rule "unionEqualsEmpty" (formula "13"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "notLeft" (formula "13"))
                                    (rule "notLeft" (formula "13"))
                                    (rule "eqSymm" (formula "71"))
                                    (rule "eqSymm" (formula "70"))
                                    (rule "unionEqualsEmpty" (formula "12"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "notLeft" (formula "13"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "eqSymm" (formula "70"))
                                    (rule "eqSymm" (formula "69"))
                                    (rule "unionEqualsEmpty" (formula "25"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "notLeft" (formula "26"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "eqSymm" (formula "69"))
                                    (rule "eqSymm" (formula "68"))
                                    (rule "sortsDisjointModuloNull" (formula "69"))
                                    (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "109"))
                                     (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "118")))
                                    (rule "false_right" (formula "69"))
                                    (rule "sortsDisjointModuloNull" (formula "68"))
                                    (rule "replace_known_right" (formula "68") (term "0") (ifseqformula "107"))
                                     (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "117")))
                                    (rule "false_right" (formula "68"))
                                    (rule "unionEqualsEmpty" (formula "24"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "eqSymm" (formula "68"))
                                    (rule "eqSymm" (formula "67"))
                                    (rule "sortsDisjointModuloNull" (formula "68"))
                                    (rule "replace_known_right" (formula "68") (term "1") (ifseqformula "117"))
                                     (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "106")))
                                    (rule "false_right" (formula "68"))
                                    (rule "sortsDisjointModuloNull" (formula "67"))
                                    (rule "replace_known_right" (formula "67") (term "0") (ifseqformula "104"))
                                     (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "116")))
                                    (rule "false_right" (formula "67"))
                                    (rule "unionEqualsEmpty" (formula "25"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "notLeft" (formula "26"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "eqSymm" (formula "67"))
                                    (rule "eqSymm" (formula "66"))
                                    (rule "sortsDisjointModuloNull" (formula "67"))
                                    (rule "replace_known_right" (formula "67") (term "1") (ifseqformula "116"))
                                     (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "111")))
                                    (rule "false_right" (formula "67"))
                                    (rule "sortsDisjointModuloNull" (formula "66"))
                                    (rule "replace_known_right" (formula "66") (term "0") (ifseqformula "109"))
                                     (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "115")))
                                    (rule "false_right" (formula "66"))
                                    (rule "unionEqualsEmpty" (formula "24"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "eqSymm" (formula "66"))
                                    (rule "eqSymm" (formula "65"))
                                    (rule "sortsDisjointModuloNull" (formula "66"))
                                    (rule "replace_known_right" (formula "66") (term "1") (ifseqformula "115"))
                                     (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "108")))
                                    (rule "false_right" (formula "66"))
                                    (rule "sortsDisjointModuloNull" (formula "65"))
                                    (rule "replace_known_right" (formula "65") (term "1") (ifseqformula "114"))
                                     (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "106")))
                                    (rule "false_right" (formula "65"))
                                    (rule "unionEqualsEmpty" (formula "21"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "notLeft" (formula "22"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "eqSymm" (formula "65"))
                                    (rule "eqSymm" (formula "64"))
                                    (rule "unionEqualsEmpty" (formula "20"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "notLeft" (formula "20"))
                                    (rule "notLeft" (formula "20"))
                                    (rule "eqSymm" (formula "64"))
                                    (rule "eqSymm" (formula "63"))
                                    (rule "unionEqualsEmpty" (formula "20"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "notLeft" (formula "20"))
                                    (rule "eqSymm" (formula "63"))
                                    (rule "eqSymm" (formula "62"))
                                    (rule "unionEqualsEmpty" (formula "20"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "notLeft" (formula "20"))
                                    (rule "notLeft" (formula "20"))
                                    (rule "eqSymm" (formula "62"))
                                    (rule "eqSymm" (formula "61"))
                                    (rule "commuteUnion" (formula "60") (term "0,1"))
                                    (rule "commuteUnion" (formula "60") (term "1,1,1"))
                                    (rule "commuteUnion" (formula "43") (term "0,0,0,1,0,0,0,0,1"))
                                    (rule "commuteUnion" (formula "43") (term "1,1,0,1,0,0,0,0,1"))
                                    (rule "commuteUnion_2" (formula "45") (term "0,0,1,0,0"))
                                    (rule "commuteUnion" (formula "45") (term "1,1,0,1,0,0"))
                                    (rule "commuteUnion" (formula "21") (term "0,0,1,0,1,0"))
                                    (rule "commuteUnion" (formula "21") (term "1,1,1,0,1,0"))
                                    (rule "commuteUnion" (formula "39") (term "0,0,1,0,2,0"))
                                    (rule "commuteUnion" (formula "39") (term "1,1,0,1,0,2,0"))
                                    (rule "commuteUnion" (formula "40") (term "0,0,0,1,0,0"))
                                    (rule "commuteUnion" (formula "40") (term "1,1,0,1,0,0"))
                                    (rule "commuteUnion" (formula "45") (term "0,0,1,0"))
                                    (rule "commuteUnion" (formula "45") (term "1,1,0,1,0"))
                                    (rule "commuteUnion_2" (formula "47") (term "0,0,1,0,2,1"))
                                    (rule "commuteUnion" (formula "47") (term "1,1,0,1,0,2,1"))
                                    (rule "commuteUnion" (formula "42") (term "0,0,0,1,0,0"))
                                    (rule "commuteUnion" (formula "42") (term "1,1,0,1,0,0"))
                                    (rule "commuteUnion" (formula "41") (term "0,0,0,1,0,0"))
                                    (rule "commuteUnion" (formula "41") (term "1,1,0,1,0,0"))
                                    (rule "commuteUnion" (formula "60") (term "1,0,1"))
                                    (rule "commuteUnion_2" (formula "43") (term "0,0,1,0,0,0,0,1"))
                                    (rule "commuteUnion" (formula "45") (term "0,0,0,1,0,0"))
                                    (rule "commuteUnion" (formula "21") (term "0,1,0,1,0"))
                                    (rule "commuteUnion" (formula "39") (term "1,0,0,1,0,2,0"))
                                    (rule "commuteUnion_2" (formula "40") (term "0,0,1,0,0"))
                                    (rule "commuteUnion" (formula "45") (term "1,0,0,1,0"))
                                    (rule "commuteUnion" (formula "47") (term "0,0,0,1,0,2,1"))
                                    (rule "commuteUnion_2" (formula "42") (term "0,0,1,0,0"))
                                    (rule "commuteUnion_2" (formula "41") (term "0,0,1,0,0"))
                                    (rule "commuteUnion_2" (formula "43") (term "0,1,0,0,0,0,1"))
                                    (rule "commuteUnion_2" (formula "45") (term "0,0,1,0,0"))
                                    (rule "commuteUnion" (formula "40") (term "0,0,0,1,0,0"))
                                    (rule "commuteUnion_2" (formula "47") (term "0,0,1,0,2,1"))
                                    (rule "commuteUnion_2" (formula "42") (term "0,1,0,0"))
                                    (rule "commuteUnion" (formula "41") (term "0,0,0,1,0,0"))
                                    (rule "commuteUnion" (formula "43") (term "0,0,0,1,0,0,0,0,1"))
                                    (rule "commuteUnion_2" (formula "45") (term "0,1,0,0"))
                                    (rule "commuteUnion_2" (formula "40") (term "0,1,0,0"))
                                    (rule "commuteUnion_2" (formula "47") (term "0,1,0,2,1"))
                                    (rule "commuteUnion" (formula "42") (term "0,0,0,1,0,0"))
                                    (rule "commuteUnion_2" (formula "41") (term "0,1,0,0"))
                                    (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "11"))
                                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "105")) (ifInst ""  (formula "106")) (ifInst ""  (formula "107")) (ifInst ""  (formula "108")) (ifInst ""  (formula "109")) (ifInst ""  (formula "110")) (ifInst ""  (formula "111")) (ifInst ""  (formula "112")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")) (ifInst ""  (formula "56")) (ifInst ""  (formula "57")) (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                                    (rule "translateJavaMulInt" (formula "11") (term "1,1,0,0"))
                                    (rule "translateJavaMulInt" (formula "11") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "disjointDefinition" (formula "39"))
                                     (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "132")))
                                    (rule "true_left" (formula "39"))
                                    (rule "disjointDefinition" (formula "38"))
                                     (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "130")))
                                    (rule "true_left" (formula "38"))
                                    (rule "disjointDefinition" (formula "37"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "eqSymm" (formula "86"))
                                    (rule "disjointDefinition" (formula "36"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "notLeft" (formula "36"))
                                    (rule "eqSymm" (formula "85"))
                                    (rule "disjointDefinition" (formula "35"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "disjointDefinition" (formula "34"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "notLeft" (formula "34"))
                                    (rule "eqSymm" (formula "83"))
                                    (rule "disjointDefinition" (formula "33"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "notLeft" (formula "33"))
                                    (rule "eqSymm" (formula "82"))
                                    (rule "disjointDefinition" (formula "32"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "notLeft" (formula "32"))
                                    (rule "eqSymm" (formula "81"))
                                    (rule "disjointDefinition" (formula "31"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "notLeft" (formula "31"))
                                    (rule "eqSymm" (formula "80"))
                                    (rule "disjointDefinition" (formula "30"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "notLeft" (formula "30"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "disjointDefinition" (formula "29"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "notLeft" (formula "29"))
                                    (rule "eqSymm" (formula "78"))
                                    (rule "disjointDefinition" (formula "28"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "notLeft" (formula "28"))
                                    (rule "eqSymm" (formula "77"))
                                    (rule "disjointDefinition" (formula "27"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "notLeft" (formula "27"))
                                    (rule "eqSymm" (formula "76"))
                                    (rule "disjointDefinition" (formula "26"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "notLeft" (formula "26"))
                                    (rule "eqSymm" (formula "75"))
                                    (rule "disjointDefinition" (formula "25"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "eqSymm" (formula "74"))
                                    (rule "disjointDefinition" (formula "24"))
                                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "102")))
                                    (rule "true_left" (formula "24"))
                                    (rule "disjointDefinition" (formula "23"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "eqSymm" (formula "72"))
                                    (rule "disjointDefinition" (formula "22"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "notLeft" (formula "22"))
                                    (rule "eqSymm" (formula "71"))
                                    (rule "disjointDefinition" (formula "21"))
                                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "96")))
                                    (rule "true_left" (formula "21"))
                                    (rule "disjointDefinition" (formula "20"))
                                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "94")))
                                    (rule "true_left" (formula "20"))
                                    (rule "disjointDefinition" (formula "19"))
                                     (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "92")))
                                    (rule "true_left" (formula "19"))
                                    (rule "disjointDefinition" (formula "18"))
                                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "90")))
                                    (rule "true_left" (formula "18"))
                                    (rule "disjointDefinition" (formula "17"))
                                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "88")))
                                    (rule "true_left" (formula "17"))
                                    (rule "disjointDefinition" (formula "16"))
                                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "86")))
                                    (rule "true_left" (formula "16"))
                                    (rule "disjointDefinition" (formula "15"))
                                     (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "84")))
                                    (rule "true_left" (formula "15"))
                                    (rule "disjointDefinition" (formula "14"))
                                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "82")))
                                    (rule "true_left" (formula "14"))
                                    (rule "disjointDefinition" (formula "12"))
                                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "79")))
                                    (rule "true_left" (formula "12"))
                                    (rule "disjointDefinition" (formula "12"))
                                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "79")))
                                    (rule "true_left" (formula "12"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "60"))
                                    (rule "eqSymm" (formula "11"))
                                    (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "33"))
                                     (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "105")) (ifInst ""  (formula "106")) (ifInst ""  (formula "107")) (ifInst ""  (formula "108")) (ifInst ""  (formula "109")) (ifInst ""  (formula "110")) (ifInst ""  (formula "111")) (ifInst ""  (formula "112")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")) (ifInst ""  (formula "56")) (ifInst ""  (formula "57")) (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                                    (rule "translateJavaMulInt" (formula "33") (term "1,1,0,0"))
                                    (rule "translateJavaMulInt" (formula "33") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "33") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                    (rule "andLeft" (formula "33"))
                                    (rule "andLeft" (formula "33"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "33"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "disjointDefinition" (formula "61"))
                                     (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "132")))
                                    (rule "true_left" (formula "61"))
                                    (rule "disjointDefinition" (formula "60"))
                                     (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "130")))
                                    (rule "true_left" (formula "60"))
                                    (rule "disjointDefinition" (formula "59"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "notLeft" (formula "59"))
                                    (rule "eqSymm" (formula "86"))
                                    (rule "disjointDefinition" (formula "58"))
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "notLeft" (formula "58"))
                                    (rule "eqSymm" (formula "85"))
                                    (rule "disjointDefinition" (formula "57"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "notLeft" (formula "57"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "disjointDefinition" (formula "56"))
                                     (builtin "One Step Simplification" (formula "56"))
                                    (rule "notLeft" (formula "56"))
                                    (rule "eqSymm" (formula "83"))
                                    (rule "disjointDefinition" (formula "55"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "notLeft" (formula "55"))
                                    (rule "eqSymm" (formula "82"))
                                    (rule "disjointDefinition" (formula "54"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "notLeft" (formula "54"))
                                    (rule "eqSymm" (formula "81"))
                                    (rule "disjointDefinition" (formula "53"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "notLeft" (formula "53"))
                                    (rule "eqSymm" (formula "80"))
                                    (rule "disjointDefinition" (formula "52"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "notLeft" (formula "52"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "disjointDefinition" (formula "51"))
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "notLeft" (formula "51"))
                                    (rule "eqSymm" (formula "78"))
                                    (rule "disjointDefinition" (formula "50"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "notLeft" (formula "50"))
                                    (rule "eqSymm" (formula "77"))
                                    (rule "disjointDefinition" (formula "49"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "notLeft" (formula "49"))
                                    (rule "eqSymm" (formula "76"))
                                    (rule "disjointDefinition" (formula "48"))
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "notLeft" (formula "48"))
                                    (rule "eqSymm" (formula "75"))
                                    (rule "disjointDefinition" (formula "47"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "notLeft" (formula "47"))
                                    (rule "eqSymm" (formula "74"))
                                    (rule "disjointDefinition" (formula "46"))
                                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "102")))
                                    (rule "true_left" (formula "46"))
                                    (rule "disjointDefinition" (formula "45"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "notLeft" (formula "45"))
                                    (rule "eqSymm" (formula "72"))
                                    (rule "disjointDefinition" (formula "44"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "notLeft" (formula "44"))
                                    (rule "eqSymm" (formula "71"))
                                    (rule "disjointDefinition" (formula "43"))
                                     (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "96")))
                                    (rule "true_left" (formula "43"))
                                    (rule "disjointDefinition" (formula "42"))
                                     (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "94")))
                                    (rule "true_left" (formula "42"))
                                    (rule "disjointDefinition" (formula "41"))
                                     (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "92")))
                                    (rule "true_left" (formula "41"))
                                    (rule "disjointDefinition" (formula "40"))
                                     (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "90")))
                                    (rule "true_left" (formula "40"))
                                    (rule "disjointDefinition" (formula "39"))
                                     (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "88")))
                                    (rule "true_left" (formula "39"))
                                    (rule "disjointDefinition" (formula "38"))
                                     (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "86")))
                                    (rule "true_left" (formula "38"))
                                    (rule "disjointDefinition" (formula "37"))
                                     (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "84")))
                                    (rule "true_left" (formula "37"))
                                    (rule "disjointDefinition" (formula "36"))
                                     (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "82")))
                                    (rule "true_left" (formula "36"))
                                    (rule "disjointDefinition" (formula "34"))
                                     (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "79")))
                                    (rule "true_left" (formula "34"))
                                    (rule "disjointDefinition" (formula "34"))
                                     (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "79")))
                                    (rule "true_left" (formula "34"))
                                    (rule "applyEq" (formula "33") (term "1") (ifseqformula "11"))
                                    (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "32") (term "0") (inst "b=b_3"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "translateJavaAddInt" (formula "32") (term "0,2,0,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "32") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "32") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "32") (term "0,2,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "32") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "32") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "0,0,1,1,0"))
                                    (rule "mul_literals" (formula "32") (term "0,0,0,1,1,0"))
                                    (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "47") (term "0") (inst "b=b_3"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "translateJavaAddInt" (formula "47") (term "2,0,1,0"))
                                    (rule "translateJavaAddInt" (formula "47") (term "0,2,1,3,0,1,0"))
                                    (rule "translateJavaAddInt" (formula "47") (term "3,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "47") (term "0,2,1,3,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "47") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0"))
                                    (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "50") (term "0,1") (inst "b=b_3"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "translateJavaAddInt" (formula "50") (term "0,2,1,3,0,1,0,1"))
                                    (rule "translateJavaMod" (formula "50") (term "0,1,0,0,1"))
                                    (rule "translateJavaAddInt" (formula "50") (term "2,0,1,0,1"))
                                    (rule "translateJavaAddInt" (formula "50") (term "3,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "50") (term "0,2,1,3,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0,1"))
                                    (rule "jmod_axiom" (formula "50") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0,0,1"))
                                    (rule "polySimp_homoEq" (formula "50") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "0,1,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0,1,0,0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "50") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0,1"))
                                    (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "26") (term "0") (inst "b=b_3"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "translateJavaAddInt" (formula "26") (term "0,2,5,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,2,5,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                    (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "27") (term "0") (inst "b=b_3"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "translateJavaAddInt" (formula "27") (term "0,2,5,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "0,2,5,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                    (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "25") (term "0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "translateJavaAddInt" (formula "25") (term "0,1,0,0"))
                                    (rule "translateJavaAddInt" (formula "25") (term "3,0,1,0"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "polySimp_addComm0" (formula "27") (term "3,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25"))
                                    (rule "inEqSimp_commuteLeq" (formula "26"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "15"))
                                    (rule "inEqSimp_homoInEq1" (formula "26"))
                                    (rule "mul_literals" (formula "26") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                    (rule "add_literals" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                    (rule "mul_literals" (formula "26") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "25") (ifseqformula "38"))
                                    (rule "greater_literals" (formula "25") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "mul_literals" (formula "25") (term "1,0"))
                                    (rule "leq_literals" (formula "25") (term "0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "elimGcdLeq_antec" (formula "25") (inst "elimGcdRightDiv=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "25") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "neg_literal" (formula "25") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "25") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0"))
                                    (rule "qeq_literals" (formula "25") (term "0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "21"))
                                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "118")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,0,0") (ifseqformula "13"))
                                    (rule "replace_known_left" (formula "27") (term "1,0,1,0,0") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "117")))
                                    (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "28"))
                                    (rule "ifEqualsInteger" (formula "27"))
                                    (rule "elementOfUnion" (formula "27") (term "0,0"))
                                    (rule "elementOfArrayRangeConcrete" (formula "27") (term "1,0,0"))
                                    (rule "eqSymm" (formula "27") (term "0,0,1,0,0"))
                                    (rule "replace_known_right" (formula "27") (term "0,0,1,0,0") (ifseqformula "116"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "elementOfUnion" (formula "27") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "elementOfUnion" (formula "27") (term "0,0,1"))
                                    (rule "elementOfArrayRangeConcrete" (formula "27") (term "1,0,0,1"))
                                    (rule "eqSymm" (formula "27") (term "0,0,1,0,0,1"))
                                    (rule "replace_known_right" (formula "27") (term "0,0,1,0,0,1") (ifseqformula "116"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "elementOfUnion" (formula "27") (term "0,0,1"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "52") (term "0") (inst "b=b_3"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "translateJavaAddInt" (formula "52") (term "0,2,5,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "52") (term "0,2,5,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "52") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,1,0,0"))
                                    (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "34") (term "0,1") (inst "b=b_3"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "translateJavaAddInt" (formula "34") (term "3,0,1,0,1"))
                                    (rule "translateJavaMod" (formula "34") (term "0,1,0,0,1"))
                                    (rule "translateJavaAddInt" (formula "34") (term "2,0,1,0,1"))
                                    (rule "translateJavaAddInt" (formula "34") (term "0,2,1,3,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "34") (term "0,2,1,3,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0,1"))
                                    (rule "jmod_axiom" (formula "34") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0,1"))
                                    (rule "polySimp_homoEq" (formula "34") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "34") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,1"))
                                    (rule "commuteUnion_2" (formula "11") (term "0,0"))
                                    (rule "commuteUnion" (formula "11") (term "1,1,0"))
                                    (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "51") (term "0") (inst "b=b_3"))
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "translateJavaAddInt" (formula "51") (term "0,2,5,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "51") (term "0,2,5,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "51") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,1,0,0"))
                                    (rule "commute_and" (formula "121"))
                                    (rule "commute_or" (formula "16") (term "0,0"))
                                    (rule "cut_direct" (formula "45") (term "0"))
                                    (branch "CUT: result_22.equal_buckets = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "andLeft" (formula "46"))
                                       (rule "notLeft" (formula "47"))
                                       (rule "andLeft" (formula "46"))
                                       (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "45"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "45"))
                                        (builtin "One Step Simplification" (formula "55"))
                                       (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "45"))
                                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "47")))
                                       (rule "true_left" (formula "40"))
                                       (rule "replace_known_left" (formula "123") (term "0,0,1") (ifseqformula "44"))
                                        (builtin "One Step Simplification" (formula "123") (ifInst ""  (formula "44")))
                                       (rule "qeq_literals" (formula "123") (term "0"))
                                        (builtin "One Step Simplification" (formula "123"))
                                       (rule "inEqSimp_leqRight" (formula "123"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "65"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                       (rule "add_literals" (formula "1") (term "0,1"))
                                       (rule "add_zero_left" (formula "1") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "65") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "65") (term "1,0,0"))
                                       (rule "mul_literals" (formula "65") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "65") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "65") (term "0,0"))
                                       (rule "add_literals" (formula "65") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "65") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "65") (term "0,0"))
                                       (rule "leq_literals" (formula "65") (term "0"))
                                        (builtin "One Step Simplification" (formula "65"))
                                       (rule "false_right" (formula "65"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "CUT: result_22.equal_buckets = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "45"))
                                       (rule "true_left" (formula "45"))
                                       (rule "replace_known_right" (formula "121") (term "0,0,1") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "62")))
                                       (rule "qeq_literals" (formula "121") (term "0"))
                                        (builtin "One Step Simplification" (formula "121"))
                                       (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "true_left" (formula "52"))
                                       (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "61"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "true_left" (formula "34"))
                                       (rule "inEqSimp_leqRight" (formula "118"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                              (branch "Exceptional Post (sample_sort_recurse_on)"
                                  (builtin "One Step Simplification" (formula "48"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,0"))
                                 (rule "translateJavaAddInt" (formula "48") (term "7,0,0,1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "48") (term "6,0,0,1,1,1,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "48") (term "7,0,1,0,1,1,1,1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "48") (term "6,0,1,0,1,1,1,1,0,1,1"))
                                 (rule "andLeft" (formula "48"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "1,0") (ifseqformula "48"))
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,1,0") (ifseqformula "25"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,0,1,0") (ifseqformula "15"))
                                 (rule "andLeft" (formula "49"))
                                 (rule "andLeft" (formula "50"))
                                 (rule "andLeft" (formula "49"))
                                 (rule "andLeft" (formula "51"))
                                 (rule "notLeft" (formula "49"))
                                 (rule "close" (formula "53") (ifseqformula "52"))
                              )
                              (branch "Pre (sample_sort_recurse_on)"
                                  (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "1")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")) (ifInst ""  (formula "52")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "52")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")))
                                 (rule "andRight" (formula "53"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "53"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "53"))
                                       (branch
                                          (rule "andRight" (formula "53"))
                                          (branch
                                             (rule "andRight" (formula "53"))
                                             (branch
                                                (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,1"))
                                                (rule "inEqSimp_leqRight" (formula "53"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "11"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "jmod_axiom" (formula "33") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                                (rule "jmod_axiom" (formula "42") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1"))
                                                (rule "jmod_axiom" (formula "47") (term "0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "47") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,1"))
                                                (rule "polySimp_elimOne" (formula "47") (term "0,0,1,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "33"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "42") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "0,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "47") (term "1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                (rule "mul_literals" (formula "11") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "11"))
                                                (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "8") (term "0,0"))
                                                (rule "qeq_literals" (formula "8") (term "0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "7") (term "0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "closeFalse" (formula "7"))
                                             )
                                             (branch
                                                (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,1"))
                                                (rule "inEqSimp_leqRight" (formula "53"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_gtToGeq" (formula "11"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "jmod_axiom" (formula "33") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                                (rule "jmod_axiom" (formula "47") (term "0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0,1"))
                                                (rule "jmod_axiom" (formula "42") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "47") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,1"))
                                                (rule "polySimp_elimOne" (formula "47") (term "0,0,1,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "33"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "47") (term "1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "42") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                (rule "mul_literals" (formula "11") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "8"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch
                                             (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,1"))
                                             (rule "inEqSimp_leqRight" (formula "53"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "11"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "12"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                             (rule "jmod_axiom" (formula "33") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                             (rule "jmod_axiom" (formula "42") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1"))
                                             (rule "jmod_axiom" (formula "47") (term "0,1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0,1"))
                                             (rule "polySimp_sepNegMonomial" (formula "47") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "47") (term "0,0,1,1"))
                                             (rule "polySimp_sepNegMonomial" (formula "33"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                             (rule "polySimp_sepNegMonomial" (formula "42") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "0,1"))
                                             (rule "polySimp_sepNegMonomial" (formula "47") (term "1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1"))
                                             (rule "mul_literals" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "41") (term "0,0"))
                                             (rule "qeq_literals" (formula "41") (term "0"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "true_left" (formula "41"))
                                             (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "10"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                             (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0"))
                                             (rule "add_zero_right" (formula "10") (term "0"))
                                             (rule "leq_literals" (formula "10"))
                                             (rule "closeFalse" (formula "10"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "53"))
                                          (branch
                                             (rule "translateJavaSubInt" (formula "53") (term "0"))
                                             (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                             (rule "polySimp_elimSub" (formula "53") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "53") (term "0"))
                                             (rule "close" (formula "53") (ifseqformula "11"))
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "53"))
                                             (branch
                                                (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,1"))
                                                (rule "inEqSimp_leqRight" (formula "53"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "11"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "jmod_axiom" (formula "42") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1"))
                                                (rule "jmod_axiom" (formula "33") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                                (rule "jmod_axiom" (formula "47") (term "0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "47") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,1"))
                                                (rule "polySimp_elimOne" (formula "47") (term "0,0,1,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "42") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "0,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "33"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "47") (term "1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                (rule "mul_literals" (formula "11") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                                                (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "41") (term "0,0"))
                                                (rule "qeq_literals" (formula "41") (term "0"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "true_left" (formula "41"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "40"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "53"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "53"))
                                                   (branch "Case 1"
                                                       (builtin "Use Dependency Contract" (formula "53") (term "0") (ifInst ""  (formula "29") (term "0")) (contract "de.wiesler.Functions[de.wiesler.Functions::isValidBucketStarts([I,int)].JML accessible clause.0") (userinteraction))
                                                       (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "37")) (ifInst ""  (formula "51")) (ifInst ""  (formula "51")))
                                                      (rule "wellFormedAnon" (formula "47") (term "0,0,0"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,0,0") (ifseqformula "25"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,1,0,0") (ifseqformula "15"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "0,0,0,0") (ifseqformula "25"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "0,0,0,0,0") (ifseqformula "15"))
                                                      (rule "replace_known_right" (formula "47") (term "0,0,1,0,0") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "2")) (ifInst ""  (formula "14")) (ifInst ""  (formula "24")) (ifInst ""  (formula "38")) (ifInst ""  (formula "16")))
                                                      (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,1"))
                                                      (rule "disjointDefinition" (formula "47") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "10"))
                                                      (rule "mul_literals" (formula "10") (term "1,0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                      (rule "applyEq" (formula "47") (term "1,1") (ifseqformula "29"))
                                                      (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "notLeft" (formula "47"))
                                                      (rule "jmod_axiom" (formula "41") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1"))
                                                      (rule "jmod_axiom" (formula "46") (term "0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,1"))
                                                      (rule "jmod_axiom" (formula "32") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "46") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "46") (term "0,0,1,1"))
                                                      (rule "polySimp_sepNegMonomial" (formula "41") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "0,1"))
                                                      (rule "polySimp_sepNegMonomial" (formula "46") (term "1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,1"))
                                                      (rule "polySimp_sepNegMonomial" (formula "32"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                      (rule "mul_literals" (formula "10") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "7") (term "0,0"))
                                                      (rule "qeq_literals" (formula "7") (term "0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "39") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                                      (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0"))
                                                      (rule "qeq_literals" (formula "39") (term "0"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "true_left" (formula "39"))
                                                      (rule "distributeIntersection_2" (formula "45") (term "0"))
                                                      (rule "unionEqualsEmpty" (formula "45"))
                                                      (rule "disjointArrayRanges" (formula "45") (term "1"))
                                                      (rule "replace_known_right" (formula "45") (term "0,0,0,0,1") (ifseqformula "47"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "newSym_eq" (formula "31") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))"))
                                                      (rule "times_zero_1" (formula "31") (term "1,1"))
                                                      (rule "add_zero_right" (formula "31") (term "1"))
                                                      (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                                                      (rule "eqSymm" (formula "32"))
                                                      (rule "applyEq" (formula "34") (term "5,0,1") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "43") (term "5,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "44") (term "7,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "42") (term "5,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "45") (term "0,0,1,1") (ifseqformula "32"))
                                                      (rule "polySimp_homoEq" (formula "45") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "45") (term "0,0,1,1"))
                                                      (rule "applyEq" (formula "45") (term "5,0,0,0,1") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "30") (term "7,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "32"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "applyEq" (formula "45") (term "1,7,0,0,0,1") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "33") (term "0,2,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "29") (term "5,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "53") (term "2,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "46") (term "2,1,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "34") (term "1,7,0,1") (ifseqformula "32"))
                                                      (rule "polySimp_sepPosMonomial" (formula "45") (term "0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "45") (term "1,0,1,1"))
                                                      (rule "mul_literals" (formula "45") (term "0,1,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                                                      (rule "times_zero_1" (formula "39") (term "0,0"))
                                                      (rule "add_zero_left" (formula "39") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                      (rule "mul_literals" (formula "39") (term "1"))
                                                      (rule "elimGcdGeq_antec" (formula "39") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                                      (rule "leq_literals" (formula "39") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "39") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                                      (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0"))
                                                      (rule "leq_literals" (formula "39") (term "0"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "nnf_imp2or" (formula "17") (term "0"))
                                                      (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                                      (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "36"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "translateJavaMulInt" (formula "36") (term "1,1,0,0,0,0,1,0,0"))
                                                      (rule "translateJavaMulInt" (formula "36") (term "1,1,0,0,0,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "36") (term "1,1,0,0,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "36") (term "1,1,0,0,0,0,0,1,0,0"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "andLeft" (formula "38"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "andLeft" (formula "38"))
                                                      (rule "andLeft" (formula "41"))
                                                      (rule "notLeft" (formula "37"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "andLeft" (formula "38"))
                                                      (rule "andLeft" (formula "42"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "notLeft" (formula "38"))
                                                      (rule "andLeft" (formula "38"))
                                                      (rule "andLeft" (formula "43"))
                                                      (rule "notLeft" (formula "37"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "andLeft" (formula "38"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "notLeft" (formula "38"))
                                                      (rule "andLeft" (formula "38"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "notLeft" (formula "38"))
                                                      (rule "andLeft" (formula "38"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "notLeft" (formula "37"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "andLeft" (formula "38"))
                                                      (rule "andLeft" (formula "47"))
                                                      (rule "notLeft" (formula "36"))
                                                      (rule "notLeft" (formula "36"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "disjointDefinition" (formula "72"))
                                                       (builtin "One Step Simplification" (formula "72"))
                                                      (rule "notLeft" (formula "72"))
                                                      (rule "disjointDefinition" (formula "71"))
                                                       (builtin "One Step Simplification" (formula "71"))
                                                      (rule "notLeft" (formula "71"))
                                                      (rule "disjointDefinition" (formula "70"))
                                                       (builtin "One Step Simplification" (formula "70"))
                                                      (rule "notLeft" (formula "70"))
                                                      (rule "eqSymm" (formula "80"))
                                                      (rule "disjointDefinition" (formula "69"))
                                                       (builtin "One Step Simplification" (formula "69"))
                                                      (rule "notLeft" (formula "69"))
                                                      (rule "eqSymm" (formula "79"))
                                                      (rule "disjointDefinition" (formula "68"))
                                                       (builtin "One Step Simplification" (formula "68"))
                                                      (rule "notLeft" (formula "68"))
                                                      (rule "eqSymm" (formula "78"))
                                                      (rule "disjointDefinition" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "notLeft" (formula "67"))
                                                      (rule "eqSymm" (formula "77"))
                                                      (rule "disjointDefinition" (formula "66"))
                                                       (builtin "One Step Simplification" (formula "66"))
                                                      (rule "notLeft" (formula "66"))
                                                      (rule "eqSymm" (formula "76"))
                                                      (rule "disjointDefinition" (formula "65"))
                                                       (builtin "One Step Simplification" (formula "65"))
                                                      (rule "notLeft" (formula "65"))
                                                      (rule "eqSymm" (formula "75"))
                                                      (rule "disjointDefinition" (formula "64"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "notLeft" (formula "64"))
                                                      (rule "eqSymm" (formula "74"))
                                                      (rule "disjointDefinition" (formula "63"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "notLeft" (formula "63"))
                                                      (rule "eqSymm" (formula "73"))
                                                      (rule "disjointDefinition" (formula "62"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "notLeft" (formula "62"))
                                                      (rule "eqSymm" (formula "72"))
                                                      (rule "disjointDefinition" (formula "61"))
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "notLeft" (formula "61"))
                                                      (rule "eqSymm" (formula "71"))
                                                      (rule "disjointDefinition" (formula "60"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "notLeft" (formula "60"))
                                                      (rule "eqSymm" (formula "70"))
                                                      (rule "disjointDefinition" (formula "59"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                      (rule "notLeft" (formula "59"))
                                                      (rule "eqSymm" (formula "69"))
                                                      (rule "disjointDefinition" (formula "58"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "notLeft" (formula "58"))
                                                      (rule "eqSymm" (formula "68"))
                                                      (rule "disjointDefinition" (formula "57"))
                                                       (builtin "One Step Simplification" (formula "57"))
                                                      (rule "notLeft" (formula "57"))
                                                      (rule "disjointDefinition" (formula "56"))
                                                       (builtin "One Step Simplification" (formula "56"))
                                                      (rule "notLeft" (formula "56"))
                                                      (rule "eqSymm" (formula "66"))
                                                      (rule "disjointDefinition" (formula "55"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "notLeft" (formula "55"))
                                                      (rule "eqSymm" (formula "65"))
                                                      (rule "disjointDefinition" (formula "54"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "notLeft" (formula "54"))
                                                      (rule "disjointDefinition" (formula "53"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "notLeft" (formula "53"))
                                                      (rule "disjointDefinition" (formula "52"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "notLeft" (formula "52"))
                                                      (rule "disjointDefinition" (formula "51"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "notLeft" (formula "51"))
                                                      (rule "disjointDefinition" (formula "50"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "notLeft" (formula "50"))
                                                      (rule "disjointDefinition" (formula "49"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "notLeft" (formula "49"))
                                                      (rule "disjointDefinition" (formula "48"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "notLeft" (formula "48"))
                                                      (rule "disjointDefinition" (formula "47"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "notLeft" (formula "47"))
                                                      (rule "disjointDefinition" (formula "46"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "notLeft" (formula "46"))
                                                      (rule "disjointDefinition" (formula "45"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "notLeft" (formula "45"))
                                                      (rule "applyEq" (formula "51") (term "0,1,0,0") (ifseqformula "44"))
                                                      (rule "applyEq" (formula "91") (term "0,0") (ifseqformula "44"))
                                                      (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "44"))
                                                      (rule "applyEq" (formula "24") (term "1,0,1,0") (ifseqformula "44"))
                                                      (rule "applyEq" (formula "98") (term "0,1,0,0") (ifseqformula "44"))
                                                      (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "44"))
                                                      (rule "applyEq" (formula "50") (term "0,1,0,2,0") (ifseqformula "44"))
                                                      (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "44"))
                                                      (rule "applyEq" (formula "54") (term "0,1,0,0,0,0,1") (ifseqformula "44"))
                                                      (rule "applyEq" (formula "52") (term "0,1,0,0") (ifseqformula "44"))
                                                      (rule "applyEq" (formula "53") (term "0,1,0,0") (ifseqformula "44"))
                                                      (rule "distributeIntersection_2" (formula "91") (term "0"))
                                                      (rule "distributeIntersection" (formula "12") (term "0"))
                                                      (rule "distributeIntersection" (formula "22") (term "0"))
                                                      (rule "distributeIntersection" (formula "21") (term "0"))
                                                      (rule "unionEqualsEmpty" (formula "91"))
                                                      (rule "distributeIntersection" (formula "12") (term "1,0"))
                                                      (rule "distributeIntersection" (formula "12") (term "0,0"))
                                                      (rule "distributeIntersection" (formula "22") (term "1,0"))
                                                      (rule "distributeIntersection" (formula "22") (term "0,0"))
                                                      (rule "distributeIntersection" (formula "21") (term "1,0"))
                                                      (rule "distributeIntersection" (formula "21") (term "0,0"))
                                                      (rule "distributeIntersection_2" (formula "91") (term "0,0"))
                                                      (rule "distributeIntersection_2" (formula "91") (term "0,1"))
                                                      (rule "distributeIntersection" (formula "12") (term "0,1,0"))
                                                      (rule "distributeIntersection" (formula "12") (term "1,1,0"))
                                                      (rule "distributeIntersection" (formula "12") (term "1,0,0"))
                                                      (rule "distributeIntersection" (formula "12") (term "0,0,0"))
                                                      (rule "distributeIntersection" (formula "22") (term "1,1,0"))
                                                      (rule "distributeIntersection" (formula "22") (term "0,1,0"))
                                                      (rule "distributeIntersection" (formula "22") (term "0,0,0"))
                                                      (rule "distributeIntersection" (formula "22") (term "1,0,0"))
                                                      (rule "distributeIntersection" (formula "21") (term "0,1,0"))
                                                      (rule "distributeIntersection" (formula "21") (term "1,1,0"))
                                                      (rule "distributeIntersection" (formula "21") (term "1,0,0"))
                                                      (rule "distributeIntersection" (formula "21") (term "0,0,0"))
                                                      (rule "unionEqualsEmpty" (formula "91") (term "0"))
                                                      (rule "distributeIntersection_2" (formula "91") (term "0,0,1"))
                                                      (rule "distributeIntersection_2" (formula "91") (term "1,0,1"))
                                                      (rule "unionEqualsEmpty" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "unionEqualsEmpty" (formula "23"))
                                                      (rule "andLeft" (formula "23"))
                                                      (rule "unionEqualsEmpty" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "distributeIntersection_2" (formula "94") (term "0,0,0"))
                                                      (rule "distributeIntersection_2" (formula "94") (term "0,1,0"))
                                                      (rule "unionEqualsEmpty" (formula "94") (term "1"))
                                                      (rule "unionEqualsEmpty" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "unionEqualsEmpty" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "unionEqualsEmpty" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "unionEqualsEmpty" (formula "28"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "unionEqualsEmpty" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "unionEqualsEmpty" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "unionEqualsEmpty" (formula "100") (term "0,0"))
                                                      (rule "disjointArrayRangeAllFields1" (formula "100") (term "1,0,0"))
                                                      (rule "disjointArrayRangeAllFields1" (formula "100") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "100") (term "1,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "100") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_subsumption6" (formula "100") (term "1,0,1,0,0") (ifseqformula "56"))
                                                      (rule "greater_literals" (formula "100") (term "0,0,1,0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "100"))
                                                      (rule "mul_literals" (formula "100") (term "1,0,1,0,1,0,0"))
                                                      (rule "leq_literals" (formula "100") (term "0,1,0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "100"))
                                                      (rule "inEqSimp_subsumption6" (formula "100") (term "1,0,0,0,0") (ifseqformula "56"))
                                                      (rule "mul_literals" (formula "100") (term "1,1,0,1,0,0,0,0"))
                                                      (rule "greater_literals" (formula "100") (term "0,0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "100"))
                                                      (rule "leq_literals" (formula "100") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "100"))
                                                      (rule "unionEqualsEmpty" (formula "12"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "notLeft" (formula "12"))
                                                      (rule "notLeft" (formula "12"))
                                                      (rule "eqSymm" (formula "64"))
                                                      (rule "eqSymm" (formula "63"))
                                                      (rule "unionEqualsEmpty" (formula "12"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "notLeft" (formula "12"))
                                                      (rule "notLeft" (formula "12"))
                                                      (rule "eqSymm" (formula "63"))
                                                      (rule "eqSymm" (formula "62"))
                                                      (rule "unionEqualsEmpty" (formula "12"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "notLeft" (formula "13"))
                                                      (rule "notLeft" (formula "12"))
                                                      (rule "eqSymm" (formula "62"))
                                                      (rule "eqSymm" (formula "61"))
                                                      (rule "unionEqualsEmpty" (formula "12"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "notLeft" (formula "12"))
                                                      (rule "notLeft" (formula "12"))
                                                      (rule "eqSymm" (formula "61"))
                                                      (rule "eqSymm" (formula "60"))
                                                      (rule "unionEqualsEmpty" (formula "25"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "notLeft" (formula "25"))
                                                      (rule "notLeft" (formula "25"))
                                                      (rule "eqSymm" (formula "60"))
                                                      (rule "eqSymm" (formula "59"))
                                                      (rule "sortsDisjointModuloNull" (formula "60"))
                                                      (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "110"))
                                                       (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "99")))
                                                      (rule "false_right" (formula "60"))
                                                      (rule "sortsDisjointModuloNull" (formula "59"))
                                                      (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "99"))
                                                       (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "109")))
                                                      (rule "false_right" (formula "59"))
                                                      (rule "unionEqualsEmpty" (formula "24"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "eqSymm" (formula "59"))
                                                      (rule "eqSymm" (formula "58"))
                                                      (rule "sortsDisjointModuloNull" (formula "59"))
                                                      (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "97"))
                                                       (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "109")))
                                                      (rule "false_right" (formula "59"))
                                                      (rule "sortsDisjointModuloNull" (formula "58"))
                                                      (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "95"))
                                                       (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "108")))
                                                      (rule "false_right" (formula "58"))
                                                      (rule "unionEqualsEmpty" (formula "24"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "notLeft" (formula "25"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "eqSymm" (formula "58"))
                                                      (rule "eqSymm" (formula "57"))
                                                      (rule "sortsDisjointModuloNull" (formula "58"))
                                                      (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "108"))
                                                       (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "100")))
                                                      (rule "false_right" (formula "58"))
                                                      (rule "sortsDisjointModuloNull" (formula "57"))
                                                      (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "98"))
                                                       (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "107")))
                                                      (rule "false_right" (formula "57"))
                                                      (rule "unionEqualsEmpty" (formula "24"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "eqSymm" (formula "57"))
                                                      (rule "eqSymm" (formula "56"))
                                                      (rule "sortsDisjointModuloNull" (formula "57"))
                                                      (rule "replace_known_right" (formula "57") (term "1") (ifseqformula "107"))
                                                       (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "100")))
                                                      (rule "false_right" (formula "57"))
                                                      (rule "sortsDisjointModuloNull" (formula "56"))
                                                      (rule "replace_known_right" (formula "56") (term "1") (ifseqformula "106"))
                                                       (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "100")))
                                                      (rule "false_right" (formula "56"))
                                                      (rule "unionEqualsEmpty" (formula "20"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "notLeft" (formula "21"))
                                                      (rule "notLeft" (formula "20"))
                                                      (rule "eqSymm" (formula "56"))
                                                      (rule "eqSymm" (formula "55"))
                                                      (rule "replace_known_right" (formula "101") (term "0,1,0,0") (ifseqformula "56"))
                                                       (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "55")))
                                                      (rule "unionEqualsEmpty" (formula "20"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "notLeft" (formula "20"))
                                                      (rule "notLeft" (formula "20"))
                                                      (rule "eqSymm" (formula "55"))
                                                      (rule "eqSymm" (formula "54"))
                                                      (rule "unionEqualsEmpty" (formula "21"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "andLeft" (formula "21"))
                                                      (rule "notLeft" (formula "22"))
                                                      (rule "notLeft" (formula "21"))
                                                      (rule "eqSymm" (formula "54"))
                                                      (rule "eqSymm" (formula "53"))
                                                      (rule "unionEqualsEmpty" (formula "20"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "notLeft" (formula "20"))
                                                      (rule "notLeft" (formula "20"))
                                                      (rule "eqSymm" (formula "53"))
                                                      (rule "eqSymm" (formula "52"))
                                                      (rule "unionEqualsEmpty" (formula "104") (term "0,1"))
                                                      (rule "disjointArrayRangeAllFields1" (formula "104") (term "1,0,1"))
                                                      (rule "replace_known_right" (formula "104") (term "0,0,1,0,1") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "104"))
                                                      (rule "disjointArrayRangeAllFields1" (formula "104") (term "0,1"))
                                                      (rule "replace_known_right" (formula "104") (term "0,0,0,1") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "104"))
                                                      (rule "unionEqualsEmpty" (formula "104") (term "0"))
                                                      (rule "disjointArrayRangeAllFields1" (formula "104") (term "1,0"))
                                                      (rule "replace_known_right" (formula "104") (term "0,0,1,0") (ifseqformula "56"))
                                                       (builtin "One Step Simplification" (formula "104"))
                                                      (rule "disjointArrayRangeAllFields1" (formula "104") (term "0"))
                                                      (rule "replace_known_right" (formula "104") (term "0,0,0") (ifseqformula "57"))
                                                       (builtin "One Step Simplification" (formula "104"))
                                                      (rule "unionEqualsEmpty" (formula "104"))
                                                      (rule "disjointArrayRangeAllFields1" (formula "104") (term "0"))
                                                      (rule "replace_known_right" (formula "104") (term "0,0,0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "104"))
                                                      (rule "disjointArrayRangeAllFields1" (formula "104"))
                                                      (rule "notRight" (formula "104"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "close" (formula "57") (ifseqformula "1"))
                                                   )
                                                   (branch
                                                      (rule "translateJavaSubInt" (formula "53") (term "1"))
                                                      (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                                      (rule "polySimp_elimSub" (formula "53") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "53") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,1"))
                                                      (rule "inEqSimp_gtToGeq" (formula "10"))
                                                      (rule "mul_literals" (formula "10") (term "1,0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                      (rule "jmod_axiom" (formula "32") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                                      (rule "jmod_axiom" (formula "46") (term "0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,1"))
                                                      (rule "jmod_axiom" (formula "41") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1"))
                                                      (rule "polySimp_sepNegMonomial" (formula "46") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "46") (term "0,0,1,1"))
                                                      (rule "polySimp_sepNegMonomial" (formula "32"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "46") (term "1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,1"))
                                                      (rule "polySimp_sepNegMonomial" (formula "41") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                      (rule "mul_literals" (formula "10") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0"))
                                                      (rule "qeq_literals" (formula "7") (term "0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "39") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                                      (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                      (rule "add_literals" (formula "39") (term "0,0"))
                                                      (rule "qeq_literals" (formula "39") (term "0"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "true_left" (formula "39"))
                                                      (rule "newSym_eq" (formula "31") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))"))
                                                      (rule "times_zero_1" (formula "31") (term "1,1"))
                                                      (rule "add_zero_right" (formula "31") (term "1"))
                                                      (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                                                      (rule "eqSymm" (formula "32"))
                                                      (rule "applyEq" (formula "44") (term "7,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "42") (term "5,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "45") (term "0,0,1,1") (ifseqformula "32"))
                                                      (rule "polySimp_homoEq" (formula "45") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "45") (term "0,0,1,1"))
                                                      (rule "applyEq" (formula "52") (term "0,2,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "43") (term "5,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "33") (term "0,2,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "34") (term "5,0,1") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "45") (term "5,0,0,0,1") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "32"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "applyEq" (formula "45") (term "1,7,0,0,0,1") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "30") (term "7,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "29") (term "5,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "34") (term "1,7,0,1") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "32"))
                                                      (rule "polySimp_sepPosMonomial" (formula "45") (term "0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "45") (term "1,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,1"))
                                                      (rule "mul_literals" (formula "45") (term "0,1,0,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=arr_1"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "25"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "15"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "49"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                                                      (rule "polySimp_homoEq" (formula "53"))
                                                      (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "53") (term "0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "53"))
                                                      (rule "polySimp_mulComm0" (formula "53") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "53") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "53") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "53") (term "1,1"))
                                                      (rule "polySimp_mulAssoc" (formula "53") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "53") (term "0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "53") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "53") (term "0,1"))
                                                      (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                      (rule "disjointAllFields" (formula "1") (term "0,0,0") (ifseqformula "22"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "48"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
                                                      (rule "replace_known_left" (formula "1") (term "1,0,1,0,0") (ifseqformula "16"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "34"))
                                                      (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "48"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "53") (term "0,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "polySimp_homoEq" (formula "52"))
                                                      (rule "polySimp_addComm1" (formula "52") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor2" (formula "52") (term "0,0,0"))
                                                      (rule "add_literals" (formula "52") (term "1,0,0,0"))
                                                      (rule "times_zero_1" (formula "52") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "52") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "52") (term "0"))
                                                      (rule "add_literals" (formula "52") (term "1,0"))
                                                      (rule "times_zero_1" (formula "52") (term "0"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "closeTrue" (formula "52"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "andRight" (formula "53"))
                                                   (branch
                                                      (rule "impRight" (formula "53"))
                                                      (rule "andRight" (formula "54"))
                                                      (branch
                                                         (rule "orRight" (formula "54"))
                                                         (rule "translateJavaSubInt" (formula "55") (term "1"))
                                                         (rule "translateJavaMod" (formula "54") (term "0"))
                                                         (rule "eqSymm" (formula "55"))
                                                         (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "54")))
                                                         (rule "closeFalse" (formula "42"))
                                                      )
                                                      (branch
                                                         (rule "translateJavaAddInt" (formula "54") (term "6,0"))
                                                         (rule "translateJavaSubInt" (formula "54") (term "7,0"))
                                                         (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "andLeft" (formula "47"))
                                                         (rule "andLeft" (formula "47"))
                                                         (rule "notLeft" (formula "49"))
                                                         (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "48")))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "polySimp_elimSub" (formula "55") (term "7,0"))
                                                         (rule "mul_literals" (formula "55") (term "1,7,0"))
                                                         (rule "polySimp_homoEq" (formula "48"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "55") (term "6,0"))
                                                         (rule "polySimp_addComm0" (formula "55") (term "7,0"))
                                                         (rule "close" (formula "55") (ifseqformula "46"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "53"))
                                                      (branch "Case 1"
                                                         (rule "eqTermCut" (formula "53") (term "3,0") (inst "s=add(mul(begin, Z(neglit(1(#)))), end)") (userinteraction))
                                                         (branch "Assume javaSubInt(end, begin) = begin * -1 + end"
                                                            (rule "applyEq" (formula "54") (term "3,0") (ifseqformula "1") (userinteraction))
                                                             (builtin "Use Dependency Contract" (formula "54") (term "0") (ifInst ""  (formula "36") (term "0")) (contract "de.wiesler.Sorter[de.wiesler.Sorter::notAllValuesInOneBucket([I,int,int)].JML accessible clause.0") (userinteraction))
                                                             (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "38")) (ifInst ""  (formula "52")) (ifInst ""  (formula "30")) (ifInst ""  (formula "52")))
                                                            (rule "replaceKnownSelect_taclet0120_0" (formula "48") (term "1,1,0,0"))
                                                            (rule "wellFormedAnon" (formula "48") (term "0,0,0,0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "1,0,0,0") (ifseqformula "26"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0120_1" (formula "48") (term "1,1,0,0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,1,0,0,0") (ifseqformula "16"))
                                                            (rule "wellFormedAnonEQ" (formula "48") (term "0,0,0,0,0") (ifseqformula "26"))
                                                            (rule "wellFormedAnonEQ" (formula "48") (term "0,0,0,0,0,0") (ifseqformula "16"))
                                                            (rule "translateJavaSubInt" (formula "1") (term "0"))
                                                            (rule "eqSymm" (formula "48") (term "1,0,0"))
                                                            (rule "replace_known_left" (formula "48") (term "1,0,0,0,0,0") (ifseqformula "25"))
                                                             (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "3")) (ifInst ""  (formula "15")) (ifInst ""  (formula "39")) (ifInst ""  (formula "51")) (ifInst ""  (formula "17")) (ifInst ""  (formula "34")))
                                                            (rule "polySimp_homoEq" (formula "47") (term "0,1,1"))
                                                            (rule "polySimp_elimSub" (formula "1") (term "0"))
                                                            (rule "polySimp_homoEq" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,1"))
                                                            (rule "mul_literals" (formula "47") (term "0,1,0,0,1,1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "47") (term "0,0,0,1,1"))
                                                            (rule "disjointDefinition" (formula "48") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2" (formula "1") (term "0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "10"))
                                                            (rule "mul_literals" (formula "10") (term "1,0,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "11"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                            (rule "applyEq" (formula "47") (term "1,1") (ifseqformula "35"))
                                                            (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "54"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "notLeft" (formula "47"))
                                                            (rule "jmod_axiom" (formula "32") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                                            (rule "jmod_axiom" (formula "41") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1"))
                                                            (rule "jmod_axiom" (formula "46") (term "0,1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,1"))
                                                            (rule "polySimp_sepNegMonomial" (formula "46") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "0,0,1,1"))
                                                            (rule "polySimp_sepNegMonomial" (formula "32"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "41") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "41") (term "0,1"))
                                                            (rule "polySimp_sepNegMonomial" (formula "46") (term "1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                            (rule "mul_literals" (formula "10") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                                                            (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "7") (term "0,0"))
                                                            (rule "qeq_literals" (formula "7") (term "0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "39") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                                            (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "39") (term "0,0"))
                                                            (rule "qeq_literals" (formula "39") (term "0"))
                                                             (builtin "One Step Simplification" (formula "39"))
                                                            (rule "true_left" (formula "39"))
                                                            (rule "distributeIntersection_2" (formula "45") (term "0"))
                                                            (rule "unionEqualsEmpty" (formula "45"))
                                                            (rule "disjointArrayRanges" (formula "45") (term "1"))
                                                            (rule "replace_known_right" (formula "45") (term "0,0,0,0,1") (ifseqformula "47"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "newSym_eq" (formula "31") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))"))
                                                            (rule "times_zero_1" (formula "31") (term "1,1"))
                                                            (rule "add_zero_right" (formula "31") (term "1"))
                                                            (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                                                            (rule "eqSymm" (formula "32"))
                                                            (rule "applyEq" (formula "42") (term "5,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "45") (term "0,0,1,1") (ifseqformula "32"))
                                                            (rule "polySimp_homoEq" (formula "45") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,1,1"))
                                                            (rule "polySimp_addComm1" (formula "45") (term "0,0,1,1"))
                                                            (rule "applyEq" (formula "44") (term "7,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "34") (term "5,0,1") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "34") (term "1,7,0,1") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "43") (term "5,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "30") (term "7,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "29") (term "5,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "46") (term "2,1,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "53") (term "2,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "33") (term "0,2,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "45") (term "5,0,0,0,1") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "45") (term "1,7,0,0,0,1") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "32"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "45") (term "0,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,1"))
                                                            (rule "polySimp_rightDist" (formula "45") (term "1,0,1,1"))
                                                            (rule "mul_literals" (formula "45") (term "0,1,0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                                                            (rule "times_zero_1" (formula "39") (term "0,0"))
                                                            (rule "add_zero_left" (formula "39") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                            (rule "mul_literals" (formula "39") (term "1"))
                                                            (rule "elimGcdGeq_antec" (formula "39") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                            (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                                            (rule "leq_literals" (formula "39") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "39"))
                                                            (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "39") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                                            (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "39") (term "0,0"))
                                                            (rule "leq_literals" (formula "39") (term "0"))
                                                             (builtin "One Step Simplification" (formula "39"))
                                                            (rule "nnf_imp2or" (formula "17") (term "0"))
                                                            (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                                            (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "36"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "translateJavaMulInt" (formula "36") (term "1,1,0,0,0,0,1,0,0"))
                                                            (rule "translateJavaMulInt" (formula "36") (term "1,1,0,0,0,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "1,1,0,0,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "1,1,0,0,0,0,0,1,0,0"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "andLeft" (formula "38"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "andLeft" (formula "39"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "andLeft" (formula "38"))
                                                            (rule "andLeft" (formula "41"))
                                                            (rule "notLeft" (formula "37"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "andLeft" (formula "38"))
                                                            (rule "andLeft" (formula "42"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "notLeft" (formula "38"))
                                                            (rule "andLeft" (formula "38"))
                                                            (rule "andLeft" (formula "43"))
                                                            (rule "notLeft" (formula "37"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "andLeft" (formula "38"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "notLeft" (formula "38"))
                                                            (rule "andLeft" (formula "38"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "notLeft" (formula "38"))
                                                            (rule "andLeft" (formula "38"))
                                                            (rule "andLeft" (formula "46"))
                                                            (rule "notLeft" (formula "37"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "andLeft" (formula "38"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "notLeft" (formula "36"))
                                                            (rule "notLeft" (formula "36"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "disjointDefinition" (formula "72"))
                                                             (builtin "One Step Simplification" (formula "72"))
                                                            (rule "notLeft" (formula "72"))
                                                            (rule "disjointDefinition" (formula "71"))
                                                             (builtin "One Step Simplification" (formula "71"))
                                                            (rule "notLeft" (formula "71"))
                                                            (rule "disjointDefinition" (formula "70"))
                                                             (builtin "One Step Simplification" (formula "70"))
                                                            (rule "notLeft" (formula "70"))
                                                            (rule "eqSymm" (formula "80"))
                                                            (rule "disjointDefinition" (formula "69"))
                                                             (builtin "One Step Simplification" (formula "69"))
                                                            (rule "notLeft" (formula "69"))
                                                            (rule "eqSymm" (formula "79"))
                                                            (rule "disjointDefinition" (formula "68"))
                                                             (builtin "One Step Simplification" (formula "68"))
                                                            (rule "notLeft" (formula "68"))
                                                            (rule "eqSymm" (formula "78"))
                                                            (rule "disjointDefinition" (formula "67"))
                                                             (builtin "One Step Simplification" (formula "67"))
                                                            (rule "notLeft" (formula "67"))
                                                            (rule "eqSymm" (formula "77"))
                                                            (rule "disjointDefinition" (formula "66"))
                                                             (builtin "One Step Simplification" (formula "66"))
                                                            (rule "notLeft" (formula "66"))
                                                            (rule "eqSymm" (formula "76"))
                                                            (rule "disjointDefinition" (formula "65"))
                                                             (builtin "One Step Simplification" (formula "65"))
                                                            (rule "notLeft" (formula "65"))
                                                            (rule "eqSymm" (formula "75"))
                                                            (rule "disjointDefinition" (formula "64"))
                                                             (builtin "One Step Simplification" (formula "64"))
                                                            (rule "notLeft" (formula "64"))
                                                            (rule "eqSymm" (formula "74"))
                                                            (rule "disjointDefinition" (formula "63"))
                                                             (builtin "One Step Simplification" (formula "63"))
                                                            (rule "notLeft" (formula "63"))
                                                            (rule "eqSymm" (formula "73"))
                                                            (rule "disjointDefinition" (formula "62"))
                                                             (builtin "One Step Simplification" (formula "62"))
                                                            (rule "notLeft" (formula "62"))
                                                            (rule "eqSymm" (formula "72"))
                                                            (rule "disjointDefinition" (formula "61"))
                                                             (builtin "One Step Simplification" (formula "61"))
                                                            (rule "notLeft" (formula "61"))
                                                            (rule "eqSymm" (formula "71"))
                                                            (rule "disjointDefinition" (formula "60"))
                                                             (builtin "One Step Simplification" (formula "60"))
                                                            (rule "notLeft" (formula "60"))
                                                            (rule "eqSymm" (formula "70"))
                                                            (rule "disjointDefinition" (formula "59"))
                                                             (builtin "One Step Simplification" (formula "59"))
                                                            (rule "notLeft" (formula "59"))
                                                            (rule "eqSymm" (formula "69"))
                                                            (rule "disjointDefinition" (formula "58"))
                                                             (builtin "One Step Simplification" (formula "58"))
                                                            (rule "notLeft" (formula "58"))
                                                            (rule "eqSymm" (formula "68"))
                                                            (rule "disjointDefinition" (formula "57"))
                                                             (builtin "One Step Simplification" (formula "57"))
                                                            (rule "notLeft" (formula "57"))
                                                            (rule "disjointDefinition" (formula "56"))
                                                             (builtin "One Step Simplification" (formula "56"))
                                                            (rule "notLeft" (formula "56"))
                                                            (rule "eqSymm" (formula "66"))
                                                            (rule "disjointDefinition" (formula "55"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "notLeft" (formula "55"))
                                                            (rule "eqSymm" (formula "65"))
                                                            (rule "disjointDefinition" (formula "54"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "notLeft" (formula "54"))
                                                            (rule "disjointDefinition" (formula "53"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "notLeft" (formula "53"))
                                                            (rule "disjointDefinition" (formula "52"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "notLeft" (formula "52"))
                                                            (rule "disjointDefinition" (formula "51"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "notLeft" (formula "51"))
                                                            (rule "disjointDefinition" (formula "50"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "notLeft" (formula "50"))
                                                            (rule "disjointDefinition" (formula "49"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "notLeft" (formula "49"))
                                                            (rule "disjointDefinition" (formula "48"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "notLeft" (formula "48"))
                                                            (rule "disjointDefinition" (formula "47"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "notLeft" (formula "47"))
                                                            (rule "disjointDefinition" (formula "46"))
                                                             (builtin "One Step Simplification" (formula "46"))
                                                            (rule "notLeft" (formula "46"))
                                                            (rule "disjointDefinition" (formula "45"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "notLeft" (formula "45"))
                                                            (rule "applyEq" (formula "52") (term "0,1,0,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "98") (term "0,1,0,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "54") (term "0,1,0,0,0,0,1") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "53") (term "0,1,0,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "91") (term "0,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "50") (term "0,1,0,2,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "51") (term "0,1,0,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "24") (term "1,0,1,0") (ifseqformula "44"))
                                                            (rule "distributeIntersection" (formula "22") (term "0"))
                                                            (rule "distributeIntersection_2" (formula "91") (term "0"))
                                                            (rule "distributeIntersection" (formula "21") (term "0"))
                                                            (rule "distributeIntersection" (formula "12") (term "0"))
                                                            (rule "unionEqualsEmpty" (formula "22"))
                                                            (rule "andLeft" (formula "22"))
                                                            (rule "unionEqualsEmpty" (formula "92"))
                                                            (rule "unionEqualsEmpty" (formula "21"))
                                                            (rule "andLeft" (formula "21"))
                                                            (rule "distributeIntersection" (formula "12") (term "0,0"))
                                                            (rule "distributeIntersection" (formula "12") (term "1,0"))
                                                            (rule "distributeIntersection" (formula "24") (term "0"))
                                                            (rule "distributeIntersection" (formula "23") (term "0"))
                                                            (rule "distributeIntersection_2" (formula "93") (term "0,1"))
                                                            (rule "distributeIntersection_2" (formula "93") (term "0,0"))
                                                            (rule "distributeIntersection" (formula "21") (term "0"))
                                                            (rule "distributeIntersection" (formula "22") (term "0"))
                                                            (rule "distributeIntersection" (formula "12") (term "0,0,0"))
                                                            (rule "distributeIntersection" (formula "12") (term "1,0,0"))
                                                            (rule "distributeIntersection" (formula "12") (term "0,1,0"))
                                                            (rule "distributeIntersection" (formula "12") (term "1,1,0"))
                                                            (rule "distributeIntersection" (formula "24") (term "0,0"))
                                                            (rule "distributeIntersection" (formula "24") (term "1,0"))
                                                            (rule "distributeIntersection" (formula "23") (term "0,0"))
                                                            (rule "distributeIntersection" (formula "23") (term "1,0"))
                                                            (rule "unionEqualsEmpty" (formula "93") (term "1"))
                                                            (rule "distributeIntersection_2" (formula "93") (term "0,0,0"))
                                                            (rule "distributeIntersection_2" (formula "93") (term "1,0,0"))
                                                            (rule "distributeIntersection" (formula "21") (term "0,0"))
                                                            (rule "distributeIntersection" (formula "21") (term "1,0"))
                                                            (rule "unionEqualsEmpty" (formula "22"))
                                                            (rule "andLeft" (formula "22"))
                                                            (rule "unionEqualsEmpty" (formula "12"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "unionEqualsEmpty" (formula "26"))
                                                            (rule "andLeft" (formula "26"))
                                                            (rule "unionEqualsEmpty" (formula "25"))
                                                            (rule "andLeft" (formula "25"))
                                                            (rule "distributeIntersection_2" (formula "97") (term "0,0,1"))
                                                            (rule "distributeIntersection_2" (formula "97") (term "0,1,1"))
                                                            (rule "unionEqualsEmpty" (formula "97") (term "0"))
                                                            (rule "unionEqualsEmpty" (formula "22"))
                                                            (rule "andLeft" (formula "22"))
                                                            (rule "distributeIntersection" (formula "24") (term "0"))
                                                            (rule "distributeIntersection" (formula "25") (term "0"))
                                                            (rule "unionEqualsEmpty" (formula "12"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "unionEqualsEmpty" (formula "14"))
                                                            (rule "andLeft" (formula "14"))
                                                            (rule "unionEqualsEmpty" (formula "30"))
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "andLeft" (formula "30"))
                                                            (rule "notLeft" (formula "30"))
                                                            (rule "notLeft" (formula "30"))
                                                            (rule "eqSymm" (formula "64"))
                                                            (rule "eqSymm" (formula "63"))
                                                            (rule "sortsDisjointModuloNull" (formula "64"))
                                                            (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "97"))
                                                             (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "106")))
                                                            (rule "false_right" (formula "64"))
                                                            (rule "sortsDisjointModuloNull" (formula "63"))
                                                            (rule "replace_known_right" (formula "63") (term "1") (ifseqformula "105"))
                                                             (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "97")))
                                                            (rule "false_right" (formula "63"))
                                                            (rule "unionEqualsEmpty" (formula "30"))
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "andLeft" (formula "30"))
                                                            (rule "notLeft" (formula "30"))
                                                            (rule "notLeft" (formula "30"))
                                                            (rule "eqSymm" (formula "63"))
                                                            (rule "eqSymm" (formula "62"))
                                                            (rule "sortsDisjointModuloNull" (formula "63"))
                                                            (rule "replace_known_right" (formula "63") (term "0") (ifseqformula "98"))
                                                             (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "105")))
                                                            (rule "false_right" (formula "63"))
                                                            (rule "sortsDisjointModuloNull" (formula "62"))
                                                            (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "98"))
                                                             (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "104")))
                                                            (rule "false_right" (formula "62"))
                                                            (rule "unionEqualsEmpty" (formula "29"))
                                                             (builtin "One Step Simplification" (formula "29"))
                                                            (rule "andLeft" (formula "29"))
                                                            (rule "notLeft" (formula "30"))
                                                            (rule "notLeft" (formula "29"))
                                                            (rule "eqSymm" (formula "62"))
                                                            (rule "eqSymm" (formula "61"))
                                                            (rule "sortsDisjointModuloNull" (formula "62"))
                                                            (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "94"))
                                                             (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "104")))
                                                            (rule "false_right" (formula "62"))
                                                            (rule "sortsDisjointModuloNull" (formula "61"))
                                                            (rule "replace_known_right" (formula "61") (term "0") (ifseqformula "92"))
                                                             (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "103")))
                                                            (rule "false_right" (formula "61"))
                                                            (rule "unionEqualsEmpty" (formula "28"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "andLeft" (formula "28"))
                                                            (rule "notLeft" (formula "28"))
                                                            (rule "notLeft" (formula "28"))
                                                            (rule "eqSymm" (formula "61"))
                                                            (rule "eqSymm" (formula "60"))
                                                            (rule "sortsDisjointModuloNull" (formula "61"))
                                                            (rule "replace_known_right" (formula "61") (term "1") (ifseqformula "103"))
                                                             (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "91")))
                                                            (rule "false_right" (formula "61"))
                                                            (rule "sortsDisjointModuloNull" (formula "60"))
                                                            (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "89"))
                                                             (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "102")))
                                                            (rule "false_right" (formula "60"))
                                                            (rule "unionEqualsEmpty" (formula "96") (term "0,1"))
                                                            (rule "disjointArrayRangeAllFields1" (formula "96") (term "1,0,1"))
                                                            (rule "disjointArrayRangeAllFields1" (formula "96") (term "0,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "96") (term "1,0,1,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "96") (term "1,0,0,0,1"))
                                                            (rule "inEqSimp_subsumption6" (formula "96") (term "1,0,0,0,1") (ifseqformula "52"))
                                                            (rule "greater_literals" (formula "96") (term "0,0,1,0,0,0,1"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "mul_literals" (formula "96") (term "1,0,1,0,0,0,1"))
                                                            (rule "leq_literals" (formula "96") (term "0,1,0,0,0,1"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "inEqSimp_subsumption6" (formula "96") (term "1,0,1,0,1") (ifseqformula "52"))
                                                            (rule "greater_literals" (formula "96") (term "0,0,1,0,1,0,1"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "mul_literals" (formula "96") (term "1,0,1,0,1,0,1"))
                                                            (rule "leq_literals" (formula "96") (term "0,1,0,1,0,1"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "unionEqualsEmpty" (formula "24"))
                                                             (builtin "One Step Simplification" (formula "24"))
                                                            (rule "andLeft" (formula "24"))
                                                            (rule "notLeft" (formula "24"))
                                                            (rule "notLeft" (formula "24"))
                                                            (rule "eqSymm" (formula "60"))
                                                            (rule "eqSymm" (formula "59"))
                                                            (rule "unionEqualsEmpty" (formula "24"))
                                                             (builtin "One Step Simplification" (formula "24"))
                                                            (rule "andLeft" (formula "24"))
                                                            (rule "notLeft" (formula "24"))
                                                            (rule "notLeft" (formula "24"))
                                                            (rule "eqSymm" (formula "59"))
                                                            (rule "eqSymm" (formula "58"))
                                                            (rule "unionEqualsEmpty" (formula "24"))
                                                             (builtin "One Step Simplification" (formula "24"))
                                                            (rule "andLeft" (formula "24"))
                                                            (rule "notLeft" (formula "25"))
                                                            (rule "notLeft" (formula "24"))
                                                            (rule "eqSymm" (formula "58"))
                                                            (rule "eqSymm" (formula "57"))
                                                            (rule "replace_known_right" (formula "99") (term "0,0,0,1") (ifseqformula "57"))
                                                             (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "58")))
                                                            (rule "unionEqualsEmpty" (formula "24"))
                                                             (builtin "One Step Simplification" (formula "24"))
                                                            (rule "andLeft" (formula "24"))
                                                            (rule "notLeft" (formula "24"))
                                                            (rule "notLeft" (formula "24"))
                                                            (rule "eqSymm" (formula "57"))
                                                            (rule "eqSymm" (formula "56"))
                                                            (rule "unionEqualsEmpty" (formula "13"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "andLeft" (formula "13"))
                                                            (rule "notLeft" (formula "14"))
                                                            (rule "notLeft" (formula "13"))
                                                            (rule "eqSymm" (formula "56"))
                                                            (rule "eqSymm" (formula "55"))
                                                            (rule "unionEqualsEmpty" (formula "12"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "notLeft" (formula "12"))
                                                            (rule "notLeft" (formula "12"))
                                                            (rule "eqSymm" (formula "55"))
                                                            (rule "eqSymm" (formula "54"))
                                                            (rule "unionEqualsEmpty" (formula "12"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "notLeft" (formula "12"))
                                                            (rule "notLeft" (formula "12"))
                                                            (rule "eqSymm" (formula "54"))
                                                            (rule "eqSymm" (formula "53"))
                                                            (rule "unionEqualsEmpty" (formula "12"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "notLeft" (formula "12"))
                                                            (rule "notLeft" (formula "12"))
                                                            (rule "eqSymm" (formula "53"))
                                                            (rule "eqSymm" (formula "52"))
                                                            (rule "unionEqualsEmpty" (formula "104") (term "1,0"))
                                                            (rule "disjointArrayRangeAllFields1" (formula "104") (term "1,1,0"))
                                                            (rule "replace_known_right" (formula "104") (term "0,0,1,1,0") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "104"))
                                                            (rule "disjointArrayRangeAllFields1" (formula "104") (term "1,0"))
                                                            (rule "replace_known_right" (formula "104") (term "0,0,1,0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "104"))
                                                            (rule "unionEqualsEmpty" (formula "104") (term "0"))
                                                            (rule "disjointArrayRangeAllFields1" (formula "104") (term "0,0"))
                                                            (rule "replace_known_right" (formula "104") (term "0,0,0,0") (ifseqformula "67"))
                                                             (builtin "One Step Simplification" (formula "104"))
                                                            (rule "disjointArrayRangeAllFields1" (formula "104") (term "0"))
                                                            (rule "replace_known_right" (formula "104") (term "0,0,0") (ifseqformula "66"))
                                                             (builtin "One Step Simplification" (formula "104"))
                                                            (rule "unionEqualsEmpty" (formula "104"))
                                                            (rule "disjointArrayRangeAllFields1" (formula "104") (term "1"))
                                                            (rule "replace_known_right" (formula "104") (term "0,0,1") (ifseqformula "60"))
                                                             (builtin "One Step Simplification" (formula "104"))
                                                            (rule "disjointArrayRangeAllFields1" (formula "104"))
                                                            (rule "notRight" (formula "104"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "close" (formula "63") (ifseqformula "1"))
                                                         )
                                                         (branch "Assume javaSubInt(end, begin) != begin * -1 + end"
                                                            (rule "translateJavaSubInt" (formula "1") (term "0,0"))
                                                            (rule "translateJavaSubInt" (formula "54") (term "3,0"))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                                            (rule "polySimp_elimSub" (formula "54") (term "3,0"))
                                                            (rule "polySimp_elimSub" (formula "47") (term "0"))
                                                            (rule "polySimp_homoEq" (formula "47"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "54") (term "3,0"))
                                                            (rule "polySimp_addComm0" (formula "47") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "47") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "47") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,1"))
                                                            (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2" (formula "47") (term "0,0,0"))
                                                            (rule "add_literals" (formula "47") (term "1,0,0,0"))
                                                            (rule "times_zero_1" (formula "47") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "47") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "47") (term "0"))
                                                            (rule "add_literals" (formula "47") (term "1,0"))
                                                            (rule "times_zero_1" (formula "47") (term "0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "closeTrue" (formula "47"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "andRight" (formula "53"))
                                                         (branch
                                                            (rule "andRight" (formula "53"))
                                                            (branch
                                                               (rule "andRight" (formula "53"))
                                                               (branch
                                                                  (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,1"))
                                                                  (rule "disjointDefinition" (formula "53"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "10"))
                                                                  (rule "mul_literals" (formula "10") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                  (rule "jmod_axiom" (formula "46") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,1"))
                                                                  (rule "jmod_axiom" (formula "41") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1"))
                                                                  (rule "jmod_axiom" (formula "32") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "46") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "46") (term "0,0,1,1"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "46") (term "1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,1"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "41") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "0,1"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "32"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                                  (rule "mul_literals" (formula "10") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "40") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                                  (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "40") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "40") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "true_left" (formula "40"))
                                                                  (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "7") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "newSym_eq" (formula "31") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))"))
                                                                  (rule "times_zero_1" (formula "31") (term "1,1"))
                                                                  (rule "add_zero_right" (formula "31") (term "1"))
                                                                  (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                                                                  (rule "eqSymm" (formula "32"))
                                                                  (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "45") (term "1,7,0,0,0,1") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "33") (term "0,2,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "43") (term "5,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "45") (term "5,0,0,0,1") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "34") (term "5,0,1") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "30") (term "7,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "29") (term "5,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "34") (term "1,7,0,1") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "32"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "applyEq" (formula "44") (term "7,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "45") (term "0,0,1,1") (ifseqformula "32"))
                                                                  (rule "polySimp_homoEq" (formula "45") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "45") (term "0,0,1,1"))
                                                                  (rule "applyEq" (formula "42") (term "5,0") (ifseqformula "32"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "45") (term "0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "45") (term "1,0,1,1"))
                                                                  (rule "mul_literals" (formula "45") (term "0,1,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                                                                  (rule "times_zero_1" (formula "39") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "39") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                                  (rule "mul_literals" (formula "39") (term "1"))
                                                                  (rule "elimGcdGeq_antec" (formula "39") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                                  (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                                                  (rule "leq_literals" (formula "39") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "39"))
                                                                  (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "39") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                                                  (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "39") (term "0,0"))
                                                                  (rule "leq_literals" (formula "39") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "39"))
                                                                  (rule "commuteIntersection" (formula "53") (term "0"))
                                                                  (rule "close" (formula "53") (ifseqformula "12"))
                                                               )
                                                               (branch
                                                                  (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,1"))
                                                                  (rule "disjointDefinition" (formula "53"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "10"))
                                                                  (rule "mul_literals" (formula "10") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                  (rule "jmod_axiom" (formula "46") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,1"))
                                                                  (rule "jmod_axiom" (formula "41") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1"))
                                                                  (rule "jmod_axiom" (formula "32") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "46") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "46") (term "0,0,1,1"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "46") (term "1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,1"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "41") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "0,1"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "32"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                                  (rule "mul_literals" (formula "10") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "40") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                                  (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "40") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "40") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "true_left" (formula "40"))
                                                                  (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "7") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "newSym_eq" (formula "31") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))"))
                                                                  (rule "times_zero_1" (formula "31") (term "1,1"))
                                                                  (rule "add_zero_right" (formula "31") (term "1"))
                                                                  (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                                                                  (rule "eqSymm" (formula "32"))
                                                                  (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "45") (term "1,7,0,0,0,1") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "33") (term "0,2,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "43") (term "5,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "45") (term "5,0,0,0,1") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "34") (term "5,0,1") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "30") (term "7,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "29") (term "5,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "34") (term "1,7,0,1") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "32"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "applyEq" (formula "44") (term "7,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "45") (term "0,0,1,1") (ifseqformula "32"))
                                                                  (rule "polySimp_homoEq" (formula "45") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "45") (term "0,0,1,1"))
                                                                  (rule "applyEq" (formula "42") (term "5,0") (ifseqformula "32"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "45") (term "0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "45") (term "1,0,1,1"))
                                                                  (rule "mul_literals" (formula "45") (term "0,1,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                                                                  (rule "times_zero_1" (formula "39") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "39") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                                  (rule "mul_literals" (formula "39") (term "1"))
                                                                  (rule "elimGcdGeq_antec" (formula "39") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                                  (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                                                  (rule "leq_literals" (formula "39") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "39"))
                                                                  (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "39") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                                                  (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "39") (term "0,0"))
                                                                  (rule "leq_literals" (formula "39") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "39"))
                                                                  (rule "commuteIntersection" (formula "53") (term "0"))
                                                                  (rule "close" (formula "53") (ifseqformula "21"))
                                                               )
                                                            )
                                                            (branch
                                                               (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
                                                               (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1"))
                                                               (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,1"))
                                                               (rule "disjointDefinition" (formula "53"))
                                                                (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "48")))
                                                               (rule "closeTrue" (formula "53"))
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                             (builtin "Use Dependency Contract" (formula "53") (ifInst ""  (formula "36")) (contract "de.wiesler.Storage[java.lang.Object::<inv>()].JML accessible clause.0") (userinteraction))
                                                            (rule "wellFormedAnon" (formula "47") (term "1,1,0,0,0"))
                                                            (rule "wellFormedAnonEQ" (formula "47") (term "0,1,0,0,0") (ifseqformula "25"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,0,0,0,0") (ifseqformula "25"))
                                                            (rule "wellFormedAnonEQ" (formula "47") (term "0,0,1,0,0,0") (ifseqformula "15"))
                                                            (rule "wellFormedAnonEQ" (formula "47") (term "0,1,1,0,0,0") (ifseqformula "25"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,1,0,0,0,0") (ifseqformula "15"))
                                                            (rule "wellFormedAnonEQ" (formula "47") (term "0,0,1,1,0,0,0") (ifseqformula "15"))
                                                            (rule "replace_known_left" (formula "47") (term "1,0,0") (ifseqformula "36"))
                                                             (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "52")) (ifInst ""  (formula "4")) (ifInst ""  (formula "2")) (ifInst ""  (formula "14")) (ifInst ""  (formula "24")) (ifInst ""  (formula "2")) (ifInst ""  (formula "14")) (ifInst ""  (formula "24")) (ifInst ""  (formula "38")) (ifInst ""  (formula "54")) (ifInst ""  (formula "36")))
                                                            (rule "notLeft" (formula "47"))
                                                            (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,1"))
                                                            (rule "disjointDefinition" (formula "47"))
                                                            (rule "inEqSimp_ltToLeq" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "10"))
                                                            (rule "mul_literals" (formula "10") (term "1,0,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "11"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                            (rule "jmod_axiom" (formula "41") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1"))
                                                            (rule "jmod_axiom" (formula "46") (term "0,1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,1"))
                                                            (rule "jmod_axiom" (formula "32") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "46") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "0,0,1,1"))
                                                            (rule "polySimp_sepNegMonomial" (formula "41") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "41") (term "0,1"))
                                                            (rule "polySimp_sepNegMonomial" (formula "46") (term "1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,1"))
                                                            (rule "polySimp_sepNegMonomial" (formula "32"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                            (rule "mul_literals" (formula "10") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                                                            (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "7") (term "0,0"))
                                                            (rule "qeq_literals" (formula "7") (term "0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "39") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                                            (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "39") (term "0,0"))
                                                            (rule "qeq_literals" (formula "39") (term "0"))
                                                             (builtin "One Step Simplification" (formula "39"))
                                                            (rule "true_left" (formula "39"))
                                                            (rule "distributeIntersection_2" (formula "45") (term "0"))
                                                            (rule "unionEqualsEmpty" (formula "45"))
                                                            (rule "disjointArrayRangeAllFields2" (formula "45") (term "1"))
                                                            (rule "eqSymm" (formula "45") (term "0,0,1"))
                                                            (rule "sortsDisjointModuloNull" (formula "45") (term "0,0,1"))
                                                            (rule "replace_known_right" (formula "45") (term "1,0,0,1") (ifseqformula "51"))
                                                             (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "50")))
                                                            (rule "newSym_eq" (formula "31") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))"))
                                                            (rule "times_zero_1" (formula "31") (term "1,1"))
                                                            (rule "add_zero_right" (formula "31") (term "1"))
                                                            (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                                                            (rule "eqSymm" (formula "32"))
                                                            (rule "applyEq" (formula "34") (term "5,0,1") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "44") (term "7,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "42") (term "5,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "43") (term "5,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "45") (term "5,0,0,0,1") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "32"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "33") (term "0,2,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "34") (term "1,7,0,1") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "45") (term "1,7,0,0,0,1") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "29") (term "5,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "32"))
                                                            (rule "applyEq" (formula "45") (term "0,0,1,1") (ifseqformula "32"))
                                                            (rule "polySimp_homoEq" (formula "45") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,1,1"))
                                                            (rule "polySimp_addComm1" (formula "45") (term "0,0,1,1"))
                                                            (rule "applyEq" (formula "30") (term "7,0") (ifseqformula "32"))
                                                            (rule "polySimp_sepPosMonomial" (formula "45") (term "0,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,1"))
                                                            (rule "polySimp_rightDist" (formula "45") (term "1,0,1,1"))
                                                            (rule "mul_literals" (formula "45") (term "0,1,0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                                                            (rule "mul_literals" (formula "39") (term "0,0"))
                                                            (rule "add_zero_left" (formula "39") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                            (rule "mul_literals" (formula "39") (term "1"))
                                                            (rule "elimGcdGeq_antec" (formula "39") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                            (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                                            (rule "leq_literals" (formula "39") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "39"))
                                                            (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "39") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                                            (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "39") (term "0,0"))
                                                            (rule "leq_literals" (formula "39") (term "0"))
                                                             (builtin "One Step Simplification" (formula "39"))
                                                            (rule "commuteIntersection" (formula "47") (term "0"))
                                                            (rule "close" (formula "47") (ifseqformula "22"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch
                                       (rule "andRight" (formula "53"))
                                       (branch
                                          (rule "andRight" (formula "53"))
                                          (branch
                                             (rule "andRight" (formula "53"))
                                             (branch
                                                (rule "wellFormedAnon" (formula "53"))
                                                (rule "wellFormedAnonEQ" (formula "53") (term "0") (ifseqformula "25"))
                                                (rule "wellFormedAnonEQ" (formula "53") (term "0,0") (ifseqformula "15"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "38"))
                                                 (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "2")) (ifInst ""  (formula "14")) (ifInst ""  (formula "24")))
                                                (rule "closeTrue" (formula "53"))
                                             )
                                             (branch
                                                (rule "orRight" (formula "53"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (ifseqformula "25"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0") (ifseqformula "15"))
                                                (rule "orRight" (formula "53"))
                                                (rule "orRight" (formula "53"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                          )
                                          (branch
                                             (rule "orRight" (formula "53"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (ifseqformula "25"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0") (ifseqformula "15"))
                                             (rule "orRight" (formula "53"))
                                             (rule "orRight" (formula "53"))
                                             (rule "close" (formula "53") (ifseqformula "4"))
                                          )
                                       )
                                       (branch
                                          (rule "orRight" (formula "53"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (ifseqformula "25"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0") (ifseqformula "15"))
                                          (rule "orRight" (formula "53"))
                                          (rule "orRight" (formula "53"))
                                          (rule "close" (formula "53") (ifseqformula "16"))
                                       )
                                    )
                                 )
                                 (branch
                                    (rule "translateJavaSubInt" (formula "53") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "46") (term "0,1,1"))
                                    (rule "polySimp_elimSub" (formula "53") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "53") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,1"))
                                    (rule "measuredByCheck" (formula "53") (ifseqformula "5"))
                                    (rule "precOfPair" (formula "53"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "orRight" (formula "53"))
                                    (rule "precOfInt" (formula "54"))
                                    (rule "leq_literals" (formula "54") (term "0"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "less_literals" (formula "54"))
                                    (rule "closeTrue" (formula "54"))
                                 )
                              )
                           )
                           (branch "if x_2 false"
                               (builtin "One Step Simplification" (formula "54"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Use Case"
                            (builtin "One Step Simplification" (formula "38"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,0,1,0,0,0"))
                           (rule "translateJavaSubInt" (formula "38") (term "1,0,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,2,0,1,0,0,0,0"))
                           (rule "translateJavaSubInt" (formula "38") (term "7,0,1,1,1"))
                           (rule "translateJavaAddInt" (formula "38") (term "6,0,1,1,1"))
                           (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,0,1,1,1"))
                           (rule "translateJavaMod" (formula "38") (term "0,0,0,1,1"))
                           (rule "translateJavaSubInt" (formula "38") (term "2,6,0,1,0"))
                           (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,0,1,0"))
                           (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,0,1,0,0"))
                           (rule "translateJavaSubInt" (formula "38") (term "2,7,0,1,0,0,0"))
                           (rule "translateJavaMod" (formula "38") (term "0,1,1,0,0,0,0,0"))
                           (rule "translateJavaSubInt" (formula "45") (term "2,0,1,0,1,1,0"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "eqSymm" (formula "45") (term "0,1,0,1"))
                           (rule "polySimp_elimSub" (formula "52") (term "2,0,1,0,1,1,0"))
                           (rule "mul_literals" (formula "52") (term "1,2,0,1,0,1,1,0"))
                           (rule "polySimp_elimSub" (formula "45") (term "7,0,1,1"))
                           (rule "mul_literals" (formula "45") (term "1,7,0,1,1"))
                           (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,0,1,1"))
                           (rule "mul_literals" (formula "45") (term "1,2,0,1,0,0,1,1"))
                           (rule "polySimp_elimSub" (formula "44") (term "2,6,0"))
                           (rule "mul_literals" (formula "44") (term "1,2,6,0"))
                           (rule "polySimp_elimSub" (formula "44") (term "2,0,1,0,0"))
                           (rule "mul_literals" (formula "44") (term "1,2,0,1,0,0"))
                           (rule "polySimp_elimSub" (formula "43") (term "2,0,1,0,0"))
                           (rule "mul_literals" (formula "43") (term "1,2,0,1,0,0"))
                           (rule "polySimp_elimSub" (formula "42") (term "2,7,0"))
                           (rule "mul_literals" (formula "42") (term "1,2,7,0"))
                           (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,0"))
                           (rule "mul_literals" (formula "42") (term "1,2,0,1,0,0"))
                           (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,2,0"))
                           (rule "mul_literals" (formula "41") (term "1,2,0,1,0,2,0"))
                           (rule "polySimp_elimSub" (formula "45") (term "0,0,1,0,1"))
                           (rule "mul_literals" (formula "45") (term "1,0,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "45") (term "6,0,1,1"))
                           (rule "polySimp_addComm0" (formula "52") (term "2,0,1,0,1,1,0"))
                           (rule "polySimp_addComm0" (formula "45") (term "7,0,1,1"))
                           (rule "polySimp_addComm0" (formula "45") (term "2,0,1,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "44") (term "2,6,0"))
                           (rule "polySimp_addComm0" (formula "44") (term "2,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "43") (term "2,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "42") (term "2,7,0"))
                           (rule "polySimp_addComm0" (formula "42") (term "2,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "41") (term "2,0,1,0,2,0"))
                           (rule "polySimp_addComm0" (formula "45") (term "0,0,1,0,1"))
                           (rule "narrowSelectArrayType" (formula "41") (term "2,1") (ifseqformula "1") (ifseqformula "51"))
                           (rule "inEqSimp_commuteLeq" (formula "38"))
                           (rule "inEqSimp_commuteLeq" (formula "39"))
                           (rule "variableDeclarationAssign" (formula "52") (term "1"))
                           (rule "variableDeclaration" (formula "52") (term "1") (newnames "b_1"))
                           (rule "commuteUnion" (formula "45") (term "1,0,0,1,1"))
                           (rule "commuteUnion" (formula "44") (term "1,0,0"))
                           (rule "commuteUnion" (formula "43") (term "1,0,0"))
                           (rule "commuteUnion" (formula "42") (term "1,0,0"))
                           (rule "commuteUnion" (formula "41") (term "1,0,2,0"))
                           (rule "commuteUnion" (formula "52") (term "1,0,1,1,0"))
                           (rule "commute_or" (formula "44") (term "0,6,0"))
                           (rule "commute_or" (formula "42") (term "0,7,0"))
                           (rule "commute_and_2" (formula "45") (term "1"))
                           (rule "commute_and" (formula "45") (term "0,1"))
                           (rule "less_than_comparison_simple" (formula "52") (term "1"))
                            (builtin "One Step Simplification" (formula "52"))
                           (rule "methodCallEmpty" (formula "52") (term "1"))
                           (rule "emptyModality" (formula "52") (term "1"))
                            (builtin "One Step Simplification" (formula "52"))
                           (rule "impRight" (formula "52"))
                           (rule "notLeft" (formula "1"))
                           (rule "replace_known_right" (formula "42") (term "1,0,7,0") (ifseqformula "46"))
                            (builtin "One Step Simplification" (formula "42"))
                           (rule "replace_known_right" (formula "44") (term "1,0,6,0") (ifseqformula "46"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "ifthenelse_negated" (formula "42") (term "7,0"))
                           (rule "ifthenelse_negated" (formula "44") (term "6,0"))
                           (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                           (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "arrayLengthIsAShort" (formula "8") (term "0"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                           (rule "qeq_literals" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "ifSplit" (formula "53"))
                           (branch "if equal_buckets true"
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "replace_known_left" (formula "43") (term "0,7,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "replace_known_left" (formula "45") (term "0,6,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "45"))
                              (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "41")))
                              (rule "andLeft" (formula "46"))
                              (rule "notLeft" (formula "47"))
                              (rule "applyEq" (formula "55") (term "0,1,0,0,0,0") (ifseqformula "1"))
                              (rule "methodCallUnfoldArguments" (formula "55") (term "1"))
                              (rule "variableDeclarationAssign" (formula "55") (term "1"))
                              (rule "variableDeclaration" (formula "55") (term "1") (newnames "var_1"))
                              (rule "assignment" (formula "55") (term "1"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "variableDeclarationAssign" (formula "55") (term "1"))
                              (rule "variableDeclaration" (formula "55") (term "1") (newnames "var_2"))
                              (rule "assignment" (formula "55") (term "1"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "variableDeclarationAssign" (formula "55") (term "1"))
                              (rule "variableDeclaration" (formula "55") (term "1") (newnames "var_3"))
                              (rule "assignment" (formula "55") (term "1"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "variableDeclarationAssign" (formula "55") (term "1"))
                              (rule "variableDeclaration" (formula "55") (term "1") (newnames "var_4"))
                              (rule "assignment" (formula "55") (term "1"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "variableDeclarationAssign" (formula "55") (term "1"))
                              (rule "variableDeclaration" (formula "55") (term "1") (newnames "var_5"))
                              (rule "assignment" (formula "55") (term "1"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "variableDeclarationAssign" (formula "55") (term "1"))
                              (rule "variableDeclaration" (formula "55") (term "1") (newnames "var_6"))
                              (rule "assignment" (formula "55") (term "1"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "variableDeclarationAssign" (formula "55") (term "1"))
                              (rule "variableDeclaration" (formula "55") (term "1") (newnames "var_7"))
                              (rule "assignment" (formula "55") (term "1"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "variableDeclarationAssign" (formula "55") (term "1"))
                              (rule "variableDeclaration" (formula "55") (term "1") (newnames "var_8"))
                              (rule "assignmentSubtractionInt" (formula "55") (term "1"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "translateJavaSubInt" (formula "55") (term "0,1,0"))
                              (rule "polySimp_elimSub" (formula "55") (term "0,1,0"))
                              (rule "mul_literals" (formula "55") (term "1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "55") (term "0,1,0"))
                               (builtin "Use Operation Contract" (formula "55") (newnames "heapBefore_sample_sort_recurse_on,exc_0,heapAfter_sample_sort_recurse_on,anon_heap_sample_sort_recurse_on") (contract "de.wiesler.Sorter[de.wiesler.Sorter::sample_sort_recurse_on([I,int,int,de.wiesler.Storage,[I,int,boolean,int)].JML normal_behavior operation contract.0"))
                              (branch "Post (sample_sort_recurse_on)"
                                  (builtin "One Step Simplification" (formula "48"))
                                  (builtin "One Step Simplification" (formula "57"))
                                 (rule "translateJavaAddInt" (formula "48") (term "6,0,0,1,1,1,1,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "48") (term "7,0,0,1,1,1,1,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,0"))
                                 (rule "translateJavaAddInt" (formula "48") (term "7,0,0,1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "48") (term "6,0,0,1,1,1,0,1,1"))
                                 (rule "andLeft" (formula "48"))
                                 (rule "andLeft" (formula "49"))
                                 (rule "andLeft" (formula "50"))
                                 (rule "andLeft" (formula "50"))
                                 (rule "andLeft" (formula "51"))
                                 (rule "andLeft" (formula "52"))
                                 (rule "andLeft" (formula "53"))
                                 (rule "andLeft" (formula "54"))
                                 (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0"))
                                 (rule "mul_literals" (formula "48") (term "1,2,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "54") (term "7,0"))
                                 (rule "mul_literals" (formula "54") (term "1,7,0"))
                                 (rule "polySimp_addComm1" (formula "51") (term "7,0"))
                                 (rule "add_literals" (formula "51") (term "0,7,0"))
                                 (rule "add_zero_left" (formula "51") (term "7,0"))
                                 (rule "polySimp_addComm1" (formula "53") (term "6,0"))
                                 (rule "add_literals" (formula "53") (term "0,6,0"))
                                 (rule "add_zero_left" (formula "53") (term "6,0"))
                                 (rule "polySimp_addComm1" (formula "54") (term "6,0"))
                                 (rule "add_literals" (formula "54") (term "0,6,0"))
                                 (rule "add_zero_left" (formula "54") (term "6,0"))
                                 (rule "polySimp_addComm0" (formula "48") (term "2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "54") (term "7,0"))
                                 (rule "commuteUnion" (formula "48") (term "1,0"))
                                 (rule "tryEmpty" (formula "64") (term "1"))
                                 (rule "blockEmptyLabel" (formula "64") (term "1"))
                                 (rule "blockEmpty" (formula "64") (term "1"))
                                 (rule "methodCallEmpty" (formula "64") (term "1"))
                                 (rule "emptyModality" (formula "64") (term "1"))
                                 (rule "andRight" (formula "64"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "64"))
                                    (branch "Case 1"
                                        (builtin "One Step Simplification" (formula "64"))
                                       (rule "closeTrue" (formula "64"))
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "64"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "polySimp_homoEq" (formula "56"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "56") (term "1,0"))
                                          (rule "mul_literals" (formula "56") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                          (rule "polySimp_addComm0" (formula "56") (term "0,0"))
                                          (rule "narrowSelectArrayType" (formula "64") (term "2,1") (ifseqformula "2") (ifseqformula "63"))
                                          (rule "seqPermTransRight" (formula "64") (ifseqformula "50") (ifseqformula "42"))
                                          (rule "close" (formula "65") (ifseqformula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "64"))
                                          (branch "Case 1"
                                              (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "51")))
                                             (rule "closeTrue" (formula "64"))
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "52")))
                                             (rule "closeTrue" (formula "64"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "64") (userinteraction))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "64") (term "0,1,1,0,0,0") (ifseqformula "25"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "64") (term "0,0,1,1,0,0,0") (ifseqformula "15"))
                                    (rule "allRight" (formula "64") (inst "sk=f_0"))
                                    (rule "allRight" (formula "64") (inst "sk=f_1"))
                                    (rule "orRight" (formula "64"))
                                    (rule "orRight" (formula "64"))
                                    (rule "orRight" (formula "64"))
                                    (rule "eqSymm" (formula "67"))
                                    (rule "eqSymm" (formula "64") (term "0,0,0,1"))
                                    (rule "pullOutSelect" (formula "67") (term "0") (inst "selectSK=f_0_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "26"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "16"))
                                    (rule "eqSymm" (formula "68"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "66"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "65"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "68") (term "0") (inst "selectSK=f_0_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "17"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "elementOfArrayRange" (formula "1") (term "1,0,0,0,0") (inst "iv=iv"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,1,1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,1,0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "66"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_2"))
                                    (rule "simplifySelectOfAnon" (formula "2"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "replaceKnownSelect_taclet100200010120_3" (formula "2") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,1,0,0") (ifseqformula "28"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,1,0,0") (ifseqformula "18"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "69"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfArrayRange" (formula "2") (term "0,0,0") (inst "iv=iv"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "67"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "!f_1 = null & !f_1.<created> = TRUE TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                       (rule "replace_known_right" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "59")))
                                       (rule "replace_known_right" (formula "70") (term "0,0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "58")))
                                       (rule "notRight" (formula "70"))
                                       (rule "ifthenelse_negated" (formula "3") (term "0"))
                                       (rule "commute_or" (formula "2") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "2") (term "0,0"))
                                       (rule "commute_or" (formula "2") (term "0,0,0"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " ( !f_0 = java.lang.Object::<created> | ! f_1.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE) & ( f_1 = result_21 | ! f_1.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE) TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "73") (term "0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch " f_1.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | f_1.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE | f_1.<created>@anon_heap_partition<<anonHeapFunction>> = TRUE TRUE"
                                             (rule "close" (formula "73") (ifseqformula "5"))
                                          )
                                          (branch " f_1.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | f_1.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE | f_1.<created>@anon_heap_partition<<anonHeapFunction>> = TRUE FALSE"
                                             (rule "orRight" (formula "60"))
                                             (rule "orRight" (formula "60"))
                                             (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "eqSymm" (formula "74"))
                                             (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "60"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "replace_known_right" (formula "2") (term "0,1") (ifseqformula "59"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch " ( !f_0 = java.lang.Object::<created> | ! f_1.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE) & ( f_1 = result_21 | ! f_1.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "72") (term "0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "andRight" (formula "58"))
                                          (branch
                                             (rule "orRight" (formula "58"))
                                             (rule "notRight" (formula "59"))
                                             (rule "notRight" (formula "59"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "72")))
                                             (rule "closeFalse" (formula "4"))
                                          )
                                          (branch
                                             (rule "orRight" (formula "58"))
                                             (rule "notRight" (formula "59"))
                                             (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                    )
                                    (branch "!f_1 = null & !f_1.<created> = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " !f_0 = java.lang.Object::<created> & f_1 = result_21 | !f_1 = null & !( f_1.<created> = TRUE | f_1.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE) TRUE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "71") (term "0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch " !f_1 = null & !( f_1.<created> = TRUE | f_1.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | f_1.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE | f_1.<created>@anon_heap_partition<<anonHeapFunction>> = TRUE) TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "orRight" (formula "58"))
                                             (rule "orRight" (formula "58"))
                                             (rule "orRight" (formula "58"))
                                             (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "eqSymm" (formula "74"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,1") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "59")))
                                             (rule "true_left" (formula "1"))
                                             (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "60"))
                                              (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "56")))
                                             (rule "closeTrue" (formula "61"))
                                          )
                                          (branch " !f_1 = null & !( f_1.<created> = TRUE | f_1.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | f_1.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE | f_1.<created>@anon_heap_partition<<anonHeapFunction>> = TRUE) FALSE"
                                             (rule "close" (formula "71") (ifseqformula "2"))
                                          )
                                       )
                                       (branch " !f_0 = java.lang.Object::<created> & f_1 = result_21 | !f_1 = null & !( f_1.<created> = TRUE | f_1.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE) FALSE"
                                          (rule "orRight" (formula "58"))
                                          (rule "applyEqReverse" (formula "72") (term "0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " !f_1 = null & !( f_1.<created> = TRUE | f_1.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | f_1.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE | f_1.<created>@anon_heap_partition<<anonHeapFunction>> = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "57"))
                                             (rule "orRight" (formula "57"))
                                             (rule "orRight" (formula "57"))
                                             (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "75"))
                                             (rule "replace_known_right" (formula "63") (term "0,1") (ifseqformula "56"))
                                              (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "60")))
                                             (rule "closeTrue" (formula "63"))
                                          )
                                          (branch " !f_1 = null & !( f_1.<created> = TRUE | f_1.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | f_1.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE | f_1.<created>@anon_heap_partition<<anonHeapFunction>> = TRUE) FALSE"
                                             (rule "close" (formula "72") (ifseqformula "1"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Exceptional Post (sample_sort_recurse_on)"
                                  (builtin "One Step Simplification" (formula "57"))
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "translateJavaSubInt" (formula "48") (term "7,0,0,1,1,1,1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "48") (term "6,0,0,1,1,1,1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "48") (term "7,0,0,1,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,0"))
                                 (rule "translateJavaAddInt" (formula "48") (term "6,0,0,1,1,1,0,1,1"))
                                 (rule "andLeft" (formula "48"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "1,0") (ifseqformula "48"))
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,1,0") (ifseqformula "25"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,0,1,0") (ifseqformula "15"))
                                 (rule "andLeft" (formula "49"))
                                 (rule "andLeft" (formula "49"))
                                 (rule "andLeft" (formula "51"))
                                 (rule "notLeft" (formula "49"))
                                 (rule "close" (formula "52") (ifseqformula "51"))
                              )
                              (branch "Pre (sample_sort_recurse_on)"
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")) (ifInst ""  (formula "54")) (ifInst ""  (formula "53")) (ifInst ""  (formula "52")) (ifInst ""  (formula "54")) (ifInst ""  (formula "53")) (ifInst ""  (formula "52")))
                                 (rule "andRight" (formula "55"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "55"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "55"))
                                       (branch
                                          (rule "andRight" (formula "55"))
                                          (branch
                                             (rule "andRight" (formula "55"))
                                             (branch
                                                (rule "polySimp_homoEq" (formula "47"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                (rule "inEqSimp_ltRight" (formula "48"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "55"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "12"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                (rule "jmod_axiom" (formula "34") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                                (rule "jmod_axiom" (formula "43") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "49"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "34"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "43"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                (rule "mul_literals" (formula "12") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                (rule "inEqSimp_contradEq3" (formula "49") (ifseqformula "2"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "49") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0"))
                                                (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                                (rule "add_literals" (formula "49") (term "0,0"))
                                                (rule "qeq_literals" (formula "49") (term "0"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "8") (term "0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "closeFalse" (formula "8"))
                                             )
                                             (branch
                                                (rule "polySimp_homoEq" (formula "47"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                (rule "inEqSimp_leqRight" (formula "55"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltRight" (formula "49"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_gtToGeq" (formula "12"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                (rule "jmod_axiom" (formula "34") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                                (rule "jmod_axiom" (formula "43") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "49"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "34"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "43"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                (rule "mul_literals" (formula "12") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                (rule "inEqSimp_contradEq3" (formula "49") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "49") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0"))
                                                (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                                (rule "add_literals" (formula "49") (term "0,0"))
                                                (rule "qeq_literals" (formula "49") (term "0"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "2"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "inEqSimp_homoInEq1" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0"))
                                                (rule "add_zero_right" (formula "9") (term "0"))
                                                (rule "leq_literals" (formula "9"))
                                                (rule "closeFalse" (formula "9"))
                                             )
                                          )
                                          (branch
                                             (rule "polySimp_homoEq" (formula "47"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                             (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                             (rule "inEqSimp_ltRight" (formula "48"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "55"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                             (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "12"))
                                             (rule "mul_literals" (formula "12") (term "1,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "13"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                             (rule "jmod_axiom" (formula "34") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                             (rule "jmod_axiom" (formula "43") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "49"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                             (rule "polySimp_elimOne" (formula "49") (term "0"))
                                             (rule "polySimp_sepNegMonomial" (formula "34"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                             (rule "polySimp_sepNegMonomial" (formula "43"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                             (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1"))
                                             (rule "mul_literals" (formula "12") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "49") (ifseqformula "2"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,0,0"))
                                             (rule "mul_literals" (formula "49") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "49") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0"))
                                             (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                             (rule "add_literals" (formula "49") (term "0,0"))
                                             (rule "qeq_literals" (formula "49") (term "0"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "false_right" (formula "49"))
                                             (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                             (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "9") (term "0,0"))
                                             (rule "qeq_literals" (formula "9") (term "0"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "10"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                             (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0"))
                                             (rule "add_zero_right" (formula "10") (term "0"))
                                             (rule "leq_literals" (formula "10"))
                                             (rule "closeFalse" (formula "10"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "55"))
                                          (branch
                                             (rule "translateJavaSubInt" (formula "55") (term "0"))
                                             (rule "polySimp_homoEq" (formula "47"))
                                             (rule "polySimp_elimSub" (formula "55") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "55") (term "0"))
                                             (rule "close" (formula "55") (ifseqformula "11"))
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "55"))
                                             (branch
                                                (rule "andRight" (formula "55"))
                                                (branch
                                                   (rule "polySimp_homoEq" (formula "47"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                   (rule "mul_literals" (formula "47") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "55"))
                                                   (rule "add_zero_right" (formula "1") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltRight" (formula "49"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "12"))
                                                   (rule "mul_literals" (formula "12") (term "1,0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "13"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                   (rule "jmod_axiom" (formula "43") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                                   (rule "jmod_axiom" (formula "34") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "49"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "43"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "34"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                   (rule "inEqSimp_invertInEq1" (formula "2"))
                                                   (rule "times_zero_2" (formula "2") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                   (rule "mul_literals" (formula "12") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                   (rule "inEqSimp_contradEq3" (formula "49") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "49") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0"))
                                                   (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0"))
                                                   (rule "qeq_literals" (formula "49") (term "0"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0"))
                                                   (rule "qeq_literals" (formula "9") (term "0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "newSym_eq" (formula "33") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                                   (rule "times_zero_1" (formula "33") (term "1,1"))
                                                   (rule "add_zero_right" (formula "33") (term "1"))
                                                   (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "33"))
                                                   (rule "eqSymm" (formula "34"))
                                                   (rule "applyEq" (formula "45") (term "1,7,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "31") (term "5,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "36") (term "5,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "47") (term "7,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "48") (term "1,7,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "47") (term "5,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "30") (term "2,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "46") (term "5,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "45") (term "5,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "32") (term "5,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "34"))
                                                   (rule "inEqSimp_commuteLeq" (formula "1"))
                                                   (rule "applyEq" (formula "36") (term "1,7,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "35") (term "0,2,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "47") (term "1,6,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "48") (term "5,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "32") (term "7,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "42") (term "0") (ifseqformula "34"))
                                                   (rule "inEqSimp_commuteGeq" (formula "42"))
                                                   (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                   (rule "leq_literals" (formula "2") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                                                   (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "newSym_eq" (formula "43") (inst "newSymDef=mul(bucket_0, Z(0(#)))") (inst "l=l_1"))
                                                   (rule "times_zero_1" (formula "43") (term "1,1"))
                                                   (rule "add_zero_right" (formula "43") (term "1"))
                                                   (rule "applyEqRigid" (formula "44") (term "0,0") (ifseqformula "43"))
                                                   (rule "eqSymm" (formula "44"))
                                                   (rule "applyEqRigid" (formula "49") (term "1,6,0") (ifseqformula "44"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "44"))
                                                   (rule "inEqSimp_commuteGeq" (formula "1"))
                                                   (rule "applyEqRigid" (formula "42") (term "0") (ifseqformula "44"))
                                                   (rule "inEqSimp_commuteLeq" (formula "42"))
                                                   (rule "applyEq" (formula "41") (term "0") (ifseqformula "44"))
                                                   (rule "applyEqRigid" (formula "43") (term "0,0") (ifseqformula "44"))
                                                   (rule "elimGcdGeq_antec" (formula "41") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "41") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                   (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "41") (term "0,0"))
                                                   (rule "leq_literals" (formula "41") (term "0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "elimGcdGeq_antec" (formula "42") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=l_1"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0"))
                                                   (rule "leq_literals" (formula "42") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                                   (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "42") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                                   (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "42") (term "0,0"))
                                                   (rule "leq_literals" (formula "42") (term "0"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=l_1"))
                                                   (rule "neg_literal" (formula "1") (term "0,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "1") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_antiSymm" (formula "42") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "49") (term "0,7,0") (ifseqformula "42"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "42"))
                                                   (rule "applyEqRigid" (formula "43") (term "0") (ifseqformula "42"))
                                                   (rule "inEqSimp_homoInEq1" (formula "43"))
                                                   (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                                                   (rule "add_literals" (formula "43") (term "1,0"))
                                                   (rule "times_zero_1" (formula "43") (term "0"))
                                                   (rule "leq_literals" (formula "43"))
                                                   (rule "true_left" (formula "43"))
                                                   (rule "applyEqRigid" (formula "48") (term "0,5,0") (ifseqformula "42"))
                                                   (rule "applyEqRigid" (formula "49") (term "0,1,7,0") (ifseqformula "42"))
                                                   (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "42"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "0"))
                                                   (rule "qeq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "applyEq" (formula "35") (term "0,1,7,0") (ifseqformula "41"))
                                                   (rule "applyEq" (formula "48") (term "0,5,0") (ifseqformula "41"))
                                                   (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "41"))
                                                   (rule "applyEq" (formula "31") (term "0,5,0") (ifseqformula "41"))
                                                   (rule "applyEq" (formula "34") (term "0,0,2,0") (ifseqformula "41"))
                                                   (rule "applyEqRigid" (formula "36") (term "0,2,0") (ifseqformula "41"))
                                                   (rule "applyEqRigid" (formula "29") (term "0,2,0") (ifseqformula "41"))
                                                   (rule "applyEqRigid" (formula "45") (term "0,1,7,0") (ifseqformula "41"))
                                                   (rule "applyEq" (formula "45") (term "0,5,0") (ifseqformula "41"))
                                                   (rule "applyEqRigid" (formula "46") (term "0,5,0") (ifseqformula "41"))
                                                   (rule "applyEqRigid" (formula "30") (term "0,5,0") (ifseqformula "41"))
                                                   (rule "applyEq" (formula "31") (term "0,7,0") (ifseqformula "41"))
                                                   (rule "applyEqRigid" (formula "35") (term "0,5,0") (ifseqformula "41"))
                                                   (rule "applyEq" (formula "47") (term "0,1,6,0") (ifseqformula "41"))
                                                   (rule "applyEqRigid" (formula "42") (term "0") (ifseqformula "32"))
                                                   (rule "applyEqRigid" (formula "32") (term "1") (ifseqformula "41"))
                                                   (rule "applyEq" (formula "33") (term "0,1") (ifseqformula "41"))
                                                   (rule "inEqSimp_antiSymm" (formula "40") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "48") (term "0,5,0") (ifseqformula "40"))
                                                   (rule "mul_literals" (formula "48") (term "5,0"))
                                                   (rule "applyEqRigid" (formula "29") (term "0,2,0") (ifseqformula "40"))
                                                   (rule "times_zero_2" (formula "29") (term "2,0"))
                                                   (rule "applyEqRigid" (formula "48") (term "0,1,6,0") (ifseqformula "40"))
                                                   (rule "times_zero_2" (formula "48") (term "1,6,0"))
                                                   (rule "add_literals" (formula "48") (term "6,0"))
                                                   (rule "applyEq" (formula "30") (term "0,5,0") (ifseqformula "40"))
                                                   (rule "times_zero_2" (formula "30") (term "5,0"))
                                                   (rule "applyEq" (formula "45") (term "0,5,0") (ifseqformula "40"))
                                                   (rule "times_zero_2" (formula "45") (term "5,0"))
                                                   (rule "applyEqRigid" (formula "31") (term "0,5,0") (ifseqformula "40"))
                                                   (rule "times_zero_2" (formula "31") (term "5,0"))
                                                   (rule "applyEq" (formula "47") (term "0,7,0") (ifseqformula "40"))
                                                   (rule "times_zero_2" (formula "47") (term "7,0"))
                                                   (rule "applyEq" (formula "47") (term "0,5,0") (ifseqformula "40"))
                                                   (rule "times_zero_2" (formula "47") (term "5,0"))
                                                   (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "40"))
                                                   (rule "qeq_literals" (formula "41"))
                                                   (rule "true_left" (formula "41"))
                                                   (rule "applyEqRigid" (formula "31") (term "0,7,0") (ifseqformula "40"))
                                                   (rule "times_zero_2" (formula "31") (term "7,0"))
                                                   (rule "applyEq" (formula "35") (term "0,1,7,0") (ifseqformula "40"))
                                                   (rule "times_zero_2" (formula "35") (term "1,7,0"))
                                                   (rule "add_literals" (formula "35") (term "7,0"))
                                                   (rule "applyEqRigid" (formula "46") (term "0,1,6,0") (ifseqformula "40"))
                                                   (rule "times_zero_2" (formula "46") (term "1,6,0"))
                                                   (rule "add_literals" (formula "46") (term "6,0"))
                                                   (rule "applyEq" (formula "44") (term "0,1,7,0") (ifseqformula "40"))
                                                   (rule "times_zero_2" (formula "44") (term "1,7,0"))
                                                   (rule "add_literals" (formula "44") (term "7,0"))
                                                   (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "40"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "applyEqRigid" (formula "44") (term "0,5,0") (ifseqformula "39"))
                                                   (rule "times_zero_2" (formula "44") (term "5,0"))
                                                   (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "39"))
                                                   (rule "mul_literals" (formula "31") (term "0,0"))
                                                   (rule "jdiv_axiom_inline" (formula "31") (term "0"))
                                                   (rule "qeq_literals" (formula "31") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "div_literals" (formula "31") (term "0"))
                                                   (rule "eqSymm" (formula "31"))
                                                   (rule "applyEq" (formula "45") (term "0,1,7,0") (ifseqformula "38"))
                                                   (rule "times_zero_2" (formula "45") (term "1,7,0"))
                                                   (rule "add_literals" (formula "45") (term "7,0"))
                                                   (rule "applyEqRigid" (formula "32") (term "0,0,2,0") (ifseqformula "38"))
                                                   (rule "times_zero_2" (formula "32") (term "0,2,0"))
                                                   (rule "applyEq" (formula "33") (term "0,5,0") (ifseqformula "38"))
                                                   (rule "times_zero_2" (formula "33") (term "5,0"))
                                                   (rule "applyEqRigid" (formula "34") (term "0,2,0") (ifseqformula "38"))
                                                   (rule "times_zero_2" (formula "34") (term "2,0"))
                                                   (rule "applyEqRigid" (formula "40") (term "0,1") (ifseqformula "38"))
                                                   (rule "times_zero_2" (formula "40") (term "1"))
                                                   (rule "applyEqRigid" (formula "39") (term "1") (ifseqformula "38"))
                                                   (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "38"))
                                                   (rule "times_zero_2" (formula "31") (term "1"))
                                                   (rule "nnf_imp2or" (formula "17") (term "0"))
                                                   (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "35"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "translateJavaMulInt" (formula "35") (term "1,1,0,0,0,0,1,0,0"))
                                                   (rule "translateJavaMulInt" (formula "35") (term "1,1,0,0,0,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "35") (term "1,1,0,0,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "35") (term "1,1,0,0,0,0,0,1,0,0"))
                                                   (rule "andLeft" (formula "35"))
                                                   (rule "andLeft" (formula "36"))
                                                   (rule "andLeft" (formula "35"))
                                                   (rule "andLeft" (formula "37"))
                                                   (rule "andLeft" (formula "35"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "andLeft" (formula "36"))
                                                   (rule "andLeft" (formula "35"))
                                                   (rule "andLeft" (formula "40"))
                                                   (rule "andLeft" (formula "37"))
                                                   (rule "notLeft" (formula "36"))
                                                   (rule "andLeft" (formula "35"))
                                                   (rule "andLeft" (formula "41"))
                                                   (rule "andLeft" (formula "37"))
                                                   (rule "andLeft" (formula "35"))
                                                   (rule "notLeft" (formula "37"))
                                                   (rule "andLeft" (formula "42"))
                                                   (rule "andLeft" (formula "37"))
                                                   (rule "andLeft" (formula "35"))
                                                   (rule "notLeft" (formula "37"))
                                                   (rule "andLeft" (formula "43"))
                                                   (rule "andLeft" (formula "37"))
                                                   (rule "notLeft" (formula "36"))
                                                   (rule "andLeft" (formula "35"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "andLeft" (formula "37"))
                                                   (rule "notLeft" (formula "36"))
                                                   (rule "andLeft" (formula "35"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "andLeft" (formula "37"))
                                                   (rule "notLeft" (formula "36"))
                                                   (rule "andLeft" (formula "35"))
                                                   (rule "andLeft" (formula "46"))
                                                   (rule "notLeft" (formula "35"))
                                                   (rule "notLeft" (formula "35"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "disjointDefinition" (formula "71"))
                                                    (builtin "One Step Simplification" (formula "71"))
                                                   (rule "notLeft" (formula "71"))
                                                   (rule "disjointDefinition" (formula "70"))
                                                    (builtin "One Step Simplification" (formula "70"))
                                                   (rule "notLeft" (formula "70"))
                                                   (rule "disjointDefinition" (formula "69"))
                                                    (builtin "One Step Simplification" (formula "69"))
                                                   (rule "notLeft" (formula "69"))
                                                   (rule "eqSymm" (formula "79"))
                                                   (rule "disjointDefinition" (formula "68"))
                                                    (builtin "One Step Simplification" (formula "68"))
                                                   (rule "notLeft" (formula "68"))
                                                   (rule "eqSymm" (formula "78"))
                                                   (rule "disjointDefinition" (formula "67"))
                                                    (builtin "One Step Simplification" (formula "67"))
                                                   (rule "notLeft" (formula "67"))
                                                   (rule "eqSymm" (formula "77"))
                                                   (rule "disjointDefinition" (formula "66"))
                                                    (builtin "One Step Simplification" (formula "66"))
                                                   (rule "notLeft" (formula "66"))
                                                   (rule "eqSymm" (formula "76"))
                                                   (rule "disjointDefinition" (formula "65"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                   (rule "notLeft" (formula "65"))
                                                   (rule "eqSymm" (formula "75"))
                                                   (rule "disjointDefinition" (formula "64"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "notLeft" (formula "64"))
                                                   (rule "eqSymm" (formula "74"))
                                                   (rule "disjointDefinition" (formula "63"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "notLeft" (formula "63"))
                                                   (rule "eqSymm" (formula "73"))
                                                   (rule "disjointDefinition" (formula "62"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "notLeft" (formula "62"))
                                                   (rule "eqSymm" (formula "72"))
                                                   (rule "disjointDefinition" (formula "61"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "notLeft" (formula "61"))
                                                   (rule "eqSymm" (formula "71"))
                                                   (rule "disjointDefinition" (formula "60"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "notLeft" (formula "60"))
                                                   (rule "eqSymm" (formula "70"))
                                                   (rule "disjointDefinition" (formula "59"))
                                                    (builtin "One Step Simplification" (formula "59"))
                                                   (rule "notLeft" (formula "59"))
                                                   (rule "eqSymm" (formula "69"))
                                                   (rule "disjointDefinition" (formula "58"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "notLeft" (formula "58"))
                                                   (rule "eqSymm" (formula "68"))
                                                   (rule "disjointDefinition" (formula "57"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "notLeft" (formula "57"))
                                                   (rule "eqSymm" (formula "67"))
                                                   (rule "disjointDefinition" (formula "56"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "notLeft" (formula "56"))
                                                   (rule "disjointDefinition" (formula "55"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "notLeft" (formula "55"))
                                                   (rule "eqSymm" (formula "65"))
                                                   (rule "disjointDefinition" (formula "54"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "notLeft" (formula "54"))
                                                   (rule "eqSymm" (formula "64"))
                                                   (rule "disjointDefinition" (formula "53"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "notLeft" (formula "53"))
                                                   (rule "disjointDefinition" (formula "52"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "notLeft" (formula "52"))
                                                   (rule "disjointDefinition" (formula "51"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "notLeft" (formula "51"))
                                                   (rule "disjointDefinition" (formula "50"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "notLeft" (formula "50"))
                                                   (rule "disjointDefinition" (formula "49"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "notLeft" (formula "49"))
                                                   (rule "disjointDefinition" (formula "48"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "notLeft" (formula "48"))
                                                   (rule "disjointDefinition" (formula "47"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "notLeft" (formula "47"))
                                                   (rule "disjointDefinition" (formula "46"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "notLeft" (formula "46"))
                                                   (rule "disjointDefinition" (formula "45"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "notLeft" (formula "45"))
                                                   (rule "disjointDefinition" (formula "44"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "notLeft" (formula "44"))
                                                   (rule "applyEq" (formula "52") (term "0,1,0,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "53") (term "0,1,0,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "51") (term "0,1,0,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "49") (term "0,1,0,2,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "50") (term "0,1,0,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "24") (term "1,0,1,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "43"))
                                                   (rule "distributeIntersection" (formula "12") (term "0"))
                                                   (rule "distributeIntersection" (formula "22") (term "0"))
                                                   (rule "distributeIntersection" (formula "21") (term "0"))
                                                   (rule "distributeIntersection" (formula "12") (term "1,0"))
                                                   (rule "distributeIntersection" (formula "12") (term "0,0"))
                                                   (rule "distributeIntersection" (formula "22") (term "0,0"))
                                                   (rule "distributeIntersection" (formula "22") (term "1,0"))
                                                   (rule "unionEqualsEmpty" (formula "21"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "distributeIntersection" (formula "12") (term "0,1,0"))
                                                   (rule "distributeIntersection" (formula "12") (term "1,1,0"))
                                                   (rule "distributeIntersection" (formula "12") (term "1,0,0"))
                                                   (rule "distributeIntersection" (formula "12") (term "0,0,0"))
                                                   (rule "distributeIntersection" (formula "23") (term "1,0,0"))
                                                   (rule "distributeIntersection" (formula "23") (term "0,0,0"))
                                                   (rule "distributeIntersection" (formula "23") (term "1,1,0"))
                                                   (rule "distributeIntersection" (formula "23") (term "0,1,0"))
                                                   (rule "distributeIntersection" (formula "21") (term "0"))
                                                   (rule "distributeIntersection" (formula "22") (term "0"))
                                                   (rule "unionEqualsEmpty" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "unionEqualsEmpty" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "distributeIntersection" (formula "22") (term "0,0"))
                                                   (rule "distributeIntersection" (formula "22") (term "1,0"))
                                                   (rule "unionEqualsEmpty" (formula "23"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "unionEqualsEmpty" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "unionEqualsEmpty" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "unionEqualsEmpty" (formula "28"))
                                                   (rule "andLeft" (formula "28"))
                                                   (rule "unionEqualsEmpty" (formula "27"))
                                                   (rule "andLeft" (formula "27"))
                                                   (rule "unionEqualsEmpty" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "distributeIntersection" (formula "27") (term "0"))
                                                   (rule "distributeIntersection" (formula "26") (term "0"))
                                                   (rule "unionEqualsEmpty" (formula "15"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "notLeft" (formula "16"))
                                                   (rule "notLeft" (formula "15"))
                                                   (rule "eqSymm" (formula "63"))
                                                   (rule "eqSymm" (formula "62"))
                                                   (rule "unionEqualsEmpty" (formula "14"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "notLeft" (formula "14"))
                                                   (rule "notLeft" (formula "14"))
                                                   (rule "eqSymm" (formula "62"))
                                                   (rule "eqSymm" (formula "61"))
                                                   (rule "unionEqualsEmpty" (formula "13"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "notLeft" (formula "13"))
                                                   (rule "notLeft" (formula "13"))
                                                   (rule "eqSymm" (formula "61"))
                                                   (rule "eqSymm" (formula "60"))
                                                   (rule "unionEqualsEmpty" (formula "12"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "notLeft" (formula "13"))
                                                   (rule "notLeft" (formula "12"))
                                                   (rule "eqSymm" (formula "60"))
                                                   (rule "eqSymm" (formula "59"))
                                                   (rule "unionEqualsEmpty" (formula "27"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "andLeft" (formula "27"))
                                                   (rule "notLeft" (formula "27"))
                                                   (rule "notLeft" (formula "27"))
                                                   (rule "eqSymm" (formula "59"))
                                                   (rule "eqSymm" (formula "58"))
                                                   (rule "sortsDisjointModuloNull" (formula "59"))
                                                   (rule "replace_known_right" (formula "59") (term "1") (ifseqformula "108"))
                                                    (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "102")))
                                                   (rule "false_right" (formula "59"))
                                                   (rule "sortsDisjointModuloNull" (formula "58"))
                                                   (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "102"))
                                                    (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "107")))
                                                   (rule "false_right" (formula "58"))
                                                   (rule "unionEqualsEmpty" (formula "26"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "notLeft" (formula "26"))
                                                   (rule "notLeft" (formula "26"))
                                                   (rule "eqSymm" (formula "58"))
                                                   (rule "eqSymm" (formula "57"))
                                                   (rule "sortsDisjointModuloNull" (formula "58"))
                                                   (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "99"))
                                                    (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "107")))
                                                   (rule "false_right" (formula "58"))
                                                   (rule "sortsDisjointModuloNull" (formula "57"))
                                                   (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "99"))
                                                    (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "106")))
                                                   (rule "false_right" (formula "57"))
                                                   (rule "unionEqualsEmpty" (formula "25"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "notLeft" (formula "25"))
                                                   (rule "notLeft" (formula "25"))
                                                   (rule "eqSymm" (formula "57"))
                                                   (rule "eqSymm" (formula "56"))
                                                   (rule "sortsDisjointModuloNull" (formula "57"))
                                                   (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "96"))
                                                    (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "106")))
                                                   (rule "false_right" (formula "57"))
                                                   (rule "sortsDisjointModuloNull" (formula "56"))
                                                   (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "96"))
                                                    (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "105")))
                                                   (rule "false_right" (formula "56"))
                                                   (rule "unionEqualsEmpty" (formula "24"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "notLeft" (formula "24"))
                                                   (rule "notLeft" (formula "24"))
                                                   (rule "eqSymm" (formula "56"))
                                                   (rule "eqSymm" (formula "55"))
                                                   (rule "sortsDisjointModuloNull" (formula "56"))
                                                   (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "94"))
                                                    (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "105")))
                                                   (rule "false_right" (formula "56"))
                                                   (rule "sortsDisjointModuloNull" (formula "55"))
                                                   (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "92"))
                                                    (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "104")))
                                                   (rule "false_right" (formula "55"))
                                                   (rule "unionEqualsEmpty" (formula "20"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "notLeft" (formula "20"))
                                                   (rule "notLeft" (formula "20"))
                                                   (rule "eqSymm" (formula "55"))
                                                   (rule "eqSymm" (formula "54"))
                                                   (rule "unionEqualsEmpty" (formula "20"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "notLeft" (formula "21"))
                                                   (rule "notLeft" (formula "20"))
                                                   (rule "eqSymm" (formula "54"))
                                                   (rule "eqSymm" (formula "53"))
                                                   (rule "unionEqualsEmpty" (formula "21"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "notLeft" (formula "21"))
                                                   (rule "notLeft" (formula "21"))
                                                   (rule "eqSymm" (formula "53"))
                                                   (rule "eqSymm" (formula "52"))
                                                   (rule "unionEqualsEmpty" (formula "20"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "notLeft" (formula "21"))
                                                   (rule "notLeft" (formula "20"))
                                                   (rule "eqSymm" (formula "52"))
                                                   (rule "eqSymm" (formula "51"))
                                                   (rule "commuteUnion" (formula "40") (term "0,0,1"))
                                                   (rule "commuteUnion" (formula "40") (term "1,1,1"))
                                                   (rule "commuteUnion" (formula "49") (term "1,1,0,1,0,0"))
                                                   (rule "commuteUnion_2" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "commuteUnion" (formula "50") (term "0,0,0,1,0,0"))
                                                   (rule "commuteUnion" (formula "50") (term "1,1,0,1,0,0"))
                                                   (rule "commuteUnion" (formula "48") (term "0,0,0,1,0,0"))
                                                   (rule "commuteUnion" (formula "48") (term "1,1,0,1,0,0"))
                                                   (rule "commuteUnion_2" (formula "46") (term "0,0,1,0,2,0"))
                                                   (rule "commuteUnion" (formula "46") (term "1,1,0,1,0,2,0"))
                                                   (rule "commuteUnion" (formula "47") (term "0,0,1,0,0"))
                                                   (rule "commuteUnion" (formula "47") (term "1,1,0,1,0,0"))
                                                   (rule "commuteUnion" (formula "21") (term "1,1,1,0,1,0"))
                                                   (rule "commuteUnion" (formula "21") (term "0,0,1,0,1,0"))
                                                   (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "11"))
                                                    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "96")) (ifInst ""  (formula "95")) (ifInst ""  (formula "97")) (ifInst ""  (formula "98")) (ifInst ""  (formula "99")) (ifInst ""  (formula "100")) (ifInst ""  (formula "101")) (ifInst ""  (formula "102")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                                   (rule "translateJavaMulInt" (formula "11") (term "1,0,0,0"))
                                                   (rule "translateJavaMulInt" (formula "11") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "disjointDefinition" (formula "39"))
                                                    (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "122")))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "disjointDefinition" (formula "38"))
                                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "120")))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "disjointDefinition" (formula "37"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "notLeft" (formula "37"))
                                                   (rule "eqSymm" (formula "76"))
                                                   (rule "disjointDefinition" (formula "36"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "notLeft" (formula "36"))
                                                   (rule "eqSymm" (formula "75"))
                                                   (rule "disjointDefinition" (formula "35"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "notLeft" (formula "35"))
                                                   (rule "eqSymm" (formula "74"))
                                                   (rule "disjointDefinition" (formula "34"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "notLeft" (formula "34"))
                                                   (rule "eqSymm" (formula "73"))
                                                   (rule "disjointDefinition" (formula "33"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "notLeft" (formula "33"))
                                                   (rule "eqSymm" (formula "72"))
                                                   (rule "disjointDefinition" (formula "32"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "notLeft" (formula "32"))
                                                   (rule "eqSymm" (formula "71"))
                                                   (rule "disjointDefinition" (formula "31"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "notLeft" (formula "31"))
                                                   (rule "eqSymm" (formula "70"))
                                                   (rule "disjointDefinition" (formula "30"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "notLeft" (formula "30"))
                                                   (rule "eqSymm" (formula "69"))
                                                   (rule "disjointDefinition" (formula "29"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "notLeft" (formula "29"))
                                                   (rule "eqSymm" (formula "68"))
                                                   (rule "disjointDefinition" (formula "28"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "notLeft" (formula "28"))
                                                   (rule "eqSymm" (formula "67"))
                                                   (rule "disjointDefinition" (formula "27"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "notLeft" (formula "27"))
                                                   (rule "eqSymm" (formula "66"))
                                                   (rule "disjointDefinition" (formula "26"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "notLeft" (formula "26"))
                                                   (rule "eqSymm" (formula "65"))
                                                   (rule "disjointDefinition" (formula "25"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "notLeft" (formula "25"))
                                                   (rule "eqSymm" (formula "64"))
                                                   (rule "disjointDefinition" (formula "24"))
                                                    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "92")))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "disjointDefinition" (formula "23"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "notLeft" (formula "23"))
                                                   (rule "eqSymm" (formula "62"))
                                                   (rule "disjointDefinition" (formula "22"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "notLeft" (formula "22"))
                                                   (rule "eqSymm" (formula "61"))
                                                   (rule "disjointDefinition" (formula "21"))
                                                    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "86")))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "disjointDefinition" (formula "20"))
                                                    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "84")))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "disjointDefinition" (formula "19"))
                                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "82")))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "disjointDefinition" (formula "18"))
                                                    (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "80")))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "disjointDefinition" (formula "17"))
                                                    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "78")))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "disjointDefinition" (formula "16"))
                                                    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "76")))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "disjointDefinition" (formula "15"))
                                                    (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "74")))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "disjointDefinition" (formula "14"))
                                                    (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "72")))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "disjointDefinition" (formula "13"))
                                                    (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "70")))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "disjointDefinition" (formula "12"))
                                                    (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "68")))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "applyEq" (formula "11") (term "0") (ifseqformula "40"))
                                                   (rule "eqSymm" (formula "11"))
                                                   (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                                   (rule "commuteUnion_2" (formula "40") (term "0,1"))
                                                   (rule "commuteUnion" (formula "49") (term "0,0,0,1,0,0"))
                                                   (rule "commuteUnion_2" (formula "50") (term "0,0,1,0,0"))
                                                   (rule "commuteUnion" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "commuteUnion" (formula "46") (term "0,0,0,1,0,2,0"))
                                                   (rule "commuteUnion" (formula "47") (term "1,0,0,1,0,0"))
                                                   (rule "commuteUnion" (formula "21") (term "0,1,0,1,0"))
                                                   (rule "commuteUnion" (formula "11") (term "1,1,0"))
                                                   (rule "commuteUnion_2" (formula "11") (term "0,0"))
                                                   (rule "commuteUnion_2" (formula "11") (term "0,1"))
                                                   (rule "commuteUnion_2" (formula "40") (term "1"))
                                                   (rule "commuteUnion_2" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "commuteUnion" (formula "50") (term "0,0,0,1,0,0"))
                                                   (rule "commuteUnion_2" (formula "46") (term "0,0,1,0,2,0"))
                                                   (rule "commuteUnion" (formula "11") (term "0,0,0"))
                                                   (rule "commuteUnion_2" (formula "11") (term "1"))
                                                   (rule "commuteUnion" (formula "40") (term "0,0,1"))
                                                   (rule "commuteUnion_2" (formula "49") (term "0,1,0,0"))
                                                   (rule "commuteUnion_2" (formula "50") (term "0,1,0,0"))
                                                   (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "25") (term "0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "translateJavaAddInt" (formula "25") (term "0,1,0,0"))
                                                   (rule "translateJavaAddInt" (formula "25") (term "3,0,1,0"))
                                                   (rule "leq_literals" (formula "25") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "closeFalse" (formula "25"))
                                                )
                                                (branch
                                                   (rule "polySimp_homoEq" (formula "47"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                   (rule "mul_literals" (formula "47") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                   (rule "inEqSimp_ltRight" (formula "48"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltRight" (formula "55"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_literals" (formula "1") (term "0"))
                                                   (rule "qeq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "55"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "55"))
                                                   (branch "Case 1"
                                                       (builtin "Use Dependency Contract" (formula "55") (term "0") (ifInst ""  (formula "29") (term "0")) (contract "de.wiesler.Functions[de.wiesler.Functions::isValidBucketStarts([I,int)].JML accessible clause.0") (userinteraction))
                                                       (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "37")) (ifInst ""  (formula "53")) (ifInst ""  (formula "53")))
                                                      (rule "wellFormedAnon" (formula "47") (term "0,0,0"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,0,0") (ifseqformula "25"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "0,0,0,0") (ifseqformula "25"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,1,0,0") (ifseqformula "15"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "0,0,0,0,0") (ifseqformula "15"))
                                                      (rule "replace_known_left" (formula "47") (term "1,0,0,0,0") (ifseqformula "24"))
                                                       (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "2")) (ifInst ""  (formula "14")) (ifInst ""  (formula "38")) (ifInst ""  (formula "52")) (ifInst ""  (formula "16")))
                                                      (rule "polySimp_homoEq" (formula "48"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                      (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                      (rule "disjointDefinition" (formula "47") (term "0"))
                                                      (rule "inEqSimp_ltRight" (formula "49"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "11"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "12"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                      (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "30"))
                                                      (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "56"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "notLeft" (formula "48"))
                                                      (rule "jmod_axiom" (formula "42") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,0"))
                                                      (rule "jmod_axiom" (formula "33") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "49"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "42"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "33"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                      (rule "mul_literals" (formula "11") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                      (rule "inEqSimp_contradEq3" (formula "49") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "49") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "49") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0"))
                                                      (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "49") (term "0,0"))
                                                      (rule "qeq_literals" (formula "49") (term "0"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "11"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "8") (term "0,0"))
                                                      (rule "qeq_literals" (formula "8") (term "0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "distributeIntersection_2" (formula "47") (term "0"))
                                                      (rule "unionEqualsEmpty" (formula "47"))
                                                      (rule "disjointArrayRanges" (formula "47") (term "1"))
                                                      (rule "replace_known_right" (formula "47") (term "0,0,0,0,1") (ifseqformula "49"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "newSym_eq" (formula "32") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))"))
                                                      (rule "times_zero_1" (formula "32") (term "1,1"))
                                                      (rule "add_zero_right" (formula "32") (term "1"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                                      (rule "eqSymm" (formula "33"))
                                                      (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "46") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "41") (term "0") (ifseqformula "33"))
                                                      (rule "inEqSimp_commuteGeq" (formula "41"))
                                                      (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "31") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "47") (term "1,7,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "44") (term "1,7,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "47") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "55") (term "2,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "34") (term "0,2,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "35") (term "1,7,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "33"))
                                                      (rule "inEqSimp_commuteLeq" (formula "1"))
                                                      (rule "applyEq" (formula "35") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "48") (term "2,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "31") (term "7,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "46") (term "7,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "46") (term "1,6,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "45") (term "5,0") (ifseqformula "33"))
                                                      (rule "newSym_eq" (formula "42") (inst "l=l_1") (inst "newSymDef=mul(bucket_0, Z(0(#)))"))
                                                      (rule "times_zero_1" (formula "42") (term "1,1"))
                                                      (rule "add_zero_right" (formula "42") (term "1"))
                                                      (rule "applyEqRigid" (formula "43") (term "0,0") (ifseqformula "42"))
                                                      (rule "eqSymm" (formula "43"))
                                                      (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                                                      (rule "inEqSimp_commuteLeq" (formula "41"))
                                                      (rule "applyEq" (formula "40") (term "0") (ifseqformula "43"))
                                                      (rule "applyEqRigid" (formula "42") (term "0,0") (ifseqformula "43"))
                                                      (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "43"))
                                                      (rule "inEqSimp_commuteGeq" (formula "1"))
                                                      (rule "applyEq" (formula "48") (term "1,6,0") (ifseqformula "43"))
                                                      (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                      (rule "neg_literal" (formula "1") (term "0,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elimGcdGeq_antec" (formula "40") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                      (rule "leq_literals" (formula "40") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "40") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                                      (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "40") (term "0,0"))
                                                      (rule "leq_literals" (formula "40") (term "0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "elimGcdGeq_antec" (formula "41") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "41") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0"))
                                                      (rule "leq_literals" (formula "41") (term "0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "inEqSimp_antiSymm" (formula "41") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "42") (term "0") (ifseqformula "41"))
                                                      (rule "inEqSimp_homoInEq1" (formula "42"))
                                                      (rule "polySimp_pullOutFactor1" (formula "42") (term "0"))
                                                      (rule "add_literals" (formula "42") (term "1,0"))
                                                      (rule "times_zero_1" (formula "42") (term "0"))
                                                      (rule "leq_literals" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "applyEqRigid" (formula "48") (term "0,5,0") (ifseqformula "41"))
                                                      (rule "applyEqRigid" (formula "34") (term "0,0,2,0") (ifseqformula "41"))
                                                      (rule "applyEqRigid" (formula "49") (term "0,2,1,0") (ifseqformula "41"))
                                                      (rule "applyEqRigid" (formula "35") (term "0,1,7,0") (ifseqformula "41"))
                                                      (rule "applyEq" (formula "46") (term "0,5,0") (ifseqformula "41"))
                                                      (rule "applyEqRigid" (formula "30") (term "0,5,0") (ifseqformula "41"))
                                                      (rule "applyEq" (formula "45") (term "0,5,0") (ifseqformula "41"))
                                                      (rule "applyEq" (formula "47") (term "0,5,0") (ifseqformula "41"))
                                                      (rule "applyEqRigid" (formula "47") (term "0,1,6,0") (ifseqformula "41"))
                                                      (rule "applyEq" (formula "29") (term "0,2,0") (ifseqformula "41"))
                                                      (rule "applyEqRigid" (formula "31") (term "0,5,0") (ifseqformula "41"))
                                                      (rule "applyEqRigid" (formula "31") (term "0,7,0") (ifseqformula "41"))
                                                      (rule "applyEqRigid" (formula "32") (term "0,0,0") (ifseqformula "41"))
                                                      (rule "applyEq" (formula "36") (term "0,2,0") (ifseqformula "41"))
                                                      (rule "applyEq" (formula "45") (term "0,1,7,0") (ifseqformula "41"))
                                                      (rule "applyEqRigid" (formula "48") (term "0,1,7,0") (ifseqformula "41"))
                                                      (rule "applyEqRigid" (formula "35") (term "0,5,0") (ifseqformula "41"))
                                                      (rule "applyEqRigid" (formula "47") (term "0,7,0") (ifseqformula "41"))
                                                      (rule "applyEq" (formula "56") (term "0,2,0") (ifseqformula "41"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "41"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0"))
                                                      (rule "qeq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "41"))
                                                      (rule "eqSymm" (formula "31"))
                                                      (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "39"))
                                                      (rule "nnf_imp2or" (formula "17") (term "0"))
                                                      (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                                      (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "35"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "translateJavaMulInt" (formula "35") (term "1,1,0,0,0,0,1,0,0"))
                                                      (rule "translateJavaMulInt" (formula "35") (term "1,1,0,0,0,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "35") (term "1,1,0,0,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "35") (term "1,1,0,0,0,0,0,1,0,0"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "andLeft" (formula "38"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "40"))
                                                      (rule "notLeft" (formula "36"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "41"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "notLeft" (formula "37"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "42"))
                                                      (rule "notLeft" (formula "36"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "43"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "notLeft" (formula "37"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "notLeft" (formula "37"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "notLeft" (formula "36"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "46"))
                                                      (rule "notLeft" (formula "35"))
                                                      (rule "notLeft" (formula "35"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "disjointDefinition" (formula "71"))
                                                       (builtin "One Step Simplification" (formula "71"))
                                                      (rule "notLeft" (formula "71"))
                                                      (rule "disjointDefinition" (formula "70"))
                                                       (builtin "One Step Simplification" (formula "70"))
                                                      (rule "notLeft" (formula "70"))
                                                      (rule "disjointDefinition" (formula "69"))
                                                       (builtin "One Step Simplification" (formula "69"))
                                                      (rule "notLeft" (formula "69"))
                                                      (rule "eqSymm" (formula "80"))
                                                      (rule "disjointDefinition" (formula "68"))
                                                       (builtin "One Step Simplification" (formula "68"))
                                                      (rule "notLeft" (formula "68"))
                                                      (rule "eqSymm" (formula "79"))
                                                      (rule "disjointDefinition" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "notLeft" (formula "67"))
                                                      (rule "eqSymm" (formula "78"))
                                                      (rule "disjointDefinition" (formula "66"))
                                                       (builtin "One Step Simplification" (formula "66"))
                                                      (rule "notLeft" (formula "66"))
                                                      (rule "eqSymm" (formula "77"))
                                                      (rule "disjointDefinition" (formula "65"))
                                                       (builtin "One Step Simplification" (formula "65"))
                                                      (rule "notLeft" (formula "65"))
                                                      (rule "eqSymm" (formula "76"))
                                                      (rule "disjointDefinition" (formula "64"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "notLeft" (formula "64"))
                                                      (rule "eqSymm" (formula "75"))
                                                      (rule "disjointDefinition" (formula "63"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "notLeft" (formula "63"))
                                                      (rule "eqSymm" (formula "74"))
                                                      (rule "disjointDefinition" (formula "62"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "notLeft" (formula "62"))
                                                      (rule "eqSymm" (formula "73"))
                                                      (rule "disjointDefinition" (formula "61"))
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "notLeft" (formula "61"))
                                                      (rule "eqSymm" (formula "72"))
                                                      (rule "disjointDefinition" (formula "60"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "notLeft" (formula "60"))
                                                      (rule "eqSymm" (formula "71"))
                                                      (rule "disjointDefinition" (formula "59"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                      (rule "notLeft" (formula "59"))
                                                      (rule "eqSymm" (formula "70"))
                                                      (rule "disjointDefinition" (formula "58"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "notLeft" (formula "58"))
                                                      (rule "eqSymm" (formula "69"))
                                                      (rule "disjointDefinition" (formula "57"))
                                                       (builtin "One Step Simplification" (formula "57"))
                                                      (rule "notLeft" (formula "57"))
                                                      (rule "eqSymm" (formula "68"))
                                                      (rule "disjointDefinition" (formula "56"))
                                                       (builtin "One Step Simplification" (formula "56"))
                                                      (rule "notLeft" (formula "56"))
                                                      (rule "disjointDefinition" (formula "55"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "notLeft" (formula "55"))
                                                      (rule "eqSymm" (formula "66"))
                                                      (rule "disjointDefinition" (formula "54"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "notLeft" (formula "54"))
                                                      (rule "eqSymm" (formula "65"))
                                                      (rule "disjointDefinition" (formula "53"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "notLeft" (formula "53"))
                                                      (rule "disjointDefinition" (formula "52"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "notLeft" (formula "52"))
                                                      (rule "disjointDefinition" (formula "51"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "notLeft" (formula "51"))
                                                      (rule "disjointDefinition" (formula "50"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "notLeft" (formula "50"))
                                                      (rule "disjointDefinition" (formula "49"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "notLeft" (formula "49"))
                                                      (rule "disjointDefinition" (formula "48"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "notLeft" (formula "48"))
                                                      (rule "disjointDefinition" (formula "47"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "notLeft" (formula "47"))
                                                      (rule "disjointDefinition" (formula "46"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "notLeft" (formula "46"))
                                                      (rule "disjointDefinition" (formula "45"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "notLeft" (formula "45"))
                                                      (rule "disjointDefinition" (formula "44"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "notLeft" (formula "44"))
                                                      (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "50") (term "0,1,0,2,0") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "54") (term "0,1,0,0") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "51") (term "0,1,0,0") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "91") (term "0,0") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "53") (term "0,1,0,0") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "52") (term "0,1,0,0") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "24") (term "1,0,1,0") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "98") (term "0,1,0,0") (ifseqformula "43"))
                                                      (rule "distributeIntersection" (formula "21") (term "0"))
                                                      (rule "distributeIntersection" (formula "22") (term "0"))
                                                      (rule "distributeIntersection_2" (formula "91") (term "0"))
                                                      (rule "distributeIntersection" (formula "12") (term "0"))
                                                      (rule "distributeIntersection" (formula "21") (term "1,0"))
                                                      (rule "distributeIntersection" (formula "21") (term "0,0"))
                                                      (rule "distributeIntersection" (formula "22") (term "1,0"))
                                                      (rule "distributeIntersection" (formula "22") (term "0,0"))
                                                      (rule "unionEqualsEmpty" (formula "91"))
                                                      (rule "distributeIntersection" (formula "12") (term "0,0"))
                                                      (rule "distributeIntersection" (formula "12") (term "1,0"))
                                                      (rule "distributeIntersection" (formula "21") (term "1,1,0"))
                                                      (rule "distributeIntersection" (formula "21") (term "0,1,0"))
                                                      (rule "distributeIntersection" (formula "21") (term "0,0,0"))
                                                      (rule "distributeIntersection" (formula "21") (term "1,0,0"))
                                                      (rule "distributeIntersection" (formula "22") (term "0,1,0"))
                                                      (rule "distributeIntersection" (formula "22") (term "1,1,0"))
                                                      (rule "distributeIntersection" (formula "22") (term "1,0,0"))
                                                      (rule "distributeIntersection" (formula "22") (term "0,0,0"))
                                                      (rule "distributeIntersection_2" (formula "91") (term "0,0"))
                                                      (rule "distributeIntersection_2" (formula "91") (term "0,1"))
                                                      (rule "distributeIntersection" (formula "12") (term "1,0,0"))
                                                      (rule "distributeIntersection" (formula "12") (term "0,0,0"))
                                                      (rule "distributeIntersection" (formula "12") (term "0,1,0"))
                                                      (rule "distributeIntersection" (formula "12") (term "1,1,0"))
                                                      (rule "unionEqualsEmpty" (formula "21"))
                                                      (rule "andLeft" (formula "21"))
                                                      (rule "unionEqualsEmpty" (formula "23"))
                                                      (rule "andLeft" (formula "23"))
                                                      (rule "unionEqualsEmpty" (formula "93") (term "0"))
                                                      (rule "unionEqualsEmpty" (formula "93") (term "1"))
                                                      (rule "unionEqualsEmpty" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "unionEqualsEmpty" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "unionEqualsEmpty" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "unionEqualsEmpty" (formula "27"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "unionEqualsEmpty" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "distributeIntersection_2" (formula "98") (term "0,1,0"))
                                                      (rule "distributeIntersection_2" (formula "98") (term "0,0,0"))
                                                      (rule "distributeIntersection_2" (formula "98") (term "0,0,1"))
                                                      (rule "distributeIntersection_2" (formula "98") (term "0,1,1"))
                                                      (rule "unionEqualsEmpty" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "unionEqualsEmpty" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "unionEqualsEmpty" (formula "25"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "notLeft" (formula "25"))
                                                      (rule "notLeft" (formula "25"))
                                                      (rule "eqSymm" (formula "64"))
                                                      (rule "eqSymm" (formula "63"))
                                                      (rule "unionEqualsEmpty" (formula "24"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "eqSymm" (formula "63"))
                                                      (rule "eqSymm" (formula "62"))
                                                      (rule "unionEqualsEmpty" (formula "24"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "notLeft" (formula "25"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "eqSymm" (formula "62"))
                                                      (rule "eqSymm" (formula "61"))
                                                      (rule "unionEqualsEmpty" (formula "24"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "eqSymm" (formula "61"))
                                                      (rule "eqSymm" (formula "60"))
                                                      (rule "unionEqualsEmpty" (formula "27"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "notLeft" (formula "27"))
                                                      (rule "notLeft" (formula "27"))
                                                      (rule "eqSymm" (formula "60"))
                                                      (rule "eqSymm" (formula "59"))
                                                      (rule "sortsDisjointModuloNull" (formula "60"))
                                                      (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "110"))
                                                       (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "103")))
                                                      (rule "false_right" (formula "60"))
                                                      (rule "sortsDisjointModuloNull" (formula "59"))
                                                      (rule "replace_known_right" (formula "59") (term "1") (ifseqformula "109"))
                                                       (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "103")))
                                                      (rule "false_right" (formula "59"))
                                                      (rule "unionEqualsEmpty" (formula "26"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "notLeft" (formula "26"))
                                                      (rule "notLeft" (formula "26"))
                                                      (rule "eqSymm" (formula "59"))
                                                      (rule "eqSymm" (formula "58"))
                                                      (rule "sortsDisjointModuloNull" (formula "59"))
                                                      (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "100"))
                                                       (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "109")))
                                                      (rule "false_right" (formula "59"))
                                                      (rule "sortsDisjointModuloNull" (formula "58"))
                                                      (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "100"))
                                                       (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "108")))
                                                      (rule "false_right" (formula "58"))
                                                      (rule "unionEqualsEmpty" (formula "24"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "eqSymm" (formula "58"))
                                                      (rule "eqSymm" (formula "57"))
                                                      (rule "sortsDisjointModuloNull" (formula "58"))
                                                      (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "96"))
                                                       (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "108")))
                                                      (rule "false_right" (formula "58"))
                                                      (rule "sortsDisjointModuloNull" (formula "57"))
                                                      (rule "replace_known_right" (formula "57") (term "1") (ifseqformula "107"))
                                                       (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "94")))
                                                      (rule "false_right" (formula "57"))
                                                      (rule "unionEqualsEmpty" (formula "24"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "eqSymm" (formula "57"))
                                                      (rule "eqSymm" (formula "56"))
                                                      (rule "sortsDisjointModuloNull" (formula "57"))
                                                      (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "96"))
                                                       (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "107")))
                                                      (rule "false_right" (formula "57"))
                                                      (rule "sortsDisjointModuloNull" (formula "56"))
                                                      (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "96"))
                                                       (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "106")))
                                                      (rule "false_right" (formula "56"))
                                                      (rule "unionEqualsEmpty" (formula "100") (term "1,0"))
                                                      (rule "disjointArrayRangeAllFields1" (formula "100") (term "0,1,0"))
                                                      (rule "replace_known_right" (formula "100") (term "0,0,0,1,0") (ifseqformula "63"))
                                                       (builtin "One Step Simplification" (formula "100"))
                                                      (rule "disjointArrayRangeAllFields1" (formula "100") (term "1,0"))
                                                      (rule "replace_known_right" (formula "100") (term "0,0,1,0") (ifseqformula "62"))
                                                       (builtin "One Step Simplification" (formula "100"))
                                                      (rule "unionEqualsEmpty" (formula "14"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "notLeft" (formula "15"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "eqSymm" (formula "56"))
                                                      (rule "eqSymm" (formula "55"))
                                                      (rule "unionEqualsEmpty" (formula "14"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "eqSymm" (formula "55"))
                                                      (rule "eqSymm" (formula "54"))
                                                      (rule "unionEqualsEmpty" (formula "12"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "notLeft" (formula "13"))
                                                      (rule "notLeft" (formula "12"))
                                                      (rule "eqSymm" (formula "54"))
                                                      (rule "eqSymm" (formula "53"))
                                                      (rule "unionEqualsEmpty" (formula "12"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "notLeft" (formula "12"))
                                                      (rule "notLeft" (formula "12"))
                                                      (rule "eqSymm" (formula "53"))
                                                      (rule "eqSymm" (formula "52"))
                                                      (rule "unionEqualsEmpty" (formula "104") (term "0"))
                                                      (rule "disjointArrayRangeAllFields1" (formula "104") (term "0,0"))
                                                      (rule "replace_known_right" (formula "104") (term "0,0,0,0") (ifseqformula "65"))
                                                       (builtin "One Step Simplification" (formula "104"))
                                                      (rule "disjointArrayRangeAllFields1" (formula "104") (term "0"))
                                                      (rule "replace_known_right" (formula "104") (term "0,0,0") (ifseqformula "64"))
                                                       (builtin "One Step Simplification" (formula "104"))
                                                      (rule "unionEqualsEmpty" (formula "104") (term "0"))
                                                      (rule "disjointArrayRangeAllFields1" (formula "104") (term "0,0"))
                                                      (rule "replace_known_right" (formula "104") (term "0,0,0,0") (ifseqformula "62"))
                                                       (builtin "One Step Simplification" (formula "104"))
                                                      (rule "disjointArrayRangeAllFields1" (formula "104") (term "0"))
                                                      (rule "replace_known_right" (formula "104") (term "0,0,0") (ifseqformula "63"))
                                                       (builtin "One Step Simplification" (formula "104"))
                                                      (rule "unionEqualsEmpty" (formula "104"))
                                                      (rule "disjointArrayRangeAllFields1" (formula "104") (term "1"))
                                                      (rule "replace_known_right" (formula "104") (term "0,0,1") (ifseqformula "60"))
                                                       (builtin "One Step Simplification" (formula "104"))
                                                      (rule "disjointArrayRangeAllFields1" (formula "104"))
                                                      (rule "notRight" (formula "104"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "close" (formula "63") (ifseqformula "1"))
                                                   )
                                                   (branch
                                                      (rule "translateJavaSubInt" (formula "55") (term "1"))
                                                      (rule "polySimp_homoEq" (formula "47"))
                                                      (rule "polySimp_elimSub" (formula "55") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "55") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                      (rule "mul_literals" (formula "47") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "48"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "11"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "12"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                      (rule "jmod_axiom" (formula "33") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                                      (rule "jmod_axiom" (formula "42") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "48"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "33"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "42"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                      (rule "mul_literals" (formula "11") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                      (rule "inEqSimp_contradEq3" (formula "48") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "48") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                                      (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "48") (term "0,0"))
                                                      (rule "qeq_literals" (formula "48") (term "0"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "11"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0"))
                                                      (rule "qeq_literals" (formula "8") (term "0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "newSym_eq" (formula "32") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,1"))
                                                      (rule "add_zero_right" (formula "32") (term "1"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                                      (rule "eqSymm" (formula "33"))
                                                      (rule "applyEq" (formula "44") (term "1,7,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "46") (term "7,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "47") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "46") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "35") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "35") (term "1,7,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "33"))
                                                      (rule "inEqSimp_commuteLeq" (formula "1"))
                                                      (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "41") (term "0") (ifseqformula "33"))
                                                      (rule "inEqSimp_commuteGeq" (formula "41"))
                                                      (rule "applyEq" (formula "34") (term "0,2,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "47") (term "1,7,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "31") (term "7,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "54") (term "0,2,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "46") (term "1,6,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "31") (term "5,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "45") (term "5,0") (ifseqformula "33"))
                                                      (rule "newSym_eq" (formula "42") (inst "newSymDef=mul(bucket_0, Z(0(#)))") (inst "l=l_1"))
                                                      (rule "times_zero_1" (formula "42") (term "1,1"))
                                                      (rule "add_zero_right" (formula "42") (term "1"))
                                                      (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "42"))
                                                      (rule "eqSymm" (formula "43"))
                                                      (rule "applyEqRigid" (formula "48") (term "1,6,0") (ifseqformula "43"))
                                                      (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "43"))
                                                      (rule "inEqSimp_commuteGeq" (formula "1"))
                                                      (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                                                      (rule "inEqSimp_commuteLeq" (formula "41"))
                                                      (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "43"))
                                                      (rule "elimGcdGeq_antec" (formula "41") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=l_1"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0"))
                                                      (rule "leq_literals" (formula "41") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0"))
                                                      (rule "leq_literals" (formula "41") (term "0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "elimGcdGeq_antec" (formula "40") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                                      (rule "add_zero_right" (formula "40") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                                                      (rule "leq_literals" (formula "40") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "times_zero_1" (formula "40") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                                      (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                      (rule "add_literals" (formula "40") (term "0,0"))
                                                      (rule "leq_literals" (formula "40") (term "0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=l_1"))
                                                      (rule "leq_literals" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "neg_literal" (formula "1") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=arr_1"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "26"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                                      (rule "polySimp_homoEq" (formula "56"))
                                                      (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "56") (term "0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "56"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "56") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "56") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "56") (term "1,1"))
                                                      (rule "polySimp_mulAssoc" (formula "56") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "56") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "56") (term "0,1"))
                                                      (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                      (rule "disjointAllFields" (formula "1") (term "0,0,0") (ifseqformula "23"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "51"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                                                      (rule "replace_known_left" (formula "1") (term "1,0,1,0,0") (ifseqformula "17"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "35"))
                                                      (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "51"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "56") (term "0,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "polySimp_homoEq" (formula "55"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "55") (term "0"))
                                                      (rule "add_literals" (formula "55") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "55") (term "1,0"))
                                                      (rule "add_zero_right" (formula "55") (term "0"))
                                                      (rule "polySimp_pullOutFactor2" (formula "55") (term "0"))
                                                      (rule "add_literals" (formula "55") (term "1,0"))
                                                      (rule "times_zero_1" (formula "55") (term "0"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "closeTrue" (formula "55"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "andRight" (formula "55"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "55"))
                                                      (branch
                                                         (rule "orRight" (formula "55"))
                                                         (rule "translateJavaSubInt" (formula "56") (term "1"))
                                                         (rule "translateJavaMod" (formula "55") (term "0"))
                                                         (rule "eqSymm" (formula "56"))
                                                         (rule "polySimp_homoEq" (formula "47"))
                                                         (rule "polySimp_elimSub" (formula "56") (term "0"))
                                                         (rule "mul_literals" (formula "56") (term "1,0"))
                                                         (rule "polySimp_homoEq" (formula "56"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "56") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "56") (term "0,0"))
                                                         (rule "add_literals" (formula "56") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "56") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "56") (term "0"))
                                                         (rule "add_literals" (formula "56") (term "1,0"))
                                                         (rule "times_zero_1" (formula "56") (term "0"))
                                                          (builtin "One Step Simplification" (formula "56"))
                                                         (rule "closeTrue" (formula "56"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "translateJavaSubInt" (formula "55") (term "7,0"))
                                                         (rule "translateJavaAddInt" (formula "55") (term "6,0"))
                                                         (rule "polySimp_homoEq" (formula "47"))
                                                         (rule "polySimp_elimSub" (formula "55") (term "7,0"))
                                                         (rule "mul_literals" (formula "55") (term "1,7,0"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "55") (term "6,0"))
                                                         (rule "add_literals" (formula "55") (term "0,6,0"))
                                                         (rule "add_zero_left" (formula "55") (term "6,0"))
                                                         (rule "polySimp_addComm0" (formula "55") (term "7,0"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                         (rule "inEqSimp_ltRight" (formula "48"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "11"))
                                                         (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "12"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                         (rule "jmod_axiom" (formula "42") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,0"))
                                                         (rule "jmod_axiom" (formula "33") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "48"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "42"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "33"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                         (rule "mul_literals" (formula "11") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                         (rule "inEqSimp_contradEq3" (formula "48") (ifseqformula "1"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "48") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                                         (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "48") (term "0,0"))
                                                         (rule "qeq_literals" (formula "48") (term "0"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "false_right" (formula "48"))
                                                         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0"))
                                                         (rule "qeq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "newSym_eq" (formula "32") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))"))
                                                         (rule "times_zero_1" (formula "32") (term "1,1"))
                                                         (rule "add_zero_right" (formula "32") (term "1"))
                                                         (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                                         (rule "eqSymm" (formula "33"))
                                                         (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "46") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "46") (term "7,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "31") (term "7,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "41") (term "0") (ifseqformula "33"))
                                                         (rule "inEqSimp_commuteGeq" (formula "41"))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "33"))
                                                         (rule "inEqSimp_commuteLeq" (formula "1"))
                                                         (rule "applyEq" (formula "54") (term "6,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "47") (term "1,7,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "54") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "46") (term "1,6,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "45") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "44") (term "1,7,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "31") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "54") (term "1,7,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "34") (term "0,2,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "47") (term "5,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "35") (term "1,7,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "35") (term "5,0") (ifseqformula "33"))
                                                         (rule "newSym_eq" (formula "42") (inst "l=l_1") (inst "newSymDef=mul(bucket_0, Z(0(#)))"))
                                                         (rule "times_zero_1" (formula "42") (term "1,1"))
                                                         (rule "add_zero_right" (formula "42") (term "1"))
                                                         (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "42"))
                                                         (rule "eqSymm" (formula "43"))
                                                         (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                                                         (rule "inEqSimp_commuteLeq" (formula "41"))
                                                         (rule "applyEq" (formula "48") (term "1,6,0") (ifseqformula "43"))
                                                         (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "43"))
                                                         (rule "inEqSimp_commuteGeq" (formula "1"))
                                                         (rule "applyEqRigid" (formula "42") (term "0,0") (ifseqformula "43"))
                                                         (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "43"))
                                                         (rule "elimGcdGeq_antec" (formula "40") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "40") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                                                         (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                                                         (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                                         (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                         (rule "add_literals" (formula "40") (term "0,0"))
                                                         (rule "leq_literals" (formula "40") (term "0"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                         (rule "neg_literal" (formula "1") (term "0,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                         (rule "leq_literals" (formula "1") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "elimGcdGeq_antec" (formula "41") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0"))
                                                         (rule "leq_literals" (formula "41") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "41") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                         (rule "add_literals" (formula "41") (term "0,0"))
                                                         (rule "leq_literals" (formula "41") (term "0"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "inEqSimp_antiSymm" (formula "41") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "29") (term "0,2,0") (ifseqformula "41"))
                                                         (rule "applyEq" (formula "49") (term "0,5,0") (ifseqformula "41"))
                                                         (rule "applyEqRigid" (formula "32") (term "0,0,0") (ifseqformula "41"))
                                                         (rule "applyEq" (formula "49") (term "0,1,7,0") (ifseqformula "41"))
                                                         (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "41"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "0"))
                                                         (rule "qeq_literals" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "applyEq" (formula "35") (term "0,2,0") (ifseqformula "40"))
                                                         (rule "applyEqRigid" (formula "34") (term "0,5,0") (ifseqformula "40"))
                                                         (rule "applyEqRigid" (formula "30") (term "0,7,0") (ifseqformula "40"))
                                                         (rule "applyEq" (formula "33") (term "0,0,2,0") (ifseqformula "40"))
                                                         (rule "applyEq" (formula "55") (term "0,1,7,0") (ifseqformula "40"))
                                                         (rule "applyEq" (formula "45") (term "0,5,0") (ifseqformula "40"))
                                                         (rule "applyEq" (formula "29") (term "0,5,0") (ifseqformula "40"))
                                                         (rule "applyEq" (formula "47") (term "0,5,0") (ifseqformula "40"))
                                                         (rule "applyEq" (formula "34") (term "0,1,7,0") (ifseqformula "40"))
                                                         (rule "applyEqRigid" (formula "47") (term "0,7,0") (ifseqformula "40"))
                                                         (rule "applyEq" (formula "47") (term "0,1,6,0") (ifseqformula "40"))
                                                         (rule "applyEq" (formula "55") (term "0,5,0") (ifseqformula "40"))
                                                         (rule "applyEq" (formula "55") (term "0,6,0") (ifseqformula "40"))
                                                         (rule "applyEq" (formula "45") (term "0,1,7,0") (ifseqformula "40"))
                                                         (rule "applyEqRigid" (formula "30") (term "0,5,0") (ifseqformula "40"))
                                                         (rule "applyEq" (formula "46") (term "0,5,0") (ifseqformula "40"))
                                                         (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "40"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41"))
                                                         (rule "polySimp_pullOutFactor1" (formula "41") (term "0"))
                                                         (rule "add_literals" (formula "41") (term "1,0"))
                                                         (rule "times_zero_1" (formula "41") (term "0"))
                                                         (rule "leq_literals" (formula "41"))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "41"))
                                                         (rule "eqSymm" (formula "31"))
                                                         (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "39"))
                                                         (rule "nnf_imp2or" (formula "17") (term "0"))
                                                         (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                                         (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "11"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "translateJavaMulInt" (formula "11") (term "1,1,0,0,0,0,1,0,0"))
                                                         (rule "translateJavaMulInt" (formula "11") (term "1,1,0,0,0,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "1,1,0,0,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "1,1,0,0,0,0,0,1,0,0"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "16"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "notLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "notLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "notLeft" (formula "12"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "19"))
                                                         (rule "notLeft" (formula "12"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "notLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "notLeft" (formula "12"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "notLeft" (formula "12"))
                                                         (rule "notLeft" (formula "11"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "disjointDefinition" (formula "47"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "notLeft" (formula "47"))
                                                         (rule "disjointDefinition" (formula "46"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "notLeft" (formula "46"))
                                                         (rule "disjointDefinition" (formula "45"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "notLeft" (formula "45"))
                                                         (rule "eqSymm" (formula "80"))
                                                         (rule "disjointDefinition" (formula "44"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "notLeft" (formula "44"))
                                                         (rule "eqSymm" (formula "79"))
                                                         (rule "disjointDefinition" (formula "43"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "notLeft" (formula "43"))
                                                         (rule "eqSymm" (formula "78"))
                                                         (rule "disjointDefinition" (formula "42"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "notLeft" (formula "42"))
                                                         (rule "eqSymm" (formula "77"))
                                                         (rule "disjointDefinition" (formula "41"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "notLeft" (formula "41"))
                                                         (rule "eqSymm" (formula "76"))
                                                         (rule "disjointDefinition" (formula "40"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "notLeft" (formula "40"))
                                                         (rule "eqSymm" (formula "75"))
                                                         (rule "disjointDefinition" (formula "39"))
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "notLeft" (formula "39"))
                                                         (rule "eqSymm" (formula "74"))
                                                         (rule "disjointDefinition" (formula "38"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "notLeft" (formula "38"))
                                                         (rule "eqSymm" (formula "73"))
                                                         (rule "disjointDefinition" (formula "37"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "notLeft" (formula "37"))
                                                         (rule "eqSymm" (formula "72"))
                                                         (rule "disjointDefinition" (formula "36"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "notLeft" (formula "36"))
                                                         (rule "eqSymm" (formula "71"))
                                                         (rule "disjointDefinition" (formula "35"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "notLeft" (formula "35"))
                                                         (rule "eqSymm" (formula "70"))
                                                         (rule "disjointDefinition" (formula "34"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "notLeft" (formula "34"))
                                                         (rule "eqSymm" (formula "69"))
                                                         (rule "disjointDefinition" (formula "33"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "notLeft" (formula "33"))
                                                         (rule "eqSymm" (formula "68"))
                                                         (rule "disjointDefinition" (formula "32"))
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "notLeft" (formula "32"))
                                                         (rule "disjointDefinition" (formula "31"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "notLeft" (formula "31"))
                                                         (rule "eqSymm" (formula "66"))
                                                         (rule "disjointDefinition" (formula "30"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "notLeft" (formula "30"))
                                                         (rule "eqSymm" (formula "65"))
                                                         (rule "disjointDefinition" (formula "29"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "notLeft" (formula "29"))
                                                         (rule "disjointDefinition" (formula "28"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "notLeft" (formula "28"))
                                                         (rule "disjointDefinition" (formula "27"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "notLeft" (formula "27"))
                                                         (rule "disjointDefinition" (formula "26"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "notLeft" (formula "26"))
                                                         (rule "disjointDefinition" (formula "25"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "notLeft" (formula "25"))
                                                         (rule "disjointDefinition" (formula "24"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "notLeft" (formula "24"))
                                                         (rule "disjointDefinition" (formula "23"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "notLeft" (formula "23"))
                                                         (rule "disjointDefinition" (formula "22"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "notLeft" (formula "22"))
                                                         (rule "disjointDefinition" (formula "20"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "notLeft" (formula "20"))
                                                         (rule "disjointDefinition" (formula "20"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "notLeft" (formula "20"))
                                                         (rule "applyEq" (formula "50") (term "0,1,0,2,0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "97") (term "0,1,0,0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "51") (term "0,1,0,0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "52") (term "0,1,0,0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "53") (term "0,1,0,0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "54") (term "0,1,0,0") (ifseqformula "19"))
                                                         (rule "distributeIntersection" (formula "20") (term "0"))
                                                         (rule "distributeIntersection" (formula "29") (term "0"))
                                                         (rule "distributeIntersection" (formula "30") (term "0"))
                                                         (rule "unionEqualsEmpty" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "distributeIntersection" (formula "30") (term "0,0"))
                                                         (rule "distributeIntersection" (formula "30") (term "1,0"))
                                                         (rule "unionEqualsEmpty" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "distributeIntersection" (formula "20") (term "0"))
                                                         (rule "distributeIntersection" (formula "21") (term "0"))
                                                         (rule "distributeIntersection" (formula "30") (term "1,0,0"))
                                                         (rule "distributeIntersection" (formula "30") (term "0,0,0"))
                                                         (rule "distributeIntersection" (formula "30") (term "1,1,0"))
                                                         (rule "distributeIntersection" (formula "30") (term "0,1,0"))
                                                         (rule "distributeIntersection" (formula "32") (term "0"))
                                                         (rule "distributeIntersection" (formula "31") (term "0"))
                                                         (rule "distributeIntersection" (formula "20") (term "1,0"))
                                                         (rule "distributeIntersection" (formula "20") (term "0,0"))
                                                         (rule "distributeIntersection" (formula "21") (term "0,0"))
                                                         (rule "distributeIntersection" (formula "21") (term "1,0"))
                                                         (rule "unionEqualsEmpty" (formula "30"))
                                                         (rule "andLeft" (formula "30"))
                                                         (rule "distributeIntersection" (formula "33") (term "1,0"))
                                                         (rule "distributeIntersection" (formula "33") (term "0,0"))
                                                         (rule "unionEqualsEmpty" (formula "32"))
                                                         (rule "andLeft" (formula "32"))
                                                         (rule "unionEqualsEmpty" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "unionEqualsEmpty" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "unionEqualsEmpty" (formula "32"))
                                                         (rule "andLeft" (formula "32"))
                                                         (rule "unionEqualsEmpty" (formula "34"))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "unionEqualsEmpty" (formula "38"))
                                                         (rule "andLeft" (formula "38"))
                                                         (rule "distributeIntersection" (formula "37") (term "0"))
                                                         (rule "distributeIntersection" (formula "36") (term "0"))
                                                         (rule "unionEqualsEmpty" (formula "21"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "notLeft" (formula "22"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "eqSymm" (formula "64"))
                                                         (rule "eqSymm" (formula "63"))
                                                         (rule "unionEqualsEmpty" (formula "20"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "notLeft" (formula "20"))
                                                         (rule "eqSymm" (formula "63"))
                                                         (rule "eqSymm" (formula "62"))
                                                         (rule "unionEqualsEmpty" (formula "21"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "eqSymm" (formula "62"))
                                                         (rule "eqSymm" (formula "61"))
                                                         (rule "unionEqualsEmpty" (formula "20"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "notLeft" (formula "20"))
                                                         (rule "eqSymm" (formula "61"))
                                                         (rule "eqSymm" (formula "60"))
                                                         (rule "unionEqualsEmpty" (formula "29"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "andLeft" (formula "29"))
                                                         (rule "notLeft" (formula "30"))
                                                         (rule "notLeft" (formula "29"))
                                                         (rule "eqSymm" (formula "60"))
                                                         (rule "eqSymm" (formula "59"))
                                                         (rule "unionEqualsEmpty" (formula "28"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "andLeft" (formula "28"))
                                                         (rule "notLeft" (formula "28"))
                                                         (rule "notLeft" (formula "28"))
                                                         (rule "eqSymm" (formula "59"))
                                                         (rule "eqSymm" (formula "58"))
                                                         (rule "unionEqualsEmpty" (formula "28"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "andLeft" (formula "28"))
                                                         (rule "notLeft" (formula "29"))
                                                         (rule "notLeft" (formula "28"))
                                                         (rule "eqSymm" (formula "58"))
                                                         (rule "eqSymm" (formula "57"))
                                                         (rule "unionEqualsEmpty" (formula "28"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "andLeft" (formula "28"))
                                                         (rule "notLeft" (formula "29"))
                                                         (rule "notLeft" (formula "28"))
                                                         (rule "eqSymm" (formula "57"))
                                                         (rule "eqSymm" (formula "56"))
                                                         (rule "unionEqualsEmpty" (formula "31"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "notLeft" (formula "31"))
                                                         (rule "notLeft" (formula "31"))
                                                         (rule "eqSymm" (formula "56"))
                                                         (rule "eqSymm" (formula "55"))
                                                         (rule "sortsDisjointModuloNull" (formula "56"))
                                                         (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "107"))
                                                          (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "113")))
                                                         (rule "false_right" (formula "56"))
                                                         (rule "sortsDisjointModuloNull" (formula "55"))
                                                         (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "107"))
                                                          (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "112")))
                                                         (rule "false_right" (formula "55"))
                                                         (rule "unionEqualsEmpty" (formula "30"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "andLeft" (formula "30"))
                                                         (rule "notLeft" (formula "30"))
                                                         (rule "notLeft" (formula "30"))
                                                         (rule "eqSymm" (formula "55"))
                                                         (rule "eqSymm" (formula "54"))
                                                         (rule "sortsDisjointModuloNull" (formula "55"))
                                                         (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "104"))
                                                          (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "112")))
                                                         (rule "false_right" (formula "55"))
                                                         (rule "sortsDisjointModuloNull" (formula "54"))
                                                         (rule "replace_known_right" (formula "54") (term "1") (ifseqformula "111"))
                                                          (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "104")))
                                                         (rule "false_right" (formula "54"))
                                                         (rule "unionEqualsEmpty" (formula "29"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "andLeft" (formula "29"))
                                                         (rule "notLeft" (formula "29"))
                                                         (rule "notLeft" (formula "29"))
                                                         (rule "eqSymm" (formula "54"))
                                                         (rule "eqSymm" (formula "53"))
                                                         (rule "sortsDisjointModuloNull" (formula "54"))
                                                         (rule "replace_known_right" (formula "54") (term "1") (ifseqformula "111"))
                                                          (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "101")))
                                                         (rule "false_right" (formula "54"))
                                                         (rule "sortsDisjointModuloNull" (formula "53"))
                                                         (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "110"))
                                                          (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "101")))
                                                         (rule "false_right" (formula "53"))
                                                         (rule "unionEqualsEmpty" (formula "28"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "andLeft" (formula "28"))
                                                         (rule "notLeft" (formula "28"))
                                                         (rule "notLeft" (formula "28"))
                                                         (rule "eqSymm" (formula "53"))
                                                         (rule "eqSymm" (formula "52"))
                                                         (rule "sortsDisjointModuloNull" (formula "53"))
                                                         (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "98"))
                                                          (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "110")))
                                                         (rule "false_right" (formula "53"))
                                                         (rule "sortsDisjointModuloNull" (formula "52"))
                                                         (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "98"))
                                                          (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "109")))
                                                         (rule "false_right" (formula "52"))
                                                         (rule "commuteUnion" (formula "19") (term "0,0,1"))
                                                         (rule "commuteUnion" (formula "19") (term "1,1,1"))
                                                         (rule "commuteUnion" (formula "47") (term "1,1,0,1,0,2,0"))
                                                         (rule "commuteUnion" (formula "47") (term "0,0,0,1,0,2,0"))
                                                         (rule "commuteUnion" (formula "110") (term "0,0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "110") (term "1,1,0,1,0,0"))
                                                         (rule "commuteUnion_2" (formula "29") (term "0,1,0,1,0"))
                                                         (rule "commuteUnion" (formula "29") (term "1,1,1,0,1,0"))
                                                         (rule "commuteUnion" (formula "48") (term "0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "48") (term "1,1,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "49") (term "0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "49") (term "1,1,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "50") (term "0,0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "50") (term "1,1,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "51") (term "0,0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "51") (term "1,1,0,1,0,0"))
                                                         (rule "commuteUnion_2" (formula "19") (term "0,1"))
                                                         (rule "commuteUnion" (formula "47") (term "0,0,1,0,2,0"))
                                                         (rule "commuteUnion_2" (formula "110") (term "0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "29") (term "0,0,1,0,1,0"))
                                                         (rule "commuteUnion" (formula "48") (term "1,0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "49") (term "1,0,0,1,0,0"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "40"))
                                                          (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "96")) (ifInst ""  (formula "97")) (ifInst ""  (formula "98")) (ifInst ""  (formula "99")) (ifInst ""  (formula "100")) (ifInst ""  (formula "101")) (ifInst ""  (formula "102")) (ifInst ""  (formula "103")) (ifInst ""  (formula "11")) (ifInst ""  (formula "12")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")))
                                                         (rule "translateJavaMulInt" (formula "40") (term "1,1,0,0"))
                                                         (rule "translateJavaMulInt" (formula "40") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                                         (rule "andLeft" (formula "40"))
                                                         (rule "andLeft" (formula "40"))
                                                         (rule "andLeft" (formula "42"))
                                                         (rule "andLeft" (formula "40"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "disjointDefinition" (formula "68"))
                                                          (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "123")))
                                                         (rule "true_left" (formula "68"))
                                                         (rule "disjointDefinition" (formula "67"))
                                                          (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "121")))
                                                         (rule "true_left" (formula "67"))
                                                         (rule "disjointDefinition" (formula "66"))
                                                          (builtin "One Step Simplification" (formula "66"))
                                                         (rule "notLeft" (formula "66"))
                                                         (rule "eqSymm" (formula "77"))
                                                         (rule "disjointDefinition" (formula "65"))
                                                          (builtin "One Step Simplification" (formula "65"))
                                                         (rule "notLeft" (formula "65"))
                                                         (rule "eqSymm" (formula "76"))
                                                         (rule "disjointDefinition" (formula "64"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "notLeft" (formula "64"))
                                                         (rule "eqSymm" (formula "75"))
                                                         (rule "disjointDefinition" (formula "63"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "notLeft" (formula "63"))
                                                         (rule "eqSymm" (formula "74"))
                                                         (rule "disjointDefinition" (formula "62"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "notLeft" (formula "62"))
                                                         (rule "eqSymm" (formula "73"))
                                                         (rule "disjointDefinition" (formula "61"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "notLeft" (formula "61"))
                                                         (rule "eqSymm" (formula "72"))
                                                         (rule "disjointDefinition" (formula "60"))
                                                          (builtin "One Step Simplification" (formula "60"))
                                                         (rule "notLeft" (formula "60"))
                                                         (rule "eqSymm" (formula "71"))
                                                         (rule "disjointDefinition" (formula "59"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "notLeft" (formula "59"))
                                                         (rule "eqSymm" (formula "70"))
                                                         (rule "disjointDefinition" (formula "58"))
                                                          (builtin "One Step Simplification" (formula "58"))
                                                         (rule "notLeft" (formula "58"))
                                                         (rule "eqSymm" (formula "69"))
                                                         (rule "disjointDefinition" (formula "57"))
                                                          (builtin "One Step Simplification" (formula "57"))
                                                         (rule "notLeft" (formula "57"))
                                                         (rule "eqSymm" (formula "68"))
                                                         (rule "disjointDefinition" (formula "56"))
                                                          (builtin "One Step Simplification" (formula "56"))
                                                         (rule "notLeft" (formula "56"))
                                                         (rule "eqSymm" (formula "67"))
                                                         (rule "disjointDefinition" (formula "55"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "notLeft" (formula "55"))
                                                         (rule "eqSymm" (formula "66"))
                                                         (rule "disjointDefinition" (formula "54"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "notLeft" (formula "54"))
                                                         (rule "eqSymm" (formula "65"))
                                                         (rule "disjointDefinition" (formula "53"))
                                                          (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "93")))
                                                         (rule "true_left" (formula "53"))
                                                         (rule "disjointDefinition" (formula "52"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "notLeft" (formula "52"))
                                                         (rule "eqSymm" (formula "63"))
                                                         (rule "disjointDefinition" (formula "51"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "notLeft" (formula "51"))
                                                         (rule "eqSymm" (formula "62"))
                                                         (rule "disjointDefinition" (formula "50"))
                                                          (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "87")))
                                                         (rule "true_left" (formula "50"))
                                                         (rule "disjointDefinition" (formula "49"))
                                                          (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "85")))
                                                         (rule "true_left" (formula "49"))
                                                         (rule "disjointDefinition" (formula "48"))
                                                          (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "83")))
                                                         (rule "true_left" (formula "48"))
                                                         (rule "disjointDefinition" (formula "47"))
                                                          (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "81")))
                                                         (rule "true_left" (formula "47"))
                                                         (rule "disjointDefinition" (formula "46"))
                                                          (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "79")))
                                                         (rule "true_left" (formula "46"))
                                                         (rule "disjointDefinition" (formula "45"))
                                                          (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "77")))
                                                         (rule "true_left" (formula "45"))
                                                         (rule "disjointDefinition" (formula "44"))
                                                          (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "75")))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "disjointDefinition" (formula "43"))
                                                          (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "73")))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "disjointDefinition" (formula "41"))
                                                          (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "71")))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "disjointDefinition" (formula "41"))
                                                          (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "69")))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "applyEq" (formula "40") (term "0") (ifseqformula "19"))
                                                         (rule "eqSymm" (formula "40"))
                                                         (rule "commuteUnion" (formula "50") (term "0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "51") (term "0,0,1,0,0"))
                                                         (rule "commuteUnion" (formula "19") (term "0,0,1"))
                                                         (rule "commuteUnion" (formula "110") (term "0,0,0,1,0,0"))
                                                         (rule "commuteUnion_2" (formula "29") (term "0,1,0,1,0"))
                                                         (rule "commuteUnion" (formula "40") (term "0,0"))
                                                         (rule "commuteUnion" (formula "40") (term "0,0,1"))
                                                         (rule "commuteUnion" (formula "40") (term "1,1,0"))
                                                         (rule "commuteUnion_2" (formula "19") (term "1"))
                                                         (rule "commuteUnion_2" (formula "110") (term "0,1,0,0"))
                                                         (rule "commuteUnion_2" (formula "29") (term "1,0,1,0"))
                                                         (rule "commuteUnion" (formula "40") (term "1,0,0"))
                                                         (rule "eqSymm" (formula "40"))
                                                         (rule "commuteUnion_2" (formula "40") (term "0"))
                                                         (rule "eqSymm" (formula "40"))
                                                         (rule "applyEq" (formula "50") (term "0,1,0,0") (ifseqformula "40"))
                                                         (rule "applyEq" (formula "51") (term "0,1,0,0") (ifseqformula "40"))
                                                         (rule "applyEq" (formula "48") (term "0,1,0,0") (ifseqformula "40"))
                                                         (rule "applyEq" (formula "47") (term "0,1,0,2,0") (ifseqformula "40"))
                                                         (rule "applyEq" (formula "49") (term "0,1,0,0") (ifseqformula "40"))
                                                         (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "33") (term "0"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "translateJavaAddInt" (formula "33") (term "0,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "33") (term "3,0,1,0"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "polySimp_addComm0" (formula "35") (term "3,0"))
                                                         (rule "polySimp_addComm0" (formula "34") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "33"))
                                                         (rule "inEqSimp_commuteLeq" (formula "34"))
                                                         (rule "applyEq" (formula "34") (term "0") (ifseqformula "23"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34"))
                                                         (rule "mul_literals" (formula "34") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                         (rule "add_literals" (formula "34") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                                         (rule "mul_literals" (formula "34") (term "1"))
                                                         (rule "elimGcdLeq_antec" (formula "34") (inst "elimGcdRightDiv=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                         (rule "leq_literals" (formula "34") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "neg_literal" (formula "34") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "34") (term "0,0,0,0"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0"))
                                                         (rule "qeq_literals" (formula "34") (term "0"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "elimGcdGeq_antec" (formula "33") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                                                         (rule "leq_literals" (formula "33") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "33") (term "0,0,0,0"))
                                                         (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                                                         (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "33") (term "0,0"))
                                                         (rule "leq_literals" (formula "33") (term "0"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "33"))
                                                         (rule "leq_literals" (formula "46") (term "0"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "true_left" (formula "46"))
                                                         (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "29"))
                                                          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "110")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,1,0,0") (ifseqformula "21"))
                                                         (rule "replace_known_left" (formula "36") (term "1,0,1,0,0") (ifseqformula "22"))
                                                          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "109")))
                                                         (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "37"))
                                                         (rule "ifEqualsInteger" (formula "36"))
                                                         (rule "elementOfUnion" (formula "36") (term "0,0,1"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "36") (term "1,0,0,1"))
                                                         (rule "eqSymm" (formula "36") (term "0,0,1,0,0,1"))
                                                         (rule "replace_known_right" (formula "36") (term "0,0,1,0,0,1") (ifseqformula "108"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "elementOfUnion" (formula "36") (term "0,0"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "36") (term "1,0,0"))
                                                         (rule "eqSymm" (formula "36") (term "0,0,1,0,0"))
                                                         (rule "replace_known_right" (formula "36") (term "0,0,1,0,0") (ifseqformula "108"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "elementOfUnion" (formula "36") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "elementOfUnion" (formula "36") (term "0,0,1"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "43") (term "0") (inst "b=b_2"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "translateJavaSubInt" (formula "43") (term "0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "43") (term "0,2,0,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "43") (term "0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "43") (term "0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "43") (term "0,2,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "43") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "43") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "43") (term "0,0,0,1,1,0"))
                                                         (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "38") (term "0") (inst "b=b_2"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "translateJavaAddInt" (formula "38") (term "0,2,5,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "38") (term "0,2,5,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "38") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                                         (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "42") (term "0") (inst "b=b_2"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "translateJavaMod" (formula "42") (term "0,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "42") (term "3,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "42") (term "2,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "42") (term "0,2,1,3,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "0,2,1,3,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0"))
                                                         (rule "jmod_axiom" (formula "42") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,0"))
                                                         (rule "polySimp_homoEq" (formula "42") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "42") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0"))
                                                         (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "39") (term "0") (inst "b=b_2"))
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "translateJavaAddInt" (formula "39") (term "0,2,5,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "0,2,5,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "39") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                                         (rule "commute_or" (formula "24") (term "0,0"))
                                                         (rule "cut_direct" (formula "31") (term "0,0"))
                                                         (branch "CUT: result_22.<created> = TRUE TRUE"
                                                             (builtin "One Step Simplification" (formula "32"))
                                                            (rule "true_left" (formula "32"))
                                                            (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                                             (builtin "One Step Simplification" (formula "23"))
                                                            (rule "true_left" (formula "23"))
                                                            (rule "arrayLengthIsAShort" (formula "8") (term "0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                                            (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                                            (rule "qeq_literals" (formula "23"))
                                                            (rule "true_left" (formula "23"))
                                                            (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                                                            (rule "jdiv_axiom" (formula "48") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "0,0,2,1"))
                                                            (rule "eqSymm" (formula "48"))
                                                            (rule "applyEq" (formula "48") (term "1") (ifseqformula "49"))
                                                            (rule "inEqSimp_subsumption6" (formula "48") (term "0,0") (ifseqformula "33"))
                                                            (rule "mul_literals" (formula "48") (term "1,1,0,0,0"))
                                                            (rule "greater_literals" (formula "48") (term "0,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "leq_literals" (formula "48") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "polyDiv_pullOut" (formula "48") (term "0") (inst "polyDivCoeff=l_1"))
                                                            (rule "equal_literals" (formula "48") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                                                            (rule "polySimp_homoEq" (formula "48"))
                                                            (rule "polySimp_pullOutFactor0" (formula "48") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "48") (term "1,0,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "48") (term "0,0,0,1,0"))
                                                            (rule "div_literals" (formula "48") (term "0,0,1,0"))
                                                            (rule "add_zero_left" (formula "48") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "48") (term "0"))
                                                            (rule "add_literals" (formula "48") (term "1,0"))
                                                            (rule "times_zero_1" (formula "48") (term "0"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "true_left" (formula "48"))
                                                            (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                                            (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                                            (rule "qeq_literals" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                                            (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                                            (rule "qeq_literals" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "nnf_imp2or" (formula "43") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                                                            (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "arrayLengthNotNegative" (formula "15") (term "0"))
                                                            (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                                            (rule "qeq_literals" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "arrayLengthNotNegative" (formula "14") (term "0"))
                                                            (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                            (rule "qeq_literals" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "arrayLengthIsAShort" (formula "14") (term "0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "nnf_imp2or" (formula "38") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "13") (term "0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "arrayLengthNotNegative" (formula "13") (term "0"))
                                                            (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "arrayLengthIsAShort" (formula "12") (term "0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "arrayLengthIsAShort" (formula "11") (term "0"))
                                                             (builtin "One Step Simplification" (formula "11"))
                                                            (rule "true_left" (formula "11"))
                                                            (rule "arrayLengthNotNegative" (formula "12") (term "0"))
                                                            (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                                                            (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                            (rule "qeq_literals" (formula "11"))
                                                            (rule "true_left" (formula "11"))
                                                            (rule "nnf_imp2or" (formula "42") (term "0"))
                                                            (rule "nnf_imp2or" (formula "39") (term "0"))
                                                            (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "113") (term "0") (inst "b=b_2"))
                                                             (builtin "One Step Simplification" (formula "113"))
                                                            (rule "translateJavaAddInt" (formula "113") (term "3,0,1,0"))
                                                            (rule "translateJavaMod" (formula "113") (term "0,1,0,0"))
                                                            (rule "translateJavaAddInt" (formula "113") (term "2,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "113") (term "0,2,1,3,0,1,0"))
                                                            (rule "allRight" (formula "113") (inst "sk=b_2_0"))
                                                            (rule "impRight" (formula "113"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "polySimp_addComm0" (formula "116") (term "0,2,1,3,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "2"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "1"))
                                                            (rule "jmod_axiom" (formula "3") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                            (rule "polySimp_homoEq" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "mul_literals" (formula "3") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch "CUT: result_22.<created> = TRUE FALSE"
                                                             (builtin "One Step Simplification" (formula "31"))
                                                            (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                                             (builtin "One Step Simplification" (formula "23"))
                                                            (rule "true_left" (formula "23"))
                                                            (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                                            (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                                            (rule "qeq_literals" (formula "23"))
                                                            (rule "true_left" (formula "23"))
                                                            (rule "arrayLengthNotNegative" (formula "8") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "8") (term "0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "jdiv_axiom" (formula "48") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "0,0,2,1"))
                                                            (rule "eqSymm" (formula "48"))
                                                            (rule "applyEq" (formula "48") (term "1") (ifseqformula "49"))
                                                            (rule "inEqSimp_subsumption6" (formula "48") (term "0,0") (ifseqformula "33"))
                                                            (rule "mul_literals" (formula "48") (term "1,1,0,0,0"))
                                                            (rule "greater_literals" (formula "48") (term "0,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "leq_literals" (formula "48") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "polyDiv_pullOut" (formula "48") (term "0") (inst "polyDivCoeff=l_1"))
                                                            (rule "equal_literals" (formula "48") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                                                            (rule "polySimp_homoEq" (formula "48"))
                                                            (rule "polySimp_pullOutFactor0" (formula "48") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "48") (term "1,0,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "48") (term "0,0,0,1,0"))
                                                            (rule "div_literals" (formula "48") (term "0,0,1,0"))
                                                            (rule "add_zero_left" (formula "48") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "48") (term "0"))
                                                            (rule "add_literals" (formula "48") (term "1,0"))
                                                            (rule "times_zero_1" (formula "48") (term "0"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "true_left" (formula "48"))
                                                            (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                                            (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                                            (rule "qeq_literals" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                                            (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                                            (rule "qeq_literals" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "nnf_imp2or" (formula "43") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                                                            (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "arrayLengthNotNegative" (formula "15") (term "0"))
                                                            (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                                            (rule "qeq_literals" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "arrayLengthIsAShort" (formula "14") (term "0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "arrayLengthNotNegative" (formula "14") (term "0"))
                                                            (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                            (rule "qeq_literals" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "nnf_imp2or" (formula "38") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "13") (term "0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "arrayLengthNotNegative" (formula "13") (term "0"))
                                                            (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                                                            (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                            (rule "qeq_literals" (formula "11"))
                                                            (rule "true_left" (formula "11"))
                                                            (rule "arrayLengthNotNegative" (formula "12") (term "0"))
                                                            (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "arrayLengthIsAShort" (formula "11") (term "0"))
                                                             (builtin "One Step Simplification" (formula "11"))
                                                            (rule "true_left" (formula "11"))
                                                            (rule "arrayLengthIsAShort" (formula "12") (term "0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "nnf_imp2or" (formula "42") (term "0"))
                                                            (rule "nnf_imp2or" (formula "39") (term "0"))
                                                            (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "114") (term "0") (inst "b=b_2"))
                                                             (builtin "One Step Simplification" (formula "114"))
                                                            (rule "translateJavaAddInt" (formula "114") (term "2,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "114") (term "0,2,1,3,0,1,0"))
                                                            (rule "translateJavaMod" (formula "114") (term "0,1,0,0"))
                                                            (rule "translateJavaAddInt" (formula "114") (term "3,0,1,0"))
                                                            (rule "allRight" (formula "114") (inst "sk=b_2_0"))
                                                            (rule "impRight" (formula "114"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "polySimp_addComm0" (formula "117") (term "0,2,1,3,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "2"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "1"))
                                                            (rule "jmod_axiom" (formula "3") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                            (rule "polySimp_homoEq" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "mul_literals" (formula "3") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0"))
                                                            (rule "leq_literals" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "55"))
                                                      (branch "Case 1"
                                                         (rule "observerDependency" (formula "55") (term "0") (inst "termWithSmallHeap=de.wiesler.Sorter::notAllValuesInOneBucket(heapAfter_partition,
                                           result_21,
                                           int::final(result_22,
                                                      de.wiesler.PartitionResult::$num_buckets),
                                           add(mul(begin,
                                                   Z(neglit(1(#)))),
                                               end))") (userinteraction))
                                                         (branch "Case 1"
                                                            (rule "close" (formula "55") (ifseqformula "35"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "andRight" (formula "55"))
                                                            (branch
                                                               (rule "andRight" (formula "55"))
                                                               (branch
                                                                  (rule "andRight" (formula "55"))
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "55"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,0") (ifseqformula "25"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,0,0") (ifseqformula "15"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,1,0") (ifseqformula "25"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,0,1,0") (ifseqformula "15"))
                                                                     (rule "translateJavaSubInt" (formula "56") (term "3,0"))
                                                                     (rule "allRight" (formula "55") (inst "sk=_ov_0"))
                                                                     (rule "impRight" (formula "55"))
                                                                     (rule "orRight" (formula "56"))
                                                                     (rule "close" (formula "56") (ifseqformula "1"))
                                                                  )
                                                                  (branch
                                                                     (rule "andRight" (formula "55"))
                                                                     (branch
                                                                        (rule "andRight" (formula "55"))
                                                                        (branch
                                                                           (rule "close" (formula "55") (ifseqformula "29"))
                                                                        )
                                                                        (branch
                                                                           (rule "replaceKnownSelect_taclet0120_0" (formula "55") (term "1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0120_1" (formula "55") (term "1"))
                                                                           (rule "translateJavaSubInt" (formula "56") (term "3,0"))
                                                                           (rule "eqSymm" (formula "55"))
                                                                           (rule "close" (formula "55") (ifseqformula "33"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "translateJavaSubInt" (formula "56") (term "3,0"))
                                                                        (rule "notRight" (formula "55"))
                                                                        (rule "close" (formula "53") (ifseqformula "1"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "andRight" (formula "55"))
                                                                  (branch
                                                                     (rule "andRight" (formula "55"))
                                                                     (branch
                                                                         (builtin "One Step Simplification" (formula "55"))
                                                                        (rule "closeTrue" (formula "55"))
                                                                     )
                                                                     (branch
                                                                         (builtin "One Step Simplification" (formula "55"))
                                                                        (rule "closeTrue" (formula "55"))
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "translateJavaSubInt" (formula "56") (term "3,0"))
                                                                     (rule "translateJavaSubInt" (formula "55") (term "0"))
                                                                     (rule "polySimp_homoEq" (formula "47"))
                                                                     (rule "polySimp_elimSub" (formula "56") (term "3,0"))
                                                                     (rule "polySimp_elimSub" (formula "55") (term "0"))
                                                                     (rule "polySimp_homoEq" (formula "55"))
                                                                     (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "55") (term "1,0"))
                                                                     (rule "polySimp_addComm0" (formula "56") (term "3,0"))
                                                                     (rule "polySimp_addComm0" (formula "55") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                                     (rule "mul_literals" (formula "47") (term "0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "55") (term "1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "55") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "55") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor2" (formula "55") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "55") (term "1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "55") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "55") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "55") (term "0"))
                                                                     (rule "add_literals" (formula "55") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "55") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "55"))
                                                                     (rule "closeTrue" (formula "55"))
                                                                  )
                                                               )
                                                            )
                                                            (branch
                                                               (rule "translateJavaSubInt" (formula "56") (term "3,0"))
                                                               (rule "allRight" (formula "55") (inst "sk=_ov_0"))
                                                               (rule "allRight" (formula "55") (inst "sk=_fv_0"))
                                                               (rule "impRight" (formula "55"))
                                                               (rule "eqSymm" (formula "56"))
                                                               (rule "polySimp_homoEq" (formula "48"))
                                                               (rule "polySimp_elimSub" (formula "57") (term "3,0"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "57") (term "3,0"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                               (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                               (rule "inEqSimp_ltRight" (formula "49"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                               (rule "inEqSimp_gtToGeq" (formula "12"))
                                                               (rule "mul_literals" (formula "12") (term "1,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "13"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                               (rule "jmod_axiom" (formula "34") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                                               (rule "jmod_axiom" (formula "43") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "49"))
                                                               (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "49") (term "0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "34"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "43"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                               (rule "mul_literals" (formula "12") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                               (rule "inEqSimp_contradEq3" (formula "49") (ifseqformula "1"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "49") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "49") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0"))
                                                               (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "49") (term "0,0"))
                                                               (rule "qeq_literals" (formula "49") (term "0"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "false_right" (formula "49"))
                                                               (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "12"))
                                                               (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0"))
                                                               (rule "qeq_literals" (formula "9") (term "0"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "elementOfArrayRange" (formula "2") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "inEqSimp_commuteLeq" (formula "5"))
                                                               (rule "inEqSimp_commuteLeq" (formula "4"))
                                                               (rule "applyEq" (formula "57") (term "1,1") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "57") (term "2,1") (ifseqformula "3"))
                                                               (rule "narrowSelectArrayType" (formula "57") (term "1") (ifseqformula "41") (ifseqformula "54"))
                                                               (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "3"))
                                                               (rule "newSym_eq" (formula "36") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))"))
                                                               (rule "times_zero_1" (formula "36") (term "1,1"))
                                                               (rule "add_zero_right" (formula "36") (term "1"))
                                                               (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "36"))
                                                               (rule "eqSymm" (formula "37"))
                                                               (rule "applyEq" (formula "34") (term "5,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "45") (term "0") (ifseqformula "37"))
                                                               (rule "inEqSimp_commuteGeq" (formula "45"))
                                                               (rule "applyEq" (formula "39") (term "5,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "38") (term "0,2,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "39") (term "1,7,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "50") (term "5,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "5") (term "0") (ifseqformula "37"))
                                                               (rule "inEqSimp_commuteGeq" (formula "5"))
                                                               (rule "applyEq" (formula "48") (term "5,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "50") (term "7,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "50") (term "1,6,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "35") (term "5,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "1") (term "0") (ifseqformula "37"))
                                                               (rule "inEqSimp_commuteLeq" (formula "1"))
                                                               (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "49") (term "5,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "40") (term "2,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "33") (term "2,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "35") (term "7,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "51") (term "1,7,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "48") (term "1,7,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "51") (term "5,0") (ifseqformula "37"))
                                                               (rule "newSym_eq" (formula "46") (inst "l=l_1") (inst "newSymDef=mul(bucket_0, Z(0(#)))"))
                                                               (rule "times_zero_1" (formula "46") (term "1,1"))
                                                               (rule "add_zero_right" (formula "46") (term "1"))
                                                               (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "46"))
                                                               (rule "eqSymm" (formula "47"))
                                                               (rule "applyEq" (formula "45") (term "0") (ifseqformula "47"))
                                                               (rule "inEqSimp_commuteLeq" (formula "45"))
                                                               (rule "applyEq" (formula "52") (term "1,6,0") (ifseqformula "47"))
                                                               (rule "applyEq" (formula "1") (term "0") (ifseqformula "47"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1"))
                                                               (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "47"))
                                                               (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "47"))
                                                               (rule "elimGcdGeq_antec" (formula "44") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                               (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "44") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "44"))
                                                               (rule "add_zero_right" (formula "44") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0"))
                                                               (rule "add_literals" (formula "44") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
                                                               (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "44") (term "0,0"))
                                                               (rule "leq_literals" (formula "44") (term "0"))
                                                                (builtin "One Step Simplification" (formula "44"))
                                                               (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                               (rule "leq_literals" (formula "1") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "neg_literal" (formula "1") (term "0,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0"))
                                                               (rule "qeq_literals" (formula "1") (term "0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elimGcdGeq_antec" (formula "45") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                               (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "45") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "45"))
                                                               (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                                                               (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "45") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                                                               (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "45") (term "0,0"))
                                                               (rule "leq_literals" (formula "45") (term "0"))
                                                                (builtin "One Step Simplification" (formula "45"))
                                                               (rule "pullOutSelect" (formula "59") (term "1") (inst "selectSK=arr_1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "20"))
                                                               (rule "replace_known_left" (formula "1") (term "1,0,1,0,0") (ifseqformula "21"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                               (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "55"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_2"))
                                                               (rule "simplifySelectOfAnon" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "30"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "20"))
                                                               (rule "replace_known_left" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "21"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                               (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "44") (ifseqformula "57"))
                                                               (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "43") (ifseqformula "57"))
                                                               (rule "replaceKnownSelect_taclet110111110020200010120_2" (formula "1") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110111110020200010120_3" (formula "1") (term "2,0"))
                                                               (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                               (rule "disjointAllFields" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "55"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "60"))
                                                               (rule "closeTrue" (formula "60"))
                                                            )
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "andRight" (formula "55"))
                                                         (branch
                                                            (rule "andRight" (formula "55"))
                                                            (branch
                                                               (rule "andRight" (formula "55"))
                                                               (branch
                                                                  (rule "polySimp_homoEq" (formula "47"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                                  (rule "disjointDefinition" (formula "55"))
                                                                  (rule "inEqSimp_ltRight" (formula "48"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "11"))
                                                                  (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                  (rule "jmod_axiom" (formula "33") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                                                  (rule "jmod_axiom" (formula "42") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "42") (term "1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "48"))
                                                                  (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "33"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "42"))
                                                                  (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                                  (rule "inEqSimp_contradEq3" (formula "48") (ifseqformula "1"))
                                                                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "48") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                                                  (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "48") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "48") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "false_right" (formula "48"))
                                                                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "8") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "newSym_eq" (formula "32") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                                                  (rule "times_zero_1" (formula "32") (term "1,1"))
                                                                  (rule "add_zero_right" (formula "32") (term "1"))
                                                                  (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                                                  (rule "eqSymm" (formula "33"))
                                                                  (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "35") (term "1,7,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "31") (term "7,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "31") (term "5,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "45") (term "5,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "46") (term "5,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "33"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                  (rule "applyEq" (formula "46") (term "1,6,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "41") (term "0") (ifseqformula "33"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "41"))
                                                                  (rule "applyEq" (formula "47") (term "5,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "34") (term "0,2,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "35") (term "5,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "44") (term "1,7,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "46") (term "7,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "47") (term "1,7,0") (ifseqformula "33"))
                                                                  (rule "newSym_eq" (formula "42") (inst "newSymDef=mul(bucket_0, Z(0(#)))") (inst "l=l_1"))
                                                                  (rule "times_zero_1" (formula "42") (term "1,1"))
                                                                  (rule "add_zero_right" (formula "42") (term "1"))
                                                                  (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "42"))
                                                                  (rule "eqSymm" (formula "43"))
                                                                  (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "43"))
                                                                  (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "43"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "41"))
                                                                  (rule "applyEq" (formula "40") (term "0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "48") (term "1,6,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "43"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "1"))
                                                                  (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=l_1"))
                                                                  (rule "leq_literals" (formula "1") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "neg_literal" (formula "1") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "1") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "elimGcdGeq_antec" (formula "40") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                  (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                                                                  (rule "leq_literals" (formula "40") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "40") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                                                  (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "40") (term "0,0"))
                                                                  (rule "leq_literals" (formula "40") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "elimGcdGeq_antec" (formula "41") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=l_1"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0"))
                                                                  (rule "leq_literals" (formula "41") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                                  (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "41") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                                  (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "41") (term "0,0"))
                                                                  (rule "leq_literals" (formula "41") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "inEqSimp_antiSymm" (formula "41") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "36") (term "0,2,0") (ifseqformula "41"))
                                                                  (rule "applyEqRigid" (formula "48") (term "0,7,0") (ifseqformula "41"))
                                                                  (rule "applyEqRigid" (formula "30") (term "0,5,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "41"))
                                                                  (rule "applyEqRigid" (formula "42") (term "0") (ifseqformula "41"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "42"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "42") (term "0"))
                                                                  (rule "add_literals" (formula "42") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "42") (term "0"))
                                                                  (rule "leq_literals" (formula "42"))
                                                                  (rule "true_left" (formula "42"))
                                                                  (rule "applyEqRigid" (formula "48") (term "0,5,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "34") (term "0,0,2,0") (ifseqformula "41"))
                                                                  (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "41"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                                  (rule "add_literals" (formula "1") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "0"))
                                                                  (rule "qeq_literals" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "applyEqRigid" (formula "30") (term "0,5,0") (ifseqformula "40"))
                                                                  (rule "applyEq" (formula "46") (term "0,1,6,0") (ifseqformula "40"))
                                                                  (rule "applyEqRigid" (formula "47") (term "0,1,7,0") (ifseqformula "40"))
                                                                  (rule "applyEqRigid" (formula "28") (term "0,2,0") (ifseqformula "40"))
                                                                  (rule "applyEq" (formula "46") (term "0,5,0") (ifseqformula "40"))
                                                                  (rule "applyEqRigid" (formula "34") (term "0,5,0") (ifseqformula "40"))
                                                                  (rule "applyEqRigid" (formula "30") (term "0,7,0") (ifseqformula "40"))
                                                                  (rule "applyEq" (formula "44") (term "0,5,0") (ifseqformula "40"))
                                                                  (rule "applyEq" (formula "34") (term "0,1,7,0") (ifseqformula "40"))
                                                                  (rule "applyEq" (formula "45") (term "0,5,0") (ifseqformula "40"))
                                                                  (rule "applyEqRigid" (formula "44") (term "0,1,7,0") (ifseqformula "40"))
                                                                  (rule "applyEq" (formula "41") (term "0") (ifseqformula "31"))
                                                                  (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "40"))
                                                                  (rule "applyEqRigid" (formula "31") (term "1") (ifseqformula "40"))
                                                                  (rule "commuteIntersection" (formula "53") (term "0"))
                                                                  (rule "close" (formula "53") (ifseqformula "12"))
                                                               )
                                                               (branch
                                                                  (rule "polySimp_homoEq" (formula "47"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                                  (rule "disjointDefinition" (formula "55"))
                                                                  (rule "inEqSimp_ltRight" (formula "48"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "11"))
                                                                  (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                  (rule "jmod_axiom" (formula "42") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "42") (term "1,0"))
                                                                  (rule "jmod_axiom" (formula "33") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "48"))
                                                                  (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "42"))
                                                                  (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "33"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                                  (rule "inEqSimp_contradEq3" (formula "48") (ifseqformula "1"))
                                                                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "48") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                                                  (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "48") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "48") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "false_right" (formula "48"))
                                                                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "8") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "newSym_eq" (formula "32") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                                                  (rule "times_zero_1" (formula "32") (term "1,1"))
                                                                  (rule "add_zero_right" (formula "32") (term "1"))
                                                                  (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                                                  (rule "eqSymm" (formula "33"))
                                                                  (rule "applyEq" (formula "46") (term "5,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "46") (term "1,6,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "41") (term "0") (ifseqformula "33"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "41"))
                                                                  (rule "applyEq" (formula "35") (term "5,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "44") (term "1,7,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "34") (term "0,2,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "31") (term "7,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "47") (term "5,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "31") (term "5,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "47") (term "1,7,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "33"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                  (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "35") (term "1,7,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "46") (term "7,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "45") (term "5,0") (ifseqformula "33"))
                                                                  (rule "newSym_eq" (formula "42") (inst "newSymDef=mul(bucket_0, Z(0(#)))") (inst "l=l_1"))
                                                                  (rule "times_zero_1" (formula "42") (term "1,1"))
                                                                  (rule "add_zero_right" (formula "42") (term "1"))
                                                                  (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "42"))
                                                                  (rule "eqSymm" (formula "43"))
                                                                  (rule "applyEqRigid" (formula "42") (term "0,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "40") (term "0") (ifseqformula "43"))
                                                                  (rule "applyEqRigid" (formula "48") (term "1,6,0") (ifseqformula "43"))
                                                                  (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "43"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "41"))
                                                                  (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "43"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "1"))
                                                                  (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=l_1"))
                                                                  (rule "leq_literals" (formula "1") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "neg_literal" (formula "1") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "1") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "elimGcdGeq_antec" (formula "41") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=l_1"))
                                                                  (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0"))
                                                                  (rule "leq_literals" (formula "41") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                                  (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "41") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                                  (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "41") (term "0,0"))
                                                                  (rule "leq_literals" (formula "41") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "elimGcdGeq_antec" (formula "40") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                  (rule "add_zero_right" (formula "40") (term "0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "40") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "times_zero_1" (formula "40") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                                                  (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "40") (term "0,0"))
                                                                  (rule "leq_literals" (formula "40") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "inEqSimp_antiSymm" (formula "41") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "31") (term "0,7,0") (ifseqformula "41"))
                                                                  (rule "applyEqRigid" (formula "30") (term "0,5,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "47") (term "0,5,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "46") (term "0,5,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "41"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                                  (rule "add_literals" (formula "1") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "0"))
                                                                  (rule "qeq_literals" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "applyEq" (formula "47") (term "0,5,0") (ifseqformula "40"))
                                                                  (rule "applyEq" (formula "30") (term "0,5,0") (ifseqformula "40"))
                                                                  (rule "applyEqRigid" (formula "48") (term "0,5,0") (ifseqformula "40"))
                                                                  (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "40"))
                                                                  (rule "applyEqRigid" (formula "34") (term "0,5,0") (ifseqformula "40"))
                                                                  (rule "applyEq" (formula "28") (term "0,2,0") (ifseqformula "40"))
                                                                  (rule "applyEq" (formula "34") (term "0,1,7,0") (ifseqformula "40"))
                                                                  (rule "applyEqRigid" (formula "48") (term "0,1,7,0") (ifseqformula "40"))
                                                                  (rule "applyEqRigid" (formula "47") (term "0,1,6,0") (ifseqformula "40"))
                                                                  (rule "applyEqRigid" (formula "33") (term "0,0,2,0") (ifseqformula "40"))
                                                                  (rule "applyEq" (formula "35") (term "0,2,0") (ifseqformula "40"))
                                                                  (rule "applyEqRigid" (formula "47") (term "0,7,0") (ifseqformula "40"))
                                                                  (rule "applyEq" (formula "41") (term "0") (ifseqformula "40"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "41"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "41") (term "0"))
                                                                  (rule "add_literals" (formula "41") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "41") (term "0"))
                                                                  (rule "leq_literals" (formula "41"))
                                                                  (rule "true_left" (formula "41"))
                                                                  (rule "applyEq" (formula "44") (term "0,1,7,0") (ifseqformula "40"))
                                                                  (rule "applyEq" (formula "31") (term "0") (ifseqformula "41"))
                                                                  (rule "eqSymm" (formula "31"))
                                                                  (rule "applyEqRigid" (formula "31") (term "0,1") (ifseqformula "39"))
                                                                  (rule "commuteIntersection" (formula "53") (term "0"))
                                                                  (rule "close" (formula "53") (ifseqformula "21"))
                                                               )
                                                            )
                                                            (branch
                                                               (rule "polySimp_homoEq" (formula "47"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                               (rule "mul_literals" (formula "47") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                               (rule "disjointDefinition" (formula "55"))
                                                                (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "50")))
                                                               (rule "closeTrue" (formula "55"))
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                             (builtin "Use Dependency Contract" (formula "55") (ifInst ""  (formula "36")) (contract "de.wiesler.Storage[java.lang.Object::<inv>()].JML accessible clause.0") (userinteraction))
                                                            (rule "wellFormedAnon" (formula "47") (term "1,1,0,0,0"))
                                                            (rule "wellFormedAnonEQ" (formula "47") (term "0,1,0,0,0") (ifseqformula "25"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,0,0,0,0") (ifseqformula "25"))
                                                            (rule "wellFormedAnonEQ" (formula "47") (term "0,0,1,0,0,0") (ifseqformula "15"))
                                                            (rule "wellFormedAnonEQ" (formula "47") (term "0,1,1,0,0,0") (ifseqformula "25"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,1,0,0,0,0") (ifseqformula "15"))
                                                            (rule "wellFormedAnonEQ" (formula "47") (term "0,0,1,1,0,0,0") (ifseqformula "15"))
                                                            (rule "replace_known_left" (formula "47") (term "1,1") (ifseqformula "36"))
                                                             (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "54")) (ifInst ""  (formula "4")) (ifInst ""  (formula "2")) (ifInst ""  (formula "14")) (ifInst ""  (formula "24")) (ifInst ""  (formula "2")) (ifInst ""  (formula "14")) (ifInst ""  (formula "24")) (ifInst ""  (formula "38")) (ifInst ""  (formula "36")) (ifInst ""  (formula "56")))
                                                            (rule "notLeft" (formula "47"))
                                                            (rule "polySimp_homoEq" (formula "48"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                            (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                            (rule "disjointDefinition" (formula "47"))
                                                            (rule "inEqSimp_ltRight" (formula "49"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "11"))
                                                            (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                            (rule "jmod_axiom" (formula "42") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "42") (term "1,0"))
                                                            (rule "jmod_axiom" (formula "33") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "49"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "42"))
                                                            (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "33"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                            (rule "mul_literals" (formula "11") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                            (rule "inEqSimp_contradEq3" (formula "49") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "49") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0"))
                                                            (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "49") (term "0,0"))
                                                            (rule "qeq_literals" (formula "49") (term "0"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "11"))
                                                            (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "8") (term "0,0"))
                                                            (rule "qeq_literals" (formula "8") (term "0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "distributeIntersection_2" (formula "47") (term "0"))
                                                            (rule "unionEqualsEmpty" (formula "47"))
                                                            (rule "disjointArrayRangeAllFields2" (formula "47") (term "1"))
                                                            (rule "eqSymm" (formula "47") (term "0,0,1"))
                                                            (rule "sortsDisjointModuloNull" (formula "47") (term "0,0,1"))
                                                            (rule "replace_known_right" (formula "47") (term "1,0,0,1") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "52")))
                                                            (rule "newSym_eq" (formula "32") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                                            (rule "times_zero_1" (formula "32") (term "1,1"))
                                                            (rule "add_zero_right" (formula "32") (term "1"))
                                                            (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                                            (rule "eqSymm" (formula "33"))
                                                            (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "34") (term "0,2,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "47") (term "5,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "33"))
                                                            (rule "inEqSimp_commuteLeq" (formula "1"))
                                                            (rule "applyEq" (formula "46") (term "5,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "47") (term "1,7,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "46") (term "1,6,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "31") (term "5,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "35") (term "5,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "41") (term "0") (ifseqformula "33"))
                                                            (rule "inEqSimp_commuteGeq" (formula "41"))
                                                            (rule "applyEq" (formula "46") (term "7,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "44") (term "5,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "31") (term "7,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "35") (term "1,7,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "44") (term "1,7,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "45") (term "5,0") (ifseqformula "33"))
                                                            (rule "newSym_eq" (formula "42") (inst "newSymDef=mul(bucket_0, Z(0(#)))") (inst "l=l_1"))
                                                            (rule "times_zero_1" (formula "42") (term "1,1"))
                                                            (rule "add_zero_right" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "42"))
                                                            (rule "eqSymm" (formula "43"))
                                                            (rule "applyEq" (formula "40") (term "0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "43"))
                                                            (rule "inEqSimp_commuteGeq" (formula "1"))
                                                            (rule "applyEq" (formula "48") (term "1,6,0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                                                            (rule "inEqSimp_commuteLeq" (formula "41"))
                                                            (rule "elimGcdGeq_antec" (formula "41") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=l_1"))
                                                            (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "41") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "41"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                            (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "41") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                            (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "41") (term "0,0"))
                                                            (rule "leq_literals" (formula "41") (term "0"))
                                                             (builtin "One Step Simplification" (formula "41"))
                                                            (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=l_1"))
                                                            (rule "neg_literal" (formula "1") (term "0,0,0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "1") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "elimGcdGeq_antec" (formula "40") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                                            (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "40") (term "0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "40") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "40"))
                                                            (rule "times_zero_1" (formula "40") (term "1,0,0,0,0"))
                                                            (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                                            (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "40") (term "0,0"))
                                                            (rule "leq_literals" (formula "40") (term "0"))
                                                             (builtin "One Step Simplification" (formula "40"))
                                                            (rule "inEqSimp_antiSymm" (formula "41") (ifseqformula "1"))
                                                            (rule "applyEqRigid" (formula "47") (term "0,5,0") (ifseqformula "41"))
                                                            (rule "applyEqRigid" (formula "35") (term "0,5,0") (ifseqformula "41"))
                                                            (rule "applyEq" (formula "48") (term "0,1,6,0") (ifseqformula "41"))
                                                            (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "41"))
                                                            (rule "applyEqRigid" (formula "35") (term "0,1,7,0") (ifseqformula "41"))
                                                            (rule "applyEqRigid" (formula "34") (term "0,0,2,0") (ifseqformula "41"))
                                                            (rule "applyEqRigid" (formula "49") (term "0,5,0") (ifseqformula "41"))
                                                            (rule "applyEq" (formula "46") (term "0,1,7,0") (ifseqformula "41"))
                                                            (rule "applyEq" (formula "42") (term "0") (ifseqformula "41"))
                                                            (rule "inEqSimp_homoInEq1" (formula "42"))
                                                            (rule "polySimp_pullOutFactor1" (formula "42") (term "0"))
                                                            (rule "add_literals" (formula "42") (term "1,0"))
                                                            (rule "times_zero_1" (formula "42") (term "0"))
                                                            (rule "leq_literals" (formula "42"))
                                                            (rule "true_left" (formula "42"))
                                                            (rule "applyEqRigid" (formula "47") (term "0,5,0") (ifseqformula "41"))
                                                            (rule "applyEq" (formula "30") (term "0,5,0") (ifseqformula "41"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "41"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1"))
                                                            (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "0"))
                                                            (rule "qeq_literals" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "applyEqRigid" (formula "28") (term "0,2,0") (ifseqformula "40"))
                                                            (rule "applyEqRigid" (formula "47") (term "0,1,7,0") (ifseqformula "40"))
                                                            (rule "applyEq" (formula "30") (term "0,5,0") (ifseqformula "40"))
                                                            (rule "applyEq" (formula "46") (term "0,7,0") (ifseqformula "40"))
                                                            (rule "applyEq" (formula "35") (term "0,2,0") (ifseqformula "40"))
                                                            (rule "applyEqRigid" (formula "44") (term "0,5,0") (ifseqformula "40"))
                                                            (rule "applyEq" (formula "30") (term "0,7,0") (ifseqformula "40"))
                                                            (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "31") (term "1") (ifseqformula "40"))
                                                            (rule "applyEqRigid" (formula "32") (term "0,1") (ifseqformula "40"))
                                                            (rule "commuteIntersection" (formula "47") (term "0"))
                                                            (rule "close" (formula "47") (ifseqformula "22"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch
                                       (rule "andRight" (formula "55"))
                                       (branch
                                          (rule "andRight" (formula "55"))
                                          (branch
                                             (rule "andRight" (formula "55"))
                                             (branch
                                                (rule "wellFormedAnon" (formula "55"))
                                                (rule "wellFormedAnonEQ" (formula "55") (term "0") (ifseqformula "25"))
                                                (rule "wellFormedAnonEQ" (formula "55") (term "0,0") (ifseqformula "15"))
                                                (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "38"))
                                                 (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "2")) (ifInst ""  (formula "14")) (ifInst ""  (formula "24")))
                                                (rule "closeTrue" (formula "55"))
                                             )
                                             (branch
                                                (rule "orRight" (formula "55"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (ifseqformula "25"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0") (ifseqformula "15"))
                                                (rule "orRight" (formula "55"))
                                                (rule "orRight" (formula "55"))
                                                (rule "close" (formula "55") (ifseqformula "3"))
                                             )
                                          )
                                          (branch
                                             (rule "orRight" (formula "55"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (ifseqformula "25"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0") (ifseqformula "15"))
                                             (rule "orRight" (formula "55"))
                                             (rule "orRight" (formula "55"))
                                             (rule "close" (formula "55") (ifseqformula "4"))
                                          )
                                       )
                                       (branch
                                          (rule "orRight" (formula "55"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (ifseqformula "25"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0") (ifseqformula "15"))
                                          (rule "orRight" (formula "55"))
                                          (rule "orRight" (formula "55"))
                                          (rule "close" (formula "55") (ifseqformula "16"))
                                       )
                                    )
                                 )
                                 (branch
                                    (rule "translateJavaSubInt" (formula "55") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "47"))
                                    (rule "polySimp_elimSub" (formula "55") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "55") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                    (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                    (rule "measuredByCheck" (formula "55") (ifseqformula "5"))
                                    (rule "inEqSimp_ltRight" (formula "48"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "precOfPair" (formula "55"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "orRight" (formula "55"))
                                    (rule "precOfInt" (formula "56"))
                                    (rule "leq_literals" (formula "56") (term "0"))
                                     (builtin "One Step Simplification" (formula "56"))
                                    (rule "less_literals" (formula "56"))
                                    (rule "closeTrue" (formula "56"))
                                 )
                              )
                           )
                           (branch "if equal_buckets false"
                               (builtin "One Step Simplification" (formula "54"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "replace_known_right" (formula "44") (term "0,6,0") (ifseqformula "46"))
                               (builtin "One Step Simplification" (formula "44"))
                              (rule "replace_known_right" (formula "42") (term "0,7,0") (ifseqformula "46"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "46"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "true_left" (formula "33"))
                              (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "45"))
                               (builtin "One Step Simplification" (formula "44"))
                              (rule "true_left" (formula "44"))
                              (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "44"))
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "true_left" (formula "39"))
                              (rule "tryEmpty" (formula "51") (term "1"))
                              (rule "blockEmptyLabel" (formula "51") (term "1"))
                              (rule "blockEmpty" (formula "51") (term "1"))
                              (rule "methodCallEmpty" (formula "51") (term "1"))
                              (rule "emptyModality" (formula "51") (term "1"))
                              (rule "andRight" (formula "51"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "51"))
                                 (branch "Case 1"
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "closeTrue" (formula "51"))
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "51"))
                                    (branch "Case 1"
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "narrowSelectArrayType" (formula "51") (term "2,1") (ifseqformula "1") (ifseqformula "50"))
                                       (rule "close" (formula "51") (ifseqformula "39"))
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "51"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "inEqSimp_ltRight" (formula "44"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "10"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "11"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                          (rule "jmod_axiom" (formula "32") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "32"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                          (rule "mul_literals" (formula "10") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0"))
                                          (rule "qeq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "newSym_eq" (formula "31") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))"))
                                          (rule "times_zero_1" (formula "31") (term "1,1"))
                                          (rule "add_zero_right" (formula "31") (term "1"))
                                          (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                                          (rule "eqSymm" (formula "32"))
                                          (rule "applyEq" (formula "51") (term "7,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "43") (term "5,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "43") (term "7,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "42") (term "5,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "30") (term "7,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "34") (term "2,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "32"))
                                          (rule "inEqSimp_commuteGeq" (formula "39"))
                                          (rule "applyEq" (formula "51") (term "5,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "32"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "30") (term "5,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "41") (term "5,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "29") (term "5,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "33") (term "0,2,0") (ifseqformula "32"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "39"))
                                          (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,0"))
                                          (rule "times_zero_1" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEq" (formula "41") (term "7,0") (ifseqformula "1"))
                                          (rule "close" (formula "51") (ifseqformula "41"))
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "41")))
                                          (rule "closeTrue" (formula "51"))
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "51") (userinteraction))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,1,1,0,0,0") (ifseqformula "24"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,1,1,0,0,0") (ifseqformula "14"))
                                 (rule "allRight" (formula "51") (inst "sk=f_0"))
                                 (rule "allRight" (formula "51") (inst "sk=f_1"))
                                 (rule "orRight" (formula "51"))
                                 (rule "orRight" (formula "51"))
                                 (rule "orRight" (formula "51"))
                                 (rule "eqSymm" (formula "54"))
                                 (rule "eqSymm" (formula "51") (term "0,0,0,1"))
                                 (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=f_0_0"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "25"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "15"))
                                 (rule "eqSymm" (formula "55"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "54"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "53"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "52"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                     )
                     (branch "Precondition"
                        (rule "andRight" (formula "42"))
                        (branch "Case 1"
                           (rule "andRight" (formula "42"))
                           (branch "Case 1"
                              (rule "andRight" (formula "42"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "translateJavaSubInt" (formula "42") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "42") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                 (rule "close" (formula "42") (ifseqformula "4"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "42"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "42"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "42"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "42"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "42"))
                                             (branch "Case 1"
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "disjointDefinition" (formula "42"))
                                                 (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "37")))
                                                (rule "closeTrue" (formula "42"))
                                             )
                                             (branch "Case 2"
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "disjointDefinition" (formula "42"))
                                                (rule "close" (formula "42") (ifseqformula "12"))
                                             )
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "disjointDefinition" (formula "42"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "notRight" (formula "42"))
                                             (rule "eqSymm" (formula "1"))
                                             (rule "sortsDisjointModuloNull" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "close" (formula "43") (ifseqformula "2"))
                                          )
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "disjointDefinition" (formula "42"))
                                          (rule "close" (formula "42") (ifseqformula "21"))
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "disjointDefinition" (formula "42"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "notRight" (formula "42"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "sortsDisjointModuloNull" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "close" (formula "41") (ifseqformula "2"))
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "disjointDefinition" (formula "42"))
                                    (rule "inEqSimp_gtToGeq" (formula "9"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "jmod_axiom" (formula "31") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "31"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                    (rule "mul_literals" (formula "9") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "qeq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "newSym_eq" (formula "30") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))"))
                                    (rule "times_zero_1" (formula "30") (term "1,1"))
                                    (rule "add_zero_right" (formula "30") (term "1"))
                                    (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "30"))
                                    (rule "eqSymm" (formula "31"))
                                    (rule "applyEq" (formula "27") (term "2,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "33") (term "1,7,0,1") (ifseqformula "31"))
                                    (rule "applyEq" (formula "28") (term "5,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "33") (term "5,0,1") (ifseqformula "31"))
                                    (rule "applyEq" (formula "32") (term "0,2,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "34") (term "2,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "29") (term "7,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "29") (term "5,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
                                    (rule "commuteIntersection" (formula "42") (term "0"))
                                    (rule "close" (formula "42") (ifseqformula "21"))
                                 )
                              )
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "wellFormedAnonEQ" (formula "42") (ifseqformula "24"))
                              (rule "wellFormedAnonEQ" (formula "42") (term "0") (ifseqformula "14"))
                              (rule "replace_known_left" (formula "42") (term "1") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "1")) (ifInst ""  (formula "13")))
                              (rule "closeTrue" (formula "42"))
                           )
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "42"))
                           (branch "Case 1"
                              (rule "andRight" (formula "42"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "42"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "42"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "42"))
                                       (branch "Case 1"
                                          (rule "orRight" (formula "42"))
                                           (builtin "One Step Simplification" (formula "43"))
                                           (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "39")))
                                          (rule "false_right" (formula "42"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (ifseqformula "24"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0") (ifseqformula "14"))
                                          (rule "orRight" (formula "42"))
                                          (rule "orRight" (formula "42"))
                                          (rule "close" (formula "42") (ifseqformula "15"))
                                       )
                                       (branch "Case 2"
                                          (rule "orRight" (formula "42"))
                                           (builtin "One Step Simplification" (formula "43"))
                                           (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "40")))
                                          (rule "false_right" (formula "42"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (ifseqformula "24"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0") (ifseqformula "14"))
                                          (rule "orRight" (formula "42"))
                                          (rule "orRight" (formula "42"))
                                          (rule "close" (formula "42") (ifseqformula "3"))
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "closeTrue" (formula "42"))
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "closeTrue" (formula "42"))
                                 )
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "41")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (ifseqformula "24"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0") (ifseqformula "14"))
                                 (rule "orRight" (formula "42"))
                                 (rule "orRight" (formula "42"))
                                 (rule "close" (formula "42") (ifseqformula "2"))
                              )
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "closeTrue" (formula "42"))
                           )
                        )
                     )
                     (branch "Usage"
                         (builtin "One Step Simplification" (formula "36"))
                         (builtin "One Step Simplification" (formula "43"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,1,1") (ifseqformula "24"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,1,1") (ifseqformula "14"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,0,0,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,2,0,0,1,0,0"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,0,1,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "43") (term "2,0,1,0,1,0"))
                        (rule "andLeft" (formula "36"))
                        (rule "andLeft" (formula "36"))
                        (rule "andLeft" (formula "36"))
                        (rule "andLeft" (formula "37"))
                        (rule "andLeft" (formula "38"))
                        (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "41"))
                        (rule "true_left" (formula "41"))
                        (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,1,0"))
                        (rule "mul_literals" (formula "47") (term "1,2,0,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,2,0"))
                        (rule "mul_literals" (formula "37") (term "1,2,0,1,0,2,0"))
                        (rule "polySimp_elimSub" (formula "39") (term "2,0,1,0,0"))
                        (rule "mul_literals" (formula "39") (term "1,2,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "38") (term "2,0,1,0,0"))
                        (rule "mul_literals" (formula "38") (term "1,2,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "47") (term "2,0,1,0,1,0"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,0,1,0,2,0"))
                        (rule "polySimp_addComm0" (formula "39") (term "2,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "38") (term "2,0,1,0,0"))
                        (rule "narrowSelectArrayType" (formula "37") (term "2,1") (ifseqformula "1") (ifseqformula "46"))
                        (rule "commuteUnion" (formula "47") (term "1,0,1,0"))
                        (rule "commuteUnion" (formula "37") (term "1,0,2,0"))
                        (rule "commuteUnion" (formula "39") (term "1,0,0"))
                        (rule "commuteUnion" (formula "38") (term "1,0,0"))
                        (rule "ifUnfold" (formula "47") (term "1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_2"))
                        (rule "inequality_comparison_simple" (formula "47") (term "1"))
                         (builtin "One Step Simplification" (formula "47"))
                        (rule "replace_known_left" (formula "47") (term "0,0,1,0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "47"))
                        (rule "ifSplit" (formula "47"))
                        (branch "if x_2 true"
                            (builtin "One Step Simplification" (formula "48"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_2 false"
                            (builtin "One Step Simplification" (formula "48"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "blockEmpty" (formula "47") (term "1"))
                            (builtin "Block Contract (Internal)" (formula "47") (newnames "exc_29,heap_Before_BLOCK_1,savedHeap_Before_BLOCK_1,o,f"))
                           (branch "Validity"
                               (builtin "One Step Simplification" (formula "48"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "translateJavaSubInt" (formula "41") (term "0,0,0"))
                              (rule "andLeft" (formula "41"))
                              (rule "eqSymm" (formula "49") (term "0,0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "41") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                              (rule "narrowSelectArrayType" (formula "37") (term "2,0") (ifseqformula "41") (ifseqformula "47"))
                              (rule "variableDeclarationAssign" (formula "48") (term "1"))
                              (rule "variableDeclaration" (formula "48") (term "1") (newnames "exc_29_1"))
                              (rule "assignment" (formula "48") (term "1"))
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "emptyStatement" (formula "48") (term "1"))
                              (rule "emptyStatement" (formula "48") (term "1"))
                              (rule "tryEmpty" (formula "48") (term "1"))
                              (rule "blockEmptyLabel" (formula "48") (term "1"))
                              (rule "blockEmpty" (formula "48") (term "1"))
                              (rule "methodCallEmpty" (formula "48") (term "1"))
                              (rule "emptyModality" (formula "48") (term "1"))
                              (rule "andRight" (formula "48"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "48"))
                                 (branch "Case 1"
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "closeTrue" (formula "48"))
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "Contract_axiom_for_sortednessFromPartitionSorted_in_Sorter" (formula "48") (term "0") (userinteraction))
                                    (rule "impLeft" (formula "1") (userinteraction))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "42"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "42"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "42"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "42"))
                                                (branch "Case 1"
                                                   (rule "inEqSimp_leqRight" (formula "42"))
                                                   (rule "add_zero_right" (formula "1") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "10"))
                                                   (rule "mul_literals" (formula "10") (term "1,0,0"))
                                                   (rule "add_literals" (formula "10") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                   (rule "jmod_axiom" (formula "32") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "32"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                   (rule "mul_literals" (formula "10") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                                                   (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                   (rule "add_literals" (formula "7") (term "0,0"))
                                                   (rule "qeq_literals" (formula "7") (term "0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "6") (term "0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "closeFalse" (formula "6"))
                                                )
                                                (branch "Case 2"
                                                   (rule "inEqSimp_leqRight" (formula "42"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "10"))
                                                   (rule "mul_literals" (formula "10") (term "1,0,0"))
                                                   (rule "add_literals" (formula "10") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                   (rule "jmod_axiom" (formula "32") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "32"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                   (rule "mul_literals" (formula "10") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "inEqSimp_leqRight" (formula "42"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_gtToGeq" (formula "10"))
                                                (rule "mul_literals" (formula "10") (term "1,0,0"))
                                                (rule "add_literals" (formula "10") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                (rule "jmod_axiom" (formula "32") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "32"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                (rule "mul_literals" (formula "10") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "inEqSimp_homoInEq1" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0"))
                                                (rule "add_zero_right" (formula "9") (term "0"))
                                                (rule "leq_literals" (formula "9"))
                                                (rule "closeFalse" (formula "9"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "42"))
                                             (branch "Case 1"
                                                 (builtin "Use Dependency Contract" (formula "42") (term "0") (ifInst ""  (formula "28") (term "0")) (contract "de.wiesler.Functions[de.wiesler.Functions::isValidBucketStarts([I,int)].JML accessible clause.0") (userinteraction))
                                                 (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "41")) (ifInst ""  (formula "47")) (ifInst ""  (formula "47")))
                                                (rule "wellFormedAnonEQ" (formula "42") (term "0,0,0") (ifseqformula "24"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "1,0,0") (ifseqformula "24"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,1,0,0") (ifseqformula "14"))
                                                (rule "wellFormedAnonEQ" (formula "42") (term "0,0,0,0") (ifseqformula "14"))
                                                (rule "replace_known_right" (formula "42") (term "0,0,1,0,0") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "1")) (ifInst ""  (formula "13")) (ifInst ""  (formula "23")) (ifInst ""  (formula "15")))
                                                (rule "disjointDefinition" (formula "42") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "9"))
                                                (rule "mul_literals" (formula "9") (term "1,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "10"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "28"))
                                                (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "43"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "notLeft" (formula "42"))
                                                (rule "jmod_axiom" (formula "31") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "31"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                (rule "mul_literals" (formula "9") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "9"))
                                                (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "6") (term "0,0"))
                                                (rule "qeq_literals" (formula "6") (term "0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "distributeIntersection_2" (formula "41") (term "0"))
                                                (rule "unionEqualsEmpty" (formula "41"))
                                                (rule "disjointArrayRanges" (formula "41") (term "1"))
                                                (rule "replace_known_right" (formula "41") (term "0,0,0,0,1") (ifseqformula "44"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "newSym_eq" (formula "30") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                                (rule "times_zero_1" (formula "30") (term "1,1"))
                                                (rule "add_zero_right" (formula "30") (term "1"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "30"))
                                                (rule "eqSymm" (formula "31"))
                                                (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
                                                (rule "applyEq" (formula "38") (term "5,0") (ifseqformula "31"))
                                                (rule "applyEq" (formula "27") (term "2,0") (ifseqformula "31"))
                                                (rule "applyEq" (formula "28") (term "5,0") (ifseqformula "31"))
                                                (rule "applyEq" (formula "50") (term "5,0") (ifseqformula "31"))
                                                (rule "applyEq" (formula "39") (term "5,0") (ifseqformula "31"))
                                                (rule "applyEq" (formula "33") (term "1,7,0,1") (ifseqformula "31"))
                                                (rule "applyEq" (formula "32") (term "0,2,0") (ifseqformula "31"))
                                                (rule "applyEq" (formula "34") (term "2,0") (ifseqformula "31"))
                                                (rule "applyEq" (formula "29") (term "7,0") (ifseqformula "31"))
                                                (rule "applyEq" (formula "29") (term "5,0") (ifseqformula "31"))
                                                (rule "applyEq" (formula "42") (term "2,1,0") (ifseqformula "31"))
                                                (rule "applyEq" (formula "38") (term "7,0") (ifseqformula "31"))
                                                (rule "applyEq" (formula "33") (term "5,0,1") (ifseqformula "31"))
                                                (rule "applyEq" (formula "43") (term "2,0") (ifseqformula "31"))
                                                (rule "nnf_imp2or" (formula "16") (term "0"))
                                                (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                                (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                                (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                                (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "10"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "translateJavaMulInt" (formula "10") (term "1,1,0,0,0,0,1,0,0"))
                                                (rule "translateJavaMulInt" (formula "10") (term "1,1,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "1,1,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "1,1,0,0,0,0,0,1,0,0"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "15"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "notLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "16"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "notLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "notLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "18"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "notLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "notLeft" (formula "11"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "notLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "notLeft" (formula "10"))
                                                (rule "notLeft" (formula "10"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "disjointDefinition" (formula "46"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "notLeft" (formula "46"))
                                                (rule "disjointDefinition" (formula "45"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "notLeft" (formula "45"))
                                                (rule "disjointDefinition" (formula "44"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "notLeft" (formula "44"))
                                                (rule "eqSymm" (formula "75"))
                                                (rule "disjointDefinition" (formula "43"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "notLeft" (formula "43"))
                                                (rule "eqSymm" (formula "74"))
                                                (rule "disjointDefinition" (formula "42"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "notLeft" (formula "42"))
                                                (rule "eqSymm" (formula "73"))
                                                (rule "disjointDefinition" (formula "41"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "notLeft" (formula "41"))
                                                (rule "eqSymm" (formula "72"))
                                                (rule "disjointDefinition" (formula "40"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "notLeft" (formula "40"))
                                                (rule "eqSymm" (formula "71"))
                                                (rule "disjointDefinition" (formula "39"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "notLeft" (formula "39"))
                                                (rule "eqSymm" (formula "70"))
                                                (rule "disjointDefinition" (formula "38"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "notLeft" (formula "38"))
                                                (rule "eqSymm" (formula "69"))
                                                (rule "disjointDefinition" (formula "37"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "notLeft" (formula "37"))
                                                (rule "eqSymm" (formula "68"))
                                                (rule "disjointDefinition" (formula "36"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "notLeft" (formula "36"))
                                                (rule "eqSymm" (formula "67"))
                                                (rule "disjointDefinition" (formula "35"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "notLeft" (formula "35"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "disjointDefinition" (formula "34"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "notLeft" (formula "34"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "disjointDefinition" (formula "33"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "notLeft" (formula "33"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "disjointDefinition" (formula "32"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "notLeft" (formula "32"))
                                                (rule "eqSymm" (formula "63"))
                                                (rule "disjointDefinition" (formula "31"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "notLeft" (formula "31"))
                                                (rule "disjointDefinition" (formula "30"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "notLeft" (formula "30"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "disjointDefinition" (formula "29"))
                                                 (builtin "One Step Simplification" (formula "29"))
                                                (rule "notLeft" (formula "29"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "disjointDefinition" (formula "28"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "notLeft" (formula "28"))
                                                (rule "disjointDefinition" (formula "27"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "notLeft" (formula "27"))
                                                (rule "disjointDefinition" (formula "26"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "notLeft" (formula "26"))
                                                (rule "disjointDefinition" (formula "25"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "disjointDefinition" (formula "24"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "notLeft" (formula "24"))
                                                (rule "disjointDefinition" (formula "23"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "notLeft" (formula "23"))
                                                (rule "disjointDefinition" (formula "22"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "notLeft" (formula "22"))
                                                (rule "disjointDefinition" (formula "21"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "notLeft" (formula "21"))
                                                (rule "disjointDefinition" (formula "19"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "notLeft" (formula "19"))
                                                (rule "disjointDefinition" (formula "19"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "notLeft" (formula "19"))
                                                (rule "applyEq" (formula "87") (term "0,1,0,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "94") (term "0,1,0,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "86") (term "0,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "47") (term "0,1,0,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "46") (term "0,1,0,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "45") (term "0,1,0,2,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "18"))
                                                (rule "distributeIntersection" (formula "29") (term "0"))
                                                (rule "distributeIntersection" (formula "19") (term "0"))
                                                (rule "distributeIntersection_2" (formula "86") (term "0"))
                                                (rule "distributeIntersection" (formula "28") (term "0"))
                                                (rule "distributeIntersection" (formula "29") (term "1,0"))
                                                (rule "distributeIntersection" (formula "29") (term "0,0"))
                                                (rule "distributeIntersection" (formula "19") (term "0,0"))
                                                (rule "distributeIntersection" (formula "19") (term "1,0"))
                                                (rule "unionEqualsEmpty" (formula "86"))
                                                (rule "distributeIntersection" (formula "28") (term "1,0"))
                                                (rule "distributeIntersection" (formula "28") (term "0,0"))
                                                (rule "distributeIntersection" (formula "29") (term "1,1,0"))
                                                (rule "distributeIntersection" (formula "29") (term "0,1,0"))
                                                (rule "distributeIntersection" (formula "29") (term "1,0,0"))
                                                (rule "distributeIntersection" (formula "29") (term "0,0,0"))
                                                (rule "distributeIntersection" (formula "19") (term "1,0,0"))
                                                (rule "distributeIntersection" (formula "19") (term "0,0,0"))
                                                (rule "distributeIntersection" (formula "19") (term "1,1,0"))
                                                (rule "distributeIntersection" (formula "19") (term "0,1,0"))
                                                (rule "distributeIntersection_2" (formula "86") (term "0,0"))
                                                (rule "distributeIntersection_2" (formula "86") (term "0,1"))
                                                (rule "distributeIntersection" (formula "28") (term "1,1,0"))
                                                (rule "distributeIntersection" (formula "28") (term "0,1,0"))
                                                (rule "distributeIntersection" (formula "28") (term "0,0,0"))
                                                (rule "distributeIntersection" (formula "28") (term "1,0,0"))
                                                (rule "unionEqualsEmpty" (formula "29"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "unionEqualsEmpty" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "distributeIntersection_2" (formula "88") (term "1,0,0"))
                                                (rule "distributeIntersection_2" (formula "88") (term "0,0,0"))
                                                (rule "unionEqualsEmpty" (formula "88") (term "1"))
                                                (rule "unionEqualsEmpty" (formula "29"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "unionEqualsEmpty" (formula "32"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "unionEqualsEmpty" (formula "31"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "unionEqualsEmpty" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "unionEqualsEmpty" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "unionEqualsEmpty" (formula "93") (term "0"))
                                                (rule "distributeIntersection_2" (formula "93") (term "0,1,1"))
                                                (rule "distributeIntersection_2" (formula "93") (term "0,0,1"))
                                                (rule "unionEqualsEmpty" (formula "31"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "unionEqualsEmpty" (formula "33"))
                                                (rule "andLeft" (formula "33"))
                                                (rule "unionEqualsEmpty" (formula "37"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "andLeft" (formula "37"))
                                                (rule "notLeft" (formula "37"))
                                                (rule "notLeft" (formula "37"))
                                                (rule "eqSymm" (formula "59"))
                                                (rule "eqSymm" (formula "58"))
                                                (rule "sortsDisjointModuloNull" (formula "59"))
                                                (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "92"))
                                                 (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "102")))
                                                (rule "false_right" (formula "59"))
                                                (rule "sortsDisjointModuloNull" (formula "58"))
                                                (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "101"))
                                                 (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "92")))
                                                (rule "false_right" (formula "58"))
                                                (rule "unionEqualsEmpty" (formula "37"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "andLeft" (formula "37"))
                                                (rule "notLeft" (formula "37"))
                                                (rule "notLeft" (formula "37"))
                                                (rule "eqSymm" (formula "58"))
                                                (rule "eqSymm" (formula "57"))
                                                (rule "sortsDisjointModuloNull" (formula "58"))
                                                (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "101"))
                                                 (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "93")))
                                                (rule "false_right" (formula "58"))
                                                (rule "sortsDisjointModuloNull" (formula "57"))
                                                (rule "replace_known_right" (formula "57") (term "1") (ifseqformula "100"))
                                                 (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "93")))
                                                (rule "false_right" (formula "57"))
                                                (rule "unionEqualsEmpty" (formula "35"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "andLeft" (formula "35"))
                                                (rule "notLeft" (formula "35"))
                                                (rule "notLeft" (formula "35"))
                                                (rule "eqSymm" (formula "57"))
                                                (rule "eqSymm" (formula "56"))
                                                (rule "sortsDisjointModuloNull" (formula "57"))
                                                (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "87"))
                                                 (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "100")))
                                                (rule "false_right" (formula "57"))
                                                (rule "sortsDisjointModuloNull" (formula "56"))
                                                (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "85"))
                                                 (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "99")))
                                                (rule "false_right" (formula "56"))
                                                (rule "unionEqualsEmpty" (formula "35"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "andLeft" (formula "35"))
                                                (rule "notLeft" (formula "35"))
                                                (rule "notLeft" (formula "35"))
                                                (rule "eqSymm" (formula "56"))
                                                (rule "eqSymm" (formula "55"))
                                                (rule "sortsDisjointModuloNull" (formula "56"))
                                                (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "87"))
                                                 (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "99")))
                                                (rule "false_right" (formula "56"))
                                                (rule "sortsDisjointModuloNull" (formula "55"))
                                                (rule "replace_known_right" (formula "55") (term "1") (ifseqformula "98"))
                                                 (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "87")))
                                                (rule "false_right" (formula "55"))
                                                (rule "unionEqualsEmpty" (formula "20"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "notLeft" (formula "21"))
                                                (rule "notLeft" (formula "20"))
                                                (rule "eqSymm" (formula "55"))
                                                (rule "eqSymm" (formula "54"))
                                                (rule "unionEqualsEmpty" (formula "19"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "notLeft" (formula "19"))
                                                (rule "notLeft" (formula "19"))
                                                (rule "eqSymm" (formula "54"))
                                                (rule "eqSymm" (formula "53"))
                                                (rule "unionEqualsEmpty" (formula "19"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "notLeft" (formula "20"))
                                                (rule "notLeft" (formula "19"))
                                                (rule "eqSymm" (formula "53"))
                                                (rule "eqSymm" (formula "52"))
                                                (rule "unionEqualsEmpty" (formula "19"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "notLeft" (formula "20"))
                                                (rule "notLeft" (formula "19"))
                                                (rule "eqSymm" (formula "52"))
                                                (rule "eqSymm" (formula "51"))
                                                (rule "unionEqualsEmpty" (formula "95") (term "0,0"))
                                                (rule "disjointArrayRangeAllFields1" (formula "95") (term "0,0,0"))
                                                (rule "disjointArrayRangeAllFields1" (formula "95") (term "1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "95") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "95") (term "1,0,1,0,0"))
                                                (rule "elimGcdGeq" (formula "95") (term "1,0,1,0,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "95") (term "1,0,1,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "95") (term "0,0,0,1,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "95") (term "1,0,0,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "95") (term "0,0,0,0,0,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "95") (term "0,0,0,1,0,1,0,1,0,0"))
                                                (rule "sub_literals" (formula "95") (term "0,0,0,0,0,0,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "95") (term "1,0,0,0,0,0,1,0,1,0,0"))
                                                (rule "add_zero_left" (formula "95") (term "0,0,1,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "95") (term "0,0,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "95") (term "0,1,0,1,0,1,0,0"))
                                                (rule "add_literals" (formula "95") (term "1,0,1,0,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "95") (term "0,1,0,1,0,1,0,0"))
                                                (rule "leq_literals" (formula "95") (term "1,0,1,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "95"))
                                                (rule "polySimp_pullOutFactor0b" (formula "95") (term "0,0,1,0,1,0,0"))
                                                (rule "add_literals" (formula "95") (term "1,1,0,0,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "95") (term "1,0,0,1,0,1,0,0"))
                                                (rule "add_literals" (formula "95") (term "0,0,1,0,1,0,0"))
                                                (rule "qeq_literals" (formula "95") (term "0,1,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "95"))
                                                (rule "elimGcdGeq" (formula "95") (term "1,0,0,0,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "95") (term "1,0,0,0,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "95") (term "0,0,0,1,0,1,0,0,0,0"))
                                                (rule "sub_literals" (formula "95") (term "0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "95") (term "1,0,1,0,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "95") (term "1,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "95") (term "0,0,0,1,0,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "95") (term "0,0,0,0,0,1,0,0,0,0"))
                                                (rule "add_zero_left" (formula "95") (term "0,0,1,0,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "95") (term "0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "95") (term "0,1,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "95") (term "1,0,1,0,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "95") (term "0,1,0,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "95") (term "1,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "95"))
                                                (rule "polySimp_pullOutFactor0b" (formula "95") (term "0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "95") (term "1,1,0,0,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "95") (term "1,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "95") (term "0,0,1,0,0,0,0"))
                                                (rule "qeq_literals" (formula "95") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "95"))
                                                (rule "unionEqualsEmpty" (formula "27"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "notLeft" (formula "27"))
                                                (rule "notLeft" (formula "27"))
                                                (rule "eqSymm" (formula "51"))
                                                (rule "eqSymm" (formula "50"))
                                                (rule "replace_known_right" (formula "96") (term "0,0,1,0,0") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "51")))
                                                (rule "unionEqualsEmpty" (formula "27"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "notLeft" (formula "28"))
                                                (rule "notLeft" (formula "27"))
                                                (rule "eqSymm" (formula "50"))
                                                (rule "eqSymm" (formula "49"))
                                                (rule "unionEqualsEmpty" (formula "27"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "notLeft" (formula "28"))
                                                (rule "notLeft" (formula "27"))
                                                (rule "eqSymm" (formula "49"))
                                                (rule "eqSymm" (formula "48"))
                                                (rule "unionEqualsEmpty" (formula "27"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "notLeft" (formula "27"))
                                                (rule "notLeft" (formula "27"))
                                                (rule "eqSymm" (formula "48"))
                                                (rule "eqSymm" (formula "47"))
                                                (rule "unionEqualsEmpty" (formula "99") (term "0,1"))
                                                (rule "disjointArrayRangeAllFields1" (formula "99") (term "0,0,1"))
                                                (rule "replace_known_right" (formula "99") (term "0,0,0,0,1") (ifseqformula "49"))
                                                 (builtin "One Step Simplification" (formula "99"))
                                                (rule "disjointArrayRangeAllFields1" (formula "99") (term "0,1"))
                                                (rule "replace_known_right" (formula "99") (term "0,0,0,1") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "99"))
                                                (rule "unionEqualsEmpty" (formula "99") (term "0"))
                                                (rule "disjointArrayRangeAllFields1" (formula "99") (term "1,0"))
                                                (rule "replace_known_right" (formula "99") (term "0,0,1,0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "99"))
                                                (rule "disjointArrayRangeAllFields1" (formula "99") (term "0"))
                                                (rule "replace_known_right" (formula "99") (term "0,0,0") (ifseqformula "51"))
                                                 (builtin "One Step Simplification" (formula "99"))
                                                (rule "unionEqualsEmpty" (formula "99"))
                                                (rule "disjointArrayRangeAllFields1" (formula "99") (term "0"))
                                                (rule "replace_known_right" (formula "99") (term "0,0,0") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "99"))
                                                (rule "disjointArrayRangeAllFields1" (formula "99"))
                                                (rule "notRight" (formula "99"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "close" (formula "49") (ifseqformula "1"))
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "42"))
                                                (branch "Case 1"
                                                   (rule "translateJavaSubInt" (formula "42") (term "1"))
                                                   (rule "polySimp_elimSub" (formula "42") (term "1"))
                                                   (rule "polySimp_addComm0" (formula "42") (term "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "9"))
                                                   (rule "mul_literals" (formula "9") (term "1,0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "10"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                   (rule "jmod_axiom" (formula "31") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "31"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                   (rule "mul_literals" (formula "9") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "9"))
                                                   (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "6") (term "0,0"))
                                                   (rule "qeq_literals" (formula "6") (term "0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "newSym_eq" (formula "30") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                                   (rule "times_zero_1" (formula "30") (term "1,1"))
                                                   (rule "add_zero_right" (formula "30") (term "1"))
                                                   (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "30"))
                                                   (rule "eqSymm" (formula "31"))
                                                   (rule "applyEq" (formula "33") (term "5,0,1") (ifseqformula "31"))
                                                   (rule "applyEq" (formula "29") (term "5,0") (ifseqformula "31"))
                                                   (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
                                                   (rule "applyEq" (formula "33") (term "1,7,0,1") (ifseqformula "31"))
                                                   (rule "applyEq" (formula "38") (term "7,0") (ifseqformula "31"))
                                                   (rule "applyEq" (formula "27") (term "2,0") (ifseqformula "31"))
                                                   (rule "applyEq" (formula "29") (term "7,0") (ifseqformula "31"))
                                                   (rule "applyEq" (formula "38") (term "5,0") (ifseqformula "31"))
                                                   (rule "applyEq" (formula "34") (term "2,0") (ifseqformula "31"))
                                                   (rule "applyEq" (formula "42") (term "0,2,0") (ifseqformula "31"))
                                                   (rule "applyEq" (formula "39") (term "5,0") (ifseqformula "31"))
                                                   (rule "applyEq" (formula "32") (term "0,2,0") (ifseqformula "31"))
                                                   (rule "applyEq" (formula "49") (term "5,0") (ifseqformula "31"))
                                                   (rule "applyEq" (formula "28") (term "5,0") (ifseqformula "31"))
                                                   (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=arr_1"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "14"))
                                                   (rule "replace_known_left" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "15"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                   (rule "polySimp_homoEq" (formula "43"))
                                                   (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "43"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "43") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "0,1"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                   (rule "disjointAllFields" (formula "1") (term "0,0,0") (ifseqformula "21"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "46"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "33"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "43") (term "0,1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "polySimp_homoEq" (formula "42"))
                                                   (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "42") (term "0"))
                                                   (rule "add_literals" (formula "42") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0"))
                                                   (rule "add_zero_right" (formula "42") (term "0"))
                                                   (rule "polySimp_pullOutFactor2" (formula "42") (term "0"))
                                                   (rule "add_literals" (formula "42") (term "1,0"))
                                                   (rule "times_zero_1" (formula "42") (term "0"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "closeTrue" (formula "42"))
                                                )
                                                (branch "Case 2"
                                                   (rule "andRight" (formula "42"))
                                                   (branch "Case 1"
                                                      (rule "close" (formula "42") (ifseqformula "39"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "42"))
                                                      (branch "Case 1"
                                                         (rule "close" (formula "42") (ifseqformula "38"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "andRight" (formula "42"))
                                                         (branch "Case 1"
                                                            (rule "Contract_axiom_for_bucketIndexFromOffset_in_Sorter" (formula "42") (term "0") (userinteraction))
                                                             (builtin "Use Dependency Contract" (formula "1") (term "0,0,0,0") (ifInst ""  (formula "29") (term "0")) (contract "de.wiesler.Functions[de.wiesler.Functions::isValidBucketStarts([I,int)].JML accessible clause.0") (userinteraction))
                                                             (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "42")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")))
                                                            (rule "wellFormedAnon" (formula "1") (term "1,0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,0,0") (ifseqformula "25"))
                                                            (rule "wellFormedAnonEQ" (formula "43") (term "0,0,0") (ifseqformula "25"))
                                                            (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "25"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,1,0,0") (ifseqformula "15"))
                                                            (rule "wellFormedAnonEQ" (formula "43") (term "0,0,0,0") (ifseqformula "15"))
                                                            (rule "wellFormedAnonEQ" (formula "1") (term "0,0,1,0") (ifseqformula "15"))
                                                            (rule "translateJavaSubInt" (formula "1") (term "1,0,1,0,0"))
                                                            (rule "translateJavaSubInt" (formula "44") (term "3,0"))
                                                            (rule "translateJavaSubInt" (formula "1") (term "3,0,1"))
                                                            (rule "replace_known_right" (formula "43") (term "0,0,1,0,0") (ifseqformula "47"))
                                                             (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "2")) (ifInst ""  (formula "14")) (ifInst ""  (formula "24")) (ifInst ""  (formula "16")))
                                                            (rule "replace_known_right" (formula "1") (term "0,1,1,0,0") (ifseqformula "48"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")) (ifInst ""  (formula "14")) (ifInst ""  (formula "24")) (ifInst ""  (formula "41")) (ifInst ""  (formula "44")))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "polySimp_elimSub" (formula "44") (term "3,0"))
                                                            (rule "polySimp_elimSub" (formula "43") (term "1,1"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "3,0"))
                                                            (rule "polySimp_addComm0" (formula "43") (term "1,1"))
                                                            (rule "disjointDefinition" (formula "42") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "9"))
                                                            (rule "mul_literals" (formula "9") (term "1,0,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "10"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                            (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "28"))
                                                            (rule "jmod_axiom" (formula "31") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "31"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                            (rule "mul_literals" (formula "9") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "9"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "6") (term "0,0"))
                                                            (rule "qeq_literals" (formula "6") (term "0"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "distributeIntersection_2" (formula "41") (term "0,0"))
                                                            (rule "unionEqualsEmpty" (formula "41") (term "0"))
                                                            (rule "disjointArrayRanges" (formula "41") (term "1,0"))
                                                            (rule "replace_known_right" (formula "41") (term "0,0,0,0,1,0") (ifseqformula "45"))
                                                             (builtin "One Step Simplification" (formula "41"))
                                                            (rule "newSym_eq" (formula "30") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                                            (rule "times_zero_1" (formula "30") (term "1,1"))
                                                            (rule "add_zero_right" (formula "30") (term "1"))
                                                            (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "30"))
                                                            (rule "eqSymm" (formula "31"))
                                                            (rule "applyEq" (formula "27") (term "2,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "29") (term "7,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "29") (term "5,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "39") (term "5,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "51") (term "5,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "42") (term "2,0,1") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "44") (term "2,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "34") (term "2,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "32") (term "0,2,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "33") (term "1,7,0,1") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "38") (term "5,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "43") (term "2,0,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "28") (term "5,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "33") (term "5,0,1") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "38") (term "7,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "42") (term "2,1,0,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "43") (term "0,2,0,1") (ifseqformula "31"))
                                                            (rule "pullOutSelect" (formula "43") (term "0,1") (inst "selectSK=arr_1"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "14"))
                                                            (rule "replace_known_left" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "15"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                            (rule "polySimp_homoEq" (formula "44") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,1"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0,0,1"))
                                                            (rule "polySimp_sepPosMonomial" (formula "44") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,1,1"))
                                                            (rule "polySimp_mulAssoc" (formula "44") (term "0,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "0,1,1"))
                                                            (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                            (rule "disjointAllFields" (formula "1") (term "0,0,0") (ifseqformula "21"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                            (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "47"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "48"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "33"))
                                                            (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                            (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                            (rule "eqSymm" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "47"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "44") (term "0,1,1") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "polySimp_homoEq" (formula "43") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "43") (term "0,0,1"))
                                                            (rule "polySimp_pullOutFactor2" (formula "43") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "43") (term "1,0,0,0,1"))
                                                            (rule "times_zero_1" (formula "43") (term "0,0,0,1"))
                                                            (rule "add_zero_left" (formula "43") (term "0,0,1"))
                                                            (rule "polySimp_pullOutFactor1" (formula "43") (term "0,1"))
                                                            (rule "add_literals" (formula "43") (term "1,0,1"))
                                                            (rule "times_zero_1" (formula "43") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "43"))
                                                             (builtin "One Step Simplification" (formula "42"))
                                                            (rule "notLeft" (formula "42"))
                                                            (rule "nnf_imp2or" (formula "16") (term "0"))
                                                            (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                                            (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "35"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "translateJavaMulInt" (formula "35") (term "1,1,0,0,0,0,1,0,0"))
                                                            (rule "translateJavaMulInt" (formula "35") (term "1,1,0,0,0,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "35") (term "1,1,0,0,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "35") (term "1,1,0,0,0,0,0,1,0,0"))
                                                            (rule "andLeft" (formula "35"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "andLeft" (formula "35"))
                                                            (rule "andLeft" (formula "37"))
                                                            (rule "andLeft" (formula "35"))
                                                            (rule "andLeft" (formula "38"))
                                                            (rule "andLeft" (formula "35"))
                                                            (rule "andLeft" (formula "37"))
                                                            (rule "andLeft" (formula "40"))
                                                            (rule "notLeft" (formula "36"))
                                                            (rule "andLeft" (formula "35"))
                                                            (rule "andLeft" (formula "37"))
                                                            (rule "andLeft" (formula "41"))
                                                            (rule "andLeft" (formula "35"))
                                                            (rule "notLeft" (formula "37"))
                                                            (rule "andLeft" (formula "37"))
                                                            (rule "andLeft" (formula "42"))
                                                            (rule "andLeft" (formula "35"))
                                                            (rule "notLeft" (formula "37"))
                                                            (rule "andLeft" (formula "37"))
                                                            (rule "andLeft" (formula "43"))
                                                            (rule "andLeft" (formula "35"))
                                                            (rule "notLeft" (formula "37"))
                                                            (rule "andLeft" (formula "37"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "andLeft" (formula "35"))
                                                            (rule "notLeft" (formula "37"))
                                                            (rule "andLeft" (formula "37"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "35"))
                                                            (rule "notLeft" (formula "37"))
                                                            (rule "andLeft" (formula "37"))
                                                            (rule "andLeft" (formula "46"))
                                                            (rule "notLeft" (formula "35"))
                                                            (rule "notLeft" (formula "35"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "disjointDefinition" (formula "71"))
                                                             (builtin "One Step Simplification" (formula "71"))
                                                            (rule "notLeft" (formula "71"))
                                                            (rule "disjointDefinition" (formula "70"))
                                                             (builtin "One Step Simplification" (formula "70"))
                                                            (rule "notLeft" (formula "70"))
                                                            (rule "disjointDefinition" (formula "69"))
                                                             (builtin "One Step Simplification" (formula "69"))
                                                            (rule "notLeft" (formula "69"))
                                                            (rule "eqSymm" (formula "75"))
                                                            (rule "disjointDefinition" (formula "68"))
                                                             (builtin "One Step Simplification" (formula "68"))
                                                            (rule "notLeft" (formula "68"))
                                                            (rule "eqSymm" (formula "74"))
                                                            (rule "disjointDefinition" (formula "67"))
                                                             (builtin "One Step Simplification" (formula "67"))
                                                            (rule "notLeft" (formula "67"))
                                                            (rule "eqSymm" (formula "73"))
                                                            (rule "disjointDefinition" (formula "66"))
                                                             (builtin "One Step Simplification" (formula "66"))
                                                            (rule "notLeft" (formula "66"))
                                                            (rule "eqSymm" (formula "72"))
                                                            (rule "disjointDefinition" (formula "65"))
                                                             (builtin "One Step Simplification" (formula "65"))
                                                            (rule "notLeft" (formula "65"))
                                                            (rule "eqSymm" (formula "71"))
                                                            (rule "disjointDefinition" (formula "64"))
                                                             (builtin "One Step Simplification" (formula "64"))
                                                            (rule "notLeft" (formula "64"))
                                                            (rule "eqSymm" (formula "70"))
                                                            (rule "disjointDefinition" (formula "63"))
                                                             (builtin "One Step Simplification" (formula "63"))
                                                            (rule "notLeft" (formula "63"))
                                                            (rule "eqSymm" (formula "69"))
                                                            (rule "disjointDefinition" (formula "62"))
                                                             (builtin "One Step Simplification" (formula "62"))
                                                            (rule "notLeft" (formula "62"))
                                                            (rule "eqSymm" (formula "68"))
                                                            (rule "disjointDefinition" (formula "61"))
                                                             (builtin "One Step Simplification" (formula "61"))
                                                            (rule "notLeft" (formula "61"))
                                                            (rule "eqSymm" (formula "67"))
                                                            (rule "disjointDefinition" (formula "60"))
                                                             (builtin "One Step Simplification" (formula "60"))
                                                            (rule "notLeft" (formula "60"))
                                                            (rule "eqSymm" (formula "66"))
                                                            (rule "disjointDefinition" (formula "59"))
                                                             (builtin "One Step Simplification" (formula "59"))
                                                            (rule "notLeft" (formula "59"))
                                                            (rule "eqSymm" (formula "65"))
                                                            (rule "disjointDefinition" (formula "58"))
                                                             (builtin "One Step Simplification" (formula "58"))
                                                            (rule "notLeft" (formula "58"))
                                                            (rule "eqSymm" (formula "64"))
                                                            (rule "disjointDefinition" (formula "57"))
                                                             (builtin "One Step Simplification" (formula "57"))
                                                            (rule "notLeft" (formula "57"))
                                                            (rule "eqSymm" (formula "63"))
                                                            (rule "disjointDefinition" (formula "56"))
                                                             (builtin "One Step Simplification" (formula "56"))
                                                            (rule "notLeft" (formula "56"))
                                                            (rule "disjointDefinition" (formula "55"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "notLeft" (formula "55"))
                                                            (rule "eqSymm" (formula "61"))
                                                            (rule "disjointDefinition" (formula "54"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "notLeft" (formula "54"))
                                                            (rule "eqSymm" (formula "60"))
                                                            (rule "disjointDefinition" (formula "53"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "notLeft" (formula "53"))
                                                            (rule "disjointDefinition" (formula "52"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "notLeft" (formula "52"))
                                                            (rule "disjointDefinition" (formula "51"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "notLeft" (formula "51"))
                                                            (rule "disjointDefinition" (formula "50"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "notLeft" (formula "50"))
                                                            (rule "disjointDefinition" (formula "49"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "notLeft" (formula "49"))
                                                            (rule "disjointDefinition" (formula "48"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "notLeft" (formula "48"))
                                                            (rule "disjointDefinition" (formula "47"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "notLeft" (formula "47"))
                                                            (rule "disjointDefinition" (formula "46"))
                                                             (builtin "One Step Simplification" (formula "46"))
                                                            (rule "notLeft" (formula "46"))
                                                            (rule "disjointDefinition" (formula "45"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "notLeft" (formula "45"))
                                                            (rule "disjointDefinition" (formula "44"))
                                                             (builtin "One Step Simplification" (formula "44"))
                                                            (rule "notLeft" (formula "44"))
                                                            (rule "applyEq" (formula "87") (term "0,1,0,0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "45") (term "0,1,0,2,0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "88") (term "0,1,0,0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "46") (term "0,1,0,0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "86") (term "0,0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "23") (term "1,0,1,0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "47") (term "0,1,0,0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "95") (term "0,1,0,0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "43"))
                                                            (rule "distributeIntersection" (formula "20") (term "0"))
                                                            (rule "distributeIntersection" (formula "11") (term "0"))
                                                            (rule "distributeIntersection_2" (formula "86") (term "0"))
                                                            (rule "distributeIntersection" (formula "21") (term "0"))
                                                            (rule "distributeIntersection" (formula "20") (term "1,0"))
                                                            (rule "distributeIntersection" (formula "20") (term "0,0"))
                                                            (rule "unionEqualsEmpty" (formula "11"))
                                                            (rule "andLeft" (formula "11"))
                                                            (rule "distributeIntersection_2" (formula "87") (term "1,0"))
                                                            (rule "distributeIntersection_2" (formula "87") (term "0,0"))
                                                            (rule "distributeIntersection" (formula "22") (term "0,0"))
                                                            (rule "distributeIntersection" (formula "22") (term "1,0"))
                                                            (rule "distributeIntersection" (formula "21") (term "1,1,0"))
                                                            (rule "distributeIntersection" (formula "21") (term "0,1,0"))
                                                            (rule "distributeIntersection" (formula "21") (term "0,0,0"))
                                                            (rule "distributeIntersection" (formula "21") (term "1,0,0"))
                                                            (rule "distributeIntersection" (formula "11") (term "0"))
                                                            (rule "distributeIntersection" (formula "12") (term "0"))
                                                            (rule "distributeIntersection_2" (formula "87") (term "1,1,0"))
                                                            (rule "distributeIntersection_2" (formula "87") (term "0,1,0"))
                                                            (rule "distributeIntersection_2" (formula "87") (term "0,0,0"))
                                                            (rule "distributeIntersection_2" (formula "87") (term "1,0,0"))
                                                            (rule "distributeIntersection" (formula "22") (term "0,0,0"))
                                                            (rule "distributeIntersection" (formula "22") (term "1,0,0"))
                                                            (rule "distributeIntersection" (formula "22") (term "1,1,0"))
                                                            (rule "distributeIntersection" (formula "22") (term "0,1,0"))
                                                            (rule "unionEqualsEmpty" (formula "21"))
                                                            (rule "andLeft" (formula "21"))
                                                            (rule "distributeIntersection" (formula "11") (term "0,0"))
                                                            (rule "distributeIntersection" (formula "11") (term "1,0"))
                                                            (rule "distributeIntersection" (formula "12") (term "0,0"))
                                                            (rule "distributeIntersection" (formula "12") (term "1,0"))
                                                            (rule "unionEqualsEmpty" (formula "88"))
                                                            (rule "unionEqualsEmpty" (formula "23"))
                                                            (rule "andLeft" (formula "23"))
                                                            (rule "unionEqualsEmpty" (formula "22"))
                                                            (rule "andLeft" (formula "22"))
                                                            (rule "unionEqualsEmpty" (formula "21"))
                                                            (rule "andLeft" (formula "21"))
                                                            (rule "unionEqualsEmpty" (formula "11"))
                                                            (rule "andLeft" (formula "11"))
                                                            (rule "unionEqualsEmpty" (formula "13"))
                                                            (rule "andLeft" (formula "13"))
                                                            (rule "unionEqualsEmpty" (formula "93") (term "0"))
                                                            (rule "unionEqualsEmpty" (formula "93") (term "1"))
                                                            (rule "unionEqualsEmpty" (formula "28"))
                                                            (rule "andLeft" (formula "28"))
                                                            (rule "unionEqualsEmpty" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "unionEqualsEmpty" (formula "25"))
                                                             (builtin "One Step Simplification" (formula "25"))
                                                            (rule "andLeft" (formula "25"))
                                                            (rule "notLeft" (formula "25"))
                                                            (rule "notLeft" (formula "25"))
                                                            (rule "eqSymm" (formula "59"))
                                                            (rule "eqSymm" (formula "58"))
                                                            (rule "unionEqualsEmpty" (formula "25"))
                                                             (builtin "One Step Simplification" (formula "25"))
                                                            (rule "andLeft" (formula "25"))
                                                            (rule "notLeft" (formula "26"))
                                                            (rule "notLeft" (formula "25"))
                                                            (rule "eqSymm" (formula "58"))
                                                            (rule "eqSymm" (formula "57"))
                                                            (rule "unionEqualsEmpty" (formula "23"))
                                                             (builtin "One Step Simplification" (formula "23"))
                                                            (rule "andLeft" (formula "23"))
                                                            (rule "notLeft" (formula "23"))
                                                            (rule "notLeft" (formula "23"))
                                                            (rule "eqSymm" (formula "57"))
                                                            (rule "eqSymm" (formula "56"))
                                                            (rule "unionEqualsEmpty" (formula "23"))
                                                             (builtin "One Step Simplification" (formula "23"))
                                                            (rule "andLeft" (formula "23"))
                                                            (rule "notLeft" (formula "24"))
                                                            (rule "notLeft" (formula "23"))
                                                            (rule "eqSymm" (formula "56"))
                                                            (rule "eqSymm" (formula "55"))
                                                            (rule "unionEqualsEmpty" (formula "12"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "notLeft" (formula "12"))
                                                            (rule "notLeft" (formula "12"))
                                                            (rule "eqSymm" (formula "55"))
                                                            (rule "eqSymm" (formula "54"))
                                                            (rule "unionEqualsEmpty" (formula "11"))
                                                             (builtin "One Step Simplification" (formula "11"))
                                                            (rule "andLeft" (formula "11"))
                                                            (rule "notLeft" (formula "12"))
                                                            (rule "notLeft" (formula "11"))
                                                            (rule "eqSymm" (formula "54"))
                                                            (rule "eqSymm" (formula "53"))
                                                            (rule "unionEqualsEmpty" (formula "12"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "notLeft" (formula "13"))
                                                            (rule "notLeft" (formula "12"))
                                                            (rule "eqSymm" (formula "53"))
                                                            (rule "eqSymm" (formula "52"))
                                                            (rule "unionEqualsEmpty" (formula "11"))
                                                             (builtin "One Step Simplification" (formula "11"))
                                                            (rule "andLeft" (formula "11"))
                                                            (rule "notLeft" (formula "12"))
                                                            (rule "notLeft" (formula "11"))
                                                            (rule "eqSymm" (formula "52"))
                                                            (rule "eqSymm" (formula "51"))
                                                            (rule "unionEqualsEmpty" (formula "103") (term "0,0"))
                                                            (rule "disjointArrayRangeAllFields1" (formula "103") (term "0,0,0"))
                                                            (rule "replace_known_right" (formula "103") (term "0,0,0,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "103"))
                                                            (rule "disjointArrayRangeAllFields1" (formula "103") (term "0,0"))
                                                            (rule "replace_known_right" (formula "103") (term "0,0,0,0") (ifseqformula "61"))
                                                             (builtin "One Step Simplification" (formula "103"))
                                                            (rule "unionEqualsEmpty" (formula "21"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "andLeft" (formula "21"))
                                                            (rule "notLeft" (formula "22"))
                                                            (rule "notLeft" (formula "21"))
                                                            (rule "eqSymm" (formula "51"))
                                                            (rule "eqSymm" (formula "50"))
                                                            (rule "sortsDisjointModuloNull" (formula "51"))
                                                            (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "101"))
                                                             (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "111")))
                                                            (rule "false_right" (formula "51"))
                                                            (rule "sortsDisjointModuloNull" (formula "50"))
                                                            (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "110"))
                                                             (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "99")))
                                                            (rule "false_right" (formula "50"))
                                                            (rule "unionEqualsEmpty" (formula "21"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "andLeft" (formula "21"))
                                                            (rule "notLeft" (formula "22"))
                                                            (rule "notLeft" (formula "21"))
                                                            (rule "eqSymm" (formula "50"))
                                                            (rule "eqSymm" (formula "49"))
                                                            (rule "sortsDisjointModuloNull" (formula "50"))
                                                            (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "110"))
                                                             (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "102")))
                                                            (rule "false_right" (formula "50"))
                                                            (rule "sortsDisjointModuloNull" (formula "49"))
                                                            (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "109"))
                                                             (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "100")))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "unionEqualsEmpty" (formula "19"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "andLeft" (formula "19"))
                                                            (rule "notLeft" (formula "19"))
                                                            (rule "notLeft" (formula "19"))
                                                            (rule "eqSymm" (formula "49"))
                                                            (rule "eqSymm" (formula "48"))
                                                            (rule "sortsDisjointModuloNull" (formula "49"))
                                                            (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "109"))
                                                             (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "95")))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "sortsDisjointModuloNull" (formula "48"))
                                                            (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "93"))
                                                             (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "108")))
                                                            (rule "false_right" (formula "48"))
                                                            (rule "unionEqualsEmpty" (formula "19"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "andLeft" (formula "19"))
                                                            (rule "notLeft" (formula "20"))
                                                            (rule "notLeft" (formula "19"))
                                                            (rule "eqSymm" (formula "48"))
                                                            (rule "eqSymm" (formula "47"))
                                                            (rule "sortsDisjointModuloNull" (formula "48"))
                                                            (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "96"))
                                                             (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "108")))
                                                            (rule "false_right" (formula "48"))
                                                            (rule "sortsDisjointModuloNull" (formula "47"))
                                                            (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "94"))
                                                             (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "107")))
                                                            (rule "false_right" (formula "47"))
                                                            (rule "unionEqualsEmpty" (formula "99") (term "0"))
                                                            (rule "disjointArrayRangeAllFields1" (formula "99") (term "0,0"))
                                                            (rule "replace_known_right" (formula "99") (term "0,0,0,0") (ifseqformula "55"))
                                                             (builtin "One Step Simplification" (formula "99"))
                                                            (rule "disjointArrayRangeAllFields1" (formula "99") (term "0"))
                                                            (rule "replace_known_right" (formula "99") (term "0,0,0") (ifseqformula "56"))
                                                             (builtin "One Step Simplification" (formula "99"))
                                                            (rule "unionEqualsEmpty" (formula "99") (term "0"))
                                                            (rule "disjointArrayRangeAllFields1" (formula "99") (term "0,0"))
                                                            (rule "replace_known_right" (formula "99") (term "0,0,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "99"))
                                                            (rule "disjointArrayRangeAllFields1" (formula "99") (term "0"))
                                                            (rule "replace_known_right" (formula "99") (term "0,0,0") (ifseqformula "61"))
                                                             (builtin "One Step Simplification" (formula "99"))
                                                            (rule "unionEqualsEmpty" (formula "99"))
                                                            (rule "disjointArrayRangeAllFields1" (formula "99") (term "0"))
                                                            (rule "replace_known_right" (formula "99") (term "0,0,0") (ifseqformula "59"))
                                                             (builtin "One Step Simplification" (formula "99"))
                                                            (rule "disjointArrayRangeAllFields1" (formula "99"))
                                                            (rule "notRight" (formula "99"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "close" (formula "62") (ifseqformula "1"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "andRight" (formula "42"))
                                                            (branch "Case 1"
                                                               (rule "notRight" (formula "42"))
                                                               (rule "close" (formula "48") (ifseqformula "1"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "notRight" (formula "42"))
                                                               (rule "close" (formula "46") (ifseqformula "1"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "close" (formula "42") (ifseqformula "41"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "close" (formula "49") (ifseqformula "1"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "closeTrue" (formula "48"))
                              )
                           )
                           (branch "Precondition"
                              (rule "andRight" (formula "47"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "translateJavaSubInt" (formula "47") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "47") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                 (rule "close" (formula "47") (ifseqformula "4"))
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "wellFormedAnon" (formula "47"))
                                 (rule "wellFormedAnonEQ" (formula "47") (term "0") (ifseqformula "24"))
                                 (rule "wellFormedAnonEQ" (formula "47") (term "0,0") (ifseqformula "14"))
                                 (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "40"))
                                  (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "1")) (ifInst ""  (formula "13")) (ifInst ""  (formula "23")))
                                 (rule "closeTrue" (formula "47"))
                              )
                           )
                           (branch "Usage"
                               (builtin "One Step Simplification" (formula "41"))
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,1,1") (ifseqformula "24"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,1,1") (ifseqformula "14"))
                              (rule "andLeft" (formula "41"))
                              (rule "andLeft" (formula "41"))
                              (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "41"))
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "true_left" (formula "43"))
                              (rule "ifUnfold" (formula "49") (term "1") (inst "#boolv=x"))
                              (rule "variableDeclaration" (formula "49") (term "1") (newnames "x_3"))
                              (rule "inequality_comparison_simple" (formula "49") (term "1"))
                               (builtin "One Step Simplification" (formula "49"))
                              (rule "replace_known_left" (formula "49") (term "0,0,1,0") (ifseqformula "41"))
                               (builtin "One Step Simplification" (formula "49"))
                              (rule "ifSplit" (formula "49"))
                              (branch "if x_3 true"
                                  (builtin "One Step Simplification" (formula "50"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_3 false"
                                  (builtin "One Step Simplification" (formula "50"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "methodCallEmpty" (formula "49") (term "1"))
                                 (rule "tryEmpty" (formula "49") (term "1"))
                                 (rule "emptyModality" (formula "49") (term "1"))
                                 (rule "andRight" (formula "49"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "49"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "49"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "narrowSelectArrayType" (formula "49") (term "2,1") (ifseqformula "1") (ifseqformula "48"))
                                          (rule "close" (formula "49") (ifseqformula "37"))
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "49"))
                                          (branch "Case 1"
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "Definition_axiom_for_sortednessFromPartitionSorted_in_de_wiesler_Sorter" (formula "42") (term "0") (userinteraction))
                                             (rule "close" (formula "49") (ifseqformula "42"))
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "49"))
                                              (builtin "Use Dependency Contract" (formula "49") (ifInst ""  (formula "35")) (contract "de.wiesler.Storage[java.lang.Object::<inv>()].JML accessible clause.0") (userinteraction))
                                             (rule "wellFormedAnon" (formula "43") (term "1,1,0,0,0"))
                                             (rule "wellFormedAnonEQ" (formula "43") (term "0,1,0,0,0") (ifseqformula "24"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,0,0,0,0") (ifseqformula "24"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,1,0,0,0,0") (ifseqformula "14"))
                                             (rule "wellFormedAnonEQ" (formula "43") (term "0,1,1,0,0,0") (ifseqformula "24"))
                                             (rule "wellFormedAnonEQ" (formula "43") (term "0,0,1,0,0,0") (ifseqformula "14"))
                                             (rule "wellFormedAnonEQ" (formula "43") (term "0,0,1,1,0,0,0") (ifseqformula "14"))
                                             (rule "replace_known_left" (formula "43") (term "1,0,0") (ifseqformula "35"))
                                              (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "48")) (ifInst ""  (formula "3")) (ifInst ""  (formula "1")) (ifInst ""  (formula "13")) (ifInst ""  (formula "23")) (ifInst ""  (formula "1")) (ifInst ""  (formula "13")) (ifInst ""  (formula "23")) (ifInst ""  (formula "40")) (ifInst ""  (formula "50")) (ifInst ""  (formula "35")))
                                             (rule "notLeft" (formula "43"))
                                             (rule "disjointDefinition" (formula "43"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1,0,0"))
                                             (rule "add_literals" (formula "9") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "10"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                             (rule "jmod_axiom" (formula "31") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "31"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1"))
                                             (rule "mul_literals" (formula "9") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0"))
                                             (rule "qeq_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "distributeIntersection_2" (formula "42") (term "0"))
                                             (rule "unionEqualsEmpty" (formula "42"))
                                             (rule "disjointArrayRangeAllFields2" (formula "42") (term "1"))
                                             (rule "eqSymm" (formula "42") (term "0,0,1"))
                                             (rule "sortsDisjointModuloNull" (formula "42") (term "0,0,1"))
                                             (rule "replace_known_right" (formula "42") (term "1,0,0,1") (ifseqformula "48"))
                                              (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "47")))
                                             (rule "newSym_eq" (formula "30") (inst "newSymDef=mul(int::final(result_22,
               de.wiesler.PartitionResult::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                             (rule "times_zero_1" (formula "30") (term "1,1"))
                                             (rule "add_zero_right" (formula "30") (term "1"))
                                             (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "30"))
                                             (rule "eqSymm" (formula "31"))
                                             (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
                                             (rule "applyEq" (formula "27") (term "2,0") (ifseqformula "31"))
                                             (rule "applyEq" (formula "38") (term "5,0") (ifseqformula "31"))
                                             (rule "applyEq" (formula "33") (term "5,0,1") (ifseqformula "31"))
                                             (rule "applyEq" (formula "28") (term "5,0") (ifseqformula "31"))
                                             (rule "applyEq" (formula "29") (term "5,0") (ifseqformula "31"))
                                             (rule "applyEq" (formula "33") (term "1,7,0,1") (ifseqformula "31"))
                                             (rule "applyEq" (formula "42") (term "5,0") (ifseqformula "31"))
                                             (rule "applyEq" (formula "34") (term "2,0") (ifseqformula "31"))
                                             (rule "applyEq" (formula "39") (term "5,0") (ifseqformula "31"))
                                             (rule "applyEq" (formula "38") (term "7,0") (ifseqformula "31"))
                                             (rule "applyEq" (formula "29") (term "7,0") (ifseqformula "31"))
                                             (rule "applyEq" (formula "32") (term "0,2,0") (ifseqformula "31"))
                                             (rule "commuteIntersection" (formula "43") (term "0"))
                                             (rule "close" (formula "43") (ifseqformula "21"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "closeTrue" (formula "49"))
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "allRight" (formula "49") (inst "sk=f_0"))
                                    (rule "allRight" (formula "49") (inst "sk=o_0"))
                                    (rule "orRight" (formula "49"))
                                    (rule "orRight" (formula "49"))
                                    (rule "orRight" (formula "49"))
                                    (rule "eqSymm" (formula "52"))
                                    (rule "eqSymm" (formula "49") (term "0,0,0,1"))
                                    (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=f_0_0"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "25"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "15"))
                                    (rule "eqSymm" (formula "53"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "51"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "50"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "16"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                    (rule "elementOfArrayRange" (formula "1") (term "1,0,0,0,0") (inst "iv=iv"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,1,1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,1,0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "51"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "commute_and" (formula "1") (term "0,0,0"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " !f_0 = java.lang.Object::<created> & o_0 = result_21 | !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE) TRUE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_partition<<anonHeapFunction>> = TRUE) TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "orRight" (formula "46"))
                                          (rule "orRight" (formula "46"))
                                          (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "eqSymm" (formula "57"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,1,1") (ifseqformula "46"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")) (ifInst ""  (formula "45")))
                                          (rule "true_left" (formula "1"))
                                          (rule "replace_known_right" (formula "55") (term "0,0") (ifseqformula "43"))
                                           (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "44")))
                                          (rule "closeTrue" (formula "55"))
                                       )
                                       (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_partition<<anonHeapFunction>> = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "eqSymm" (formula "54"))
                                          (rule "orLeft" (formula "1"))
                                          (branch "!f_0 = java.lang.Object::<created> & o_0 = result_21"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "applyEq" (formula "45") (term "1,0,0,0,0,1") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "45") (term "0,0,0,1") (ifseqformula "48"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "52") (term "0"))
                                             (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "47"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "false_right" (formula "52"))
                                             (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "49"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "notRight" (formula "53"))
                                             (rule "applyEq" (formula "53") (term "0") (ifseqformula "2"))
                                             (rule "disjointAllFields" (formula "53") (ifseqformula "23"))
                                             (rule "false_right" (formula "53"))
                                             (rule "applyEq" (formula "53") (term "1,1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "46") (term "1,0,0,0,1") (ifseqformula "2"))
                                             (rule "replace_known_left" (formula "46") (term "0,0,1") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "false_right" (formula "46"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                             (rule "replace_known_right" (formula "1") (ifseqformula "48"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE)"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "44"))
                                             (rule "replace_known_right" (formula "55") (term "0,1") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "43")))
                                             (rule "closeTrue" (formula "55"))
                                          )
                                       )
                                    )
                                    (branch " !f_0 = java.lang.Object::<created> & o_0 = result_21 | !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE) FALSE"
                                       (rule "orRight" (formula "45"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_partition<<anonHeapFunction>> = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "44"))
                                          (rule "orRight" (formula "44"))
                                          (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "58"))
                                          (rule "replace_known_right" (formula "57") (term "0,0") (ifseqformula "46"))
                                           (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "43")))
                                          (rule "closeTrue" (formula "57"))
                                       )
                                       (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_createArray<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_partition<<anonHeapFunction>> = TRUE) FALSE"
                                          (rule "close" (formula "56") (ifseqformula "1"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "Null Reference (partition = null)"
                     (rule "false_right" (formula "43"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (partition = null)"
                  (rule "false_right" (formula "43"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Exceptional Post (partition)"
             (builtin "One Step Simplification" (formula "24"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "translateJavaSubInt" (formula "24") (term "3,0,1,1,0,1,0,1,1"))
            (rule "translateJavaSubInt" (formula "24") (term "7,0,1,1,0,1,0,1,0,1,1"))
            (rule "translateJavaSubInt" (formula "24") (term "2,0,0,1,0,0"))
            (rule "translateJavaSubInt" (formula "24") (term "1,1,0,0,0,0,1,0,1,0,1,1"))
            (rule "translateJavaMod" (formula "24") (term "0,0,0,0,0,0,0,1,0,1,0,1,1"))
            (rule "andLeft" (formula "24"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,0") (ifseqformula "24"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1,0") (ifseqformula "14"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "27"))
            (rule "notLeft" (formula "25"))
            (rule "close" (formula "29") (ifseqformula "28"))
         )
         (branch "Pre (partition)"
             (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")))
            (rule "andRight" (formula "28"))
            (branch "Case 1"
               (rule "andRight" (formula "28"))
               (branch "Case 1"
                  (rule "andRight" (formula "28"))
                  (branch "Case 1"
                     (rule "andRight" (formula "28"))
                     (branch "Case 1"
                        (rule "andRight" (formula "28"))
                        (branch "Case 1"
                           (rule "inEqSimp_leqRight" (formula "28"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                           (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "10"))
                           (rule "mul_literals" (formula "10") (term "1,0,0"))
                           (rule "add_literals" (formula "10") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0"))
                           (rule "inEqSimp_homoInEq0" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                           (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1"))
                           (rule "polySimp_rightDist" (formula "10") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                           (rule "mul_literals" (formula "10") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "6") (term "0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "closeFalse" (formula "6"))
                        )
                        (branch "Case 2"
                           (rule "inEqSimp_leqRight" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                           (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "10"))
                           (rule "mul_literals" (formula "10") (term "1,0,0"))
                           (rule "add_literals" (formula "10") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0"))
                           (rule "inEqSimp_homoInEq0" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                           (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1"))
                           (rule "polySimp_rightDist" (formula "10") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                           (rule "mul_literals" (formula "10") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "10"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Case 2"
                        (rule "inEqSimp_leqRight" (formula "28"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "10"))
                        (rule "mul_literals" (formula "10") (term "1,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0"))
                        (rule "inEqSimp_homoInEq0" (formula "11"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1"))
                        (rule "polySimp_rightDist" (formula "10") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                        (rule "mul_literals" (formula "10") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0"))
                        (rule "add_zero_right" (formula "7") (term "0,0"))
                        (rule "qeq_literals" (formula "7") (term "0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                        (rule "andLeft" (formula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "8"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0"))
                        (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                        (rule "add_literals" (formula "8") (term "1,1,0"))
                        (rule "times_zero_1" (formula "8") (term "1,0"))
                        (rule "add_zero_right" (formula "8") (term "0"))
                        (rule "leq_literals" (formula "8"))
                        (rule "closeFalse" (formula "8"))
                     )
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "28"))
                     (branch "Case 1"
                        (rule "translateJavaAddInt" (formula "28") (term "1"))
                        (rule "add_literals" (formula "28") (term "1"))
                        (rule "close" (formula "28") (ifseqformula "16"))
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "28"))
                        (branch "Case 1"
                           (rule "allRight" (formula "28") (inst "sk=b_0") (userinteraction))
                           (rule "instAll" (formula "28") (term "1,0,0") (ifseqformula "17") (userinteraction))
                           (rule "impRight" (formula "29"))
                           (rule "andLeft" (formula "1"))
                           (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "31"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "inEqSimp_gtToGeq" (formula "11"))
                           (rule "mul_literals" (formula "11") (term "1,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                           (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "0"))
                           (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_leqRight" (formula "25"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "13"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0"))
                           (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "19"))
                           (rule "mul_literals" (formula "3") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1"))
                           (rule "mul_literals" (formula "12") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                           (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "12"))
                           (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0"))
                           (rule "qeq_literals" (formula "9") (term "0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                           (rule "leq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "28"))
                           (branch "Case 1"
                              (rule "translateJavaSubInt" (formula "28") (term "0"))
                              (rule "polySimp_elimSub" (formula "28") (term "0"))
                              (rule "polySimp_addComm0" (formula "28") (term "0"))
                              (rule "close" (formula "28") (ifseqformula "9"))
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "28"))
                              (branch "Case 1"
                                 (rule "translateJavaSubInt" (formula "28") (term "0"))
                                 (rule "polySimp_elimSub" (formula "28") (term "0"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0"))
                                 (rule "close" (formula "28") (ifseqformula "10"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "28"))
                                 (branch "Case 1"
                                     (builtin "Use Dependency Contract" (formula "28") (ifInst ""  (formula "14") (term "0")) (ifInst ""  (formula "14")) (contract "de.wiesler.Storage[java.lang.Object::<inv>()].JML accessible clause.0") (userinteraction))
                                    (rule "wellFormedAnonEQ" (formula "23") (term "1,1,0,0") (ifseqformula "14"))
                                    (rule "replace_known_left" (formula "23") (term "1,0") (ifseqformula "11"))
                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")) (ifInst ""  (formula "3")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "13")) (ifInst ""  (formula "29")) (ifInst ""  (formula "11")))
                                    (rule "closeFalse" (formula "23"))
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "28"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "28"))
                                       (branch "Case 1"
                                          (rule "disjointDefinition" (formula "28"))
                                           (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "23")))
                                          (rule "closeTrue" (formula "28"))
                                       )
                                       (branch "Case 2"
                                          (rule "disjointDefinition" (formula "28"))
                                          (rule "close" (formula "28") (ifseqformula "12"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "disjointDefinition" (formula "28"))
                                       (rule "close" (formula "28") (ifseqformula "21"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "andRight" (formula "28"))
                  (branch "Case 1"
                     (rule "andRight" (formula "28"))
                     (branch "Case 1"
                        (rule "andRight" (formula "28"))
                        (branch "Case 1"
                           (rule "wellFormedAnonEQ" (formula "28") (ifseqformula "14"))
                           (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "1")))
                           (rule "closeTrue" (formula "28"))
                        )
                        (branch "Case 2"
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (ifseqformula "14"))
                           (rule "orRight" (formula "28"))
                           (rule "close" (formula "28") (ifseqformula "2"))
                        )
                     )
                     (branch "Case 2"
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (ifseqformula "14"))
                        (rule "orRight" (formula "28"))
                        (rule "close" (formula "28") (ifseqformula "15"))
                     )
                  )
                  (branch "Case 2"
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (ifseqformula "14"))
                     (rule "orRight" (formula "28"))
                     (rule "close" (formula "28") (ifseqformula "3"))
                  )
               )
            )
            (branch "Case 2"
               (rule "translateJavaSubInt" (formula "28") (term "0,0"))
               (rule "polySimp_elimSub" (formula "28") (term "0,0"))
               (rule "polySimp_addComm0" (formula "28") (term "0,0"))
               (rule "measuredByCheck" (formula "28") (ifseqformula "4"))
               (rule "precOfPair" (formula "28"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "orRight" (formula "28"))
               (rule "precOfInt" (formula "28"))
               (rule "precOfInt" (formula "29"))
               (rule "less_literals" (formula "29") (term "1"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "leq_literals" (formula "29"))
               (rule "closeTrue" (formula "29"))
            )
         )
      )
   )
)
(branch "Exceptional Post (createArray)"
    (builtin "One Step Simplification" (formula "13"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "andLeft" (formula "13"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,0") (ifseqformula "13"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "16"))
   (rule "notLeft" (formula "14"))
   (rule "close" (formula "18") (ifseqformula "17"))
)
(branch "Pre (createArray)"
    (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
   (rule "qeq_literals" (formula "14"))
   (rule "closeTrue" (formula "14"))
)
)
}
