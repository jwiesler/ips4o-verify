\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Apr 16 23:39:36 CEST 2023
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , finalFields-finalFields\\:immutable
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Sun Apr 16 23:39:36 CEST 2023
contract=de.wiesler.Sorter[de.wiesler.Sorter\\:\\:sample_sort_recurse_on([I,int,int,de.wiesler.Storage,[I,int,boolean,int)].JML normal_behavior operation contract.0
name=de.wiesler.Sorter[de.wiesler.Sorter\\:\\:sample_sort_recurse_on([I,int,int,de.wiesler.Storage,[I,int,boolean,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "2" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "3" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "4" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "5" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "6" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "7" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "8" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "9" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "10" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "11" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "12" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "13" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "14" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "15" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "16" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "17" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "18" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "19" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "20" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "21" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "22" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "525718")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "translateJavaSubInt" (formula "1") (term "1,1,0,1,0,1,1,1,1,1,1,1,1,0"))
(rule "translateJavaSubInt" (formula "1") (term "3,0,0,1,1,1,1,1,1,1,1,1,0"))
(rule "translateJavaSubInt" (formula "1") (term "2,0,2,0,0,0,0,1,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "7,0,0,1,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "6,0,0,1,1,1,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "6,0,1,0,1,1,1,1,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "7,0,1,0,1,1,1,1,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "1,1,0,1,1,1,1,0"))
(rule "translateJavaMod" (formula "1") (term "0,0,0,1,0,1,1,1,1,1,1,1,1,0"))
(rule "translateJavaAddInt" (formula "1") (term "6,0,1,1,0,1,1,1,1,1,1,1,1,0"))
(rule "translateJavaSubInt" (formula "1") (term "7,0,1,1,0,1,1,1,1,1,1,1,1,0"))
(rule "translateJavaSubInt" (formula "1") (term "0,0,1,1,0"))
(rule "translateJavaSubInt" (formula "1") (term "0,0,1,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "17"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "19"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "19"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "19"))
(rule "notLeft" (formula "23"))
(rule "andLeft" (formula "23"))
(rule "notLeft" (formula "24"))
(rule "notLeft" (formula "23"))
(rule "eqSymm" (formula "26") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "17") (term "1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "25"))
 (builtin "One Step Simplification" (formula "2"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "23"))
 (builtin "One Step Simplification" (formula "3"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "24"))
 (builtin "One Step Simplification" (formula "4"))
(rule "polySimp_elimSub" (formula "26") (term "2,0,2,0,0,0,0,1,0,1"))
(rule "mul_literals" (formula "26") (term "1,2,0,2,0,0,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "26") (term "7,0,1,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "26") (term "1,7,0,1,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "5") (term "0,0"))
(rule "polySimp_elimSub" (formula "9") (term "0"))
(rule "polySimp_elimSub" (formula "13") (term "1"))
(rule "polySimp_elimSub" (formula "17") (term "7,0,1,1"))
(rule "mul_literals" (formula "17") (term "1,7,0,1,1"))
(rule "polySimp_elimSub" (formula "18") (term "3,0"))
(rule "polySimp_elimSub" (formula "17") (term "0,1,0,1"))
(rule "mul_literals" (formula "17") (term "1,0,1,0,1"))
(rule "polySimp_addComm0" (formula "26") (term "6,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "26") (term "6,0,1,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "26") (term "7,0,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "17") (term "6,0,1,1"))
(rule "polySimp_addComm0" (formula "26") (term "2,0,2,0,0,0,0,1,0,1"))
(rule "polySimp_addComm0" (formula "26") (term "7,0,1,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "5") (term "0,0"))
(rule "polySimp_addComm0" (formula "9") (term "0"))
(rule "polySimp_addComm0" (formula "13") (term "1"))
(rule "polySimp_addComm0" (formula "17") (term "7,0,1,1"))
(rule "polySimp_addComm0" (formula "18") (term "3,0"))
(rule "polySimp_addComm0" (formula "17") (term "0,1,0,1"))
(rule "disjointDefinition" (formula "21"))
 (builtin "One Step Simplification" (formula "21"))
(rule "notLeft" (formula "21"))
(rule "disjointDefinition" (formula "19"))
(rule "disjointDefinition" (formula "20"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "inEqSimp_commuteLeq" (formula "10"))
(rule "assignment" (formula "26") (term "1"))
 (builtin "One Step Simplification" (formula "26"))
(rule "elementOfUnion" (formula "26") (term "0,0,0,0,1,0,1"))
(rule "elementOfArrayRange" (formula "26") (term "0,0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,0,1,0,0,0,0,0,1,0,1"))
(rule "commuteIntersection" (formula "19") (term "0"))
(rule "commuteIntersection" (formula "20") (term "0"))
(rule "commute_or" (formula "17") (term "0,1"))
(rule "commute_and" (formula "17") (term "1"))
(rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_sample_sort_recurse_on,savedHeapBefore_sample_sort_recurse_on,_storageBefore_sample_sort_recurse_on,_valuesBefore_sample_sort_recurse_on,inner_beginBefore_sample_sort_recurse_on,inner_endBefore_sample_sort_recurse_on"))
 (builtin "One Step Simplification" (formula "26"))
(rule "variableDeclarationAssign" (formula "26") (term "1"))
(rule "variableDeclaration" (formula "26") (term "1") (newnames "inner_begin"))
(rule "compound_addition_2" (formula "26") (term "1") (inst "#v0=x") (inst "#v1=x_1"))
(rule "variableDeclarationAssign" (formula "26") (term "1"))
(rule "variableDeclaration" (formula "26") (term "1") (newnames "x"))
(rule "assignment" (formula "26") (term "1"))
 (builtin "One Step Simplification" (formula "26"))
(rule "variableDeclarationAssign" (formula "26") (term "1"))
(rule "variableDeclaration" (formula "26") (term "1") (newnames "x_1"))
(rule "assignment_array2" (formula "26"))
(branch "Normal Execution (_bucket_starts != null)"
    (builtin "One Step Simplification" (formula "26"))
   (rule "assignmentAdditionInt" (formula "26") (term "1"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "translateJavaAddInt" (formula "26") (term "0,1,0"))
   (rule "variableDeclarationAssign" (formula "26") (term "1"))
   (rule "variableDeclaration" (formula "26") (term "1") (newnames "inner_end"))
   (rule "compound_addition_2" (formula "26") (term "1") (inst "#v0=x") (inst "#v1=x_1"))
   (rule "variableDeclarationAssign" (formula "26") (term "1"))
   (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_2"))
   (rule "assignment" (formula "26") (term "1"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "variableDeclarationAssign" (formula "26") (term "1"))
   (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_3"))
   (rule "eval_order_array_access5" (formula "26") (term "1") (inst "#ar1=x_arr") (inst "#v1=x_4"))
   (rule "variableDeclarationAssign" (formula "26") (term "1"))
   (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_arr"))
   (rule "assignment" (formula "26") (term "1"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "variableDeclarationAssign" (formula "26") (term "1"))
   (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_4"))
   (rule "assignmentAdditionInt" (formula "26") (term "1"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "translateJavaAddInt" (formula "26") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "26") (term "0,1,0"))
   (rule "assignment_array2" (formula "26"))
   (branch "Normal Execution (x_arr != null)"
       (builtin "One Step Simplification" (formula "26"))
      (rule "assignmentAdditionInt" (formula "26") (term "1"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "translateJavaAddInt" (formula "26") (term "0,1,0"))
       (builtin "Block Contract (Internal)" (formula "26") (newnames "exc_0,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
      (branch "Validity"
          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "1")))
          (builtin "One Step Simplification" (formula "27"))
         (rule "translateJavaSubInt" (formula "22") (term "0,0"))
         (rule "eqSymm" (formula "27") (term "0,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "22") (term "0,0"))
         (rule "polySimp_addComm0" (formula "22") (term "0,0"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "exc_0_1"))
         (rule "assignment" (formula "26") (term "1"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "emptyStatement" (formula "26") (term "1"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "emptyStatement" (formula "26") (term "1"))
         (rule "tryEmpty" (formula "26") (term "1"))
         (rule "blockEmptyLabel" (formula "26") (term "1"))
         (rule "blockEmpty" (formula "26") (term "1"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (rule "emptyModality" (formula "26") (term "1"))
         (rule "andRight" (formula "26"))
         (branch "Case 1"
            (rule "andRight" (formula "26"))
            (branch "Case 1"
                (builtin "One Step Simplification" (formula "26"))
               (rule "closeTrue" (formula "26"))
            )
            (branch "Case 2"
               (rule "Contract_axiom_for_bucketStartsOrdering_in_Functions" (formula "26") (term "0,1") (userinteraction))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "25")))
                (builtin "One Step Simplification" (formula "27"))
               (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "27"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "polySimp_homoEq" (formula "17") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,1"))
               (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1,1"))
               (rule "inEqSimp_leqRight" (formula "22"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "12"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0"))
               (rule "inEqSimp_homoInEq0" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
               (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0"))
               (rule "jmod_axiom" (formula "18") (term "0,1,1,1"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,1,1"))
               (rule "polySimp_sepNegMonomial" (formula "18") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,1"))
               (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1"))
               (rule "polySimp_sepNegMonomial" (formula "18") (term "1,1,1"))
               (rule "polySimp_mulLiterals" (formula "18") (term "0,1,1,1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "polySimp_elimOne" (formula "12") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "polySimp_elimOne" (formula "10") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "11"))
               (rule "qeq_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "26"))
            (rule "closeTrue" (formula "26"))
         )
      )
      (branch "Precondition"
         (rule "andRight" (formula "26"))
         (branch "Case 1"
             (builtin "One Step Simplification" (formula "26"))
            (rule "translateJavaSubInt" (formula "26") (term "0,0"))
            (rule "polySimp_homoEq" (formula "17") (term "0,1,1"))
            (rule "polySimp_elimSub" (formula "26") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1"))
            (rule "polySimp_addComm0" (formula "26") (term "0,0"))
            (rule "close" (formula "26") (ifseqformula "5"))
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "1")))
            (rule "closeTrue" (formula "26"))
         )
      )
      (branch "Usage"
          (builtin "One Step Simplification" (formula "27"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "22"))
          (builtin "One Step Simplification" (formula "24"))
         (rule "true_left" (formula "24"))
         (rule "ifUnfold" (formula "28") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_5"))
         (rule "inequality_comparison_simple" (formula "28") (term "1"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "replace_known_left" (formula "28") (term "0,0,1,0") (ifseqformula "22"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "ifSplit" (formula "28"))
         (branch "if x_5 true"
             (builtin "One Step Simplification" (formula "29"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_5 false"
             (builtin "One Step Simplification" (formula "29"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "blockEmpty" (formula "28") (term "1"))
             (builtin "Block Contract (Internal)" (formula "28") (newnames "exc_1,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,o,f"))
            (branch "Validity"
                (builtin "One Step Simplification" (formula "29"))
                (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "1")))
               (rule "translateJavaAddInt" (formula "29") (term "0,2,1,1,0,0,1,0,0,1"))
               (rule "translateJavaAddInt" (formula "29") (term "0,2,1,1,0,1,0,1,0,1,1,0,0,1"))
               (rule "translateJavaAddInt" (formula "29") (term "0,2,0,1,1,1,1,0,1,1,0,0,1"))
               (rule "translateJavaAddInt" (formula "29") (term "0,2,0,1,1,0,1,0,1,1,0,0,1"))
               (rule "translateJavaAddInt" (formula "29") (term "0,2,1,1,0,1,1,1,0,1,1,0,0,1"))
               (rule "translateJavaAddInt" (formula "29") (term "0,2,0,1,0,1,0,0,1"))
               (rule "translateJavaAddInt" (formula "29") (term "0,2,0,0,0,1,1,1,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "24") (term "0,0"))
               (rule "eqSymm" (formula "29") (term "0,0,1,0,1"))
               (rule "polySimp_elimSub" (formula "24") (term "0,0"))
               (rule "polySimp_addComm0" (formula "29") (term "0,2,1,1,0,0,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "29") (term "0,2,1,1,0,1,0,1,0,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "29") (term "0,2,0,1,1,1,1,0,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "29") (term "0,2,0,1,1,0,1,0,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "29") (term "0,2,1,1,0,1,1,1,0,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "29") (term "0,2,0,1,0,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "29") (term "0,2,0,0,0,1,1,1,0,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "24") (term "0,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,1,0,1,0,1,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0,1,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,0,1,0,1,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,1,1,0,1,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,1,1,1,0,1,1,0,0,1"))
               (rule "variableDeclarationAssign" (formula "28") (term "1"))
               (rule "variableDeclaration" (formula "28") (term "1") (newnames "exc_1_1"))
               (rule "assignment" (formula "28") (term "1"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "emptyStatement" (formula "28") (term "1"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "emptyStatement" (formula "28") (term "1"))
               (rule "tryEmpty" (formula "28") (term "1"))
               (rule "blockEmptyLabel" (formula "28") (term "1"))
               (rule "blockEmpty" (formula "28") (term "1"))
               (rule "methodCallEmpty" (formula "28") (term "1"))
               (rule "emptyModality" (formula "28") (term "1"))
               (rule "andRight" (formula "28"))
               (branch "Case 1"
                  (rule "andRight" (formula "28"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "closeTrue" (formula "28"))
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "28"))
                     (branch "Case 1"
                        (rule "andRight" (formula "28"))
                        (branch "Case 1"
                           (rule "andRight" (formula "28"))
                           (branch "Case 1"
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "polySimp_homoEq" (formula "17") (term "0,1,1"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1,1"))
                              (rule "inEqSimp_geqRight" (formula "28"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0"))
                              (rule "jmod_axiom" (formula "18") (term "0,1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,1,1"))
                              (rule "polySimp_sepNegMonomial" (formula "18") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1"))
                              (rule "polySimp_sepNegMonomial" (formula "18") (term "1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1,1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "19") (term "0") (inst "b=b"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "translateJavaAddInt" (formula "19") (term "0,2,0,0,1,0"))
                              (rule "translateJavaSubInt" (formula "19") (term "0,1,0"))
                              (rule "polySimp_elimSub" (formula "19") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,2,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                              (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "0,0,1,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,0,0,1,1,0"))
                              (rule "nnf_imp2or" (formula "19") (term "0"))
                              (rule "nnf_notAnd" (formula "19") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                              (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                              (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "18") (term "0,0,1") (inst "b=b"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "translateJavaAddInt" (formula "18") (term "3,0,1,0,0,1"))
                              (rule "translateJavaAddInt" (formula "18") (term "2,0,1,0,0,1"))
                              (rule "translateJavaMod" (formula "18") (term "0,1,0,0,0,1"))
                              (rule "translateJavaAddInt" (formula "18") (term "0,2,1,3,0,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,2,1,3,0,1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,0,1"))
                              (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,0,1"))
                              (rule "jmod_axiom" (formula "18") (term "0,1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,0,1"))
                              (rule "polySimp_homoEq" (formula "18") (term "1,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,0,0,1"))
                              (rule "polySimp_sepPosMonomial" (formula "18") (term "1,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0,0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0,0,1"))
                              (rule "nnf_imp2or" (formula "18") (term "0,0,1"))
                              (rule "nnf_notAnd" (formula "18") (term "0,0,0,1"))
                              (rule "nnf_notAnd" (formula "18") (term "0,0,0,0,1"))
                              (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,0,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,0,0,1"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0,0,1"))
                              (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,0,0,1"))
                              (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,0,1"))
                              (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0,0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0,0,1"))
                              (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "16") (term "0") (inst "b=b"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "translateJavaAddInt" (formula "16") (term "0,2,5,0,1,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,2,5,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "16") (term "0"))
                              (rule "nnf_notAnd" (formula "16") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                              (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "17") (term "0") (inst "b=b"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "translateJavaAddInt" (formula "17") (term "0,2,5,0,1,0"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,2,5,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "17") (term "0"))
                              (rule "nnf_notAnd" (formula "17") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                              (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "22"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "translateJavaMulInt" (formula "22") (term "1,1,0,0,0,0,0,1,0,0"))
                              (rule "translateJavaMulInt" (formula "22") (term "1,1,0,0,0,0,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,1,0,0,0,0,0,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,1,0,0,0,0,1,0,0"))
                              (rule "andLeft" (formula "22"))
                              (rule "andLeft" (formula "23"))
                              (rule "andLeft" (formula "22"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "22"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "23"))
                              (rule "andLeft" (formula "22"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "24"))
                              (rule "notLeft" (formula "23"))
                              (rule "andLeft" (formula "22"))
                              (rule "andLeft" (formula "28"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "22"))
                              (rule "notLeft" (formula "24"))
                              (rule "andLeft" (formula "29"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "22"))
                              (rule "notLeft" (formula "24"))
                              (rule "andLeft" (formula "30"))
                              (rule "andLeft" (formula "24"))
                              (rule "notLeft" (formula "23"))
                              (rule "andLeft" (formula "22"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "24"))
                              (rule "notLeft" (formula "23"))
                              (rule "andLeft" (formula "22"))
                              (rule "andLeft" (formula "32"))
                              (rule "andLeft" (formula "24"))
                              (rule "notLeft" (formula "23"))
                              (rule "andLeft" (formula "22"))
                              (rule "andLeft" (formula "33"))
                              (rule "notLeft" (formula "23"))
                              (rule "notLeft" (formula "22"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "disjointDefinition" (formula "58"))
                               (builtin "One Step Simplification" (formula "58"))
                              (rule "notLeft" (formula "58"))
                              (rule "disjointDefinition" (formula "57"))
                               (builtin "One Step Simplification" (formula "57"))
                              (rule "notLeft" (formula "57"))
                              (rule "disjointDefinition" (formula "56"))
                               (builtin "One Step Simplification" (formula "56"))
                              (rule "notLeft" (formula "56"))
                              (rule "eqSymm" (formula "58"))
                              (rule "disjointDefinition" (formula "55"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "notLeft" (formula "55"))
                              (rule "eqSymm" (formula "57"))
                              (rule "disjointDefinition" (formula "54"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "notLeft" (formula "54"))
                              (rule "eqSymm" (formula "56"))
                              (rule "disjointDefinition" (formula "53"))
                               (builtin "One Step Simplification" (formula "53"))
                              (rule "notLeft" (formula "53"))
                              (rule "eqSymm" (formula "55"))
                              (rule "disjointDefinition" (formula "52"))
                               (builtin "One Step Simplification" (formula "52"))
                              (rule "notLeft" (formula "52"))
                              (rule "eqSymm" (formula "54"))
                              (rule "disjointDefinition" (formula "51"))
                               (builtin "One Step Simplification" (formula "51"))
                              (rule "notLeft" (formula "51"))
                              (rule "eqSymm" (formula "53"))
                              (rule "disjointDefinition" (formula "50"))
                               (builtin "One Step Simplification" (formula "50"))
                              (rule "notLeft" (formula "50"))
                              (rule "eqSymm" (formula "52"))
                              (rule "disjointDefinition" (formula "49"))
                               (builtin "One Step Simplification" (formula "49"))
                              (rule "notLeft" (formula "49"))
                              (rule "eqSymm" (formula "51"))
                              (rule "disjointDefinition" (formula "48"))
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "notLeft" (formula "48"))
                              (rule "eqSymm" (formula "50"))
                              (rule "disjointDefinition" (formula "47"))
                               (builtin "One Step Simplification" (formula "47"))
                              (rule "notLeft" (formula "47"))
                              (rule "eqSymm" (formula "49"))
                              (rule "disjointDefinition" (formula "46"))
                               (builtin "One Step Simplification" (formula "46"))
                              (rule "notLeft" (formula "46"))
                              (rule "eqSymm" (formula "48"))
                              (rule "disjointDefinition" (formula "45"))
                               (builtin "One Step Simplification" (formula "45"))
                              (rule "notLeft" (formula "45"))
                              (rule "eqSymm" (formula "47"))
                              (rule "disjointDefinition" (formula "44"))
                               (builtin "One Step Simplification" (formula "44"))
                              (rule "notLeft" (formula "44"))
                              (rule "eqSymm" (formula "46"))
                              (rule "disjointDefinition" (formula "43"))
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "notLeft" (formula "43"))
                              (rule "disjointDefinition" (formula "42"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "notLeft" (formula "42"))
                              (rule "eqSymm" (formula "44"))
                              (rule "disjointDefinition" (formula "41"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "notLeft" (formula "41"))
                              (rule "eqSymm" (formula "43"))
                              (rule "disjointDefinition" (formula "40"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "notLeft" (formula "40"))
                              (rule "disjointDefinition" (formula "39"))
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "notLeft" (formula "39"))
                              (rule "disjointDefinition" (formula "38"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "notLeft" (formula "38"))
                              (rule "disjointDefinition" (formula "37"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "notLeft" (formula "37"))
                              (rule "disjointDefinition" (formula "36"))
                               (builtin "One Step Simplification" (formula "36"))
                              (rule "notLeft" (formula "36"))
                              (rule "disjointDefinition" (formula "35"))
                               (builtin "One Step Simplification" (formula "35"))
                              (rule "notLeft" (formula "35"))
                              (rule "disjointDefinition" (formula "34"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "notLeft" (formula "34"))
                              (rule "disjointDefinition" (formula "33"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "notLeft" (formula "33"))
                              (rule "disjointDefinition" (formula "31"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "notLeft" (formula "31"))
                              (rule "disjointDefinition" (formula "31"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "notLeft" (formula "31"))
                              (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "30"))
                              (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "30"))
                              (rule "distributeIntersection" (formula "20") (term "0"))
                              (rule "distributeIntersection" (formula "21") (term "0"))
                              (rule "unionEqualsEmpty" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "unionEqualsEmpty" (formula "22"))
                              (rule "andLeft" (formula "22"))
                              (rule "distributeIntersection" (formula "21") (term "0"))
                              (rule "distributeIntersection" (formula "20") (term "0"))
                              (rule "distributeIntersection" (formula "23") (term "0"))
                              (rule "distributeIntersection" (formula "22") (term "0"))
                              (rule "distributeIntersection" (formula "21") (term "1,0"))
                              (rule "distributeIntersection" (formula "21") (term "0,0"))
                              (rule "distributeIntersection" (formula "20") (term "1,0"))
                              (rule "distributeIntersection" (formula "20") (term "0,0"))
                              (rule "unionEqualsEmpty" (formula "23"))
                              (rule "andLeft" (formula "23"))
                              (rule "distributeIntersection" (formula "22") (term "0,0"))
                              (rule "distributeIntersection" (formula "22") (term "1,0"))
                              (rule "unionEqualsEmpty" (formula "21"))
                              (rule "andLeft" (formula "21"))
                              (rule "unionEqualsEmpty" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "distributeIntersection" (formula "25") (term "0"))
                              (rule "distributeIntersection" (formula "26") (term "0"))
                              (rule "unionEqualsEmpty" (formula "24"))
                              (rule "andLeft" (formula "24"))
                              (rule "unionEqualsEmpty" (formula "23"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "andLeft" (formula "23"))
                              (rule "notLeft" (formula "24"))
                              (rule "notLeft" (formula "23"))
                              (rule "eqSymm" (formula "39"))
                              (rule "eqSymm" (formula "38"))
                              (rule "unionEqualsEmpty" (formula "22"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "andLeft" (formula "22"))
                              (rule "notLeft" (formula "23"))
                              (rule "notLeft" (formula "22"))
                              (rule "eqSymm" (formula "38"))
                              (rule "eqSymm" (formula "37"))
                              (rule "unionEqualsEmpty" (formula "20"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "21"))
                              (rule "notLeft" (formula "20"))
                              (rule "eqSymm" (formula "37"))
                              (rule "eqSymm" (formula "36"))
                              (rule "unionEqualsEmpty" (formula "20"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "eqSymm" (formula "36"))
                              (rule "eqSymm" (formula "35"))
                              (rule "unionEqualsEmpty" (formula "22"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "andLeft" (formula "22"))
                              (rule "notLeft" (formula "23"))
                              (rule "notLeft" (formula "22"))
                              (rule "eqSymm" (formula "35"))
                              (rule "eqSymm" (formula "34"))
                              (rule "unionEqualsEmpty" (formula "22"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "andLeft" (formula "22"))
                              (rule "notLeft" (formula "23"))
                              (rule "notLeft" (formula "22"))
                              (rule "eqSymm" (formula "34"))
                              (rule "eqSymm" (formula "33"))
                              (rule "unionEqualsEmpty" (formula "21"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "andLeft" (formula "21"))
                              (rule "notLeft" (formula "21"))
                              (rule "notLeft" (formula "21"))
                              (rule "eqSymm" (formula "33"))
                              (rule "eqSymm" (formula "32"))
                              (rule "unionEqualsEmpty" (formula "20"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "21"))
                              (rule "notLeft" (formula "20"))
                              (rule "eqSymm" (formula "32"))
                              (rule "eqSymm" (formula "31"))
                              (rule "commuteUnion" (formula "28") (term "1,1,1"))
                              (rule "commuteUnion_2" (formula "28") (term "0,1"))
                              (rule "commuteUnion" (formula "28") (term "0,0,1"))
                              (rule "commuteUnion_2" (formula "28") (term "0,1"))
                              (rule "commuteUnion_2" (formula "28") (term "1"))
                              (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "15") (term "0") (inst "b=b"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "translateJavaAddInt" (formula "15") (term "3,0,1,0"))
                              (rule "translateJavaAddInt" (formula "15") (term "2,0,1,0"))
                              (rule "translateJavaAddInt" (formula "15") (term "0,2,1,3,0,1,0"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,2,1,3,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                              (rule "Contract_axiom_for_bucketStartsOrdering_in_Functions" (formula "30") (term "0"))
                              (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "31"))
                               (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "13")) (ifInst ""  (formula "86")) (ifInst ""  (formula "2")))
                              (rule "true_left" (formula "30"))
                              (rule "Definition_axiom_for_bucketStartsOrdering_in_de_wiesler_Functions" (formula "30") (term "0") (inst "b=b"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "translateJavaAddInt" (formula "30") (term "0,2,0,1,0"))
                              (rule "translateJavaAddInt" (formula "30") (term "0,2,1,1,0,1,0,1,0,1"))
                              (rule "translateJavaAddInt" (formula "30") (term "0,2,0,1,1,0,1,0,1"))
                              (rule "translateJavaAddInt" (formula "30") (term "0,2,0,1,1,1,1,0,1"))
                              (rule "translateJavaAddInt" (formula "30") (term "0,2,1,1,0,1,1,1,0,1"))
                              (rule "translateJavaAddInt" (formula "30") (term "0,2,0,0,0,1,1,1,0,1"))
                              (rule "translateJavaAddInt" (formula "30") (term "0,2,1,1,0,0"))
                              (rule "andLeft" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "polySimp_addComm0" (formula "33") (term "0,2,1,1,0,1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "33") (term "0,2,1,1,0,1,1,1,0"))
                              (rule "polySimp_addComm0" (formula "33") (term "0,2,0,1,1,1,1,0"))
                              (rule "polySimp_addComm0" (formula "33") (term "0,2,0,1,1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "33") (term "0,2,0,0,0,1,1,1,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "0,2,0"))
                              (rule "polySimp_addComm0" (formula "31") (term "0,2,1"))
                              (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "33") (term "0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,1,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "30"))
                              (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,1,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,1,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,1,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "32"))
                              (rule "inEqSimp_commuteLeq" (formula "31"))
                              (rule "applyEq" (formula "33") (term "1,1,1,1,1,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "32") (term "0") (ifseqformula "14"))
                              (rule "inEqSimp_commuteGeq" (formula "32"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,1,1,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "30"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "polySimp_homoEq" (formula "17") (term "0,1,1"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1,1"))
                              (rule "inEqSimp_geqRight" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0"))
                              (rule "jmod_axiom" (formula "18") (term "0,1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,1,1"))
                              (rule "polySimp_sepNegMonomial" (formula "18") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1"))
                              (rule "polySimp_sepNegMonomial" (formula "18") (term "1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1,1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "15") (term "0") (inst "b=b"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "translateJavaAddInt" (formula "15") (term "2,0,1,0"))
                              (rule "translateJavaAddInt" (formula "15") (term "3,0,1,0"))
                              (rule "translateJavaAddInt" (formula "15") (term "0,2,1,3,0,1,0"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,2,1,3,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "15") (term "0"))
                              (rule "nnf_notAnd" (formula "15") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                              (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "translateJavaAddInt" (formula "13") (term "0,1,0,0"))
                              (rule "translateJavaAddInt" (formula "13") (term "3,0,1,0"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "polySimp_addComm0" (formula "15") (term "3,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "13"))
                              (rule "inEqSimp_commuteLeq" (formula "14"))
                              (rule "Contract_axiom_for_bucketStartsOrdering_in_Functions" (formula "27") (term "0"))
                              (rule "replace_known_left" (formula "27") (term "1,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "31")) (ifInst ""  (formula "28")))
                              (rule "true_left" (formula "27"))
                              (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "21") (term "0,0,1") (inst "b=b"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "translateJavaAddInt" (formula "21") (term "3,0,1,0,0,1"))
                              (rule "translateJavaAddInt" (formula "21") (term "2,0,1,0,0,1"))
                              (rule "translateJavaMod" (formula "21") (term "0,1,0,0,0,1"))
                              (rule "translateJavaAddInt" (formula "21") (term "0,2,1,3,0,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,2,1,3,0,1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0,1"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0,1"))
                              (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0,0,1"))
                              (rule "jmod_axiom" (formula "21") (term "0,1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,0,1"))
                              (rule "polySimp_homoEq" (formula "21") (term "1,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0,0,1"))
                              (rule "polySimp_sepPosMonomial" (formula "21") (term "1,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,1"))
                              (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,0,1"))
                              (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,0,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,0,1"))
                              (rule "nnf_imp2or" (formula "21") (term "0,0,1"))
                              (rule "nnf_notAnd" (formula "21") (term "0,0,0,1"))
                              (rule "nnf_notAnd" (formula "21") (term "0,0,0,0,1"))
                              (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0,1"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0,1"))
                              (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,0,1"))
                              (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,0,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,0,1"))
                              (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,0,0,1"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,0,0,1"))
                              (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,0,0,1"))
                              (rule "add_zero_left" (formula "21") (term "0,0,0,0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0,0,0,1"))
                              (rule "Definition_axiom_for_bucketStartsOrdering_in_de_wiesler_Functions" (formula "27") (term "0") (inst "b=b"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "translateJavaAddInt" (formula "27") (term "0,2,0,1,1,1,1,0,1"))
                              (rule "translateJavaAddInt" (formula "27") (term "0,2,0,1,1,0,1,0,1"))
                              (rule "translateJavaAddInt" (formula "27") (term "0,2,0,1,0"))
                              (rule "translateJavaAddInt" (formula "27") (term "0,2,1,1,0,0"))
                              (rule "translateJavaAddInt" (formula "27") (term "0,2,1,1,0,1,0,1,0,1"))
                              (rule "translateJavaAddInt" (formula "27") (term "0,2,1,1,0,1,1,1,0,1"))
                              (rule "translateJavaAddInt" (formula "27") (term "0,2,0,0,0,1,1,1,0,1"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "polySimp_addComm0" (formula "30") (term "0,2,0,1,1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "30") (term "0,2,0,1,1,1,1,0"))
                              (rule "polySimp_addComm0" (formula "30") (term "0,2,1,1,0,1,1,1,0"))
                              (rule "polySimp_addComm0" (formula "30") (term "0,2,1,1,0,1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "30") (term "0,2,0,0,0,1,1,1,0"))
                              (rule "polySimp_addComm0" (formula "29") (term "0,2,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "0,2,1"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,1,0"))
                              (rule "inEqSimp_gtToGeq" (formula "30") (term "0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,1,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "27"))
                              (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,1,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,1,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,1,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "29"))
                              (rule "inEqSimp_commuteLeq" (formula "28"))
                              (rule "applyEq" (formula "30") (term "1,1,1,1,1,0") (ifseqformula "17"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "17"))
                              (rule "inEqSimp_commuteGeq" (formula "29"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1,1,0"))
                              (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "1"))
                              (rule "andLeft" (formula "28"))
                              (rule "inEqSimp_homoInEq1" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "1,1,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0"))
                              (rule "add_literals" (formula "28") (term "0"))
                              (rule "leq_literals" (formula "28"))
                              (rule "closeFalse" (formula "28"))
                           )
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "polySimp_homoEq" (formula "17") (term "0,1,1"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1,1"))
                           (rule "inEqSimp_geqRight" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "12"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0"))
                           (rule "inEqSimp_homoInEq0" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "14"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "jmod_axiom" (formula "18") (term "0,1,1,1"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,1,1"))
                           (rule "polySimp_sepNegMonomial" (formula "18") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,1"))
                           (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1"))
                           (rule "polySimp_sepNegMonomial" (formula "18") (term "1,1,1"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,1,1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                           (rule "polySimp_elimOne" (formula "12") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "15") (term "0") (inst "b=b"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "translateJavaAddInt" (formula "15") (term "3,0,1,0"))
                           (rule "translateJavaAddInt" (formula "15") (term "2,0,1,0"))
                           (rule "translateJavaAddInt" (formula "15") (term "0,2,1,3,0,1,0"))
                           (rule "polySimp_addComm0" (formula "15") (term "0,2,1,3,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                           (rule "nnf_imp2or" (formula "15") (term "0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                           (rule "Definition_axiom_for_bucketStartsOrdering_in_de_wiesler_Functions" (formula "24") (term "0") (inst "b=b"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "translateJavaAddInt" (formula "24") (term "0,2,0,1,1,1,1,0,1"))
                           (rule "translateJavaAddInt" (formula "24") (term "0,2,0,1,0"))
                           (rule "translateJavaAddInt" (formula "24") (term "0,2,0,0,0,1,1,1,0,1"))
                           (rule "translateJavaAddInt" (formula "24") (term "0,2,0,1,1,0,1,0,1"))
                           (rule "translateJavaAddInt" (formula "24") (term "0,2,1,1,0,0"))
                           (rule "translateJavaAddInt" (formula "24") (term "0,2,1,1,0,1,1,1,0,1"))
                           (rule "translateJavaAddInt" (formula "24") (term "0,2,1,1,0,1,0,1,0,1"))
                           (rule "andLeft" (formula "24"))
                           (rule "andLeft" (formula "24"))
                           (rule "andLeft" (formula "24"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,2,1,1,0,1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,2,0,0,0,1,1,1,0"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,2,1,1,0,1,1,1,0"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,2,0,1,1,1,1,0"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,2,0,1,1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "26") (term "0,2,0"))
                           (rule "polySimp_addComm0" (formula "25") (term "0,2,1"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "27") (term "0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "24"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,1,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,1,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,1,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "26"))
                           (rule "inEqSimp_commuteLeq" (formula "25"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "14"))
                           (rule "inEqSimp_commuteGeq" (formula "26"))
                           (rule "applyEq" (formula "27") (term "1,1,1,1,1,0") (ifseqformula "14"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,1,1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,0,1,1,0"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "26"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_literals" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Case 2"
                        (rule "Definition_axiom_for_bucketStartsOrdering_in_de_wiesler_Functions" (formula "23") (term "0") (inst "b=b") (userinteraction))
                         (builtin "One Step Simplification" (formula "23") (userinteraction))
                        (rule "andLeft" (formula "23"))
                        (rule "andLeft" (formula "23"))
                        (rule "andLeft" (formula "23"))
                         (builtin "One Step Simplification" (formula "31") (userinteraction))
                        (rule "allRight" (formula "31") (inst "sk=b_0") (userinteraction))
                        (rule "instAll" (formula "31") (term "0,0,0,0") (ifseqformula "26") (userinteraction))
                        (rule "translateJavaAddInt" (formula "27") (term "0,2,1,1,0,1,0,1,0"))
                        (rule "translateJavaAddInt" (formula "27") (term "0,2,0,1,1,0,1,0"))
                        (rule "translateJavaAddInt" (formula "27") (term "0,2,0,0,0,1,1,1,0"))
                        (rule "translateJavaAddInt" (formula "27") (term "0,2,1,1,0,1,1,1,0"))
                        (rule "translateJavaAddInt" (formula "27") (term "0,2,0,1,1,1,1,0"))
                        (rule "translateJavaAddInt" (formula "26") (term "0,2,0"))
                        (rule "translateJavaAddInt" (formula "25") (term "0,2,1"))
                        (rule "translateJavaAddInt" (formula "1") (term "0,2,1,1,0,1,0,1"))
                        (rule "translateJavaAddInt" (formula "1") (term "0,2,0,1,1,0,1"))
                        (rule "translateJavaAddInt" (formula "1") (term "0,2,0,0,0,1,1,1"))
                        (rule "translateJavaAddInt" (formula "1") (term "0,2,1,1,0,1,1,1"))
                        (rule "translateJavaAddInt" (formula "1") (term "0,2,0,1,1,1,1"))
                        (rule "impRight" (formula "32"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "2"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "3") (term "0,1,0"))
                        (rule "eqSymm" (formula "30"))
                        (rule "replace_known_right" (formula "3") (term "0,1,0") (ifseqformula "30"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                        (rule "polySimp_homoEq" (formula "20") (term "0,1,1"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "29") (term "0,2,1,1,0,1,0,1,0"))
                        (rule "polySimp_addComm0" (formula "29") (term "0,2,0,1,1,0,1,0"))
                        (rule "polySimp_addComm0" (formula "29") (term "0,2,0,0,0,1,1,1,0"))
                        (rule "polySimp_addComm0" (formula "29") (term "0,2,1,1,0,1,1,1,0"))
                        (rule "polySimp_addComm0" (formula "29") (term "0,2,0,1,1,1,1,0"))
                        (rule "polySimp_addComm0" (formula "28") (term "0,2,0"))
                        (rule "polySimp_addComm0" (formula "27") (term "0,2,1"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,2,0,0,0,1,1,1"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,1,1,1"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,2,1,1,0,1,1,1"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,1,0,1"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,2,1,1,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,1"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,1,1"))
                        (rule "inEqSimp_gtToGeq" (formula "29") (term "0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "35") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "35") (term "0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "3") (term "0,1,1"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,1"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "26"))
                        (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "35") (term "0,0,1,1"))
                        (rule "inEqSimp_commuteLeq" (formula "35") (term "1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "35") (term "1,1,1"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "0"))
                        (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "andLeft" (formula "3"))
                        (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,1,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,1,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,1,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "29"))
                        (rule "inEqSimp_commuteLeq" (formula "28"))
                        (rule "inEqSimp_homoInEq0" (formula "13"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1"))
                        (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "4") (term "1,1"))
                        (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "impRight" (formula "36"))
                        (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "andLeft" (formula "4"))
                        (rule "andLeft" (formula "4"))
                        (rule "replace_known_left" (formula "39") (term "0,0") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "6")))
                        (rule "replace_known_right" (formula "7") (term "1,0,1") (ifseqformula "39"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "notLeft" (formula "7"))
                        (rule "inEqSimp_geqRight" (formula "39"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_geqRight" (formula "34"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "7"))
                        (rule "applyEq" (formula "33") (term "0") (ifseqformula "21"))
                        (rule "inEqSimp_commuteGeq" (formula "33"))
                        (rule "applyEq" (formula "34") (term "1,1,1,1,1,0") (ifseqformula "21"))
                        (rule "jmod_axiom" (formula "25") (term "0,1,1,1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,1"))
                        (rule "polySimp_sepNegMonomial" (formula "25") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "25") (term "0,0,1,1"))
                        (rule "polySimp_sepNegMonomial" (formula "25") (term "1,1,1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0,1,1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "1,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                        (rule "polySimp_elimOne" (formula "19") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                        (rule "polySimp_elimOne" (formula "5") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                        (rule "polySimp_elimOne" (formula "17") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "3"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                        (rule "add_literals" (formula "35") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "35") (term "1,0,0"))
                        (rule "add_zero_right" (formula "35") (term "0,0"))
                        (rule "leq_literals" (formula "35") (term "0"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "false_right" (formula "35"))
                        (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "2"))
                        (rule "andLeft" (formula "7"))
                        (rule "inEqSimp_homoInEq1" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                        (rule "mul_literals" (formula "7") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                        (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "1,1,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0"))
                        (rule "add_literals" (formula "7") (term "0"))
                        (rule "leq_literals" (formula "7"))
                        (rule "closeFalse" (formula "7"))
                     )
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "closeTrue" (formula "28"))
               )
            )
            (branch "Precondition"
               (rule "andRight" (formula "28"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "translateJavaSubInt" (formula "28") (term "0,0"))
                  (rule "polySimp_homoEq" (formula "17") (term "0,1,1"))
                  (rule "polySimp_elimSub" (formula "28") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1"))
                  (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                  (rule "close" (formula "28") (ifseqformula "5"))
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "1")))
                  (rule "closeTrue" (formula "28"))
               )
            )
            (branch "Usage"
                (builtin "One Step Simplification" (formula "29"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "translateJavaAddInt" (formula "24") (term "0,2,0,1,1,0,1,0,1,1,0"))
               (rule "translateJavaAddInt" (formula "24") (term "0,2,1,1,0,1,0,1,0,1,1,0"))
               (rule "translateJavaAddInt" (formula "24") (term "0,2,1,1,0,1,1,1,0,1,1,0"))
               (rule "translateJavaAddInt" (formula "24") (term "0,2,0,1,0,1,0"))
               (rule "translateJavaAddInt" (formula "24") (term "0,2,0,1,1,1,1,0,1,1,0"))
               (rule "translateJavaAddInt" (formula "24") (term "0,2,0,0,0,1,1,1,0,1,1,0"))
               (rule "translateJavaAddInt" (formula "24") (term "0,2,1,1,0,0,1,0"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "24"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "true_left" (formula "29"))
               (rule "polySimp_addComm0" (formula "28") (term "0,2,0,1,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "28") (term "0,2,1,1,0,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "28") (term "0,2,1,1,0,1,0,1,0"))
               (rule "polySimp_addComm0" (formula "28") (term "0,2,0,1,1,0,1,0"))
               (rule "polySimp_addComm0" (formula "28") (term "0,2,0,0,0,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "27") (term "0,2,0"))
               (rule "polySimp_addComm0" (formula "26") (term "0,2,1"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "25"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,1,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "27"))
               (rule "inEqSimp_commuteLeq" (formula "26"))
               (rule "applyEq" (formula "28") (term "1,1,1,1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "27") (term "0") (ifseqformula "13"))
               (rule "inEqSimp_commuteGeq" (formula "27"))
               (rule "commute_and" (formula "28") (term "0,0,0"))
               (rule "commute_and_2" (formula "28") (term "1,0,1,0"))
               (rule "commute_and_2" (formula "28") (term "1,1,1,0"))
               (rule "ifUnfold" (formula "33") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_6"))
               (rule "inequality_comparison_simple" (formula "33") (term "1"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "replace_known_left" (formula "33") (term "0,0,1,0") (ifseqformula "24"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "arrayLengthIsAShort" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "arrayLengthNotNegative" (formula "8") (term "0"))
               (rule "ifSplit" (formula "34"))
               (branch "if x_6 true"
                   (builtin "One Step Simplification" (formula "35"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_6 false"
                   (builtin "One Step Simplification" (formula "35"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "blockEmpty" (formula "34") (term "1"))
                   (builtin "Block Contract (Internal)" (formula "34") (newnames "anonOut_heap,exc_2,heap_Before_BLOCK_1,savedHeap_Before_BLOCK_1,o,f"))
                  (branch "Validity"
                      (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "1")) (ifInst ""  (formula "32")) (ifInst ""  (formula "3")) (ifInst ""  (formula "34")) (ifInst ""  (formula "2")))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "translateJavaSubInt" (formula "30") (term "0,0"))
                     (rule "eqSymm" (formula "35") (term "1,0,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "30") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                     (rule "variableDeclarationAssign" (formula "34") (term "1"))
                     (rule "variableDeclaration" (formula "34") (term "1") (newnames "exc_2_1"))
                     (rule "assignment" (formula "34") (term "1"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,0,2,0,0,0,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,0,2,0,0,0,0,1,0,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,0,2,0,0,0,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,0,2,0,0,0,0,1,0,1"))
                     (rule "elementOfUnion" (formula "34") (term "0,0,0,0,1,0,1"))
                     (rule "elementOfArrayRange" (formula "34") (term "0,0,0,0,0,1,0,1") (inst "iv=iv"))
                     (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,0,1,0,0,0,0,0,1,0,1"))
                     (rule "ifElseUnfold" (formula "34") (term "1") (inst "#boolv=x"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "variableDeclaration" (formula "34") (term "1") (newnames "x_7"))
                     (rule "compound_greater_than_comparison_1" (formula "34") (term "1") (inst "#v0=x_8"))
                     (rule "variableDeclarationAssign" (formula "34") (term "1"))
                     (rule "variableDeclaration" (formula "34") (term "1") (newnames "x_8"))
                     (rule "assignmentSubtractionInt" (formula "34") (term "1"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "translateJavaSubInt" (formula "34") (term "0,1,0"))
                     (rule "polySimp_elimSub" (formula "34") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                     (rule "polySimp_pullOutFactor1" (formula "34") (term "0,0,0,1,0"))
                     (rule "add_literals" (formula "34") (term "1,0,0,0,1,0"))
                     (rule "times_zero_1" (formula "34") (term "0,0,0,1,0"))
                     (rule "add_zero_left" (formula "34") (term "0,0,1,0"))
                     (rule "greater_than_comparison_simple" (formula "34") (term "1"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "ifElseSplit" (formula "34"))
                     (branch "if x_7 true"
                         (builtin "One Step Simplification" (formula "35"))
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "Use Operation Contract" (formula "35") (newnames "heapBefore_sample_sort,exc_3,heapAfter_sample_sort,anon_heap_sample_sort") (contract "de.wiesler.Sorter[de.wiesler.Sorter::sample_sort([I,int,int,de.wiesler.Storage)].JML normal_behavior operation contract.0"))
                        (branch "Post (sample_sort)"
                            (builtin "One Step Simplification" (formula "37"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,0"))
                           (rule "andLeft" (formula "32"))
                           (rule "andLeft" (formula "33"))
                           (rule "andLeft" (formula "34"))
                           (rule "andLeft" (formula "34"))
                           (rule "andLeft" (formula "35"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "1,2,0,1,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "2,0,1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,0"))
                           (rule "narrowSelectArrayType" (formula "34") (term "2,1") (ifseqformula "2") (ifseqformula "40"))
                           (rule "commuteUnion" (formula "32") (term "1,0"))
                           (rule "tryEmpty" (formula "41") (term "1"))
                           (rule "blockEmptyLabel" (formula "41") (term "1"))
                           (rule "blockEmpty" (formula "41") (term "1"))
                           (rule "methodCallEmpty" (formula "41") (term "1"))
                           (rule "emptyModality" (formula "41") (term "1"))
                           (rule "andRight" (formula "41"))
                           (branch "Case 1"
                              (rule "andRight" (formula "41"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "41"))
                                 (rule "closeTrue" (formula "41"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "41"))
                                 (branch "Case 1"
                                     (builtin "One Step Simplification" (formula "41") (userinteraction))
                                    (rule "translateJavaAddInt" (formula "41") (term "1,1"))
                                    (rule "translateJavaAddInt" (formula "41") (term "0,1"))
                                    (rule "translateJavaAddInt" (formula "41") (term "0,0"))
                                    (rule "translateJavaAddInt" (formula "41") (term "0,2,1,1,1"))
                                    (rule "polySimp_homoEq" (formula "19") (term "0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "41") (term "0,2,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,1"))
                                    (rule "narrowSelectArrayType" (formula "41") (term "2,1") (ifseqformula "2") (ifseqformula "40"))
                                    (rule "inEqSimp_ltToLeq" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "30") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                    (rule "jmod_axiom" (formula "19") (term "0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "19") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,1,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0"))
                                    (rule "qeq_literals" (formula "28") (term "0"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "pullOutSelect" (formula "40") (term "1,0,0") (inst "selectSK=arr_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "6")))
                                    (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0"))
                                    (rule "disjointAllFields" (formula "1") (term "0,0,0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "41") (term "0,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                                    (rule "close" (formula "40") (ifseqformula "33"))
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "translateJavaAddInt" (formula "41") (term "2,0"))
                                    (rule "polySimp_homoEq" (formula "19") (term "0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,1"))
                                    (rule "inEqSimp_gtToGeq" (formula "30") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                    (rule "jmod_axiom" (formula "19") (term "0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "19") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0"))
                                    (rule "qeq_literals" (formula "28") (term "0"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "pullOutSelect" (formula "40") (term "1,2,0") (inst "selectSK=arr_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "6")))
                                    (rule "polySimp_addComm0" (formula "41") (term "2,0"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0"))
                                    (rule "disjointAllFields" (formula "1") (term "0,0,0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "41") (term "0,2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "polySimp_addComm0" (formula "40") (term "2,0"))
                                    (rule "close" (formula "40") (ifseqformula "34"))
                                 )
                              )
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "allRight" (formula "41") (inst "sk=f_0"))
                              (rule "allRight" (formula "41") (inst "sk=o_0"))
                              (rule "orRight" (formula "41"))
                              (rule "orRight" (formula "41"))
                              (rule "orRight" (formula "41"))
                              (rule "eqSymm" (formula "44"))
                              (rule "eqSymm" (formula "41") (term "0,0,0,1"))
                              (rule "polySimp_homoEq" (formula "19") (term "0,1,1"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,1"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "41") (term "1,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,1"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,1,0"))
                              (rule "inEqSimp_gtToGeq" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "30") (term "0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0"))
                              (rule "jmod_axiom" (formula "19") (term "0,1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1"))
                              (rule "polySimp_sepNegMonomial" (formula "19") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1"))
                              (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,1,1,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                              (rule "polySimp_elimOne" (formula "11") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0"))
                              (rule "add_literals" (formula "28") (term "0,0"))
                              (rule "qeq_literals" (formula "28") (term "0"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=f_0_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                              (rule "eqSymm" (formula "44"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "42"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                              (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "41"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Exceptional Post (sample_sort)"
                            (builtin "One Step Simplification" (formula "32"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,0"))
                           (rule "andLeft" (formula "32"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "1,0") (ifseqformula "32"))
                           (rule "andLeft" (formula "33"))
                           (rule "andLeft" (formula "33"))
                           (rule "andLeft" (formula "35"))
                           (rule "notLeft" (formula "33"))
                           (rule "close" (formula "36") (ifseqformula "35"))
                        )
                        (branch "Pre (sample_sort)"
                            (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "23")) (ifInst ""  (formula "34")) (ifInst ""  (formula "32")) (ifInst ""  (formula "2")) (ifInst ""  (formula "34")) (ifInst ""  (formula "3")) (ifInst ""  (formula "32")) (ifInst ""  (formula "4")))
                           (rule "andRight" (formula "35"))
                           (branch "Case 1"
                              (rule "andRight" (formula "35"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "35"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "35"))
                                    (branch "Case 1"
                                       (rule "polySimp_homoEq" (formula "19") (term "0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,1"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,1"))
                                       (rule "inEqSimp_leqRight" (formula "35"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "31") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                       (rule "jmod_axiom" (formula "20") (term "0,1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "20") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0,0,1,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "20") (term "1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,1,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                       (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "29") (term "0,0"))
                                       (rule "qeq_literals" (formula "29") (term "0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "29"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "29") (term "0,0"))
                                       (rule "add_zero_left" (formula "29") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "29"))
                                       (rule "qeq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "closeFalse" (formula "9"))
                                    )
                                    (branch "Case 2"
                                       (rule "polySimp_homoEq" (formula "19") (term "0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,1"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,1"))
                                       (rule "inEqSimp_leqRight" (formula "35"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "31") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                       (rule "jmod_axiom" (formula "20") (term "0,1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "20") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0,0,1,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "20") (term "1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                       (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "29") (term "0,0"))
                                       (rule "qeq_literals" (formula "29") (term "0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_literals" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "polySimp_homoEq" (formula "19") (term "0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,1"))
                                    (rule "inEqSimp_leqRight" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "31") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "jmod_axiom" (formula "20") (term "0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "20") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,0,1,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "20") (term "1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                    (rule "mul_literals" (formula "1") (term "0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,1,1,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0"))
                                    (rule "qeq_literals" (formula "29") (term "0"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "29"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0"))
                                    (rule "add_literals" (formula "12") (term "0"))
                                    (rule "leq_literals" (formula "12"))
                                    (rule "closeFalse" (formula "12"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "35"))
                                 (branch "Case 1"
                                    (rule "translateJavaSubInt" (formula "35") (term "0"))
                                    (rule "polySimp_homoEq" (formula "19") (term "0,1,1"))
                                    (rule "polySimp_elimSub" (formula "35") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "35") (term "0,0,0"))
                                    (rule "add_literals" (formula "35") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "35") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "35") (term "0,0"))
                                    (rule "close" (formula "35") (ifseqformula "1"))
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "35"))
                                    (branch "Case 1"
                                       (rule "translateJavaSubInt" (formula "35") (term "0"))
                                       (rule "polySimp_homoEq" (formula "19") (term "0,1,1"))
                                       (rule "polySimp_elimSub" (formula "35") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,1"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "35") (term "0,0,0"))
                                       (rule "add_literals" (formula "35") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "35") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "35") (term "0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "30") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "35"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                       (rule "jmod_axiom" (formula "20") (term "0,1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "20") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0,0,1,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "20") (term "1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,1,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                       (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "28") (term "0,0"))
                                       (rule "qeq_literals" (formula "28") (term "0"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "28"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "28") (term "0,0"))
                                       (rule "add_zero_left" (formula "28") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                       (rule "mul_literals" (formula "28") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "28"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "inEqSimp_homoInEq1" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                       (rule "add_literals" (formula "12") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0"))
                                       (rule "add_literals" (formula "12") (term "0"))
                                       (rule "leq_literals" (formula "12"))
                                       (rule "closeFalse" (formula "12"))
                                    )
                                    (branch "Case 2"
                                       (rule "polySimp_homoEq" (formula "19") (term "0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,1"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,1"))
                                       (rule "disjointDefinition" (formula "35"))
                                       (rule "inEqSimp_gtToGeq" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "30") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                       (rule "jmod_axiom" (formula "19") (term "0,1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "19") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,1,1,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                       (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "28") (term "0,0"))
                                       (rule "qeq_literals" (formula "28") (term "0"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "28"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "1"))
                                       (rule "mul_literals" (formula "28") (term "0,0"))
                                       (rule "add_zero_left" (formula "28") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                       (rule "mul_literals" (formula "28") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0"))
                                       (rule "qeq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "commuteIntersection" (formula "35") (term "0"))
                                       (rule "close" (formula "35") (ifseqformula "21"))
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "20") (term "0") (inst "b=b") (userinteraction))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "instAll" (formula "35") (term "1,0,2,1,0,0,0") (ifseqformula "20") (userinteraction))
                              (rule "translateJavaSubInt" (formula "21") (term "0,1,0"))
                              (rule "translateJavaSubInt" (formula "36") (term "0,0"))
                              (rule "translateJavaSubInt" (formula "1") (term "0,1"))
                              (rule "translateJavaAddInt" (formula "21") (term "0,2,0,0,1,0"))
                              (rule "translateJavaAddInt" (formula "1") (term "0,2,0,0,1"))
                              (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "polySimp_homoEq" (formula "20") (term "0,1,1"))
                              (rule "polySimp_elimSub" (formula "36") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "21") (term "0,1,0"))
                              (rule "polySimp_elimSub" (formula "1") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,2,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,2,1,0,1"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,1"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "36") (term "0,0,0,0"))
                              (rule "add_literals" (formula "36") (term "1,0,0,0,0"))
                              (rule "times_zero_1" (formula "36") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "36") (term "0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "31") (term "0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                              (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                              (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                              (rule "measuredByCheck" (formula "36") (ifseqformula "7"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                              (rule "precOfPair" (formula "36"))
                              (rule "orRight" (formula "36"))
                              (rule "polySimp_homoEq" (formula "37") (term "0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                              (rule "precOfInt" (formula "36"))
                              (rule "precOfInt" (formula "37") (term "1"))
                              (rule "less_literals" (formula "37") (term "1,1"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "false_right" (formula "37"))
                              (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                              (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_ltToLeq" (formula "36") (term "1"))
                              (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                              (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "36") (term "0,1"))
                              (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "36"))
                              (rule "inEqSimp_leqRight" (formula "36"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0"))
                              (rule "jmod_axiom" (formula "21") (term "0,1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,1"))
                              (rule "polySimp_sepNegMonomial" (formula "21") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "0,0,1,1"))
                              (rule "polySimp_sepNegMonomial" (formula "21") (term "1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0,1,1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                              (rule "polySimp_elimOne" (formula "15") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "0,0,1,1,0"))
                              (rule "mul_literals" (formula "22") (term "0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_literals" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                     )
                     (branch "if x_7 false"
                         (builtin "One Step Simplification" (formula "35"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "elim_double_block_2" (formula "35") (term "1"))
                         (builtin "Use Operation Contract" (formula "35") (newnames "heapBefore_base_case_sort,exc_3,heapAfter_base_case_sort,anon_heap_base_case_sort") (contract "de.wiesler.Sorter[de.wiesler.Sorter::base_case_sort([I,int,int)].JML normal_behavior operation contract.0"))
                        (branch "Post (base_case_sort)"
                            (builtin "One Step Simplification" (formula "31"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "translateJavaSubInt" (formula "31") (term "2,1,0,0"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "32"))
                           (rule "andLeft" (formula "33"))
                           (rule "andLeft" (formula "33"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,0"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "2,1,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "0,2,1,0"))
                           (rule "narrowSelectArrayType" (formula "33") (term "2,1") (ifseqformula "1") (ifseqformula "39"))
                           (rule "tryEmpty" (formula "40") (term "1"))
                           (rule "blockEmptyLabel" (formula "40") (term "1"))
                           (rule "blockEmpty" (formula "40") (term "1"))
                           (rule "methodCallEmpty" (formula "40") (term "1"))
                           (rule "emptyModality" (formula "40") (term "1"))
                           (rule "andRight" (formula "40"))
                           (branch "Case 1"
                              (rule "andRight" (formula "40"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "40"))
                                 (rule "closeTrue" (formula "40"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "40"))
                                 (branch "Case 1"
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "translateJavaAddInt" (formula "40") (term "1,1"))
                                    (rule "translateJavaAddInt" (formula "40") (term "0,1"))
                                    (rule "translateJavaAddInt" (formula "40") (term "0,0"))
                                    (rule "translateJavaAddInt" (formula "40") (term "0,2,1,1,1"))
                                    (rule "polySimp_homoEq" (formula "18") (term "0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,2,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,1"))
                                    (rule "inEqSimp_gtRight" (formula "35"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "narrowSelectArrayType" (formula "40") (term "2,1") (ifseqformula "2") (ifseqformula "39"))
                                    (rule "inEqSimp_ltToLeq" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "30") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                    (rule "jmod_axiom" (formula "19") (term "0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "19") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                    (rule "pullOutSelect" (formula "40") (term "1,0,0") (inst "selectSK=arr_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "6")))
                                    (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "41") (term "0,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                                    (rule "close" (formula "40") (ifseqformula "34"))
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "translateJavaAddInt" (formula "40") (term "2,0"))
                                    (rule "polySimp_homoEq" (formula "18") (term "0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,1"))
                                    (rule "inEqSimp_gtRight" (formula "35"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "30") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                    (rule "jmod_axiom" (formula "19") (term "0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "19") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                    (rule "pullOutSelect" (formula "40") (term "1,2,0") (inst "selectSK=arr_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "6")))
                                    (rule "polySimp_addComm0" (formula "41") (term "2,0"))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "41") (term "0,2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "polySimp_addComm0" (formula "40") (term "2,0"))
                                    (rule "close" (formula "40") (ifseqformula "35"))
                                 )
                              )
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "allRight" (formula "40") (inst "sk=f_0"))
                              (rule "allRight" (formula "40") (inst "sk=o_0"))
                              (rule "orRight" (formula "40"))
                              (rule "orRight" (formula "40"))
                              (rule "orRight" (formula "40"))
                              (rule "eqSymm" (formula "43"))
                              (rule "eqSymm" (formula "40") (term "0,0,0,1"))
                              (rule "polySimp_homoEq" (formula "18") (term "0,1,1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "40") (term "1,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,1"))
                              (rule "inEqSimp_gtRight" (formula "35"))
                              (rule "mul_literals" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "30") (term "0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0"))
                              (rule "jmod_axiom" (formula "19") (term "0,1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1"))
                              (rule "polySimp_sepNegMonomial" (formula "19") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1"))
                              (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,1,1,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                              (rule "polySimp_elimOne" (formula "11") (term "0"))
                              (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=f_0_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                              (rule "eqSymm" (formula "44"))
                              (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                              (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "41"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Exceptional Post (base_case_sort)"
                            (builtin "One Step Simplification" (formula "31"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "translateJavaSubInt" (formula "31") (term "2,1,0,0"))
                           (rule "andLeft" (formula "31"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1,0") (ifseqformula "31"))
                           (rule "andLeft" (formula "32"))
                           (rule "andLeft" (formula "32"))
                           (rule "andLeft" (formula "34"))
                           (rule "notLeft" (formula "32"))
                           (rule "close" (formula "35") (ifseqformula "34"))
                        )
                        (branch "Pre (base_case_sort)"
                            (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "34")) (ifInst ""  (formula "1")) (ifInst ""  (formula "34")) (ifInst ""  (formula "2")))
                           (rule "andRight" (formula "35"))
                           (branch "Case 1"
                              (rule "andRight" (formula "35"))
                              (branch "Case 1"
                                 (rule "polySimp_homoEq" (formula "18") (term "0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,1"))
                                 (rule "inEqSimp_leqRight" (formula "35"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "inEqSimp_gtRight" (formula "31"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "31") (term "0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                 (rule "jmod_axiom" (formula "20") (term "0,1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "20") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,0,1,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "20") (term "1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,1,1,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "29") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "28") (term "0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "28") (term "0"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "closeFalse" (formula "28"))
                              )
                              (branch "Case 2"
                                 (rule "polySimp_homoEq" (formula "18") (term "0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,1"))
                                 (rule "inEqSimp_leqRight" (formula "35"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_gtRight" (formula "31"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "31") (term "0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                 (rule "jmod_axiom" (formula "20") (term "0,1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "20") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,0,1,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "20") (term "1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "29"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_literals" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                           (branch "Case 2"
                              (rule "polySimp_homoEq" (formula "18") (term "0,1,1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,1"))
                              (rule "inEqSimp_leqRight" (formula "35"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "inEqSimp_gtRight" (formula "31"))
                              (rule "mul_literals" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "31") (term "0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0"))
                              (rule "jmod_axiom" (formula "20") (term "0,1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1"))
                              (rule "polySimp_sepNegMonomial" (formula "20") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,1"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,0,1,1"))
                              (rule "polySimp_sepNegMonomial" (formula "20") (term "1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,0,1,1,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "29") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "32"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "13"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_literals" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                     )
                  )
                  (branch "Precondition"
                     (rule "andRight" (formula "34"))
                     (branch "Case 1"
                        (rule "andRight" (formula "34"))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "translateJavaSubInt" (formula "34") (term "0,0"))
                           (rule "polySimp_homoEq" (formula "18") (term "0,1,1"))
                           (rule "polySimp_elimSub" (formula "34") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                           (rule "close" (formula "34") (ifseqformula "5"))
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "1")))
                           (rule "closeTrue" (formula "34"))
                        )
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "34"))
                        (branch "Case 1"
                           (rule "andRight" (formula "34"))
                           (branch "Case 1"
                              (rule "andRight" (formula "34"))
                              (branch "Case 1"
                                 (rule "orRight" (formula "34"))
                                  (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "3")))
                                 (rule "closeTrue" (formula "35"))
                              )
                              (branch "Case 2"
                                 (rule "orRight" (formula "34"))
                                  (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "2")))
                                 (rule "closeTrue" (formula "35"))
                              )
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "closeTrue" (formula "34"))
                           )
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "closeTrue" (formula "34"))
                        )
                     )
                  )
                  (branch "Usage"
                      (builtin "One Step Simplification" (formula "30"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "31"))
                     (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "true_left" (formula "34"))
                     (rule "narrowSelectArrayType" (formula "31") (term "2,1") (ifseqformula "1") (ifseqformula "37"))
                     (rule "ifUnfold" (formula "38") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_7"))
                     (rule "inequality_comparison_simple" (formula "38") (term "1"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "replace_known_left" (formula "38") (term "0,0,1,0") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "ifSplit" (formula "38"))
                     (branch "if x_7 true"
                         (builtin "One Step Simplification" (formula "39"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_7 false"
                         (builtin "One Step Simplification" (formula "39"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "blockEmpty" (formula "38") (term "1"))
                         (builtin "Block Contract (Internal)" (formula "38") (newnames "exc_3,heap_Before_BLOCK_2,savedHeap_Before_BLOCK_2,o,f"))
                        (branch "Validity"
                            (builtin "One Step Simplification" (formula "34"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "translateJavaSubInt" (formula "34") (term "0,0,0"))
                           (rule "andLeft" (formula "34"))
                           (rule "eqSymm" (formula "40") (term "0,1,0,0,1"))
                           (rule "eqSymm" (formula "40") (term "0,0,1,0,1"))
                           (rule "eqSymm" (formula "40") (term "1,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "34") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                           (rule "narrowSelectArrayType" (formula "31") (term "2,0") (ifseqformula "34") (ifseqformula "38"))
                           (rule "variableDeclarationAssign" (formula "39") (term "1"))
                           (rule "variableDeclaration" (formula "39") (term "1") (newnames "exc_3_1"))
                           (rule "assignment" (formula "39") (term "1"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "emptyStatement" (formula "39") (term "1"))
                           (rule "emptyStatement" (formula "39") (term "1"))
                           (rule "tryEmpty" (formula "39") (term "1"))
                           (rule "blockEmptyLabel" (formula "39") (term "1"))
                           (rule "blockEmpty" (formula "39") (term "1"))
                           (rule "methodCallEmpty" (formula "39") (term "1"))
                           (rule "emptyModality" (formula "39") (term "1"))
                           (rule "andRight" (formula "39"))
                           (branch "Case 1"
                              (rule "andRight" (formula "39"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "closeTrue" (formula "39"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "39"))
                                 (branch "Case 1"
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "translateJavaSubInt" (formula "34") (term "2,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "31") (term "2,0,1,0,2,0"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,0,1,0,2,1"))
                                    (rule "eqSymm" (formula "39"))
                                    (rule "polySimp_homoEq" (formula "18") (term "0,1,1"))
                                    (rule "polySimp_elimSub" (formula "34") (term "2,0,1,0"))
                                    (rule "mul_literals" (formula "34") (term "1,2,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "32") (term "2,0,1,0,0"))
                                    (rule "mul_literals" (formula "32") (term "1,2,0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "31") (term "2,0,1,0,2,0"))
                                    (rule "mul_literals" (formula "31") (term "1,2,0,1,0,2,0"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,0,1,0,2,0"))
                                    (rule "mul_literals" (formula "39") (term "1,2,0,1,0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "34") (term "2,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "2,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "2,0,1,0,2,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "2,0,1,0,2,0"))
                                    (rule "polySimp_addComm0" (formula "34") (term "0,2,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,2,0,1,0,2,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,2,0,1,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "29") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,1,0"))
                                    (rule "narrowSelectArrayType" (formula "39") (term "2,1") (ifseqformula "1") (ifseqformula "38"))
                                    (rule "narrowSelectArrayType" (formula "39") (term "2,0") (ifseqformula "34") (ifseqformula "38"))
                                    (rule "inEqSimp_homoInEq0" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "jmod_axiom" (formula "18") (term "0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,1,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "18") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "18") (term "1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,1,2,0"))
                                    (rule "translateJavaAddInt" (formula "39") (term "1,1"))
                                    (rule "translateJavaAddInt" (formula "31") (term "1,1"))
                                    (rule "translateJavaAddInt" (formula "31") (term "0,1"))
                                    (rule "translateJavaAddInt" (formula "31") (term "0,0"))
                                    (rule "translateJavaAddInt" (formula "32") (term "2,0"))
                                    (rule "translateJavaAddInt" (formula "31") (term "0,2,1,1,1"))
                                    (rule "translateJavaSubInt" (formula "31") (term "2,0,1,0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "32") (term "2,0,1,0,1,2,0"))
                                    (rule "mul_literals" (formula "32") (term "1,2,0,1,0,1,2,0"))
                                    (rule "polySimp_elimSub" (formula "31") (term "2,0,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "1,2,0,1,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,2,1,1,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "2,0,1,0,1,2,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "2,0,1,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,0,1,2,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,2,0,1,0,1,0,0"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "39") (inst "iv=iv"))
                                    (rule "lenOfSeqDef" (formula "39") (term "1,0"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "1,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "39") (term "0,1,1,0"))
                                    (rule "add_literals" (formula "39") (term "1,0,1,1,0"))
                                    (rule "times_zero_1" (formula "39") (term "0,1,1,0"))
                                    (rule "add_zero_left" (formula "39") (term "1,1,0"))
                                    (rule "lenOfSeqDef" (formula "39") (term "0,0"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "39") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "39") (term "1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "39") (term "0,1,0,0"))
                                    (rule "add_zero_left" (formula "39") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "allRight" (formula "39") (inst "sk=iv_0"))
                                    (rule "impRight" (formula "39"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqDef" (formula "41") (term "1"))
                                    (rule "castDel" (formula "41") (term "2,1"))
                                    (rule "castDel" (formula "41") (term "1,1"))
                                    (rule "replace_known_left" (formula "41") (term "0,0,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "polySimp_elimSub" (formula "41") (term "1,0,1"))
                                    (rule "polySimp_addComm0" (formula "41") (term "0,2,1,1"))
                                    (rule "polySimp_addComm1" (formula "41") (term "1,0,1"))
                                    (rule "polySimp_pullOutFactor1" (formula "41") (term "0,1,0,1"))
                                    (rule "add_literals" (formula "41") (term "1,0,1,0,1"))
                                    (rule "times_zero_1" (formula "41") (term "0,1,0,1"))
                                    (rule "add_zero_left" (formula "41") (term "1,0,1"))
                                    (rule "lenOfSeqDef" (formula "2") (term "1"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "1,1"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1"))
                                    (rule "add_literals" (formula "2") (term "1,0,1,1"))
                                    (rule "times_zero_1" (formula "2") (term "0,1,1"))
                                    (rule "add_zero_left" (formula "2") (term "1,1"))
                                    (rule "getOfSeqDef" (formula "41") (term "0"))
                                    (rule "castDel" (formula "41") (term "2,0"))
                                    (rule "castDel" (formula "41") (term "1,0"))
                                    (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "polySimp_elimSub" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_addComm0" (formula "41") (term "0,2,1,0"))
                                    (rule "polySimp_addComm1" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "41") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "41") (term "1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "41") (term "0,1,0,0"))
                                    (rule "add_zero_left" (formula "41") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "pullOutSelect" (formula "34") (term "1,2,0") (inst "selectSK=arr_0"))
                                    (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "34"))
                                    (rule "simplifySelectOfAnon" (formula "34"))
                                     (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")) (ifInst ""  (formula "6")))
                                    (rule "polySimp_addComm0" (formula "35") (term "2,0"))
                                    (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                    (rule "elementOfUnion" (formula "34") (term "0,0"))
                                    (rule "disjointAllFields" (formula "34") (term "1,0,0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "elementOfArrayRangeConcrete" (formula "34") (term "0,0"))
                                    (rule "eqSymm" (formula "34") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "34") (term "0,0,0,0") (ifseqformula "38"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "35") (term "0,2,0") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "34") (term "2,0"))
                                    (rule "pullOutSelect" (formula "41") (term "1,0") (inst "selectSK=arr_1"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "5")))
                                    (rule "eqSymm" (formula "42"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0"))
                                    (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
                                    (rule "times_zero_1" (formula "29") (term "0,0"))
                                    (rule "add_zero_left" (formula "29") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1"))
                                    (rule "commuteUnion" (formula "35") (term "1,0,2,0"))
                                    (rule "commuteUnion" (formula "38") (term "1,0"))
                                    (rule "commuteUnion" (formula "36") (term "1,0,0"))
                                    (rule "nnf_imp2or" (formula "33") (term "0"))
                                    (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "nnf_notAnd" (formula "33") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "33") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "33") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "33") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "33") (term "1,1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "33") (term "1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "33") (term "0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "33") (term "0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,0,1,1,0"))
                                    (rule "nnf_imp2or" (formula "33") (term "0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "33") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "33") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,0,0,1,0"))
                                    (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "25"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "translateJavaMulInt" (formula "25") (term "1,1,0,0,0,0,1,0,0"))
                                    (rule "translateJavaMulInt" (formula "25") (term "1,1,0,0,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "1,1,0,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "1,1,0,0,0,0,0,1,0,0"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "notLeft" (formula "27"))
                                    (rule "andLeft" (formula "31"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "notLeft" (formula "27"))
                                    (rule "andLeft" (formula "32"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "notLeft" (formula "26"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "33"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "notLeft" (formula "26"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "notLeft" (formula "26"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "notLeft" (formula "27"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "notLeft" (formula "26"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "disjointDefinition" (formula "61"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "notLeft" (formula "61"))
                                    (rule "disjointDefinition" (formula "60"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "notLeft" (formula "60"))
                                    (rule "disjointDefinition" (formula "59"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "notLeft" (formula "59"))
                                    (rule "eqSymm" (formula "72"))
                                    (rule "disjointDefinition" (formula "58"))
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "notLeft" (formula "58"))
                                    (rule "eqSymm" (formula "71"))
                                    (rule "disjointDefinition" (formula "57"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "notLeft" (formula "57"))
                                    (rule "eqSymm" (formula "70"))
                                    (rule "disjointDefinition" (formula "56"))
                                     (builtin "One Step Simplification" (formula "56"))
                                    (rule "notLeft" (formula "56"))
                                    (rule "eqSymm" (formula "69"))
                                    (rule "disjointDefinition" (formula "55"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "notLeft" (formula "55"))
                                    (rule "eqSymm" (formula "68"))
                                    (rule "disjointDefinition" (formula "54"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "notLeft" (formula "54"))
                                    (rule "eqSymm" (formula "67"))
                                    (rule "disjointDefinition" (formula "53"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "notLeft" (formula "53"))
                                    (rule "eqSymm" (formula "66"))
                                    (rule "disjointDefinition" (formula "52"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "notLeft" (formula "52"))
                                    (rule "eqSymm" (formula "65"))
                                    (rule "disjointDefinition" (formula "51"))
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "notLeft" (formula "51"))
                                    (rule "eqSymm" (formula "64"))
                                    (rule "disjointDefinition" (formula "50"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "notLeft" (formula "50"))
                                    (rule "eqSymm" (formula "63"))
                                    (rule "disjointDefinition" (formula "49"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "notLeft" (formula "49"))
                                    (rule "eqSymm" (formula "62"))
                                    (rule "disjointDefinition" (formula "48"))
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "notLeft" (formula "48"))
                                    (rule "eqSymm" (formula "61"))
                                    (rule "disjointDefinition" (formula "47"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "notLeft" (formula "47"))
                                    (rule "eqSymm" (formula "60"))
                                    (rule "disjointDefinition" (formula "46"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "notLeft" (formula "46"))
                                    (rule "disjointDefinition" (formula "45"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "notLeft" (formula "45"))
                                    (rule "eqSymm" (formula "58"))
                                    (rule "disjointDefinition" (formula "44"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "notLeft" (formula "44"))
                                    (rule "eqSymm" (formula "57"))
                                    (rule "disjointDefinition" (formula "43"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "notLeft" (formula "43"))
                                    (rule "disjointDefinition" (formula "42"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "notLeft" (formula "42"))
                                    (rule "disjointDefinition" (formula "41"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "notLeft" (formula "41"))
                                    (rule "disjointDefinition" (formula "40"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "disjointDefinition" (formula "39"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "disjointDefinition" (formula "38"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "notLeft" (formula "38"))
                                    (rule "disjointDefinition" (formula "37"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "disjointDefinition" (formula "36"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "notLeft" (formula "36"))
                                    (rule "disjointDefinition" (formula "35"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "disjointDefinition" (formula "34"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "notLeft" (formula "34"))
                                    (rule "applyEq" (formula "44") (term "0,1,0,0") (ifseqformula "33"))
                                    (rule "applyEq" (formula "46") (term "0,1,0") (ifseqformula "33"))
                                    (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "33"))
                                    (rule "applyEq" (formula "43") (term "0,1,0,2,0") (ifseqformula "33"))
                                    (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "33"))
                                    (rule "distributeIntersection" (formula "24") (term "0"))
                                    (rule "distributeIntersection" (formula "23") (term "0"))
                                    (rule "distributeIntersection" (formula "24") (term "1,0"))
                                    (rule "distributeIntersection" (formula "24") (term "0,0"))
                                    (rule "unionEqualsEmpty" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "distributeIntersection" (formula "25") (term "1,1,0"))
                                    (rule "distributeIntersection" (formula "25") (term "0,1,0"))
                                    (rule "distributeIntersection" (formula "25") (term "1,0,0"))
                                    (rule "distributeIntersection" (formula "25") (term "0,0,0"))
                                    (rule "distributeIntersection" (formula "23") (term "0"))
                                    (rule "distributeIntersection" (formula "24") (term "0"))
                                    (rule "unionEqualsEmpty" (formula "25"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "distributeIntersection" (formula "23") (term "1,0"))
                                    (rule "distributeIntersection" (formula "23") (term "0,0"))
                                    (rule "distributeIntersection" (formula "24") (term "1,0"))
                                    (rule "distributeIntersection" (formula "24") (term "0,0"))
                                    (rule "unionEqualsEmpty" (formula "26"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "unionEqualsEmpty" (formula "25"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "unionEqualsEmpty" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "unionEqualsEmpty" (formula "25"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "unionEqualsEmpty" (formula "30"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "notLeft" (formula "30"))
                                    (rule "notLeft" (formula "30"))
                                    (rule "eqSymm" (formula "53"))
                                    (rule "eqSymm" (formula "52"))
                                    (rule "unionEqualsEmpty" (formula "29"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "andLeft" (formula "29"))
                                    (rule "notLeft" (formula "29"))
                                    (rule "notLeft" (formula "29"))
                                    (rule "eqSymm" (formula "52"))
                                    (rule "eqSymm" (formula "51"))
                                    (rule "unionEqualsEmpty" (formula "27"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "notLeft" (formula "27"))
                                    (rule "notLeft" (formula "27"))
                                    (rule "eqSymm" (formula "51"))
                                    (rule "eqSymm" (formula "50"))
                                    (rule "unionEqualsEmpty" (formula "27"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "notLeft" (formula "27"))
                                    (rule "notLeft" (formula "27"))
                                    (rule "eqSymm" (formula "50"))
                                    (rule "eqSymm" (formula "49"))
                                    (rule "unionEqualsEmpty" (formula "24"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "eqSymm" (formula "49"))
                                    (rule "eqSymm" (formula "48"))
                                    (rule "unionEqualsEmpty" (formula "23"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "eqSymm" (formula "48"))
                                    (rule "eqSymm" (formula "47"))
                                    (rule "unionEqualsEmpty" (formula "23"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "eqSymm" (formula "47"))
                                    (rule "eqSymm" (formula "46"))
                                    (rule "unionEqualsEmpty" (formula "23"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "eqSymm" (formula "46"))
                                    (rule "eqSymm" (formula "45"))
                                    (rule "commuteUnion_2" (formula "31") (term "0,1"))
                                    (rule "commuteUnion" (formula "31") (term "1,1,1"))
                                    (rule "commuteUnion" (formula "42") (term "0,0,1,0,0"))
                                    (rule "commuteUnion" (formula "42") (term "1,1,0,1,0,0"))
                                    (rule "commuteUnion_2" (formula "44") (term "0,0,1,0"))
                                    (rule "commuteUnion" (formula "44") (term "1,1,0,1,0"))
                                    (rule "commuteUnion_2" (formula "41") (term "0,0,1,0,2,0"))
                                    (rule "commuteUnion" (formula "41") (term "1,1,0,1,0,2,0"))
                                    (rule "commuteUnion" (formula "31") (term "0,0,1"))
                                    (rule "commuteUnion" (formula "42") (term "1,0,0,1,0,0"))
                                    (rule "commuteUnion" (formula "44") (term "0,0,0,1,0"))
                                    (rule "commuteUnion" (formula "41") (term "0,0,0,1,0,2,0"))
                                    (rule "commuteUnion_2" (formula "31") (term "0,1"))
                                    (rule "commuteUnion_2" (formula "44") (term "0,0,1,0"))
                                    (rule "commuteUnion_2" (formula "41") (term "0,0,1,0,2,0"))
                                    (rule "commuteUnion_2" (formula "31") (term "1"))
                                    (rule "commuteUnion_2" (formula "44") (term "0,1,0"))
                                    (rule "commuteUnion_2" (formula "41") (term "0,1,0,2,0"))
                                    (rule "Contract_axiom_for_bucketStartsOrdering_in_Functions" (formula "33") (term "0"))
                                    (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "16")) (ifInst ""  (formula "100")) (ifInst ""  (formula "34")))
                                    (rule "true_left" (formula "33"))
                                    (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "20") (term "0") (inst "b=b"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "translateJavaAddInt" (formula "20") (term "0,2,5,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,2,5,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                    (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "21") (term "0,0,1") (inst "b=b"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "translateJavaMod" (formula "21") (term "0,1,0,0,0,1"))
                                    (rule "translateJavaAddInt" (formula "21") (term "2,0,1,0,0,1"))
                                    (rule "translateJavaAddInt" (formula "21") (term "3,0,1,0,0,1"))
                                    (rule "translateJavaAddInt" (formula "21") (term "0,2,1,3,0,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,2,1,3,0,1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0,1"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0,0,1"))
                                    (rule "jmod_axiom" (formula "21") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,0,1"))
                                    (rule "polySimp_homoEq" (formula "21") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "21") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,0,1"))
                                    (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "16") (term "0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "translateJavaAddInt" (formula "16") (term "0,1,0,0"))
                                    (rule "translateJavaAddInt" (formula "16") (term "3,0,1,0"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "polySimp_addComm0" (formula "18") (term "3,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "16"))
                                    (rule "inEqSimp_commuteLeq" (formula "17"))
                                    (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "25") (term "0") (inst "b=b"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "translateJavaSubInt" (formula "25") (term "0,1,0"))
                                    (rule "translateJavaAddInt" (formula "25") (term "0,2,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,2,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,0,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,0,0,1,1,0"))
                                    (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "21") (term "0") (inst "b=b"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "translateJavaAddInt" (formula "21") (term "2,0,1,0"))
                                    (rule "translateJavaAddInt" (formula "21") (term "3,0,1,0"))
                                    (rule "translateJavaAddInt" (formula "21") (term "0,2,1,3,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,2,1,3,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                    (rule "Definition_axiom_for_bucketStartsOrdering_in_de_wiesler_Functions" (formula "36") (term "0") (inst "b=b"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "translateJavaAddInt" (formula "36") (term "0,2,0,1,1,1,1,0,1"))
                                    (rule "translateJavaAddInt" (formula "36") (term "0,2,0,1,1,0,1,0,1"))
                                    (rule "translateJavaAddInt" (formula "36") (term "0,2,0,1,0"))
                                    (rule "translateJavaAddInt" (formula "36") (term "0,2,1,1,0,1,0,1,0,1"))
                                    (rule "translateJavaAddInt" (formula "36") (term "0,2,1,1,0,1,1,1,0,1"))
                                    (rule "translateJavaAddInt" (formula "36") (term "0,2,0,0,0,1,1,1,0,1"))
                                    (rule "translateJavaAddInt" (formula "36") (term "0,2,1,1,0,0"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,2,0,1,1,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,2,1,1,0,1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,2,1,1,0,1,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,2,0,0,0,1,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,2,0,1,1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "38") (term "0,2,0"))
                                    (rule "polySimp_addComm0" (formula "37") (term "0,2,1"))
                                    (rule "inEqSimp_gtToGeq" (formula "39") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "36"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0,1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0,1,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,1,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "37"))
                                    (rule "inEqSimp_commuteLeq" (formula "36"))
                                    (rule "applyEq" (formula "36") (term "0") (ifseqformula "20"))
                                    (rule "inEqSimp_commuteGeq" (formula "36"))
                                    (rule "applyEq" (formula "36") (term "1,1,1,1,1,0") (ifseqformula "20"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0"))
                                    (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "22") (term "0") (inst "b=b"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "translateJavaAddInt" (formula "22") (term "0,2,5,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,2,5,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "23") (term "0"))
                                    (rule "commute_or" (formula "42") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "24") (term "0,0,1"))
                                    (rule "cnf_rightDist" (formula "42") (term "1,1,0"))
                                    (rule "cnf_rightDist" (formula "42") (term "0,1,0"))
                                    (rule "nnf_imp2or" (formula "25") (term "0"))
                                    (rule "nnf_imp2or" (formula "21") (term "0"))
                                    (rule "arrayLengthIsAShort" (formula "11") (term "0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "arrayLengthNotNegative" (formula "12") (term "0"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "bucket_starts[bucket] >= 1 TRUE"
                                       (rule "replace_known_left" (formula "105") (term "0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "4")))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                       (rule "leq_literals" (formula "1") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "105")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "bucket_starts[bucket] >= 1 FALSE"
                                       (rule "inEqSimp_geqRight" (formula "48"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "translateJavaSubInt" (formula "34") (term "2,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "31") (term "2,0,1,0,2,0"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,0,1,0,2,1"))
                                    (rule "eqSymm" (formula "39"))
                                    (rule "polySimp_homoEq" (formula "18") (term "0,1,1"))
                                    (rule "polySimp_elimSub" (formula "34") (term "2,0,1,0"))
                                    (rule "mul_literals" (formula "34") (term "1,2,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "32") (term "2,0,1,0,0"))
                                    (rule "mul_literals" (formula "32") (term "1,2,0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "31") (term "2,0,1,0,2,0"))
                                    (rule "mul_literals" (formula "31") (term "1,2,0,1,0,2,0"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,0,1,0,2,0"))
                                    (rule "mul_literals" (formula "39") (term "1,2,0,1,0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "34") (term "2,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "2,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "2,0,1,0,2,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "2,0,1,0,2,0"))
                                    (rule "polySimp_addComm0" (formula "34") (term "0,2,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,2,0,1,0,2,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,2,0,1,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "29") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,0"))
                                    (rule "narrowSelectArrayType" (formula "39") (term "2,1") (ifseqformula "1") (ifseqformula "38"))
                                    (rule "narrowSelectArrayType" (formula "39") (term "2,0") (ifseqformula "34") (ifseqformula "38"))
                                    (rule "inEqSimp_homoInEq0" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "jmod_axiom" (formula "18") (term "0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,1,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "18") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "18") (term "1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "39") (inst "iv=iv"))
                                    (rule "lenOfSeqDef" (formula "39") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1,1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,1,1,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,1,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,1,1,1,0,0,1"))
                                    (rule "getOfSeqDef" (formula "39") (term "0,1,0,1"))
                                    (rule "castDel" (formula "39") (term "2,0,1,0,1"))
                                    (rule "castDel" (formula "39") (term "1,0,1,0,1"))
                                    (rule "eqSymm" (formula "39") (term "1,0,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,1,0,1,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1,1,0,1,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,2,1,1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,1,1,0,1,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,1,0,1,1,0,1"))
                                    (rule "lenOfSeqDef" (formula "39") (term "0,0"))
                                    (rule "eqSymm" (formula "39") (term "0"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "1,1,0,1,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,1,1,0,1,1,0,1"))
                                    (rule "getOfSeqDef" (formula "39") (term "0,1,0,1"))
                                    (rule "castDel" (formula "39") (term "2,0,1,0,1"))
                                    (rule "castDel" (formula "39") (term "1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1,1,0,0,1,0,1"))
                                    (rule "eqSymm" (formula "39") (term "1,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,2,1,1,1,0,1"))
                                    (rule "translateJavaAddInt" (formula "39") (term "1,1,1,1,0,1,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,1,2,0"))
                                    (rule "translateJavaAddInt" (formula "31") (term "1,1"))
                                    (rule "translateJavaAddInt" (formula "39") (term "0,2,1,0,0,0,0"))
                                    (rule "translateJavaAddInt" (formula "39") (term "0,0,2,1,1,1,0,1"))
                                    (rule "translateJavaAddInt" (formula "31") (term "0,1"))
                                    (rule "translateJavaAddInt" (formula "31") (term "0,0"))
                                    (rule "translateJavaAddInt" (formula "39") (term "0,2,1,1,1,1,1,0,1,1,0,1"))
                                    (rule "translateJavaAddInt" (formula "32") (term "2,0"))
                                    (rule "translateJavaAddInt" (formula "31") (term "0,2,1,1,1"))
                                    (rule "translateJavaAddInt" (formula "39") (term "0,0,0,0"))
                                    (rule "translateJavaAddInt" (formula "39") (term "0,2,1,0,0,2,1,1,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "31") (term "2,0,1,0,1,0,0"))
                                    (rule "eqSymm" (formula "39") (term "1,0,1"))
                                    (rule "polySimp_elimSub" (formula "32") (term "2,0,1,0,1,2,0"))
                                    (rule "mul_literals" (formula "32") (term "1,2,0,1,0,1,2,0"))
                                    (rule "polySimp_elimSub" (formula "31") (term "2,0,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "1,2,0,1,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,2,1,1,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,2,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,2,1,0,0,2,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,2,1,1,1,1,1,0,0,1,0,1"))
                                    (rule "eqSymm" (formula "39") (term "1,0,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "2,0,1,0,1,2,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "2,0,1,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,0,1,2,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,2,0,1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,1,1,0,1,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,1,0,1,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "1,1,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "1,1,0,1,1,0,1"))
                                    (rule "eqSymm" (formula "39") (term "1,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,1,1,0,0,1,0,1"))
                                    (rule "eqSymm" (formula "39") (term "1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,1,0,0,1"))
                                    (rule "lenOfSeqDef" (formula "39") (term "0,0"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0,1"))
                                    (rule "eqSymm" (formula "39") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,1,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0,1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,0,1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "0,1,0,0,1,0,1,1,0,1"))
                                    (rule "polySimp_mulAssoc" (formula "39") (term "0,0,1,0,0,1,0,1,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,0,0,1,0,0,1,0,1,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0,0,1,0,0,1,0,1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0,0,1,0,0,1,0,1,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,1,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,0,1,1,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                    (rule "eqSymm" (formula "39") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0"))
                                    (rule "eqSymm" (formula "39") (term "0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "allRight" (formula "39") (inst "sk=iv_0"))
                                    (rule "impRight" (formula "39"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,2,1,1"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,2,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "41") (term "0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "replace_known_left" (formula "41") (term "0,0,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "41") (term "0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "41") (term "0,0,1,0,1"))
                                    (rule "mul_literals" (formula "41") (term "0,0,0,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,1"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "polySimp_rightDist" (formula "41") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,0,1,0,0"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "polySimp_rightDist" (formula "41") (term "0,0,1,0,1"))
                                    (rule "mul_literals" (formula "41") (term "0,0,0,1,0,1"))
                                    (rule "pullOutSelect" (formula "34") (term "1,2,0") (inst "selectSK=arr_0"))
                                    (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "34"))
                                    (rule "simplifySelectOfAnon" (formula "34"))
                                     (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")) (ifInst ""  (formula "6")))
                                    (rule "polySimp_addComm0" (formula "35") (term "2,0"))
                                    (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                    (rule "elementOfUnion" (formula "34") (term "0,0"))
                                    (rule "disjointAllFields" (formula "34") (term "1,0,0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "elementOfArrayRangeConcrete" (formula "34") (term "0,0"))
                                    (rule "eqSymm" (formula "34") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "34") (term "0,0,0,0") (ifseqformula "38"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "applyEqReverse" (formula "35") (term "0,2,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "polySimp_addComm0" (formula "34") (term "2,0"))
                                    (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                    (rule "pullOutSelect" (formula "41") (term "1,0") (inst "selectSK=arr_1"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "5")))
                                    (rule "eqSymm" (formula "42"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0"))
                                    (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,0,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "1") (term "0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "42") (term "1,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "closeTrue" (formula "42"))
                                 )
                              )
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "closeTrue" (formula "39"))
                           )
                        )
                        (branch "Precondition"
                           (rule "andRight" (formula "38"))
                           (branch "Case 1"
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,0"))
                              (rule "translateJavaSubInt" (formula "31") (term "2,0,1,0,2,0"))
                              (rule "translateJavaSubInt" (formula "38") (term "0,0"))
                              (rule "polySimp_homoEq" (formula "18") (term "0,1,1"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,0,1,0,0"))
                              (rule "mul_literals" (formula "32") (term "1,2,0,1,0,0"))
                              (rule "polySimp_elimSub" (formula "31") (term "2,0,1,0,2,0"))
                              (rule "mul_literals" (formula "31") (term "1,2,0,1,0,2,0"))
                              (rule "polySimp_elimSub" (formula "38") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "32") (term "2,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "31") (term "2,0,1,0,2,0"))
                              (rule "polySimp_addComm0" (formula "38") (term "0,0"))
                              (rule "close" (formula "38") (ifseqformula "5"))
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "wellFormedAnon" (formula "38"))
                              (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,0"))
                              (rule "translateJavaSubInt" (formula "31") (term "2,0,1,0,2,0"))
                              (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "33"))
                               (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "1")))
                              (rule "closeTrue" (formula "38"))
                           )
                        )
                        (branch "Usage"
                            (builtin "One Step Simplification" (formula "34"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "andLeft" (formula "34"))
                           (rule "andLeft" (formula "34"))
                           (rule "andLeft" (formula "35"))
                           (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "34"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "true_left" (formula "37"))
                           (rule "narrowSelectArrayType" (formula "36") (term "2,1") (ifseqformula "1") (ifseqformula "40"))
                           (rule "narrowSelectArrayType" (formula "35") (term "2,1") (ifseqformula "1") (ifseqformula "40"))
                           (rule "ifUnfold" (formula "41") (term "1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_8"))
                           (rule "inequality_comparison_simple" (formula "41") (term "1"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "replace_known_left" (formula "41") (term "0,0,1,0") (ifseqformula "34"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "ifSplit" (formula "41"))
                           (branch "if x_8 true"
                               (builtin "One Step Simplification" (formula "42"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "if x_8 false"
                               (builtin "One Step Simplification" (formula "42"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "blockEmpty" (formula "41") (term "1"))
                               (builtin "Block Contract (Internal)" (formula "41") (newnames "exc_4,heap_Before_BLOCK_3,savedHeap_Before_BLOCK_3,o,f"))
                              (branch "Validity"
                                  (builtin "One Step Simplification" (formula "37"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "translateJavaSubInt" (formula "37") (term "0,0,0"))
                                 (rule "andLeft" (formula "37"))
                                 (rule "eqSymm" (formula "43") (term "0,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "37") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "37") (term "0,0"))
                                 (rule "narrowSelectArrayType" (formula "36") (term "2,0") (ifseqformula "37") (ifseqformula "41"))
                                 (rule "narrowSelectArrayType" (formula "35") (term "2,0") (ifseqformula "37") (ifseqformula "41"))
                                 (rule "narrowSelectArrayType" (formula "31") (term "2,0") (ifseqformula "37") (ifseqformula "41"))
                                 (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                 (rule "variableDeclaration" (formula "42") (term "1") (newnames "exc_4_1"))
                                 (rule "assignment" (formula "42") (term "1"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "emptyStatement" (formula "42") (term "1"))
                                 (rule "emptyStatement" (formula "42") (term "1"))
                                 (rule "tryEmpty" (formula "42") (term "1"))
                                 (rule "blockEmptyLabel" (formula "42") (term "1"))
                                 (rule "blockEmpty" (formula "42") (term "1"))
                                 (rule "methodCallEmpty" (formula "42") (term "1"))
                                 (rule "emptyModality" (formula "42") (term "1"))
                                 (rule "andRight" (formula "42"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "42"))
                                    (branch "Case 1"
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "closeTrue" (formula "42"))
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "42"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "translateJavaSubInt" (formula "37") (term "2,0,1,0"))
                                          (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,2,0"))
                                          (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,2,0"))
                                          (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,0"))
                                          (rule "translateJavaSubInt" (formula "31") (term "2,0,1,0,2,0"))
                                          (rule "translateJavaSubInt" (formula "42") (term "2,0,1,0,2,0"))
                                          (rule "polySimp_homoEq" (formula "18") (term "0,1,1"))
                                          (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0"))
                                          (rule "mul_literals" (formula "37") (term "1,2,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "36") (term "2,0,1,0,2,0"))
                                          (rule "mul_literals" (formula "36") (term "1,2,0,1,0,2,0"))
                                          (rule "polySimp_elimSub" (formula "35") (term "2,0,1,0,2,0"))
                                          (rule "mul_literals" (formula "35") (term "1,2,0,1,0,2,0"))
                                          (rule "polySimp_elimSub" (formula "32") (term "2,0,1,0,0"))
                                          (rule "mul_literals" (formula "32") (term "1,2,0,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "31") (term "2,0,1,0,2,0"))
                                          (rule "mul_literals" (formula "31") (term "1,2,0,1,0,2,0"))
                                          (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,2,0"))
                                          (rule "mul_literals" (formula "42") (term "1,2,0,1,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "36") (term "2,0,1,0,2,0"))
                                          (rule "polySimp_addComm1" (formula "35") (term "2,0,1,0,2,0"))
                                          (rule "polySimp_addComm1" (formula "32") (term "2,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "31") (term "2,0,1,0,2,0"))
                                          (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,2,0"))
                                          (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "36") (term "0,2,0,1,0,2,0"))
                                          (rule "polySimp_addComm0" (formula "35") (term "0,2,0,1,0,2,0"))
                                          (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "31") (term "0,2,0,1,0,2,0"))
                                          (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,2,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "29") (term "0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,1"))
                                          (rule "narrowSelectArrayType" (formula "42") (term "2,1") (ifseqformula "1") (ifseqformula "41"))
                                          (rule "narrowSelectArrayType" (formula "42") (term "2,0") (ifseqformula "37") (ifseqformula "41"))
                                          (rule "seqPermReflRightFirst" (formula "42") (ifseqformula "35"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "closeTrue" (formula "42"))
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "translateJavaSubInt" (formula "37") (term "2,0,1,0"))
                                          (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,0"))
                                          (rule "translateJavaSubInt" (formula "31") (term "2,0,1,0,2,0"))
                                          (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,2,0"))
                                          (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,2,0"))
                                          (rule "translateJavaSubInt" (formula "42") (term "2,0,1,0,2,0"))
                                          (rule "polySimp_homoEq" (formula "18") (term "0,1,1"))
                                          (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0"))
                                          (rule "mul_literals" (formula "37") (term "1,2,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "32") (term "2,0,1,0,0"))
                                          (rule "mul_literals" (formula "32") (term "1,2,0,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "31") (term "2,0,1,0,2,0"))
                                          (rule "mul_literals" (formula "31") (term "1,2,0,1,0,2,0"))
                                          (rule "polySimp_elimSub" (formula "36") (term "2,0,1,0,2,0"))
                                          (rule "mul_literals" (formula "36") (term "1,2,0,1,0,2,0"))
                                          (rule "polySimp_elimSub" (formula "35") (term "2,0,1,0,2,0"))
                                          (rule "mul_literals" (formula "35") (term "1,2,0,1,0,2,0"))
                                          (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,2,0"))
                                          (rule "mul_literals" (formula "42") (term "1,2,0,1,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "32") (term "2,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "31") (term "2,0,1,0,2,0"))
                                          (rule "polySimp_addComm1" (formula "36") (term "2,0,1,0,2,0"))
                                          (rule "polySimp_addComm1" (formula "35") (term "2,0,1,0,2,0"))
                                          (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,2,0"))
                                          (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "31") (term "0,2,0,1,0,2,0"))
                                          (rule "polySimp_addComm0" (formula "36") (term "0,2,0,1,0,2,0"))
                                          (rule "polySimp_addComm0" (formula "35") (term "0,2,0,1,0,2,0"))
                                          (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,2,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1,1"))
                                          (rule "inEqSimp_gtToGeq" (formula "29") (term "0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,1"))
                                          (rule "narrowSelectArrayType" (formula "42") (term "2,1") (ifseqformula "1") (ifseqformula "41"))
                                          (rule "narrowSelectArrayType" (formula "42") (term "2,0") (ifseqformula "37") (ifseqformula "41"))
                                          (rule "seqPermReflRightFirst" (formula "42") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "closeTrue" (formula "42"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "closeTrue" (formula "42"))
                                 )
                              )
                              (branch "Precondition"
                                 (rule "andRight" (formula "41"))
                                 (branch "Case 1"
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,2,0"))
                                    (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,2,0"))
                                    (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "31") (term "2,0,1,0,2,0"))
                                    (rule "translateJavaSubInt" (formula "41") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "18") (term "0,1,1"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,0,1,0,2,0"))
                                    (rule "mul_literals" (formula "36") (term "1,2,0,1,0,2,0"))
                                    (rule "polySimp_elimSub" (formula "35") (term "2,0,1,0,2,0"))
                                    (rule "mul_literals" (formula "35") (term "1,2,0,1,0,2,0"))
                                    (rule "polySimp_elimSub" (formula "32") (term "2,0,1,0,0"))
                                    (rule "mul_literals" (formula "32") (term "1,2,0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "31") (term "2,0,1,0,2,0"))
                                    (rule "mul_literals" (formula "31") (term "1,2,0,1,0,2,0"))
                                    (rule "polySimp_elimSub" (formula "41") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "36") (term "2,0,1,0,2,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "2,0,1,0,2,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "2,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "2,0,1,0,2,0"))
                                    (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                    (rule "close" (formula "41") (ifseqformula "5"))
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "wellFormedAnon" (formula "41"))
                                    (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,2,0"))
                                    (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,2,0"))
                                    (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "31") (term "2,0,1,0,2,0"))
                                    (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "33")))
                                    (rule "closeTrue" (formula "41"))
                                 )
                              )
                              (branch "Usage"
                                  (builtin "One Step Simplification" (formula "37"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "andLeft" (formula "37"))
                                 (rule "andLeft" (formula "37"))
                                 (rule "andLeft" (formula "38"))
                                 (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "37"))
                                  (builtin "One Step Simplification" (formula "40"))
                                 (rule "true_left" (formula "40"))
                                 (rule "narrowSelectArrayType" (formula "38") (term "2,1") (ifseqformula "1") (ifseqformula "43"))
                                 (rule "narrowSelectArrayType" (formula "39") (term "2,1") (ifseqformula "1") (ifseqformula "43"))
                                 (rule "ifUnfold" (formula "44") (term "1") (inst "#boolv=x"))
                                 (rule "variableDeclaration" (formula "44") (term "1") (newnames "x_9"))
                                 (rule "inequality_comparison_simple" (formula "44") (term "1"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "replace_known_left" (formula "44") (term "0,0,1,0") (ifseqformula "37"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "ifSplit" (formula "44"))
                                 (branch "if x_9 true"
                                     (builtin "One Step Simplification" (formula "45"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "if x_9 false"
                                     (builtin "One Step Simplification" (formula "45"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "methodCallEmpty" (formula "44") (term "1"))
                                    (rule "tryEmpty" (formula "44") (term "1"))
                                    (rule "emptyModality" (formula "44") (term "1"))
                                    (rule "andRight" (formula "44"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "44"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "44"))
                                          (branch "Case 1"
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "seqPermConcatFW" (formula "39") (ifseqformula "31") (userinteraction))
                                             (rule "seqPermConcatFW" (formula "39") (ifseqformula "38") (userinteraction))
                                             (rule "seqDef_split" (formula "46") (term "0") (inst "idx=javaAddInt(begin,
           int::select(heap,
                       bucket_starts,
                       arr(bucket)))") (inst "uSub1=uSub1") (userinteraction))
                                             (rule "seqDef_split" (formula "46") (term "1") (inst "idx=javaAddInt(begin,
           int::select(heap,
                       bucket_starts,
                       arr(bucket)))") (inst "uSub1=uSub1") (userinteraction))
                                             (rule "cut_direct" (formula "46") (term "0,0") (userinteraction))
                                             (branch "CUT: begin <= javaAddInt(begin, bucket_starts[bucket]) & javaAddInt(begin, bucket_starts[bucket]) < end TRUE"
                                                 (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "1")) (userinteraction))
                                                (rule "seqDef_split" (formula "47") (term "1,1") (inst "idx=javaAddInt(begin,
           int::select(heap,
                       bucket_starts,
                       arr(add(bucket, Z(1(#))))))") (inst "uSub1=uSub1") (userinteraction))
                                                (rule "seqDef_split" (formula "47") (term "1,0") (inst "idx=javaAddInt(begin,
           int::select(heap,
                       bucket_starts,
                       arr(add(bucket, Z(1(#))))))") (inst "uSub1=uSub1") (userinteraction))
                                                (rule "translateJavaAddInt" (formula "32") (term "0,0"))
                                                (rule "translateJavaAddInt" (formula "47") (term "1,0,0"))
                                                (rule "translateJavaSubInt" (formula "47") (term "2,0,1,0,2,0,0"))
                                                (rule "translateJavaAddInt" (formula "47") (term "0,1,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "47") (term "0,1,1,1,0"))
                                                (rule "translateJavaAddInt" (formula "47") (term "0,0,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "47") (term "1,0,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "47") (term "1,0,1"))
                                                (rule "translateJavaAddInt" (formula "47") (term "0,0,1,1,0"))
                                                (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,2,0"))
                                                (rule "translateJavaAddInt" (formula "32") (term "0,1"))
                                                (rule "translateJavaAddInt" (formula "32") (term "1,1"))
                                                (rule "translateJavaSubInt" (formula "33") (term "2,0,1,0,0"))
                                                (rule "translateJavaSubInt" (formula "47") (term "2,0,1,0,2,0,1,1,0"))
                                                (rule "translateJavaSubInt" (formula "47") (term "2,0,1,0,2,1,1,1,0"))
                                                (rule "translateJavaAddInt" (formula "33") (term "2,0"))
                                                (rule "translateJavaAddInt" (formula "47") (term "1,0,1,1,0"))
                                                (rule "translateJavaSubInt" (formula "47") (term "2,0,1,0,2,2,1,0"))
                                                (rule "translateJavaAddInt" (formula "47") (term "0,2,1,0"))
                                                (rule "translateJavaAddInt" (formula "47") (term "0,0,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "47") (term "1,0,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "47") (term "0,1,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "47") (term "0,0,1,1,1"))
                                                (rule "translateJavaAddInt" (formula "47") (term "0,2,1,1"))
                                                (rule "translateJavaAddInt" (formula "47") (term "1,0,1,1,1"))
                                                (rule "translateJavaAddInt" (formula "47") (term "0,1,1,1,1"))
                                                (rule "translateJavaAddInt" (formula "1") (term "1,0"))
                                                (rule "translateJavaAddInt" (formula "1") (term "0,1"))
                                                (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,2,0"))
                                                (rule "translateJavaAddInt" (formula "36") (term "1,1"))
                                                (rule "translateJavaSubInt" (formula "37") (term "2,0,1,0,2,0"))
                                                (rule "translateJavaAddInt" (formula "37") (term "0,1"))
                                                (rule "translateJavaSubInt" (formula "39") (term "2,0,1,0,2,0"))
                                                (rule "translateJavaAddInt" (formula "39") (term "1,1"))
                                                (rule "translateJavaSubInt" (formula "40") (term "2,0,1,0,2,0,0"))
                                                (rule "translateJavaAddInt" (formula "40") (term "0,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "40") (term "2,0,1,0,2,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "40") (term "2,0,1,0,2,1,1,0"))
                                                (rule "translateJavaAddInt" (formula "40") (term "1,0,1"))
                                                (rule "translateJavaAddInt" (formula "40") (term "0,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "40") (term "1,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "40") (term "0,1,1,1"))
                                                (rule "translateJavaAddInt" (formula "41") (term "0,0,0"))
                                                (rule "translateJavaSubInt" (formula "41") (term "2,0,1,0,2,0,0"))
                                                (rule "translateJavaSubInt" (formula "41") (term "2,0,1,0,2,1,0"))
                                                (rule "translateJavaAddInt" (formula "41") (term "0,0,1"))
                                                (rule "translateJavaAddInt" (formula "41") (term "1,0,1"))
                                                (rule "translateJavaAddInt" (formula "41") (term "0,1,1"))
                                                (rule "translateJavaSubInt" (formula "42") (term "2,0,1,0,2,0"))
                                                (rule "translateJavaAddInt" (formula "42") (term "0,1"))
                                                (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,1,0,0"))
                                                (rule "translateJavaAddInt" (formula "32") (term "0,2,1,1,1"))
                                                (rule "translateJavaSubInt" (formula "33") (term "2,0,1,0,1,2,0"))
                                                (rule "translateJavaAddInt" (formula "37") (term "0,2,1,0,1"))
                                                (rule "translateJavaSubInt" (formula "40") (term "2,0,1,0,1,0,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "40") (term "0,2,1,1,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "40") (term "0,2,1,0,1,1,1"))
                                                (rule "translateJavaSubInt" (formula "41") (term "2,0,1,0,1,0,0,0"))
                                                (rule "translateJavaAddInt" (formula "41") (term "0,2,1,1,0,1"))
                                                (rule "translateJavaAddInt" (formula "41") (term "0,2,1,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "42") (term "0,2,1,0,1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "polySimp_homoEq" (formula "20") (term "0,1,1"))
                                                (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,2,0,0"))
                                                (rule "mul_literals" (formula "48") (term "1,2,0,1,0,2,0,0"))
                                                (rule "polySimp_elimSub" (formula "33") (term "2,0,1,0,2,0"))
                                                (rule "mul_literals" (formula "33") (term "1,2,0,1,0,2,0"))
                                                (rule "polySimp_elimSub" (formula "34") (term "2,0,1,0,0"))
                                                (rule "mul_literals" (formula "34") (term "1,2,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,2,0,1,1,0"))
                                                (rule "mul_literals" (formula "48") (term "1,2,0,1,0,2,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,2,1,1,1,0"))
                                                (rule "mul_literals" (formula "48") (term "1,2,0,1,0,2,1,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,2,2,1,0"))
                                                (rule "mul_literals" (formula "48") (term "1,2,0,1,0,2,2,1,0"))
                                                (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,2,0"))
                                                (rule "mul_literals" (formula "37") (term "1,2,0,1,0,2,0"))
                                                (rule "polySimp_elimSub" (formula "38") (term "2,0,1,0,2,0"))
                                                (rule "mul_literals" (formula "38") (term "1,2,0,1,0,2,0"))
                                                (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,2,0"))
                                                (rule "mul_literals" (formula "40") (term "1,2,0,1,0,2,0"))
                                                (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,2,0,0"))
                                                (rule "mul_literals" (formula "41") (term "1,2,0,1,0,2,0,0"))
                                                (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,2,0,1,0"))
                                                (rule "mul_literals" (formula "41") (term "1,2,0,1,0,2,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,2,1,1,0"))
                                                (rule "mul_literals" (formula "41") (term "1,2,0,1,0,2,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,2,0,0"))
                                                (rule "mul_literals" (formula "42") (term "1,2,0,1,0,2,0,0"))
                                                (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,2,1,0"))
                                                (rule "mul_literals" (formula "42") (term "1,2,0,1,0,2,1,0"))
                                                (rule "polySimp_elimSub" (formula "43") (term "2,0,1,0,2,0"))
                                                (rule "mul_literals" (formula "43") (term "1,2,0,1,0,2,0"))
                                                (rule "polySimp_elimSub" (formula "33") (term "2,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "33") (term "1,2,0,1,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "34") (term "2,0,1,0,1,2,0"))
                                                (rule "mul_literals" (formula "34") (term "1,2,0,1,0,1,2,0"))
                                                (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "41") (term "1,2,0,1,0,1,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "42") (term "1,2,0,1,0,1,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,2,1,0,1,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,2,1,0,1,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,2,1,1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,2,1,1,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,2,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,2,1,0,1,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,2,1,1,0,1,1,1"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,2,1,0,1,1,1,1"))
                                                (rule "polySimp_addComm0" (formula "33") (term "0,2,1,1,1"))
                                                (rule "polySimp_addComm0" (formula "38") (term "0,2,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0,2,1,1,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0,2,1,0,1,1,1"))
                                                (rule "polySimp_addComm0" (formula "42") (term "0,2,1,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "42") (term "0,2,1,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "43") (term "0,2,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,2,0,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "2,0,1,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "2,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,2,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,2,1,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,2,2,1,0"))
                                                (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "38") (term "2,0,1,0,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "31") (term "0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,2,0,0"))
                                                (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,2,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,2,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,2,1,0"))
                                                (rule "polySimp_addComm1" (formula "43") (term "2,0,1,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "2,0,1,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "2,0,1,0,1,2,0"))
                                                (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,1"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,2,0,0"))
                                                (rule "polySimp_addComm0" (formula "33") (term "0,2,0,1,0,2,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,2,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,2,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,2,1,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,2,2,1,0"))
                                                (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0,2,0"))
                                                (rule "polySimp_addComm0" (formula "38") (term "0,2,0,1,0,2,0"))
                                                (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,2,0"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,2,0,0"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,2,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,2,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,2,0,0"))
                                                (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,2,1,0"))
                                                (rule "polySimp_addComm0" (formula "43") (term "0,2,0,1,0,2,0"))
                                                (rule "polySimp_addComm0" (formula "33") (term "0,2,0,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,2,0,1,0,1,2,0"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                (rule "narrowSelectArrayType" (formula "48") (term "2,0,1,1,1") (ifseqformula "3") (ifseqformula "47"))
                                                (rule "narrowSelectArrayType" (formula "48") (term "2,0,1") (ifseqformula "3") (ifseqformula "47"))
                                                (rule "narrowSelectArrayType" (formula "48") (term "2,2,1,1") (ifseqformula "3") (ifseqformula "47"))
                                                (rule "narrowSelectArrayType" (formula "48") (term "2,1,1,1,1") (ifseqformula "3") (ifseqformula "47"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "47") (term "0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,1,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "47") (term "0,0,1,0,1,1"))
                                                (rule "seqPermConcatBW" (formula "47") (ifseqformula "39"))
                                                (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "47") (term "0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1" (formula "47") (term "0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "47") (term "1,0,0,0,0,0,1"))
                                                (rule "times_zero_1" (formula "47") (term "0,0,0,0,0,1"))
                                                (rule "add_zero_left" (formula "47") (term "0,0,0,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "47") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "47") (term "1,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "47") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                                (rule "jmod_axiom" (formula "19") (term "0,1,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "19") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,1,1,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "47") (term "0,1,1,0,1"))
                                                (rule "mul_literals" (formula "47") (term "0,0,1,1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "0,1,1,0,0"))
                                                (rule "mul_literals" (formula "47") (term "0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,0,0,1"))
                                                (rule "replace_known_left" (formula "47") (term "0,0,1") (ifseqformula "28"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                                (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "28"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "pullOutSelect" (formula "32") (term "1,0,0") (inst "selectSK=arr_0"))
                                                (rule "applyEq" (formula "42") (term "1,0,0,0") (ifseqformula "32"))
                                                (rule "applyEq" (formula "34") (term "1,2,0") (ifseqformula "32"))
                                                (rule "applyEq" (formula "41") (term "1,0,0,1,0") (ifseqformula "32"))
                                                (rule "simplifySelectOfAnon" (formula "32"))
                                                 (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "46")) (ifInst ""  (formula "5")))
                                                (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "42") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "2,0"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0,0,1,0"))
                                                (rule "elementOfUnion" (formula "32") (term "0,0"))
                                                (rule "disjointAllFields" (formula "32") (term "1,0,0") (ifseqformula "22"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "elementOfArrayRangeConcrete" (formula "32") (term "0,0"))
                                                (rule "eqSymm" (formula "32") (term "0,0,0,0"))
                                                (rule "replace_known_right" (formula "32") (term "0,0,0,0") (ifseqformula "44"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "applyEqReverse" (formula "34") (term "0,2,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "42") (term "0,0,0,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "41") (term "0,0,0,1,0") (ifseqformula "32"))
                                                (rule "hideAuxiliaryEq" (formula "32"))
                                                (rule "polySimp_addComm0" (formula "33") (term "2,0"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "40") (term "0,0,1,0"))
                                                (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "27") (term "0,0"))
                                                (rule "add_zero_left" (formula "27") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                (rule "mul_literals" (formula "27") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "27"))
                                                (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0"))
                                                (rule "qeq_literals" (formula "8") (term "0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "28") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "28") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0"))
                                                (rule "qeq_literals" (formula "28") (term "0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "commuteUnion" (formula "32") (term "1,0,2,0"))
                                                (rule "commuteUnion" (formula "33") (term "1,0,0"))
                                                (rule "commuteUnion" (formula "36") (term "1,0,2,0"))
                                                (rule "commuteUnion" (formula "37") (term "1,0,2,0"))
                                                (rule "commuteUnion" (formula "39") (term "1,0,2,0"))
                                                (rule "commuteUnion" (formula "40") (term "1,0,2,0,0"))
                                                (rule "commuteUnion" (formula "40") (term "1,0,2,0,1,0"))
                                                (rule "commuteUnion" (formula "40") (term "1,0,2,1,1,0"))
                                                (rule "commuteUnion" (formula "41") (term "1,0,2,0,0"))
                                                (rule "commuteUnion" (formula "41") (term "1,0,2,1,0"))
                                                (rule "commuteUnion" (formula "42") (term "1,0,2,0"))
                                                (rule "commuteUnion" (formula "47") (term "1,0,2,2,0"))
                                                (rule "commuteUnion" (formula "47") (term "1,0,2,1,1,0"))
                                                (rule "commuteUnion" (formula "47") (term "1,0,2,0,1,0"))
                                                (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "15") (term "0") (inst "b=b"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "translateJavaAddInt" (formula "15") (term "0,2,1,3,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "15") (term "2,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "15") (term "3,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "0,2,1,3,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "16") (term "0") (inst "b=b"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "translateJavaAddInt" (formula "16") (term "0,2,5,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "16") (term "0,2,5,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "19") (term "0") (inst "b=b"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "translateJavaAddInt" (formula "19") (term "0,2,0,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "19") (term "0,1,0"))
                                                (rule "polySimp_elimSub" (formula "19") (term "0,1,0"))
                                                (rule "polySimp_addComm0" (formula "19") (term "0,2,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "19") (term "0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "0,0,1,1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,0,0,1,1,0"))
                                                (rule "Definition_axiom_for_bucketStartsOrdering_in_de_wiesler_Functions" (formula "24") (term "0") (inst "b=b"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "translateJavaAddInt" (formula "24") (term "0,2,1,1,0,1,0,1,0,1"))
                                                (rule "translateJavaAddInt" (formula "24") (term "0,2,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "24") (term "0,2,0,1,1,0,1,0,1"))
                                                (rule "translateJavaAddInt" (formula "24") (term "0,2,1,1,0,1,1,1,0,1"))
                                                (rule "translateJavaAddInt" (formula "24") (term "0,2,0,1,1,1,1,0,1"))
                                                (rule "translateJavaAddInt" (formula "24") (term "0,2,0,0,0,1,1,1,0,1"))
                                                (rule "translateJavaAddInt" (formula "24") (term "0,2,1,1,0,0"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "polySimp_addComm0" (formula "27") (term "0,2,0,1,1,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "27") (term "0,2,1,1,0,1,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "27") (term "0,2,0,1,1,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "27") (term "0,2,0,0,0,1,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "27") (term "0,2,1,1,0,1,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "26") (term "0,2,0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,2,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,1,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "27") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "24"))
                                                (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "25"))
                                                (rule "inEqSimp_commuteLeq" (formula "24"))
                                                (rule "applyEq" (formula "24") (term "0") (ifseqformula "14"))
                                                (rule "inEqSimp_commuteGeq" (formula "24"))
                                                (rule "applyEq" (formula "24") (term "1,1,1,1,1,0") (ifseqformula "14"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,1,0"))
                                                (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "18") (term "0,0,1") (inst "b=b"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "translateJavaMod" (formula "18") (term "0,1,0,0,0,1"))
                                                (rule "translateJavaAddInt" (formula "18") (term "0,2,1,3,0,1,0,0,1"))
                                                (rule "translateJavaAddInt" (formula "18") (term "2,0,1,0,0,1"))
                                                (rule "translateJavaAddInt" (formula "18") (term "3,0,1,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "18") (term "0,2,1,3,0,1,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,0,1"))
                                                (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,0,1"))
                                                (rule "jmod_axiom" (formula "18") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,0,1"))
                                                (rule "polySimp_homoEq" (formula "18") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_sepPosMonomial" (formula "18") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0,0,1"))
                                                (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "13") (term "0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "translateJavaAddInt" (formula "13") (term "3,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "13") (term "0,1,0,0"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "polySimp_addComm0" (formula "15") (term "3,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "13"))
                                                (rule "inEqSimp_commuteLeq" (formula "14"))
                                                (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "25"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "translateJavaMulInt" (formula "25") (term "1,1,0,0,0,0,1,0,0"))
                                                (rule "translateJavaMulInt" (formula "25") (term "1,1,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "25") (term "1,1,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "25") (term "1,1,0,0,0,0,0,1,0,0"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "notLeft" (formula "27"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "notLeft" (formula "26"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "notLeft" (formula "27"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "andLeft" (formula "33"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "notLeft" (formula "27"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "notLeft" (formula "27"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "andLeft" (formula "35"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "notLeft" (formula "27"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "andLeft" (formula "36"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "disjointDefinition" (formula "61"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "notLeft" (formula "61"))
                                                (rule "disjointDefinition" (formula "60"))
                                                 (builtin "One Step Simplification" (formula "60"))
                                                (rule "notLeft" (formula "60"))
                                                (rule "disjointDefinition" (formula "59"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "notLeft" (formula "59"))
                                                (rule "eqSymm" (formula "79"))
                                                (rule "disjointDefinition" (formula "58"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "notLeft" (formula "58"))
                                                (rule "eqSymm" (formula "78"))
                                                (rule "disjointDefinition" (formula "57"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "notLeft" (formula "57"))
                                                (rule "eqSymm" (formula "77"))
                                                (rule "disjointDefinition" (formula "56"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "notLeft" (formula "56"))
                                                (rule "eqSymm" (formula "76"))
                                                (rule "disjointDefinition" (formula "55"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "notLeft" (formula "55"))
                                                (rule "eqSymm" (formula "75"))
                                                (rule "disjointDefinition" (formula "54"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "notLeft" (formula "54"))
                                                (rule "eqSymm" (formula "74"))
                                                (rule "disjointDefinition" (formula "53"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "notLeft" (formula "53"))
                                                (rule "eqSymm" (formula "73"))
                                                (rule "disjointDefinition" (formula "52"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "notLeft" (formula "52"))
                                                (rule "eqSymm" (formula "72"))
                                                (rule "disjointDefinition" (formula "51"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "notLeft" (formula "51"))
                                                (rule "eqSymm" (formula "71"))
                                                (rule "disjointDefinition" (formula "50"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "notLeft" (formula "50"))
                                                (rule "eqSymm" (formula "70"))
                                                (rule "disjointDefinition" (formula "49"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "notLeft" (formula "49"))
                                                (rule "eqSymm" (formula "69"))
                                                (rule "disjointDefinition" (formula "48"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "notLeft" (formula "48"))
                                                (rule "eqSymm" (formula "68"))
                                                (rule "disjointDefinition" (formula "47"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "notLeft" (formula "47"))
                                                (rule "eqSymm" (formula "67"))
                                                (rule "disjointDefinition" (formula "46"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "notLeft" (formula "46"))
                                                (rule "disjointDefinition" (formula "45"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "notLeft" (formula "45"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "disjointDefinition" (formula "44"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "notLeft" (formula "44"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "disjointDefinition" (formula "43"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "notLeft" (formula "43"))
                                                (rule "disjointDefinition" (formula "42"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "notLeft" (formula "42"))
                                                (rule "disjointDefinition" (formula "41"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "notLeft" (formula "41"))
                                                (rule "disjointDefinition" (formula "40"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "notLeft" (formula "40"))
                                                (rule "disjointDefinition" (formula "39"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "notLeft" (formula "39"))
                                                (rule "disjointDefinition" (formula "38"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "notLeft" (formula "38"))
                                                (rule "disjointDefinition" (formula "37"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "notLeft" (formula "37"))
                                                (rule "disjointDefinition" (formula "36"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "notLeft" (formula "36"))
                                                (rule "disjointDefinition" (formula "34"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "notLeft" (formula "34"))
                                                (rule "disjointDefinition" (formula "34"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "notLeft" (formula "34"))
                                                (rule "applyEq" (formula "48") (term "0,1,0,2,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "94") (term "0,1,0,2,0,1,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "51") (term "0,1,0,2,0,1,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "47") (term "0,1,0,2,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "44") (term "0,1,0,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "51") (term "0,1,0,2,1,1,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "94") (term "0,1,0,2,1,1,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "52") (term "0,1,0,2,0,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "50") (term "0,1,0,2,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "43") (term "0,1,0,2,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "53") (term "0,1,0,2,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "52") (term "0,1,0,2,1,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "51") (term "0,1,0,2,0,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "94") (term "0,1,0,2,2,0") (ifseqformula "33"))
                                                (rule "distributeIntersection" (formula "23") (term "0"))
                                                (rule "distributeIntersection" (formula "24") (term "0"))
                                                (rule "distributeIntersection" (formula "23") (term "1,0"))
                                                (rule "distributeIntersection" (formula "23") (term "0,0"))
                                                (rule "distributeIntersection" (formula "24") (term "1,0"))
                                                (rule "distributeIntersection" (formula "24") (term "0,0"))
                                                (rule "distributeIntersection" (formula "23") (term "0,1,0"))
                                                (rule "distributeIntersection" (formula "23") (term "1,1,0"))
                                                (rule "distributeIntersection" (formula "23") (term "1,0,0"))
                                                (rule "distributeIntersection" (formula "23") (term "0,0,0"))
                                                (rule "distributeIntersection" (formula "24") (term "0,1,0"))
                                                (rule "distributeIntersection" (formula "24") (term "1,1,0"))
                                                (rule "distributeIntersection" (formula "24") (term "0,0,0"))
                                                (rule "distributeIntersection" (formula "24") (term "1,0,0"))
                                                (rule "unionEqualsEmpty" (formula "23"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "unionEqualsEmpty" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "unionEqualsEmpty" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "unionEqualsEmpty" (formula "23"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "unionEqualsEmpty" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "unionEqualsEmpty" (formula "27"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "unionEqualsEmpty" (formula "25"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "eqSymm" (formula "59"))
                                                (rule "unionEqualsEmpty" (formula "25"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "eqSymm" (formula "59"))
                                                (rule "eqSymm" (formula "58"))
                                                (rule "unionEqualsEmpty" (formula "23"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "notLeft" (formula "24"))
                                                (rule "notLeft" (formula "23"))
                                                (rule "eqSymm" (formula "58"))
                                                (rule "eqSymm" (formula "57"))
                                                (rule "unionEqualsEmpty" (formula "23"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "notLeft" (formula "24"))
                                                (rule "notLeft" (formula "23"))
                                                (rule "eqSymm" (formula "57"))
                                                (rule "eqSymm" (formula "56"))
                                                (rule "unionEqualsEmpty" (formula "25"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "notLeft" (formula "26"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "eqSymm" (formula "56"))
                                                (rule "eqSymm" (formula "55"))
                                                (rule "unionEqualsEmpty" (formula "25"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "notLeft" (formula "26"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "eqSymm" (formula "55"))
                                                (rule "eqSymm" (formula "54"))
                                                (rule "unionEqualsEmpty" (formula "23"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "notLeft" (formula "24"))
                                                (rule "notLeft" (formula "23"))
                                                (rule "eqSymm" (formula "54"))
                                                (rule "eqSymm" (formula "53"))
                                                (rule "unionEqualsEmpty" (formula "23"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "notLeft" (formula "23"))
                                                (rule "notLeft" (formula "23"))
                                                (rule "eqSymm" (formula "53"))
                                                (rule "eqSymm" (formula "52"))
                                                (rule "commuteUnion" (formula "31") (term "0,1"))
                                                (rule "commuteUnion" (formula "31") (term "1,1,1"))
                                                (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "20") (term "0") (inst "b=b"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "translateJavaAddInt" (formula "20") (term "0,2,5,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "20") (term "0,2,5,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "39") (term "0"))
                                                (rule "commuteUnion" (formula "46") (term "0,0,1,0,2,0"))
                                                (rule "commuteUnion" (formula "46") (term "1,1,0,1,0,2,0"))
                                                (rule "commuteUnion" (formula "108") (term "0,0,1,0,2,0,1,0"))
                                                (rule "commuteUnion" (formula "108") (term "1,1,0,1,0,2,0,1,0"))
                                                (rule "commuteUnion" (formula "49") (term "0,0,0,1,0,2,0,1,0"))
                                                (rule "commuteUnion" (formula "49") (term "1,1,0,1,0,2,0,1,0"))
                                                (rule "commuteUnion" (formula "45") (term "0,0,0,1,0,2,0"))
                                                (rule "commuteUnion" (formula "45") (term "1,1,0,1,0,2,0"))
                                                (rule "commuteUnion" (formula "42") (term "1,1,0,1,0,0"))
                                                (rule "commuteUnion_2" (formula "42") (term "0,0,1,0,0"))
                                                (rule "commuteUnion_2" (formula "49") (term "0,0,1,0,2,1,1,0"))
                                                (rule "commuteUnion" (formula "49") (term "1,1,0,1,0,2,1,1,0"))
                                                (rule "commuteUnion" (formula "108") (term "1,1,0,1,0,2,1,1,0"))
                                                (rule "commuteUnion" (formula "108") (term "0,0,1,0,2,1,1,0"))
                                                (rule "nnf_imp2or" (formula "18") (term "0"))
                                                (rule "commuteUnion" (formula "50") (term "0,0,0,1,0,2,0,0"))
                                                (rule "commuteUnion" (formula "50") (term "1,1,0,1,0,2,0,0"))
                                                (rule "commuteUnion" (formula "48") (term "0,0,0,1,0,2,0"))
                                                (rule "commuteUnion" (formula "48") (term "1,1,0,1,0,2,0"))
                                                (rule "commuteUnion" (formula "41") (term "1,1,0,1,0,2,0"))
                                                (rule "commuteUnion" (formula "41") (term "0,0,1,0,2,0"))
                                                (rule "commuteUnion" (formula "51") (term "0,0,0,1,0,2,0"))
                                                (rule "commuteUnion" (formula "51") (term "1,1,0,1,0,2,0"))
                                                (rule "commuteUnion" (formula "50") (term "0,0,0,1,0,2,1,0"))
                                                (rule "commuteUnion" (formula "50") (term "1,1,0,1,0,2,1,0"))
                                                (rule "commuteUnion" (formula "49") (term "0,0,0,1,0,2,0,0"))
                                                (rule "commuteUnion" (formula "49") (term "1,1,0,1,0,2,0,0"))
                                                (rule "commuteUnion_2" (formula "108") (term "0,0,1,0,2,2,0"))
                                                (rule "commuteUnion" (formula "108") (term "1,1,0,1,0,2,2,0"))
                                                (rule "nnf_imp2or" (formula "19") (term "0"))
                                                (rule "nnf_imp2or" (formula "22") (term "0"))
                                                (rule "commuteUnion" (formula "31") (term "1,0,1"))
                                                (rule "nnf_imp2or" (formula "33") (term "0"))
                                                (rule "commuteUnion" (formula "46") (term "1,0,0,1,0,2,0"))
                                                (rule "commuteUnion" (formula "108") (term "1,0,0,1,0,2,0,1,0"))
                                                (rule "commuteUnion_2" (formula "49") (term "0,0,1,0,2,0,1,0"))
                                                (rule "commuteUnion" (formula "45") (term "0,0,1,0,2,0"))
                                                (rule "commuteUnion" (formula "42") (term "0,0,0,1,0,0"))
                                                (rule "commuteUnion" (formula "49") (term "0,0,0,1,0,2,1,1,0"))
                                                (rule "commuteUnion" (formula "108") (term "1,0,0,1,0,2,1,1,0"))
                                                (rule "commuteUnion_2" (formula "50") (term "0,0,1,0,2,0,0"))
                                                (rule "commuteUnion_2" (formula "48") (term "0,0,1,0,2,0"))
                                                (rule "commuteUnion" (formula "41") (term "1,0,0,1,0,2,0"))
                                                (rule "commuteUnion" (formula "51") (term "0,0,1,0,2,0"))
                                                (rule "commuteUnion" (formula "50") (term "0,0,1,0,2,1,0"))
                                                (rule "commuteUnion" (formula "49") (term "0,0,1,0,2,0,0"))
                                                (rule "commuteUnion" (formula "108") (term "0,0,0,1,0,2,2,0"))
                                                (rule "commuteUnion_2" (formula "49") (term "0,1,0,2,0,1,0"))
                                                (rule "commuteUnion_2" (formula "42") (term "0,0,1,0,0"))
                                                (rule "commuteUnion_2" (formula "49") (term "0,0,1,0,2,1,1,0"))
                                                (rule "commuteUnion_2" (formula "50") (term "0,1,0,2,0,0"))
                                                (rule "commuteUnion_2" (formula "48") (term "0,1,0,2,0"))
                                                (rule "commuteUnion_2" (formula "108") (term "0,0,1,0,2,2,0"))
                                                (rule "nnf_imp2or" (formula "21") (term "0,0,1"))
                                                (rule "commuteUnion" (formula "49") (term "0,0,0,1,0,2,0,1,0"))
                                                (rule "commuteUnion_2" (formula "42") (term "0,1,0,0"))
                                                (rule "commuteUnion_2" (formula "49") (term "0,1,0,2,1,1,0"))
                                                (rule "commuteUnion" (formula "50") (term "0,0,0,1,0,2,0,0"))
                                                (rule "commuteUnion" (formula "48") (term "0,0,0,1,0,2,0"))
                                                (rule "commuteUnion_2" (formula "108") (term "0,1,0,2,2,0"))
                                                (rule "arrayLengthIsAShort" (formula "9") (term "0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "arrayLengthNotNegative" (formula "9") (term "0"))
                                                (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "15") (term "0"))
                                                (rule "replace_known_left" (formula "15") (term "1,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "107")) (ifInst ""  (formula "16")))
                                                (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "16") (term "0") (inst "j=j") (inst "i=i"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                                (rule "commute_or" (formula "22") (term "1,1"))
                                                (rule "ifthenelse_split" (formula "109") (term "1"))
                                                (branch "bucket_starts[1 + bucket] <= -1 + begin * -1 + end TRUE"
                                                   (rule "replace_known_left" (formula "110") (term "0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "110"))
                                                   (rule "seqPermConcatBW" (formula "110") (ifseqformula "43"))
                                                   (rule "close" (formula "110") (ifseqformula "53"))
                                                )
                                                (branch "bucket_starts[1 + bucket] <= -1 + begin * -1 + end FALSE"
                                                   (rule "replace_known_right" (formula "110") (term "0,0") (ifseqformula "109"))
                                                    (builtin "One Step Simplification" (formula "110"))
                                                   (rule "inEqSimp_leqRight" (formula "109"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                                   (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "40"))
                                                   (rule "applyEq" (formula "53") (term "1,1,0,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "53") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "53") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "53") (term "1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "53") (term "0,1,0,0"))
                                                   (rule "add_zero_left" (formula "53") (term "1,0,0"))
                                                   (rule "applyEq" (formula "45") (term "1,2,1,1,0,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "45") (term "2,1,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,2,1,1,0,0"))
                                                   (rule "add_literals" (formula "45") (term "1,1,0,2,1,1,0,0"))
                                                   (rule "times_zero_1" (formula "45") (term "1,0,2,1,1,0,0"))
                                                   (rule "add_zero_right" (formula "45") (term "0,2,1,1,0,0"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEq" (formula "51") (term "1,1,0,1,1") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "1,0,1,1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "51") (term "0,1,0,1,1"))
                                                   (rule "add_literals" (formula "51") (term "1,0,1,0,1,1"))
                                                   (rule "times_zero_1" (formula "51") (term "0,1,0,1,1"))
                                                   (rule "add_zero_left" (formula "51") (term "1,0,1,1"))
                                                   (rule "applyEq" (formula "53") (term "1,2,1,1,0,2,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "53") (term "2,1,1,0,2,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,2,1,1,0,2,0"))
                                                   (rule "add_literals" (formula "53") (term "1,1,0,2,1,1,0,2,0"))
                                                   (rule "times_zero_1" (formula "53") (term "1,0,2,1,1,0,2,0"))
                                                   (rule "add_zero_right" (formula "53") (term "0,2,1,1,0,2,0"))
                                                   (rule "applyEq" (formula "53") (term "1,0,1") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "53") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "53") (term "0,0,1"))
                                                   (rule "add_literals" (formula "53") (term "1,0,0,1"))
                                                   (rule "times_zero_1" (formula "53") (term "0,0,1"))
                                                   (rule "add_zero_left" (formula "53") (term "0,1"))
                                                   (rule "seqDef_lower_equals_upper" (formula "53") (term "1"))
                                                   (rule "seqPermEmpty2" (formula "53"))
                                                   (rule "eqSymm" (formula "53"))
                                                   (rule "eqSeqEmpty" (formula "53"))
                                                   (rule "lenOfSeqDef" (formula "53") (term "0"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "polySimp_elimSub" (formula "53") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "53") (term "1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "0,1,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "53") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "53") (term "0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "53") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "53") (term "0,0,0,0"))
                                                   (rule "applyEq" (formula "41") (term "1,0,0,1,1,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "40") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "40"))
                                                   (rule "polySimp_pullOutFactor1" (formula "40") (term "0"))
                                                   (rule "add_literals" (formula "40") (term "1,0"))
                                                   (rule "times_zero_1" (formula "40") (term "0"))
                                                   (rule "qeq_literals" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "applyEq" (formula "50") (term "1,2,1,1,0,2,1,1,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "2,1,1,0,2,1,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,2,1,1,0,2,1,1,0"))
                                                   (rule "add_literals" (formula "50") (term "1,1,0,2,1,1,0,2,1,1,0"))
                                                   (rule "times_zero_1" (formula "50") (term "1,0,2,1,1,0,2,1,1,0"))
                                                   (rule "add_literals" (formula "50") (term "0,2,1,1,0,2,1,1,0"))
                                                   (rule "applyEq" (formula "39") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "39"))
                                                   (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "47") (term "0,0,0"))
                                                   (rule "add_literals" (formula "47") (term "1,0,0,0"))
                                                   (rule "times_zero_1" (formula "47") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "47") (term "0,0"))
                                                   (rule "seqDef_lower_equals_upper" (formula "47") (term "0"))
                                                   (rule "eqSymm" (formula "47"))
                                                   (rule "eqSeqEmpty" (formula "47"))
                                                   (rule "lenOfSeqDef" (formula "47") (term "0"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "polySimp_elimSub" (formula "47") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "47") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "47") (term "0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0"))
                                                   (rule "applyEq" (formula "50") (term "1,0,1,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "50") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "50") (term "1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "50") (term "0,0,1,0"))
                                                   (rule "add_zero_left" (formula "50") (term "0,1,0"))
                                                   (rule "seqDef_lower_equals_upper" (formula "50") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEq" (formula "49") (term "1,0,1,1,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,1,1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "49") (term "0,0,1,1,0"))
                                                   (rule "add_literals" (formula "49") (term "1,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "49") (term "0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,1,1,0"))
                                                   (rule "seqDef_lower_equals_upper" (formula "49") (term "1,1,0"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "applyEq" (formula "108") (term "1,2,1,1,0,2,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "108") (term "2,1,1,0,2,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "108") (term "0,2,1,1,0,2,0"))
                                                   (rule "add_literals" (formula "108") (term "1,1,0,2,1,1,0,2,0"))
                                                   (rule "times_zero_1" (formula "108") (term "1,0,2,1,1,0,2,0"))
                                                   (rule "add_zero_right" (formula "108") (term "0,2,1,1,0,2,0"))
                                                   (rule "applyEq" (formula "42") (term "1,1,1") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "42") (term "1,1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "42") (term "0,1,1"))
                                                   (rule "add_literals" (formula "42") (term "1,0,1,1"))
                                                   (rule "times_zero_1" (formula "42") (term "0,1,1"))
                                                   (rule "add_zero_left" (formula "42") (term "1,1"))
                                                   (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "42") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "42") (term "0,1,0"))
                                                   (rule "add_literals" (formula "42") (term "1,0,1,0"))
                                                   (rule "times_zero_1" (formula "42") (term "0,1,0"))
                                                   (rule "add_zero_left" (formula "42") (term "1,0"))
                                                   (rule "applyEq" (formula "43") (term "1,3,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "3,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "43") (term "0,3,0"))
                                                   (rule "add_literals" (formula "43") (term "1,0,3,0"))
                                                   (rule "times_zero_1" (formula "43") (term "0,3,0"))
                                                   (rule "add_zero_left" (formula "43") (term "3,0"))
                                                   (rule "applyEq" (formula "42") (term "1,2,1,1,0,2,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "42") (term "2,1,1,0,2,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,2,1,1,0,2,0"))
                                                   (rule "add_literals" (formula "42") (term "1,1,0,2,1,1,0,2,0"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0,2,1,1,0,2,0"))
                                                   (rule "add_zero_right" (formula "42") (term "0,2,1,1,0,2,0"))
                                                   (rule "applyEq" (formula "46") (term "1,2,1,1,0,2,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "46") (term "2,1,1,0,2,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,2,1,1,0,2,0"))
                                                   (rule "add_literals" (formula "46") (term "1,1,0,2,1,1,0,2,0"))
                                                   (rule "times_zero_1" (formula "46") (term "1,0,2,1,1,0,2,0"))
                                                   (rule "add_zero_right" (formula "46") (term "0,2,1,1,0,2,0"))
                                                   (rule "applyEq" (formula "35") (term "1,0,0,1,1,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "48") (term "1,2,1,1,0,2,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "2,1,1,0,2,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,2,1,1,0,2,0"))
                                                   (rule "add_literals" (formula "48") (term "1,1,0,2,1,1,0,2,0"))
                                                   (rule "times_zero_1" (formula "48") (term "1,0,2,1,1,0,2,0"))
                                                   (rule "add_zero_right" (formula "48") (term "0,2,1,1,0,2,0"))
                                                   (rule "applyEq" (formula "50") (term "1,2,1,1,0,2,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "2,1,1,0,2,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,2,1,1,0,2,0"))
                                                   (rule "add_literals" (formula "50") (term "1,1,0,2,1,1,0,2,0"))
                                                   (rule "times_zero_1" (formula "50") (term "1,0,2,1,1,0,2,0"))
                                                   (rule "add_zero_right" (formula "50") (term "0,2,1,1,0,2,0"))
                                                   (rule "applyEq" (formula "49") (term "1,2,1,1,0,2,1,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "2,1,1,0,2,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,2,1,1,0,2,1,0"))
                                                   (rule "add_literals" (formula "49") (term "1,1,0,2,1,1,0,2,1,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,2,1,1,0,2,1,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0,2,1,1,0,2,1,0"))
                                                   (rule "applyEq" (formula "51") (term "0,1,0,1") (ifseqformula "1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "51") (term "0,1"))
                                                   (rule "add_literals" (formula "51") (term "1,0,1"))
                                                   (rule "times_zero_1" (formula "51") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "true_left" (formula "51"))
                                                   (rule "applyEq" (formula "49") (term "1,1,1,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "1,1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "49") (term "0,1,1,0"))
                                                   (rule "add_literals" (formula "49") (term "1,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "49") (term "0,1,1,0"))
                                                   (rule "add_zero_left" (formula "49") (term "1,1,0"))
                                                   (rule "applyEq" (formula "49") (term "1,2,1,1,0,2,0,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "2,1,1,0,2,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,2,1,1,0,2,0,0"))
                                                   (rule "add_literals" (formula "49") (term "1,1,0,2,1,1,0,2,0,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,2,1,1,0,2,0,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0,2,1,1,0,2,0,0"))
                                                   (rule "applyEq" (formula "49") (term "1,0,1,1,1") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,1,1,1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "49") (term "0,0,1,1,1"))
                                                   (rule "add_literals" (formula "49") (term "1,0,0,1,1,1"))
                                                   (rule "times_zero_1" (formula "49") (term "0,0,1,1,1"))
                                                   (rule "add_zero_left" (formula "49") (term "0,1,1,1"))
                                                   (rule "seqDef_lower_equals_upper" (formula "49") (term "1,1,1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "applyEq" (formula "50") (term "1,0,1,1") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,1,1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "50") (term "0,0,1,1"))
                                                   (rule "add_literals" (formula "50") (term "1,0,0,1,1"))
                                                   (rule "times_zero_1" (formula "50") (term "0,0,1,1"))
                                                   (rule "add_zero_left" (formula "50") (term "0,1,1"))
                                                   (rule "seqDef_lower_equals_upper" (formula "50") (term "1,1"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEq" (formula "50") (term "1,1,1") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "1,1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "50") (term "0,1,1"))
                                                   (rule "add_literals" (formula "50") (term "1,0,1,1"))
                                                   (rule "times_zero_1" (formula "50") (term "0,1,1"))
                                                   (rule "add_zero_left" (formula "50") (term "1,1"))
                                                   (rule "close" (formula "107") (ifseqformula "50"))
                                                )
                                             )
                                             (branch "CUT: begin <= javaAddInt(begin, bucket_starts[bucket]) & javaAddInt(begin, bucket_starts[bucket]) < end FALSE"
                                                 (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "46")))
                                                (rule "translateJavaAddInt" (formula "31") (term "0,0"))
                                                (rule "translateJavaSubInt" (formula "31") (term "2,0,1,0,2,0"))
                                                (rule "translateJavaAddInt" (formula "46") (term "1,0"))
                                                (rule "translateJavaAddInt" (formula "31") (term "0,1"))
                                                (rule "translateJavaAddInt" (formula "46") (term "0,1"))
                                                (rule "translateJavaAddInt" (formula "31") (term "1,1"))
                                                (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,0"))
                                                (rule "translateJavaAddInt" (formula "32") (term "2,0"))
                                                (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,2,0"))
                                                (rule "translateJavaAddInt" (formula "35") (term "1,1"))
                                                (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,2,0"))
                                                (rule "translateJavaAddInt" (formula "36") (term "0,1"))
                                                (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,2,0"))
                                                (rule "translateJavaAddInt" (formula "38") (term "1,1"))
                                                (rule "translateJavaSubInt" (formula "39") (term "2,0,1,0,2,0,0"))
                                                (rule "translateJavaAddInt" (formula "39") (term "0,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "39") (term "2,0,1,0,2,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "39") (term "2,0,1,0,2,1,1,0"))
                                                (rule "translateJavaAddInt" (formula "39") (term "1,0,1"))
                                                (rule "translateJavaAddInt" (formula "39") (term "0,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "39") (term "1,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "39") (term "0,1,1,1"))
                                                (rule "translateJavaAddInt" (formula "40") (term "0,0,0"))
                                                (rule "translateJavaSubInt" (formula "40") (term "2,0,1,0,2,0,0"))
                                                (rule "translateJavaSubInt" (formula "40") (term "2,0,1,0,2,1,0"))
                                                (rule "translateJavaAddInt" (formula "40") (term "0,0,1"))
                                                (rule "translateJavaAddInt" (formula "40") (term "1,0,1"))
                                                (rule "translateJavaAddInt" (formula "40") (term "0,1,1"))
                                                (rule "translateJavaSubInt" (formula "41") (term "2,0,1,0,2,0"))
                                                (rule "translateJavaAddInt" (formula "41") (term "0,1"))
                                                (rule "translateJavaSubInt" (formula "47") (term "2,0,1,0,2,0"))
                                                (rule "translateJavaSubInt" (formula "31") (term "2,0,1,0,1,0,0"))
                                                (rule "translateJavaAddInt" (formula "31") (term "0,2,1,1,1"))
                                                (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,1,2,0"))
                                                (rule "translateJavaAddInt" (formula "36") (term "0,2,1,0,1"))
                                                (rule "translateJavaSubInt" (formula "39") (term "2,0,1,0,1,0,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "39") (term "0,2,1,1,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "39") (term "0,2,1,0,1,1,1"))
                                                (rule "translateJavaSubInt" (formula "40") (term "2,0,1,0,1,0,0,0"))
                                                (rule "translateJavaAddInt" (formula "40") (term "0,2,1,1,0,1"))
                                                (rule "translateJavaAddInt" (formula "40") (term "0,2,1,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "41") (term "0,2,1,0,1"))
                                                (rule "polySimp_homoEq" (formula "18") (term "0,1,1"))
                                                (rule "polySimp_elimSub" (formula "31") (term "2,0,1,0,2,0"))
                                                (rule "mul_literals" (formula "31") (term "1,2,0,1,0,2,0"))
                                                (rule "polySimp_elimSub" (formula "32") (term "2,0,1,0,0"))
                                                (rule "mul_literals" (formula "32") (term "1,2,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "35") (term "2,0,1,0,2,0"))
                                                (rule "mul_literals" (formula "35") (term "1,2,0,1,0,2,0"))
                                                (rule "polySimp_elimSub" (formula "36") (term "2,0,1,0,2,0"))
                                                (rule "mul_literals" (formula "36") (term "1,2,0,1,0,2,0"))
                                                (rule "polySimp_elimSub" (formula "38") (term "2,0,1,0,2,0"))
                                                (rule "mul_literals" (formula "38") (term "1,2,0,1,0,2,0"))
                                                (rule "polySimp_elimSub" (formula "39") (term "2,0,1,0,2,0,0"))
                                                (rule "mul_literals" (formula "39") (term "1,2,0,1,0,2,0,0"))
                                                (rule "polySimp_elimSub" (formula "39") (term "2,0,1,0,2,0,1,0"))
                                                (rule "mul_literals" (formula "39") (term "1,2,0,1,0,2,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "39") (term "2,0,1,0,2,1,1,0"))
                                                (rule "mul_literals" (formula "39") (term "1,2,0,1,0,2,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,2,0,0"))
                                                (rule "mul_literals" (formula "40") (term "1,2,0,1,0,2,0,0"))
                                                (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,2,1,0"))
                                                (rule "mul_literals" (formula "40") (term "1,2,0,1,0,2,1,0"))
                                                (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,2,0"))
                                                (rule "mul_literals" (formula "41") (term "1,2,0,1,0,2,0"))
                                                (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,2,0"))
                                                (rule "mul_literals" (formula "47") (term "1,2,0,1,0,2,0"))
                                                (rule "polySimp_elimSub" (formula "31") (term "2,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "1,2,0,1,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "32") (term "2,0,1,0,1,2,0"))
                                                (rule "mul_literals" (formula "32") (term "1,2,0,1,0,1,2,0"))
                                                (rule "polySimp_elimSub" (formula "39") (term "2,0,1,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "39") (term "1,2,0,1,0,1,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "40") (term "1,2,0,1,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "31") (term "0,2,1,1,1"))
                                                (rule "polySimp_addComm0" (formula "36") (term "0,2,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "39") (term "0,2,1,1,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "39") (term "0,2,1,0,1,1,1"))
                                                (rule "polySimp_addComm0" (formula "40") (term "0,2,1,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "40") (term "0,2,1,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0,2,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "31") (term "2,0,1,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "2,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "2,0,1,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "2,0,1,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "38") (term "2,0,1,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "39") (term "2,0,1,0,2,0,0"))
                                                (rule "polySimp_addComm1" (formula "39") (term "2,0,1,0,2,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "39") (term "2,0,1,0,2,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,2,0,0"))
                                                (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,2,1,0"))
                                                (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "2,0,1,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "2,0,1,0,1,2,0"))
                                                (rule "polySimp_addComm1" (formula "39") (term "2,0,1,0,1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "29") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "0,2,0,1,0,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "46") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,1"))
                                                (rule "mul_literals" (formula "18") (term "0,1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "35") (term "0,2,0,1,0,2,0"))
                                                (rule "polySimp_addComm0" (formula "36") (term "0,2,0,1,0,2,0"))
                                                (rule "polySimp_addComm0" (formula "38") (term "0,2,0,1,0,2,0"))
                                                (rule "polySimp_addComm0" (formula "39") (term "0,2,0,1,0,2,0,0"))
                                                (rule "polySimp_addComm0" (formula "39") (term "0,2,0,1,0,2,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "39") (term "0,2,0,1,0,2,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,2,0,0"))
                                                (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,2,1,0"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,2,0"))
                                                (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,2,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "0,2,0,1,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,0,1,2,0"))
                                                (rule "polySimp_addComm0" (formula "39") (term "0,2,0,1,0,1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                (rule "narrowSelectArrayType" (formula "47") (term "2,1") (ifseqformula "1") (ifseqformula "45"))
                                                (rule "inEqSimp_homoInEq0" (formula "10"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,1"))
                                                (rule "polySimp_addComm1" (formula "46") (term "0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "46") (term "0"))
                                                (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "46") (term "0,0,0"))
                                                (rule "add_literals" (formula "46") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "46") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "46") (term "0,0"))
                                                (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "26"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "46"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                (rule "jmod_axiom" (formula "19") (term "0,1,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "19") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,1,1,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                                (rule "pullOutSelect" (formula "32") (term "1,0,0") (inst "selectSK=arr_0"))
                                                (rule "applyEq" (formula "41") (term "1,0,0,1,0") (ifseqformula "32"))
                                                (rule "applyEq" (formula "34") (term "1,2,0") (ifseqformula "32"))
                                                (rule "applyEq" (formula "42") (term "1,0,0,0") (ifseqformula "32"))
                                                (rule "simplifySelectOfAnon" (formula "32"))
                                                 (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "46")) (ifInst ""  (formula "5")))
                                                (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "2,0"))
                                                (rule "polySimp_addComm0" (formula "42") (term "0,0,0"))
                                                (rule "elementOfUnion" (formula "32") (term "0,0"))
                                                (rule "disjointAllFields" (formula "32") (term "1,0,0") (ifseqformula "22"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "elementOfArrayRangeConcrete" (formula "32") (term "0,0"))
                                                (rule "eqSymm" (formula "32") (term "0,0,0,0"))
                                                (rule "replace_known_right" (formula "32") (term "0,0,0,0") (ifseqformula "44"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "applyEqReverse" (formula "34") (term "0,2,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "41") (term "0,0,0,1,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "42") (term "0,0,0,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "32"))
                                                (rule "hideAuxiliaryEq" (formula "32"))
                                                (rule "polySimp_addComm0" (formula "33") (term "2,0"))
                                                (rule "polySimp_addComm0" (formula "40") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                                                (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "28") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "28"))
                                                (rule "applyEq" (formula "38") (term "1,1,0,1,0,2,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "1,0,1,0,2,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "38") (term "0,1,0,1,0,2,0"))
                                                (rule "add_literals" (formula "38") (term "1,0,1,0,1,0,2,0"))
                                                (rule "times_zero_1" (formula "38") (term "0,1,0,1,0,2,0"))
                                                (rule "add_zero_left" (formula "38") (term "1,0,1,0,2,0"))
                                                (rule "applyEq" (formula "34") (term "1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "34") (term "0,0,0"))
                                                (rule "add_literals" (formula "34") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "34") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "34") (term "0,0"))
                                                (rule "applyEq" (formula "49") (term "1,1,0,1,0,2,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "1,0,1,0,2,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "49") (term "0,1,0,1,0,2,0"))
                                                (rule "add_literals" (formula "49") (term "1,0,1,0,1,0,2,0"))
                                                (rule "times_zero_1" (formula "49") (term "0,1,0,1,0,2,0"))
                                                (rule "add_zero_left" (formula "49") (term "1,0,1,0,2,0"))
                                                (rule "applyEq" (formula "32") (term "1,1,0,1,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "42") (term "1,1,0,1") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "1,0,1"))
                                                (rule "polySimp_pullOutFactor1" (formula "42") (term "0,1,0,1"))
                                                (rule "add_literals" (formula "42") (term "1,0,1,0,1"))
                                                (rule "times_zero_1" (formula "42") (term "0,1,0,1"))
                                                (rule "add_zero_left" (formula "42") (term "1,0,1"))
                                                (rule "applyEq" (formula "43") (term "1,1,0,1,0,2,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "1,0,1,0,2,1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "43") (term "0,1,0,1,0,2,1,0"))
                                                (rule "add_literals" (formula "43") (term "1,0,1,0,1,0,2,1,0"))
                                                (rule "times_zero_1" (formula "43") (term "0,1,0,1,0,2,1,0"))
                                                (rule "add_zero_left" (formula "43") (term "1,0,1,0,2,1,0"))
                                                (rule "applyEq" (formula "42") (term "1,0,0,1,1") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,1"))
                                                (rule "polySimp_pullOutFactor1" (formula "42") (term "0,0,0,1,1"))
                                                (rule "add_literals" (formula "42") (term "1,0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "42") (term "0,0,0,1,1"))
                                                (rule "add_zero_left" (formula "42") (term "0,0,1,1"))
                                                (rule "applyEq" (formula "30") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "41") (term "1,1,1") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "1,1"))
                                                (rule "polySimp_pullOutFactor1" (formula "41") (term "0,1,1"))
                                                (rule "add_literals" (formula "41") (term "1,0,1,1"))
                                                (rule "times_zero_1" (formula "41") (term "0,1,1"))
                                                (rule "add_zero_left" (formula "41") (term "1,1"))
                                                (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "41") (term "0,1,0"))
                                                (rule "add_literals" (formula "41") (term "1,0,1,0"))
                                                (rule "times_zero_1" (formula "41") (term "0,1,0"))
                                                (rule "add_zero_left" (formula "41") (term "1,0"))
                                                (rule "applyEq" (formula "34") (term "1,0,1") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1" (formula "34") (term "0,0,1"))
                                                (rule "add_literals" (formula "34") (term "1,0,0,1"))
                                                (rule "times_zero_1" (formula "34") (term "0,0,1"))
                                                (rule "add_zero_left" (formula "34") (term "0,1"))
                                                (rule "applyEq" (formula "35") (term "1,2,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "2,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "35") (term "0,2,0"))
                                                (rule "add_literals" (formula "35") (term "1,0,2,0"))
                                                (rule "times_zero_1" (formula "35") (term "0,2,0"))
                                                (rule "add_zero_left" (formula "35") (term "2,0"))
                                                (rule "applyEq" (formula "35") (term "1,1,0,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "1,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "35") (term "0,1,0,1,0,0"))
                                                (rule "add_literals" (formula "35") (term "1,0,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "35") (term "0,1,0,1,0,0"))
                                                (rule "add_zero_left" (formula "35") (term "1,0,1,0,0"))
                                                (rule "applyEq" (formula "42") (term "1,1,0,1,0,2,1,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "1,0,1,0,2,1,1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "42") (term "0,1,0,1,0,2,1,1,0"))
                                                (rule "add_literals" (formula "42") (term "1,0,1,0,1,0,2,1,1,0"))
                                                (rule "times_zero_1" (formula "42") (term "0,1,0,1,0,2,1,1,0"))
                                                (rule "add_zero_left" (formula "42") (term "1,0,1,0,2,1,1,0"))
                                                (rule "applyEq" (formula "42") (term "1,1,0,1,0,2,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "1,0,1,0,2,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "42") (term "0,1,0,1,0,2,0,0"))
                                                (rule "add_literals" (formula "42") (term "1,0,1,0,1,0,2,0,0"))
                                                (rule "times_zero_1" (formula "42") (term "0,1,0,1,0,2,0,0"))
                                                (rule "add_zero_left" (formula "42") (term "1,0,1,0,2,0,0"))
                                                (rule "applyEq" (formula "43") (term "1,0,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "43") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "43") (term "1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "43") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "43") (term "0,0,0"))
                                                (rule "applyEq" (formula "41") (term "1,1,0,1,0,2,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "1,0,1,0,2,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "41") (term "0,1,0,1,0,2,0"))
                                                (rule "add_literals" (formula "41") (term "1,0,1,0,1,0,2,0"))
                                                (rule "times_zero_1" (formula "41") (term "0,1,0,1,0,2,0"))
                                                (rule "add_zero_left" (formula "41") (term "1,0,1,0,2,0"))
                                                (rule "close" (formula "49") (ifseqformula "41"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "44"))
                                             (branch "Case 1"
                                                 (builtin "One Step Simplification" (formula "44") (userinteraction))
                                                (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "44") (term "0") (inst "b=b") (userinteraction))
                                                 (builtin "One Step Simplification" (formula "44") (userinteraction))
                                                (rule "allRight" (formula "44") (inst "sk=b_0") (userinteraction))
                                                (rule "eqTermCut" (formula "44") (term "0,1,0") (inst "s=bucket") (userinteraction))
                                                (branch "Assume b_0 = bucket"
                                                   (rule "impRight" (formula "45"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "translateJavaSubInt" (formula "47") (term "2,0,1,0,0"))
                                                   (rule "translateJavaAddInt" (formula "47") (term "2,0"))
                                                   (rule "translateJavaAddInt" (formula "47") (term "3,0"))
                                                   (rule "translateJavaAddInt" (formula "34") (term "0,0"))
                                                   (rule "translateJavaSubInt" (formula "34") (term "2,0,1,0,2,0"))
                                                   (rule "translateJavaAddInt" (formula "34") (term "0,1"))
                                                   (rule "translateJavaAddInt" (formula "34") (term "1,1"))
                                                   (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,0"))
                                                   (rule "translateJavaAddInt" (formula "35") (term "2,0"))
                                                   (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,2,0"))
                                                   (rule "translateJavaAddInt" (formula "38") (term "1,1"))
                                                   (rule "translateJavaSubInt" (formula "39") (term "2,0,1,0,2,0"))
                                                   (rule "translateJavaAddInt" (formula "39") (term "0,1"))
                                                   (rule "translateJavaSubInt" (formula "41") (term "2,0,1,0,2,0"))
                                                   (rule "translateJavaAddInt" (formula "41") (term "1,1"))
                                                   (rule "translateJavaSubInt" (formula "42") (term "2,0,1,0,2,0"))
                                                   (rule "translateJavaAddInt" (formula "42") (term "0,1"))
                                                   (rule "translateJavaSubInt" (formula "47") (term "2,0,1,0,1,2,0"))
                                                   (rule "translateJavaSubInt" (formula "47") (term "2,0,1,0,1,3,0"))
                                                   (rule "translateJavaAddInt" (formula "47") (term "0,2,1,3,0"))
                                                   (rule "translateJavaSubInt" (formula "34") (term "2,0,1,0,1,0,0"))
                                                   (rule "translateJavaAddInt" (formula "34") (term "0,2,1,1,1"))
                                                   (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,1,2,0"))
                                                   (rule "translateJavaAddInt" (formula "39") (term "0,2,1,0,1"))
                                                   (rule "translateJavaAddInt" (formula "42") (term "0,2,1,0,1"))
                                                   (rule "eqSymm" (formula "3"))
                                                   (rule "polySimp_homoEq" (formula "21") (term "0,1,1"))
                                                   (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,0"))
                                                   (rule "mul_literals" (formula "47") (term "1,2,0,1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "34") (term "2,0,1,0,2,0"))
                                                   (rule "mul_literals" (formula "34") (term "1,2,0,1,0,2,0"))
                                                   (rule "polySimp_elimSub" (formula "35") (term "2,0,1,0,0"))
                                                   (rule "mul_literals" (formula "35") (term "1,2,0,1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "38") (term "2,0,1,0,2,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,2,0,1,0,2,0"))
                                                   (rule "polySimp_elimSub" (formula "39") (term "2,0,1,0,2,0"))
                                                   (rule "mul_literals" (formula "39") (term "1,2,0,1,0,2,0"))
                                                   (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,2,0"))
                                                   (rule "mul_literals" (formula "41") (term "1,2,0,1,0,2,0"))
                                                   (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,2,0"))
                                                   (rule "mul_literals" (formula "42") (term "1,2,0,1,0,2,0"))
                                                   (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,1,2,0"))
                                                   (rule "mul_literals" (formula "47") (term "1,2,0,1,0,1,2,0"))
                                                   (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,1,3,0"))
                                                   (rule "mul_literals" (formula "47") (term "1,2,0,1,0,1,3,0"))
                                                   (rule "polySimp_elimSub" (formula "34") (term "2,0,1,0,1,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "1,2,0,1,0,1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "35") (term "2,0,1,0,1,2,0"))
                                                   (rule "mul_literals" (formula "35") (term "1,2,0,1,0,1,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,1"))
                                                   (rule "polySimp_addComm0" (formula "47") (term "0,2,1,3,0"))
                                                   (rule "polySimp_addComm0" (formula "34") (term "0,2,1,1,1"))
                                                   (rule "polySimp_addComm0" (formula "39") (term "0,2,1,0,1"))
                                                   (rule "polySimp_addComm0" (formula "42") (term "0,2,1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "2,0,1,0,2,0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "2,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "2,0,1,0,2,0"))
                                                   (rule "polySimp_addComm1" (formula "39") (term "2,0,1,0,2,0"))
                                                   (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,2,0"))
                                                   (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,2,0"))
                                                   (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,1,2,0"))
                                                   (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,1,3,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "2,0,1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "2,0,1,0,1,2,0"))
                                                   (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "34") (term "0,2,0,1,0,2,0"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "0,2,0,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "38") (term "0,2,0,1,0,2,0"))
                                                   (rule "polySimp_addComm0" (formula "39") (term "0,2,0,1,0,2,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,1"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0,0,1,1"))
                                                   (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,2,0"))
                                                   (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,2,0"))
                                                   (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,1,2,0"))
                                                   (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,1,3,0"))
                                                   (rule "polySimp_addComm0" (formula "34") (term "0,2,0,1,0,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "0,2,0,1,0,1,2,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "32") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "1"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,1"))
                                                   (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "13"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                   (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "3"))
                                                   (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEq" (formula "33") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "41") (term "1,0,2,1,0,1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "41") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "41") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "33") (term "1,0,2,1,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "38") (term "1,0,2,1,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "29") (term "0,2,1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "33") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "37") (term "0,2,1,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "46") (term "1,0,2,1,2,0,1,0,1,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "34") (term "0,2,1,1,0,1,0,1,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "37") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "34") (term "1,0,2,1,2,0,1,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "20") (term "1,6,0,0,1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "28") (term "0,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "34") (term "1,0,2,1,3,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "26") (term "3,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "46") (term "0,2,1,1,0,1,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "40") (term "0,2,1,1,1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "40") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "38") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "33") (term "0,2,1,0,1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "34") (term "0,2,1,1,0,1,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "46") (term "0,2,1,1,0,1,0,1,3,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "31") (term "0,2,1,1,0,1,0,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "37") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "40") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "41") (term "1,0,2,1,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "33") (term "0,2,1,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "46") (term "1,0,2,1,2,0,1,0,1,3,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "31") (term "1,0,2,1,0,0,1,1,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "40") (term "0,2,1,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "38") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "33") (term "0,2,1,1,0,1,0,1,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "46") (term "1,0,2,1,2,0,1,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "20") (term "0,0,1,1,1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "34") (term "0,2,1,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "46") (term "0,2,1,1,0,1,0,1,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "33") (term "1,0,2,1,2,0,1,0,1,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "17") (term "7,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "33") (term "1,0,2,1,2,0,1,0,1,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "32") (term "1,0,2,1,1,1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "29") (term "1,0,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "28") (term "1,0,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "18") (term "6,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "30") (term "1,0,1,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "30") (term "0,1,0,0,0,1,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "30") (term "0,1,0,0,0,0,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "36") (term "0,2,1,1,1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "37") (term "1,0,2,1,0,1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "19") (term "1,0,0,0,1,1") (ifseqformula "2"))
                                                   (rule "jmod_axiom" (formula "19") (term "0,1,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1"))
                                                   (rule "polySimp_sepNegMonomial" (formula "19") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1"))
                                                   (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                   (rule "pullOutSelect" (formula "45") (term "1,3,0") (inst "selectSK=arr_0"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")) (ifInst ""  (formula "7")))
                                                   (rule "polySimp_addComm0" (formula "46") (term "3,0"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                   (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "42"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "46") (term "0,3,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "polySimp_addComm0" (formula "45") (term "3,0"))
                                                   (rule "close" (formula "45") (ifseqformula "33"))
                                                )
                                                (branch "Assume b_0 != bucket"
                                                   (rule "impRight" (formula "45"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "18") (term "0") (inst "b=b") (userinteraction))
                                                    (builtin "One Step Simplification" (formula "18") (userinteraction))
                                                   (rule "allLeftHide" (formula "18") (inst "t=b_0") (userinteraction))
                                                   (rule "impLeft" (formula "18") (userinteraction))
                                                   (branch "Case 1"
                                                      (rule "translateJavaSubInt" (formula "41") (term "2,0,1,0,2,0"))
                                                      (rule "translateJavaSubInt" (formula "47") (term "2,0,1,0,1,2,0"))
                                                      (rule "translateJavaSubInt" (formula "47") (term "2,0,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "47") (term "3,0"))
                                                      (rule "translateJavaAddInt" (formula "41") (term "0,1"))
                                                      (rule "translateJavaSubInt" (formula "40") (term "2,0,1,0,2,0"))
                                                      (rule "translateJavaAddInt" (formula "40") (term "1,1"))
                                                      (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,2,0"))
                                                      (rule "translateJavaAddInt" (formula "38") (term "0,1"))
                                                      (rule "translateJavaSubInt" (formula "37") (term "2,0,1,0,2,0"))
                                                      (rule "translateJavaAddInt" (formula "37") (term "1,1"))
                                                      (rule "translateJavaSubInt" (formula "34") (term "2,0,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "34") (term "2,0"))
                                                      (rule "translateJavaAddInt" (formula "33") (term "0,0"))
                                                      (rule "translateJavaSubInt" (formula "33") (term "2,0,1,0,2,0"))
                                                      (rule "translateJavaAddInt" (formula "33") (term "0,1"))
                                                      (rule "translateJavaAddInt" (formula "33") (term "1,1"))
                                                      (rule "translateJavaAddInt" (formula "47") (term "2,0"))
                                                      (rule "translateJavaSubInt" (formula "47") (term "2,0,1,0,1,3,0"))
                                                      (rule "translateJavaAddInt" (formula "47") (term "0,2,1,3,0"))
                                                      (rule "translateJavaAddInt" (formula "41") (term "0,2,1,0,1"))
                                                      (rule "translateJavaAddInt" (formula "38") (term "0,2,1,0,1"))
                                                      (rule "translateJavaSubInt" (formula "34") (term "2,0,1,0,1,2,0"))
                                                      (rule "translateJavaSubInt" (formula "33") (term "2,0,1,0,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "33") (term "0,2,1,1,1"))
                                                      (rule "notLeft" (formula "3"))
                                                      (rule "eqSymm" (formula "41"))
                                                      (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "polySimp_homoEq" (formula "19") (term "0,1,1"))
                                                      (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,2,0"))
                                                      (rule "mul_literals" (formula "40") (term "1,2,0,1,0,2,0"))
                                                      (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,0"))
                                                      (rule "mul_literals" (formula "47") (term "1,2,0,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "39") (term "2,0,1,0,2,0"))
                                                      (rule "mul_literals" (formula "39") (term "1,2,0,1,0,2,0"))
                                                      (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,2,0"))
                                                      (rule "mul_literals" (formula "37") (term "1,2,0,1,0,2,0"))
                                                      (rule "polySimp_elimSub" (formula "36") (term "2,0,1,0,2,0"))
                                                      (rule "mul_literals" (formula "36") (term "1,2,0,1,0,2,0"))
                                                      (rule "polySimp_elimSub" (formula "33") (term "2,0,1,0,0"))
                                                      (rule "mul_literals" (formula "33") (term "1,2,0,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "32") (term "2,0,1,0,2,0"))
                                                      (rule "mul_literals" (formula "32") (term "1,2,0,1,0,2,0"))
                                                      (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,1,2,0"))
                                                      (rule "mul_literals" (formula "47") (term "1,2,0,1,0,1,2,0"))
                                                      (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,1,3,0"))
                                                      (rule "mul_literals" (formula "47") (term "1,2,0,1,0,1,3,0"))
                                                      (rule "polySimp_elimSub" (formula "33") (term "2,0,1,0,1,2,0"))
                                                      (rule "mul_literals" (formula "33") (term "1,2,0,1,0,1,2,0"))
                                                      (rule "polySimp_elimSub" (formula "32") (term "2,0,1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "1,2,0,1,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "0,2,1,3,0"))
                                                      (rule "polySimp_addComm0" (formula "40") (term "0,2,1,0,1"))
                                                      (rule "polySimp_addComm0" (formula "37") (term "0,2,1,0,1"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "0,2,1,1,1"))
                                                      (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,2,0"))
                                                      (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "39") (term "2,0,1,0,2,0"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0,2,0"))
                                                      (rule "polySimp_addComm1" (formula "36") (term "2,0,1,0,2,0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "2,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "2,0,1,0,2,0"))
                                                      (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,1,2,0"))
                                                      (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,1,3,0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "2,0,1,0,1,2,0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "2,0,1,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,2,0"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "39") (term "0,2,0,1,0,2,0"))
                                                      (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0,2,0"))
                                                      (rule "polySimp_addComm0" (formula "36") (term "0,2,0,1,0,2,0"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "0,2,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,0,2,0"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,1,2,0"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,1,3,0"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "0,2,0,1,0,1,2,0"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "30") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2"))
                                                      (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                      (rule "inEqSimp_ltRight" (formula "42"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "2"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "3") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "13"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                      (rule "jmod_axiom" (formula "20") (term "0,1,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1"))
                                                      (rule "polySimp_sepNegMonomial" (formula "20") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0,0,1,1"))
                                                      (rule "polySimp_sepNegMonomial" (formula "20") (term "1,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                      (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "42"))
                                                      (rule "inEqSimp_contradEq3" (formula "42") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0"))
                                                      (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "42") (term "0,0"))
                                                      (rule "qeq_literals" (formula "42") (term "0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "false_right" (formula "42"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "translateJavaAddInt" (formula "47") (term "2,0") (userinteraction))
                                                      (rule "translateJavaAddInt" (formula "47") (term "3,0") (userinteraction))
                                                      (rule "observerDependency" (formula "47") (term "0") (inst "termWithSmallHeap=de.wiesler.Functions::isSortedSlice(heap,
                                    values,
                                    javaAddInt(begin,
                                               int::select(heap,
                                                           bucket_starts,
                                                           arr(b_0))),
                                    javaAddInt(begin,
                                               int::select(heap,
                                                           bucket_starts,
                                                           arr(javaAddInt(b_0,
                                                                          Z(1(#)))))))") (userinteraction))
                                                      (branch "Case 1"
                                                         (rule "close" (formula "47") (ifseqformula "18"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "andRight" (formula "47"))
                                                         (branch "Case 1"
                                                            (rule "andRight" (formula "47"))
                                                            (branch "Case 1"
                                                               (rule "andRight" (formula "47"))
                                                               (branch "Case 1"
                                                                   (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "translateJavaAddInt" (formula "18") (term "2,0"))
                                                                  (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,0"))
                                                                  (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,1,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "18") (term "3,0"))
                                                                  (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,1,3,0"))
                                                                  (rule "translateJavaAddInt" (formula "34") (term "0,0"))
                                                                  (rule "translateJavaAddInt" (formula "48") (term "0,2,1,3,0"))
                                                                  (rule "translateJavaSubInt" (formula "34") (term "2,0,1,0,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "34") (term "0,1"))
                                                                  (rule "translateJavaAddInt" (formula "34") (term "1,1"))
                                                                  (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "35") (term "2,0"))
                                                                  (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "38") (term "1,1"))
                                                                  (rule "translateJavaSubInt" (formula "39") (term "2,0,1,0,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "39") (term "0,1"))
                                                                  (rule "translateJavaSubInt" (formula "41") (term "2,0,1,0,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "41") (term "1,1"))
                                                                  (rule "translateJavaSubInt" (formula "42") (term "2,0,1,0,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "42") (term "0,1"))
                                                                  (rule "translateJavaAddInt" (formula "18") (term "0,2,1,3,0"))
                                                                  (rule "translateJavaSubInt" (formula "34") (term "2,0,1,0,1,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "34") (term "0,2,1,1,1"))
                                                                  (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,1,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "39") (term "0,2,1,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "42") (term "0,2,1,0,1"))
                                                                  (rule "notLeft" (formula "3"))
                                                                  (rule "allRight" (formula "47") (inst "sk=_ov_0"))
                                                                  (rule "impRight" (formula "47"))
                                                                  (rule "orRight" (formula "48"))
                                                                  (rule "close" (formula "48") (ifseqformula "1"))
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,0"))
                                                                  (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,1,2,0"))
                                                                  (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,1,3,0"))
                                                                  (rule "translateJavaAddInt" (formula "18") (term "2,0"))
                                                                  (rule "translateJavaAddInt" (formula "18") (term "3,0"))
                                                                  (rule "translateJavaAddInt" (formula "34") (term "0,0"))
                                                                  (rule "translateJavaAddInt" (formula "48") (term "0,2,1,3,0"))
                                                                  (rule "translateJavaSubInt" (formula "34") (term "2,0,1,0,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "34") (term "0,1"))
                                                                  (rule "translateJavaAddInt" (formula "34") (term "1,1"))
                                                                  (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "35") (term "2,0"))
                                                                  (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "38") (term "1,1"))
                                                                  (rule "translateJavaSubInt" (formula "39") (term "2,0,1,0,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "39") (term "0,1"))
                                                                  (rule "translateJavaSubInt" (formula "41") (term "2,0,1,0,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "41") (term "1,1"))
                                                                  (rule "translateJavaSubInt" (formula "42") (term "2,0,1,0,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "42") (term "0,1"))
                                                                  (rule "translateJavaAddInt" (formula "18") (term "0,2,1,3,0"))
                                                                  (rule "translateJavaSubInt" (formula "34") (term "2,0,1,0,1,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "34") (term "0,2,1,1,1"))
                                                                  (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,1,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "39") (term "0,2,1,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "42") (term "0,2,1,0,1"))
                                                                  (rule "notRight" (formula "47"))
                                                                  (rule "close" (formula "47") (ifseqformula "1"))
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "andRight" (formula "47"))
                                                               (branch "Case 1"
                                                                  (rule "andRight" (formula "47"))
                                                                  (branch "Case 1"
                                                                      (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "closeTrue" (formula "47"))
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "translateJavaSubInt" (formula "47") (term "2,0,1,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "47") (term "1"))
                                                                     (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,0"))
                                                                     (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,1,2,0"))
                                                                     (rule "translateJavaAddInt" (formula "18") (term "2,0"))
                                                                     (rule "translateJavaAddInt" (formula "18") (term "3,0"))
                                                                     (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,1,3,0"))
                                                                     (rule "translateJavaAddInt" (formula "34") (term "0,0"))
                                                                     (rule "translateJavaSubInt" (formula "34") (term "2,0,1,0,2,0"))
                                                                     (rule "translateJavaAddInt" (formula "48") (term "0,2,1,3,0"))
                                                                     (rule "translateJavaAddInt" (formula "34") (term "0,1"))
                                                                     (rule "translateJavaAddInt" (formula "34") (term "1,1"))
                                                                     (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,0"))
                                                                     (rule "translateJavaAddInt" (formula "35") (term "2,0"))
                                                                     (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,2,0"))
                                                                     (rule "translateJavaAddInt" (formula "38") (term "1,1"))
                                                                     (rule "translateJavaSubInt" (formula "39") (term "2,0,1,0,2,0"))
                                                                     (rule "translateJavaAddInt" (formula "39") (term "0,1"))
                                                                     (rule "translateJavaSubInt" (formula "41") (term "2,0,1,0,2,0"))
                                                                     (rule "translateJavaAddInt" (formula "41") (term "1,1"))
                                                                     (rule "translateJavaSubInt" (formula "42") (term "2,0,1,0,2,0"))
                                                                     (rule "translateJavaAddInt" (formula "42") (term "0,1"))
                                                                     (rule "translateJavaAddInt" (formula "18") (term "0,2,1,3,0"))
                                                                     (rule "translateJavaSubInt" (formula "34") (term "2,0,1,0,1,0,0"))
                                                                     (rule "translateJavaAddInt" (formula "34") (term "0,2,1,1,1"))
                                                                     (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,1,2,0"))
                                                                     (rule "translateJavaAddInt" (formula "39") (term "0,2,1,0,1"))
                                                                     (rule "translateJavaAddInt" (formula "42") (term "0,2,1,0,1"))
                                                                     (rule "notLeft" (formula "3"))
                                                                     (rule "eqSymm" (formula "42"))
                                                                     (rule "polySimp_homoEq" (formula "20") (term "0,1,1"))
                                                                     (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,1,0"))
                                                                     (rule "mul_literals" (formula "47") (term "1,2,0,1,0,1,0"))
                                                                     (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "48") (term "1,2,0,1,0,0"))
                                                                     (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,1,2,0"))
                                                                     (rule "mul_literals" (formula "48") (term "1,2,0,1,0,1,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,1,3,0"))
                                                                     (rule "mul_literals" (formula "48") (term "1,2,0,1,0,1,3,0"))
                                                                     (rule "polySimp_elimSub" (formula "33") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "33") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "34") (term "2,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "34") (term "1,2,0,1,0,0"))
                                                                     (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "37") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "38") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "38") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "40") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "41") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "33") (term "2,0,1,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "33") (term "1,2,0,1,0,1,0,0"))
                                                                     (rule "polySimp_elimSub" (formula "34") (term "2,0,1,0,1,2,0"))
                                                                     (rule "mul_literals" (formula "34") (term "1,2,0,1,0,1,2,0"))
                                                                     (rule "polySimp_homoEq" (formula "47"))
                                                                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,1"))
                                                                     (rule "polySimp_addComm0" (formula "48") (term "0,2,1,3,0"))
                                                                     (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                                     (rule "polySimp_addComm0" (formula "17") (term "0,2,1,3,0"))
                                                                     (rule "polySimp_addComm0" (formula "33") (term "0,2,1,1,1"))
                                                                     (rule "polySimp_addComm0" (formula "38") (term "0,2,1,0,1"))
                                                                     (rule "polySimp_addComm0" (formula "41") (term "0,2,1,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,1,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,1,3,0"))
                                                                     (rule "polySimp_addComm1" (formula "33") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "34") (term "2,0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "38") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "33") (term "2,0,1,0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "34") (term "2,0,1,0,1,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,1,1,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,1,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,1,3,0"))
                                                                     (rule "polySimp_addComm0" (formula "33") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,1"))
                                                                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1,1"))
                                                                     (rule "polySimp_addComm0" (formula "34") (term "0,2,0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "38") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "33") (term "0,2,0,1,0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "34") (term "0,2,0,1,0,1,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,1,1,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "14"))
                                                                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "31") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "47") (term "0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,1"))
                                                                     (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,1"))
                                                                     (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "47") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "47") (term "1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "47") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "47") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                     (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "2") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "12"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                     (rule "jmod_axiom" (formula "20") (term "0,1,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "20") (term "0,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,1"))
                                                                     (rule "polySimp_elimOne" (formula "20") (term "0,0,1,1"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "47"))
                                                                     (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "20") (term "1,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "31") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "31") (term "0,1,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                                     (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                                     (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "42"))
                                                                     (rule "inEqSimp_contradEq7" (formula "42") (ifseqformula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0"))
                                                                     (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "42") (term "0,0"))
                                                                     (rule "leq_literals" (formula "42") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "false_right" (formula "42"))
                                                                     (rule "pullOutSelect" (formula "47") (term "1,2,0") (inst "selectSK=arr_0"))
                                                                     (rule "applyEq" (formula "47") (term "0") (ifseqformula "1"))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "7")))
                                                                     (rule "eqSymm" (formula "47"))
                                                                     (rule "polySimp_addComm0" (formula "48") (term "2,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                     (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "24"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "43"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "translateJavaAddInt" (formula "18") (term "2,0"))
                                                                  (rule "translateJavaAddInt" (formula "47") (term "0,2,1,1"))
                                                                  (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,0"))
                                                                  (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,1,2,0"))
                                                                  (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,1,3,0"))
                                                                  (rule "translateJavaAddInt" (formula "48") (term "0,2,1,3,0"))
                                                                  (rule "translateJavaSubInt" (formula "47") (term "2,0,1,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "47") (term "0,2,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "18") (term "3,0"))
                                                                  (rule "translateJavaAddInt" (formula "34") (term "0,0"))
                                                                  (rule "translateJavaSubInt" (formula "34") (term "2,0,1,0,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "34") (term "0,1"))
                                                                  (rule "translateJavaAddInt" (formula "34") (term "1,1"))
                                                                  (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "35") (term "2,0"))
                                                                  (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "38") (term "1,1"))
                                                                  (rule "translateJavaSubInt" (formula "39") (term "2,0,1,0,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "39") (term "0,1"))
                                                                  (rule "translateJavaSubInt" (formula "41") (term "2,0,1,0,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "41") (term "1,1"))
                                                                  (rule "translateJavaSubInt" (formula "42") (term "2,0,1,0,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "42") (term "0,1"))
                                                                  (rule "translateJavaAddInt" (formula "47") (term "1"))
                                                                  (rule "translateJavaAddInt" (formula "18") (term "0,2,1,3,0"))
                                                                  (rule "translateJavaSubInt" (formula "34") (term "2,0,1,0,1,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "34") (term "0,2,1,1,1"))
                                                                  (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,1,2,0"))
                                                                  (rule "translateJavaAddInt" (formula "39") (term "0,2,1,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "42") (term "0,2,1,0,1"))
                                                                  (rule "notLeft" (formula "3"))
                                                                  (rule "eqSymm" (formula "42"))
                                                                  (rule "polySimp_homoEq" (formula "20") (term "0,1,1"))
                                                                  (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "48") (term "1,2,0,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,1,2,0"))
                                                                  (rule "mul_literals" (formula "48") (term "1,2,0,1,0,1,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,1,3,0"))
                                                                  (rule "mul_literals" (formula "48") (term "1,2,0,1,0,1,3,0"))
                                                                  (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,1,0"))
                                                                  (rule "mul_literals" (formula "47") (term "1,2,0,1,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "33") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "33") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "34") (term "2,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "34") (term "1,2,0,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "37") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "38") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "38") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "40") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "41") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "33") (term "2,0,1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "33") (term "1,2,0,1,0,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "34") (term "2,0,1,0,1,2,0"))
                                                                  (rule "mul_literals" (formula "34") (term "1,2,0,1,0,1,2,0"))
                                                                  (rule "polySimp_homoEq" (formula "47"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "48") (term "0,2,1,3,0"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "17") (term "0,2,1,3,0"))
                                                                  (rule "polySimp_addComm0" (formula "33") (term "0,2,1,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "38") (term "0,2,1,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "0,2,1,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,1,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,1,3,0"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "2,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "38") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "2,0,1,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "2,0,1,0,1,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "47") (term "0,2,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "47") (term "0,2,1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,1,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,1,3,0"))
                                                                  (rule "polySimp_addComm0" (formula "33") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "20") (term "0,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "34") (term "0,2,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "38") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "33") (term "0,2,0,1,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "34") (term "0,2,0,1,0,1,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,1,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "31") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "14"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "47") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "47") (term "1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "47") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "47") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                  (rule "jmod_axiom" (formula "20") (term "0,1,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "20") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "20") (term "0,0,1,1"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "47"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "20") (term "1,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                                  (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "42"))
                                                                  (rule "inEqSimp_contradEq7" (formula "42") (ifseqformula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0"))
                                                                  (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "42") (term "0,0"))
                                                                  (rule "leq_literals" (formula "42") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "false_right" (formula "42"))
                                                                  (rule "pullOutSelect" (formula "47") (term "1,2,0") (inst "selectSK=arr_0"))
                                                                  (rule "simplifySelectOfAnon" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "7")))
                                                                  (rule "polySimp_addComm0" (formula "48") (term "2,0"))
                                                                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "24"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                  (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "43"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "48") (term "0,2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "polySimp_addComm0" (formula "47") (term "2,0"))
                                                                  (rule "pullOutSelect" (formula "47") (term "1,3,0") (inst "selectSK=arr_1"))
                                                                  (rule "applyEq" (formula "47") (term "0") (ifseqformula "1"))
                                                                  (rule "simplifySelectOfAnon" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "7")))
                                                                  (rule "eqSymm" (formula "47"))
                                                                  (rule "polySimp_addComm0" (formula "48") (term "3,0"))
                                                                  (rule "pullOutSelect" (formula "34") (term "1,0,0") (inst "selectSK=arr_2"))
                                                                  (rule "applyEq" (formula "36") (term "1,2,0") (ifseqformula "34"))
                                                                  (rule "simplifySelectOfAnon" (formula "34"))
                                                                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "46")) (ifInst ""  (formula "7")))
                                                                  (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "36") (term "2,0"))
                                                                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "24"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                  (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "44"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (rule "translateJavaAddInt" (formula "47") (term "1,2,0,0,0"))
                                                            (rule "translateJavaSubInt" (formula "47") (term "2,2,0,0,0"))
                                                            (rule "translateJavaSubInt" (formula "47") (term "2,0,1,0,1,1,0,0"))
                                                            (rule "translateJavaAddInt" (formula "47") (term "0,2,2,0,0,0"))
                                                            (rule "translateJavaAddInt" (formula "47") (term "0,2,1,0,2,2,0,0,0"))
                                                            (rule "allRight" (formula "47") (inst "sk=_ov_0"))
                                                            (rule "allRight" (formula "47") (inst "sk=_fv_0"))
                                                            (rule "impRight" (formula "47"))
                                                            (rule "eqSymm" (formula "48"))
                                                            (rule "polySimp_elimSub" (formula "1") (term "2,2"))
                                                            (rule "mul_literals" (formula "1") (term "1,2,2"))
                                                            (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,0"))
                                                            (rule "mul_literals" (formula "48") (term "1,2,0,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,2,1,0,2,2"))
                                                            (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "2,2"))
                                                            (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,2,2"))
                                                            (rule "elementOfArrayRange" (formula "1") (inst "iv=iv"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "exLeft" (formula "2") (inst "sk=iv_0"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "inEqSimp_homoInEq0" (formula "4"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                            (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEqRigid" (formula "51") (term "2,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "51") (term "2,1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "51") (term "1,1") (ifseqformula "1"))
                                                            (rule "narrowSelectArrayType" (formula "51") (term "1") (ifseqformula "8") (ifseqformula "50"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                            (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=arr_0"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "10")))
                                                            (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "9") (ifseqformula "51"))
                                                            (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "41") (ifseqformula "51"))
                                                            (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                            (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "28"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0"))
                                                            (rule "ifthenelse_split" (formula "1") (term "0"))
                                                            (branch " bucket_starts[bucket] <= begin * -1 + iv_0 & bucket_starts[1 + bucket] >= 1 + begin * -1 + iv_0 TRUE"
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "37"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "allLeftHide" (formula "39") (inst "t=b_0") (userinteraction))
                                                               (rule "translateJavaAddInt" (formula "25") (term "2,0"))
                                                               (rule "translateJavaSubInt" (formula "55") (term "2,0,1,0,0"))
                                                               (rule "translateJavaAddInt" (formula "25") (term "3,0"))
                                                               (rule "translateJavaSubInt" (formula "55") (term "2,0,1,0,1,2,0"))
                                                               (rule "translateJavaSubInt" (formula "55") (term "2,0,1,0,1,3,0"))
                                                               (rule "translateJavaSubInt" (formula "49") (term "2,0,1,0,2,0"))
                                                               (rule "translateJavaAddInt" (formula "55") (term "0,2,1,3,0"))
                                                               (rule "translateJavaAddInt" (formula "49") (term "0,1"))
                                                               (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,2,0"))
                                                               (rule "translateJavaAddInt" (formula "48") (term "1,1"))
                                                               (rule "translateJavaSubInt" (formula "46") (term "2,0,1,0,2,0"))
                                                               (rule "translateJavaAddInt" (formula "46") (term "0,1"))
                                                               (rule "translateJavaSubInt" (formula "45") (term "2,0,1,0,2,0"))
                                                               (rule "translateJavaAddInt" (formula "45") (term "1,1"))
                                                               (rule "translateJavaSubInt" (formula "42") (term "2,0,1,0,0"))
                                                               (rule "translateJavaAddInt" (formula "42") (term "2,0"))
                                                               (rule "translateJavaAddInt" (formula "41") (term "0,0"))
                                                               (rule "translateJavaSubInt" (formula "41") (term "2,0,1,0,2,0"))
                                                               (rule "translateJavaAddInt" (formula "41") (term "0,1"))
                                                               (rule "translateJavaAddInt" (formula "41") (term "1,1"))
                                                               (rule "translateJavaAddInt" (formula "25") (term "0,2,1,3,0"))
                                                               (rule "translateJavaAddInt" (formula "49") (term "0,2,1,0,1"))
                                                               (rule "translateJavaAddInt" (formula "46") (term "0,2,1,0,1"))
                                                               (rule "translateJavaSubInt" (formula "42") (term "2,0,1,0,1,2,0"))
                                                               (rule "translateJavaSubInt" (formula "41") (term "2,0,1,0,1,0,0"))
                                                               (rule "translateJavaAddInt" (formula "41") (term "0,2,1,1,1"))
                                                               (rule "notLeft" (formula "10"))
                                                               (rule "eqSymm" (formula "38") (term "0,1,0"))
                                                               (rule "eqSymm" (formula "49"))
                                                               (rule "replace_known_right" (formula "38") (term "0,1,0") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "38"))
                                                               (rule "polySimp_homoEq" (formula "27") (term "0,1,1"))
                                                               (rule "polySimp_elimSub" (formula "55") (term "2,0,1,0,0"))
                                                               (rule "mul_literals" (formula "55") (term "1,2,0,1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "55") (term "2,0,1,0,1,2,0"))
                                                               (rule "mul_literals" (formula "55") (term "1,2,0,1,0,1,2,0"))
                                                               (rule "polySimp_elimSub" (formula "55") (term "2,0,1,0,1,3,0"))
                                                               (rule "mul_literals" (formula "55") (term "1,2,0,1,0,1,3,0"))
                                                               (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,2,0"))
                                                               (rule "mul_literals" (formula "48") (term "1,2,0,1,0,2,0"))
                                                               (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,2,0"))
                                                               (rule "mul_literals" (formula "47") (term "1,2,0,1,0,2,0"))
                                                               (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,2,0"))
                                                               (rule "mul_literals" (formula "45") (term "1,2,0,1,0,2,0"))
                                                               (rule "polySimp_elimSub" (formula "44") (term "2,0,1,0,2,0"))
                                                               (rule "mul_literals" (formula "44") (term "1,2,0,1,0,2,0"))
                                                               (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,0"))
                                                               (rule "mul_literals" (formula "41") (term "1,2,0,1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,2,0"))
                                                               (rule "mul_literals" (formula "40") (term "1,2,0,1,0,2,0"))
                                                               (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,1,2,0"))
                                                               (rule "mul_literals" (formula "41") (term "1,2,0,1,0,1,2,0"))
                                                               (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,1,0,0"))
                                                               (rule "mul_literals" (formula "40") (term "1,2,0,1,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,1"))
                                                               (rule "polySimp_addComm0" (formula "55") (term "0,2,1,3,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "0,2,1,3,0"))
                                                               (rule "polySimp_addComm0" (formula "48") (term "0,2,1,0,1"))
                                                               (rule "polySimp_addComm0" (formula "45") (term "0,2,1,0,1"))
                                                               (rule "polySimp_addComm0" (formula "40") (term "0,2,1,1,1"))
                                                               (rule "polySimp_addComm1" (formula "55") (term "2,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "55") (term "2,0,1,0,1,2,0"))
                                                               (rule "polySimp_addComm1" (formula "55") (term "2,0,1,0,1,3,0"))
                                                               (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm1" (formula "45") (term "2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm1" (formula "44") (term "2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,1,2,0"))
                                                               (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "55") (term "0,2,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "55") (term "0,2,0,1,0,1,2,0"))
                                                               (rule "polySimp_addComm0" (formula "55") (term "0,2,0,1,0,1,3,0"))
                                                               (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,2,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,1"))
                                                               (rule "mul_literals" (formula "27") (term "0,1,0,0,1,1"))
                                                               (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,1,2,0"))
                                                               (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "21"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "9"))
                                                               (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                                               (rule "inEqSimp_gtToGeq" (formula "38") (term "0,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,1"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "8"))
                                                               (rule "replace_known_left" (formula "38") (term "1,0") (ifseqformula "8"))
                                                                (builtin "One Step Simplification" (formula "38"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,1"))
                                                               (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,1"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "9") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "9") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "19"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "38") (term "0,0,1,1,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0,1,0,1"))
                                                               (rule "jmod_axiom" (formula "27") (term "0,1,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,1"))
                                                               (rule "polySimp_sepNegMonomial" (formula "27") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,1"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "0,0,1,1"))
                                                               (rule "polySimp_sepNegMonomial" (formula "27") (term "1,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "0,1,1,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "0,0,1,1"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "0,0,1,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "0,0,0,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "0,0"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                               (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "49"))
                                                               (rule "replace_known_left" (formula "38") (term "0,0,1") (ifseqformula "9"))
                                                                (builtin "One Step Simplification" (formula "38"))
                                                               (rule "inEqSimp_contradEq7" (formula "49") (ifseqformula "9"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0"))
                                                               (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "49") (term "0,0"))
                                                               (rule "leq_literals" (formula "49") (term "0"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "false_right" (formula "49"))
                                                               (rule "inEqSimp_contradInEq1" (formula "38") (term "0,1,1") (ifseqformula "9"))
                                                               (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,1"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,1"))
                                                               (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,1"))
                                                               (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,1"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,1,1"))
                                                               (rule "add_literals" (formula "38") (term "0,0,0,0,0,1,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0,1,1"))
                                                               (rule "add_literals" (formula "38") (term "1,1,0,0,0,1,1"))
                                                               (rule "times_zero_1" (formula "38") (term "1,0,0,0,1,1"))
                                                               (rule "add_zero_right" (formula "38") (term "0,0,0,1,1"))
                                                               (rule "leq_literals" (formula "38") (term "0,0,1,1"))
                                                                (builtin "One Step Simplification" (formula "38"))
                                                               (rule "pullOutSelect" (formula "54") (term "1,2,0") (inst "selectSK=arr_1"))
                                                               (rule "simplifySelectOfAnon" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "14")))
                                                               (rule "polySimp_addComm0" (formula "55") (term "2,0"))
                                                               (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                               (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "50"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "55") (term "0,2,0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "polySimp_addComm0" (formula "54") (term "2,0"))
                                                               (rule "pullOutSelect" (formula "54") (term "1,3,0") (inst "selectSK=arr_2"))
                                                               (rule "simplifySelectOfAnon" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "14")))
                                                               (rule "polySimp_addComm0" (formula "55") (term "3,0"))
                                                               (rule "pullOutSelect" (formula "42") (term "1,2,0") (inst "selectSK=arr_3"))
                                                               (rule "applyEq" (formula "41") (term "1,0,0") (ifseqformula "42"))
                                                               (rule "simplifySelectOfAnon" (formula "42"))
                                                                (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "53")) (ifInst ""  (formula "14")))
                                                               (rule "polySimp_addComm0" (formula "43") (term "2,0"))
                                                               (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                                               (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                               (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "51"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "56") (term "0,3,0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "polySimp_addComm0" (formula "55") (term "3,0"))
                                                               (rule "elementOfUnion" (formula "41") (term "0,0"))
                                                               (rule "disjointAllFields" (formula "41") (term "1,0,0") (ifseqformula "30"))
                                                                (builtin "One Step Simplification" (formula "41"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "41") (term "0,0"))
                                                               (rule "eqSymm" (formula "41") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "41") (term "0,0,0,0") (ifseqformula "50"))
                                                                (builtin "One Step Simplification" (formula "41"))
                                                               (rule "applyEqReverse" (formula "40") (term "0,0,0") (ifseqformula "41"))
                                                               (rule "applyEqReverse" (formula "42") (term "0,2,0") (ifseqformula "41"))
                                                               (rule "hideAuxiliaryEq" (formula "41"))
                                                               (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "41") (term "2,0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "37"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "36") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "1"))
                                                               (rule "mul_literals" (formula "35") (term "0,0"))
                                                               (rule "add_zero_left" (formula "35") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "2"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                               (rule "mul_literals" (formula "35") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "35"))
                                                               (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                               (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "16") (term "0,0"))
                                                               (rule "qeq_literals" (formula "16") (term "0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "true_left" (formula "16"))
                                                               (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "37"))
                                                               (rule "times_zero_1" (formula "36") (term "0,0"))
                                                               (rule "add_zero_left" (formula "36") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "34"))
                                                               (rule "inEqSimp_homoInEq0" (formula "36") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                               (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "36") (term "0,0"))
                                                               (rule "qeq_literals" (formula "36") (term "0"))
                                                                (builtin "One Step Simplification" (formula "36"))
                                                               (rule "true_left" (formula "36"))
                                                               (rule "commuteUnion" (formula "56") (term "1,0,0"))
                                                               (rule "commuteUnion" (formula "50") (term "1,0,2,0"))
                                                               (rule "commuteUnion" (formula "49") (term "1,0,2,0"))
                                                               (rule "commuteUnion" (formula "47") (term "1,0,2,0"))
                                                               (rule "commuteUnion" (formula "46") (term "1,0,2,0"))
                                                               (rule "commuteUnion" (formula "43") (term "1,0,0"))
                                                               (rule "commuteUnion" (formula "42") (term "1,0,2,0"))
                                                               (rule "Definition_axiom_for_bucketStartsOrdering_in_de_wiesler_Functions" (formula "32") (term "0") (inst "b=b"))
                                                                (builtin "One Step Simplification" (formula "32"))
                                                               (rule "translateJavaAddInt" (formula "32") (term "0,2,0,1,1,0,1,0,1"))
                                                               (rule "translateJavaAddInt" (formula "32") (term "0,2,1,1,0,0"))
                                                               (rule "translateJavaAddInt" (formula "32") (term "0,2,0,1,1,1,1,0,1"))
                                                               (rule "translateJavaAddInt" (formula "32") (term "0,2,1,1,0,1,1,1,0,1"))
                                                               (rule "translateJavaAddInt" (formula "32") (term "0,2,1,1,0,1,0,1,0,1"))
                                                               (rule "translateJavaAddInt" (formula "32") (term "0,2,0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "32") (term "0,2,0,0,0,1,1,1,0,1"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0,2,1,1,0,1,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0,2,1,1,0,1,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0,2,0,1,1,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0,2,0,0,0,1,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0,2,0,1,1,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "34") (term "0,2,0"))
                                                               (rule "polySimp_addComm0" (formula "33") (term "0,2,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_gtToGeq" (formula "35") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,1,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "32"))
                                                               (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,1,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,1,1,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,1,1,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "33"))
                                                               (rule "inEqSimp_commuteLeq" (formula "32"))
                                                               (rule "applyEq" (formula "32") (term "0") (ifseqformula "22"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32"))
                                                               (rule "applyEq" (formula "32") (term "1,1,1,1,1,0") (ifseqformula "22"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,1,0"))
                                                               (rule "mul_literals" (formula "32") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "1,1,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,1,0"))
                                                               (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "26") (term "0,0,1") (inst "b=b"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "translateJavaMod" (formula "26") (term "0,1,0,0,0,1"))
                                                               (rule "translateJavaAddInt" (formula "26") (term "0,2,1,3,0,1,0,0,1"))
                                                               (rule "translateJavaAddInt" (formula "26") (term "2,0,1,0,0,1"))
                                                               (rule "translateJavaAddInt" (formula "26") (term "3,0,1,0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "26") (term "0,2,1,3,0,1,0,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,0,1"))
                                                               (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0,1"))
                                                               (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0,0,1"))
                                                               (rule "jmod_axiom" (formula "26") (term "0,1,0,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,0,1"))
                                                               (rule "polySimp_homoEq" (formula "26") (term "1,0,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,1,0,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,0,0,1"))
                                                               (rule "polySimp_sepPosMonomial" (formula "26") (term "1,0,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,1"))
                                                               (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0,1"))
                                                               (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,0,1"))
                                                               (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "24") (term "0") (inst "b=b"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "translateJavaAddInt" (formula "24") (term "0,2,5,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "0,2,5,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                               (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "27") (term "0") (inst "b=b"))
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "translateJavaSubInt" (formula "27") (term "0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "27") (term "0,2,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "27") (term "0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "27") (term "0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "27") (term "0,2,1,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                               (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "0,0,1,1,0"))
                                                               (rule "mul_literals" (formula "27") (term "0,0,0,1,1,0"))
                                                               (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "25") (term "0") (inst "b=b"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "translateJavaAddInt" (formula "25") (term "0,2,5,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "0,2,5,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                               (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "30"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "translateJavaMulInt" (formula "30") (term "1,1,0,0,0,0,1,0,0"))
                                                               (rule "translateJavaMulInt" (formula "30") (term "1,1,0,0,0,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "30") (term "1,1,0,0,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "30") (term "1,1,0,0,0,0,0,1,0,0"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "31"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "33"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "andLeft" (formula "35"))
                                                               (rule "notLeft" (formula "31"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "andLeft" (formula "36"))
                                                               (rule "notLeft" (formula "31"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "notLeft" (formula "31"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "andLeft" (formula "38"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "notLeft" (formula "32"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "notLeft" (formula "32"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "andLeft" (formula "40"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "notLeft" (formula "32"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "andLeft" (formula "41"))
                                                               (rule "notLeft" (formula "30"))
                                                               (rule "notLeft" (formula "30"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "disjointDefinition" (formula "66"))
                                                                (builtin "One Step Simplification" (formula "66"))
                                                               (rule "notLeft" (formula "66"))
                                                               (rule "disjointDefinition" (formula "65"))
                                                                (builtin "One Step Simplification" (formula "65"))
                                                               (rule "notLeft" (formula "65"))
                                                               (rule "disjointDefinition" (formula "64"))
                                                                (builtin "One Step Simplification" (formula "64"))
                                                               (rule "notLeft" (formula "64"))
                                                               (rule "eqSymm" (formula "84"))
                                                               (rule "disjointDefinition" (formula "63"))
                                                                (builtin "One Step Simplification" (formula "63"))
                                                               (rule "notLeft" (formula "63"))
                                                               (rule "eqSymm" (formula "83"))
                                                               (rule "disjointDefinition" (formula "62"))
                                                                (builtin "One Step Simplification" (formula "62"))
                                                               (rule "notLeft" (formula "62"))
                                                               (rule "eqSymm" (formula "82"))
                                                               (rule "disjointDefinition" (formula "61"))
                                                                (builtin "One Step Simplification" (formula "61"))
                                                               (rule "notLeft" (formula "61"))
                                                               (rule "eqSymm" (formula "81"))
                                                               (rule "disjointDefinition" (formula "60"))
                                                                (builtin "One Step Simplification" (formula "60"))
                                                               (rule "notLeft" (formula "60"))
                                                               (rule "eqSymm" (formula "80"))
                                                               (rule "disjointDefinition" (formula "59"))
                                                                (builtin "One Step Simplification" (formula "59"))
                                                               (rule "notLeft" (formula "59"))
                                                               (rule "eqSymm" (formula "79"))
                                                               (rule "disjointDefinition" (formula "58"))
                                                                (builtin "One Step Simplification" (formula "58"))
                                                               (rule "notLeft" (formula "58"))
                                                               (rule "eqSymm" (formula "78"))
                                                               (rule "disjointDefinition" (formula "57"))
                                                                (builtin "One Step Simplification" (formula "57"))
                                                               (rule "notLeft" (formula "57"))
                                                               (rule "eqSymm" (formula "77"))
                                                               (rule "disjointDefinition" (formula "56"))
                                                                (builtin "One Step Simplification" (formula "56"))
                                                               (rule "notLeft" (formula "56"))
                                                               (rule "eqSymm" (formula "76"))
                                                               (rule "disjointDefinition" (formula "55"))
                                                                (builtin "One Step Simplification" (formula "55"))
                                                               (rule "notLeft" (formula "55"))
                                                               (rule "eqSymm" (formula "75"))
                                                               (rule "disjointDefinition" (formula "54"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "notLeft" (formula "54"))
                                                               (rule "eqSymm" (formula "74"))
                                                               (rule "disjointDefinition" (formula "53"))
                                                                (builtin "One Step Simplification" (formula "53"))
                                                               (rule "notLeft" (formula "53"))
                                                               (rule "eqSymm" (formula "73"))
                                                               (rule "disjointDefinition" (formula "52"))
                                                                (builtin "One Step Simplification" (formula "52"))
                                                               (rule "notLeft" (formula "52"))
                                                               (rule "eqSymm" (formula "72"))
                                                               (rule "disjointDefinition" (formula "51"))
                                                                (builtin "One Step Simplification" (formula "51"))
                                                               (rule "notLeft" (formula "51"))
                                                               (rule "disjointDefinition" (formula "50"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "notLeft" (formula "50"))
                                                               (rule "eqSymm" (formula "70"))
                                                               (rule "disjointDefinition" (formula "49"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "notLeft" (formula "49"))
                                                               (rule "eqSymm" (formula "69"))
                                                               (rule "disjointDefinition" (formula "48"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "notLeft" (formula "48"))
                                                               (rule "disjointDefinition" (formula "47"))
                                                                (builtin "One Step Simplification" (formula "47"))
                                                               (rule "notLeft" (formula "47"))
                                                               (rule "disjointDefinition" (formula "46"))
                                                                (builtin "One Step Simplification" (formula "46"))
                                                               (rule "notLeft" (formula "46"))
                                                               (rule "disjointDefinition" (formula "45"))
                                                                (builtin "One Step Simplification" (formula "45"))
                                                               (rule "notLeft" (formula "45"))
                                                               (rule "disjointDefinition" (formula "44"))
                                                                (builtin "One Step Simplification" (formula "44"))
                                                               (rule "notLeft" (formula "44"))
                                                               (rule "disjointDefinition" (formula "43"))
                                                                (builtin "One Step Simplification" (formula "43"))
                                                               (rule "notLeft" (formula "43"))
                                                               (rule "disjointDefinition" (formula "42"))
                                                                (builtin "One Step Simplification" (formula "42"))
                                                               (rule "notLeft" (formula "42"))
                                                               (rule "disjointDefinition" (formula "41"))
                                                                (builtin "One Step Simplification" (formula "41"))
                                                               (rule "notLeft" (formula "41"))
                                                               (rule "disjointDefinition" (formula "40"))
                                                                (builtin "One Step Simplification" (formula "40"))
                                                               (rule "notLeft" (formula "40"))
                                                               (rule "disjointDefinition" (formula "39"))
                                                                (builtin "One Step Simplification" (formula "39"))
                                                               (rule "notLeft" (formula "39"))
                                                               (rule "applyEq" (formula "100") (term "0,1,0,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "55") (term "0,1,0,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "58") (term "0,1,0,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "54") (term "0,1,0,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "51") (term "0,1,0,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "57") (term "0,1,0,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "50") (term "0,1,0,2,0") (ifseqformula "38"))
                                                               (rule "distributeIntersection" (formula "28") (term "0"))
                                                               (rule "distributeIntersection" (formula "29") (term "0"))
                                                               (rule "distributeIntersection" (formula "28") (term "1,0"))
                                                               (rule "distributeIntersection" (formula "28") (term "0,0"))
                                                               (rule "unionEqualsEmpty" (formula "29"))
                                                               (rule "andLeft" (formula "29"))
                                                               (rule "distributeIntersection" (formula "28") (term "0,1,0"))
                                                               (rule "distributeIntersection" (formula "28") (term "1,1,0"))
                                                               (rule "distributeIntersection" (formula "28") (term "1,0,0"))
                                                               (rule "distributeIntersection" (formula "28") (term "0,0,0"))
                                                               (rule "distributeIntersection" (formula "29") (term "0"))
                                                               (rule "distributeIntersection" (formula "30") (term "0"))
                                                               (rule "unionEqualsEmpty" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "distributeIntersection" (formula "30") (term "0,0"))
                                                               (rule "distributeIntersection" (formula "30") (term "1,0"))
                                                               (rule "distributeIntersection" (formula "31") (term "1,0"))
                                                               (rule "distributeIntersection" (formula "31") (term "0,0"))
                                                               (rule "unionEqualsEmpty" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "unionEqualsEmpty" (formula "30"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "unionEqualsEmpty" (formula "32"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "unionEqualsEmpty" (formula "34"))
                                                               (rule "andLeft" (formula "34"))
                                                               (rule "unionEqualsEmpty" (formula "28"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "notLeft" (formula "29"))
                                                               (rule "notLeft" (formula "28"))
                                                               (rule "eqSymm" (formula "65"))
                                                               (rule "eqSymm" (formula "64"))
                                                               (rule "unionEqualsEmpty" (formula "28"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "notLeft" (formula "29"))
                                                               (rule "notLeft" (formula "28"))
                                                               (rule "eqSymm" (formula "64"))
                                                               (rule "eqSymm" (formula "63"))
                                                               (rule "unionEqualsEmpty" (formula "28"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "notLeft" (formula "28"))
                                                               (rule "notLeft" (formula "28"))
                                                               (rule "eqSymm" (formula "63"))
                                                               (rule "eqSymm" (formula "62"))
                                                               (rule "unionEqualsEmpty" (formula "28"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "notLeft" (formula "29"))
                                                               (rule "notLeft" (formula "28"))
                                                               (rule "eqSymm" (formula "62"))
                                                               (rule "eqSymm" (formula "61"))
                                                               (rule "unionEqualsEmpty" (formula "28"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "notLeft" (formula "29"))
                                                               (rule "notLeft" (formula "28"))
                                                               (rule "eqSymm" (formula "61"))
                                                               (rule "eqSymm" (formula "60"))
                                                               (rule "unionEqualsEmpty" (formula "28"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "notLeft" (formula "28"))
                                                               (rule "notLeft" (formula "28"))
                                                               (rule "eqSymm" (formula "60"))
                                                               (rule "eqSymm" (formula "59"))
                                                               (rule "unionEqualsEmpty" (formula "28"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "notLeft" (formula "29"))
                                                               (rule "notLeft" (formula "28"))
                                                               (rule "eqSymm" (formula "59"))
                                                               (rule "eqSymm" (formula "58"))
                                                               (rule "unionEqualsEmpty" (formula "28"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "notLeft" (formula "29"))
                                                               (rule "notLeft" (formula "28"))
                                                               (rule "eqSymm" (formula "58"))
                                                               (rule "eqSymm" (formula "57"))
                                                               (rule "commuteUnion_2" (formula "36") (term "0,1"))
                                                               (rule "commuteUnion" (formula "36") (term "1,1,1"))
                                                               (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "21") (term "0"))
                                                                (builtin "One Step Simplification" (formula "21"))
                                                               (rule "translateJavaAddInt" (formula "21") (term "3,0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "21") (term "0,1,0,0"))
                                                               (rule "andLeft" (formula "21"))
                                                               (rule "andLeft" (formula "21"))
                                                               (rule "andLeft" (formula "21"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "3,0"))
                                                               (rule "polySimp_addComm0" (formula "22") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "21"))
                                                               (rule "inEqSimp_commuteLeq" (formula "22"))
                                                               (rule "commuteUnion_2" (formula "117") (term "0,0,1,0,0"))
                                                               (rule "commuteUnion" (formula "117") (term "1,1,0,1,0,0"))
                                                               (rule "commuteUnion" (formula "56") (term "0,0,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "56") (term "1,1,0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "59") (term "0,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "59") (term "1,1,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "55") (term "0,0,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "55") (term "1,1,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "52") (term "0,0,0,1,0,0"))
                                                               (rule "commuteUnion" (formula "52") (term "1,1,0,1,0,0"))
                                                               (rule "commuteUnion_2" (formula "58") (term "0,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "58") (term "1,1,0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "51") (term "0,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "51") (term "1,1,0,1,0,2,0"))
                                                               (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "26") (term "0"))
                                                               (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "10"))
                                                                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "116")) (ifInst ""  (formula "27")))
                                                               (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "27") (term "0") (inst "i=i"))
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "translateJavaSubInt" (formula "27") (term "1,1,0,0"))
                                                               (rule "translateJavaAddInt" (formula "27") (term "0,2,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "27") (term "1,1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "27") (term "0,2,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "27") (term "1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "27") (term "0,1,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "27") (term "0,0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "0,1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,0,0"))
                                                               (rule "mul_literals" (formula "27") (term "0,0,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "1,0,1,1,0,0"))
                                                               (rule "nnf_imp2or" (formula "42") (term "0"))
                                                               (rule "commuteUnion" (formula "40") (term "0,0,1"))
                                                               (rule "commuteUnion" (formula "118") (term "0,0,0,1,0,0"))
                                                               (rule "nnf_imp2or" (formula "28") (term "0"))
                                                               (rule "commuteUnion_2" (formula "57") (term "0,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "60") (term "0,0,0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "56") (term "0,0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "53") (term "0,0,1,0,0"))
                                                               (rule "nnf_imp2or" (formula "30") (term "0,0,1"))
                                                               (rule "commuteUnion" (formula "59") (term "0,0,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "52") (term "0,0,0,1,0,2,0"))
                                                               (rule "nnf_imp2or" (formula "31") (term "0"))
                                                               (rule "commuteUnion_2" (formula "40") (term "0,1"))
                                                               (rule "commuteUnion_2" (formula "118") (term "0,0,1,0,0"))
                                                               (rule "nnf_imp2or" (formula "29") (term "0"))
                                                               (rule "commuteUnion" (formula "57") (term "0,0,0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "60") (term "0,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "56") (term "0,0,0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "53") (term "0,1,0,0"))
                                                               (rule "commuteUnion_2" (formula "59") (term "0,0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "52") (term "0,0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "40") (term "1"))
                                                               (rule "commuteUnion_2" (formula "118") (term "0,1,0,0"))
                                                               (rule "commuteUnion_2" (formula "57") (term "0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "60") (term "0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "56") (term "0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "53") (term "0,0,0,1,0,0"))
                                                               (rule "commuteUnion_2" (formula "59") (term "0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "52") (term "0,1,0,2,0"))
                                                               (rule "commute_and_2" (formula "50") (term "1"))
                                                               (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "true_left" (formula "17"))
                                                               (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                                               (rule "commute_or" (formula "30") (term "1,1"))
                                                               (rule "nnf_imp2or" (formula "27") (term "0"))
                                                               (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "42"))
                                                               (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                               (rule "cut_direct" (formula "50") (term "0"))
                                                               (branch "CUT: num_buckets >= 1 + b_0 TRUE"
                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "andLeft" (formula "51"))
                                                                  (rule "andLeft" (formula "51"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "47"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "53") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "54") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                                                  (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "54") (term "0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "7"))
                                                                  (rule "andLeft" (formula "54"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "54"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "54") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "54") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "54") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "54") (term "0"))
                                                                  (rule "add_literals" (formula "54") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "54") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "54") (term "0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "54") (term "0"))
                                                                  (rule "add_literals" (formula "54") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "54") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "54") (term "0"))
                                                                  (rule "leq_literals" (formula "54"))
                                                                  (rule "closeFalse" (formula "54"))
                                                               )
                                                               (branch "CUT: num_buckets >= 1 + b_0 FALSE"
                                                                   (builtin "One Step Simplification" (formula "50"))
                                                                  (rule "true_left" (formula "50"))
                                                                  (rule "inEqSimp_geqRight" (formula "60"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                                  (rule "mul_literals" (formula "21") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "21"))
                                                                  (rule "andLeft" (formula "10"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                                                  (rule "add_literals" (formula "10") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "10") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "10") (term "0"))
                                                                  (rule "leq_literals" (formula "10"))
                                                                  (rule "closeFalse" (formula "10"))
                                                               )
                                                            )
                                                            (branch " bucket_starts[bucket] <= begin * -1 + iv_0 & bucket_starts[1 + bucket] >= 1 + begin * -1 + iv_0 FALSE"
                                                               (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "53"))
                                                               (rule "closeTrue" (formula "53"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "44"))
                                                (branch "Case 1"
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "44") (term "0") (inst "b=b") (userinteraction))
                                                    (builtin "One Step Simplification" (formula "44") (userinteraction))
                                                   (rule "allRight" (formula "44") (inst "sk=b_0") (userinteraction))
                                                   (rule "impRight" (formula "44"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "18") (term "0") (inst "b=b") (userinteraction))
                                                    (builtin "One Step Simplification" (formula "18") (userinteraction))
                                                   (rule "allLeftHide" (formula "18") (inst "t=b_0") (userinteraction))
                                                   (rule "impLeft" (formula "18") (userinteraction))
                                                   (branch "Case 1"
                                                      (rule "translateJavaSubInt" (formula "46") (term "2,0,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "40") (term "2,0,1,0,2,0"))
                                                      (rule "translateJavaAddInt" (formula "40") (term "0,1"))
                                                      (rule "translateJavaSubInt" (formula "46") (term "2,0,1,0,4,0"))
                                                      (rule "translateJavaSubInt" (formula "46") (term "2,0,1,0,5,0"))
                                                      (rule "translateJavaAddInt" (formula "46") (term "0,2,5,0"))
                                                      (rule "translateJavaSubInt" (formula "39") (term "2,0,1,0,2,0"))
                                                      (rule "translateJavaAddInt" (formula "39") (term "1,1"))
                                                      (rule "translateJavaSubInt" (formula "37") (term "2,0,1,0,2,0"))
                                                      (rule "translateJavaAddInt" (formula "37") (term "0,1"))
                                                      (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,2,0"))
                                                      (rule "translateJavaAddInt" (formula "36") (term "1,1"))
                                                      (rule "translateJavaSubInt" (formula "33") (term "2,0,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "33") (term "2,0"))
                                                      (rule "translateJavaAddInt" (formula "32") (term "0,0"))
                                                      (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,2,0"))
                                                      (rule "translateJavaAddInt" (formula "32") (term "0,1"))
                                                      (rule "translateJavaAddInt" (formula "32") (term "1,1"))
                                                      (rule "translateJavaAddInt" (formula "40") (term "0,2,1,0,1"))
                                                      (rule "translateJavaAddInt" (formula "37") (term "0,2,1,0,1"))
                                                      (rule "translateJavaSubInt" (formula "33") (term "2,0,1,0,1,2,0"))
                                                      (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "32") (term "0,2,1,1,1"))
                                                      (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "2")))
                                                      (rule "closeTrue" (formula "41"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "Definition_axiom_for_isBucketPartitioned_in_de_wiesler_Sorter" (formula "18") (term "0") (inst "j=j") (inst "i=i") (userinteraction))
                                                       (builtin "One Step Simplification" (formula "18") (userinteraction))
                                                      (rule "Definition_axiom_for_isBucketPartitioned_in_de_wiesler_Sorter" (formula "46") (term "0") (inst "j=j") (inst "i=i") (userinteraction))
                                                       (builtin "One Step Simplification" (formula "46") (userinteraction))
                                                      (rule "allRight" (formula "46") (inst "sk=i_0") (userinteraction))
                                                      (rule "impRight" (formula "46"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "allRight" (formula "48") (inst "sk=j_0") (userinteraction))
                                                      (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,1,1"))
                                                      (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,0,1"))
                                                      (rule "translateJavaAddInt" (formula "48") (term "0,0,0"))
                                                      (rule "translateJavaAddInt" (formula "43") (term "0,1"))
                                                      (rule "translateJavaSubInt" (formula "43") (term "2,0,1,0,2,0"))
                                                      (rule "translateJavaAddInt" (formula "42") (term "1,1"))
                                                      (rule "translateJavaSubInt" (formula "42") (term "2,0,1,0,2,0"))
                                                      (rule "translateJavaAddInt" (formula "40") (term "0,1"))
                                                      (rule "translateJavaSubInt" (formula "40") (term "2,0,1,0,2,0"))
                                                      (rule "translateJavaAddInt" (formula "39") (term "1,1"))
                                                      (rule "translateJavaSubInt" (formula "39") (term "2,0,1,0,2,0"))
                                                      (rule "translateJavaAddInt" (formula "36") (term "2,0"))
                                                      (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "35") (term "1,1"))
                                                      (rule "translateJavaAddInt" (formula "35") (term "0,1"))
                                                      (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,2,0"))
                                                      (rule "translateJavaAddInt" (formula "35") (term "0,0"))
                                                      (rule "translateJavaAddInt" (formula "20") (term "0,0,0,0,1,0"))
                                                      (rule "translateJavaAddInt" (formula "20") (term "1,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "20") (term "0,0,0,0"))
                                                      (rule "translateJavaAddInt" (formula "2") (term "1"))
                                                      (rule "translateJavaAddInt" (formula "1") (term "0"))
                                                      (rule "translateJavaSubInt" (formula "48") (term "2,0,1,0,1,0,0,0"))
                                                      (rule "translateJavaAddInt" (formula "48") (term "0,2,1,0,0,0"))
                                                      (rule "translateJavaAddInt" (formula "43") (term "0,2,1,0,1"))
                                                      (rule "translateJavaAddInt" (formula "40") (term "0,2,1,0,1"))
                                                      (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,1,2,0"))
                                                      (rule "translateJavaAddInt" (formula "35") (term "0,2,1,1,1"))
                                                      (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "20") (term "0,2,1,0,0,0,0,1,0"))
                                                      (rule "translateJavaAddInt" (formula "20") (term "0,2,1,1,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "2") (term "2,0,1,0,1,1"))
                                                      (rule "translateJavaAddInt" (formula "2") (term "0,2,1,1"))
                                                      (rule "translateJavaSubInt" (formula "1") (term "2,0,1,0,1,0"))
                                                      (rule "impRight" (formula "48") (userinteraction))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "allLeftHide" (formula "35") (inst "t=b_0") (userinteraction))
                                                      (rule "cut_direct" (formula "35") (term "0,1,0") (userinteraction))
                                                      (branch "CUT: b_0 = bucket TRUE"
                                                          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "6")) (userinteraction))
                                                         (rule "true_left" (formula "36") (userinteraction))
                                                         (rule "eqTermCut" (formula "50") (term "1") (inst "s=int::select(heap, values, arr(j_0))") (userinteraction))
                                                         (branch "Assume values[j_0]@heap[anon( arrayRange(values, begin + bucket_starts[bucket], begin + bucket_starts[ 1 + bucket] - 1) cup storage.allArrays, anonOut_heap<<anonHeapFunction>>)] = values[j_0]"
                                                            (rule "applyEq" (formula "51") (term "1") (ifseqformula "1") (userinteraction))
                                                            (rule "seqPermForall" (inst "phi=lt((int)x, int::select(heap, values, arr(j_0)))<<origin(\"User_Interaction @ node 15333 (seqPermForall)\",\"[]\")>>") (inst "iv=iv") (inst "x=x") (ifseqformula "38") (userinteraction))
                                                            (rule "equiv_left" (formula "1") (userinteraction))
                                                            (branch "Case 1"
                                                               (rule "allLeftHide" (formula "1") (inst "t=sub(i_0,
    add(begin,
        int::select(heap, bucket_starts, arr(bucket))))") (userinteraction))
                                                               (rule "eqSymm" (formula "38"))
                                                               (rule "polySimp_elimSub" (formula "7") (term "2,0,1,0,1,1"))
                                                               (rule "mul_literals" (formula "7") (term "1,2,0,1,0,1,1"))
                                                               (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,0"))
                                                               (rule "mul_literals" (formula "41") (term "1,2,0,1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,1,0,0,1,1,0"))
                                                               (rule "mul_literals" (formula "1") (term "1,2,0,1,0,1,0,0,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "53") (term "2,0,1,0,0"))
                                                               (rule "mul_literals" (formula "53") (term "1,2,0,1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "2") (term "2,0,1,0,2,0,1,1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "1,2,0,1,0,2,0,1,1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,1,0"))
                                                               (rule "mul_literals" (formula "4") (term "1,2,0,1,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,1,0,0,0,0,1"))
                                                               (rule "mul_literals" (formula "1") (term "1,2,0,1,0,1,0,0,0,0,1"))
                                                               (rule "polySimp_elimSub" (formula "6") (term "2,0,1,0,1,0"))
                                                               (rule "mul_literals" (formula "6") (term "1,2,0,1,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,2,0,1,1,0"))
                                                               (rule "mul_literals" (formula "1") (term "1,2,0,1,0,2,0,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "3") (term "2,0,1,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "1,2,0,1,0,0"))
                                                               (rule "polySimp_homoEq" (formula "27") (term "0,1,1"))
                                                               (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,1,2,0"))
                                                               (rule "mul_literals" (formula "41") (term "1,2,0,1,0,1,2,0"))
                                                               (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,1,0,0"))
                                                               (rule "mul_literals" (formula "40") (term "1,2,0,1,0,1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,2,0"))
                                                               (rule "mul_literals" (formula "48") (term "1,2,0,1,0,2,0"))
                                                               (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,2,0"))
                                                               (rule "mul_literals" (formula "45") (term "1,2,0,1,0,2,0"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,2,0,0,0,1"))
                                                               (rule "mul_literals" (formula "1") (term "1,2,0,1,0,2,0,0,0,1"))
                                                               (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,2,0"))
                                                               (rule "mul_literals" (formula "47") (term "1,2,0,1,0,2,0"))
                                                               (rule "polySimp_elimSub" (formula "44") (term "2,0,1,0,2,0"))
                                                               (rule "mul_literals" (formula "44") (term "1,2,0,1,0,2,0"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "1,0,0,1"))
                                                               (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,2,0"))
                                                               (rule "mul_literals" (formula "40") (term "1,2,0,1,0,2,0"))
                                                               (rule "polySimp_elimSub" (formula "2") (term "2,0,1,0,1,0,0,1,1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "1,2,0,1,0,1,0,0,1,1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "7") (term "0,2,1,1"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,2,1,1,0,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "45") (term "0,2,1,0,1"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "0,2,1,1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "0,2,1,0,0,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "40") (term "0,2,1,1,1"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "0,2,1,0"))
                                                               (rule "polySimp_addComm0" (formula "48") (term "0,2,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "2,0,1,0,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,1,0,0,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "53") (term "2,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "2,0,1,0,2,0,1,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,1,0,0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "2,0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,2,0,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "2,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,1,2,0"))
                                                               (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm1" (formula "45") (term "2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,2,0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm1" (formula "44") (term "2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "2,0,1,0,1,0,0,1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,1"))
                                                               (rule "mul_literals" (formula "27") (term "0,1,0,0,1,1"))
                                                               (rule "polySimp_addComm0" (formula "7") (term "0,2,0,1,0,1,1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,1,0,0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "53") (term "0,2,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,0,2,0,1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,1,0,0,0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "6") (term "0,2,0,1,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,2,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,1,2,0"))
                                                               (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,2,0,0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,2,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,0,1,0,0,1,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "21"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "9"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "5"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                               (rule "castedGetAny" (formula "2") (term "0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "25") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "8"))
                                                               (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,1"))
                                                               (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "1,0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0,1,0"))
                                                               (rule "lenOfSeqDef" (formula "1") (term "1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1,1,0"))
                                                               (rule "inEqSimp_ltRight" (formula "53"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "8"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "20"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                                                               (rule "lenOfSeqDef" (formula "3") (term "1,1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "3") (term "1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,1,1,1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0"))
                                                               (rule "getOfSeqDef" (formula "3") (term "0,1,0"))
                                                               (rule "castDel" (formula "3") (term "1,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "3") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "3") (term "0,2,1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,1,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,1,1,1,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                                               (rule "castedGetAny" (formula "2") (term "0,1"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "1,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,1,1,1,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,1,1,0"))
                                                               (rule "add_literals" (formula "2") (term "1,0,0,1,1,1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "0,0,1,1,1,0"))
                                                               (rule "add_zero_left" (formula "2") (term "0,1,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "1,1,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1,1,1,0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,1,1,0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,0,0,1,1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "0,0,1,1,1,0,0"))
                                                               (rule "add_zero_left" (formula "3") (term "0,1,1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,1,1,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,1,0,0,1,0"))
                                                               (rule "add_literals" (formula "3") (term "1,0,0,1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "3") (term "0,0,1,1,0,0,1,0"))
                                                               (rule "add_zero_left" (formula "3") (term "0,1,1,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,0,1,1,0"))
                                                               (rule "getOfSeqDef" (formula "2") (term "0,1"))
                                                               (rule "polySimp_elimSub" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,1,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,1,1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "0,1,1,1,0,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0,1,0,1"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,2,0,1,0,1"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0,2,0,1,0,1"))
                                                               (rule "polySimp_pullOutFactor2" (formula "2") (term "0,0,0,0,2,0,1,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,0,0,0,0,2,0,1,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "0,0,0,0,2,0,1,0,1"))
                                                               (rule "add_zero_left" (formula "2") (term "0,0,0,2,0,1,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,1,1,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,1,0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,0,0,1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "0,0,1,1,0,0,1"))
                                                               (rule "add_zero_left" (formula "2") (term "0,1,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,1,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0,0,0,1,1,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,0,0,1,1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,1,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,0,0,1,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "5"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1,1,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0,0,0,1,1,0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,1,1,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,0,1,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,1,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,1,0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0"))
                                                               (rule "times_zero_2" (formula "2") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,1,0,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "2") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,0,1"))
                                                               (rule "times_zero_2" (formula "2") (term "1,0,0,0,1,0,1"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,0,1,0,1"))
                                                               (rule "applyEq" (formula "2") (term "1,0,2,1,2,0,1,0,1,0,2,0,1,1,0,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "2") (term "0,2,1,1,0,1,0,1,0,2,0,1,1,0,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "2") (term "1,0,2,1,2,0,1,0,0,1,1,0,1,0,1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "7") (term "0,2,1,1,0,1,0,0,1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "42") (term "1,0,2,1,3,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "4") (term "0,2,1,1,0,1,0,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "25") (term "7,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "37") (term "0,2,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "41") (term "0,2,1,0,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "37") (term "1,0,2,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "2") (term "0,2,0,1,1,0,1,0,1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "2") (term "0,2,1,1,0,1,0,0,1,1,0,1,0,1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "2") (term "0,2,1,0,0,0,1,0,1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "2") (term "1,0,2,1,2,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "7") (term "1,0,2,1,2,0,1,0,0,1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "49") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "41") (term "0,2,1,0,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "2") (term "0,2,1,0,2,0,1,1,0,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "2") (term "0,2,1,1,0,1,0,0,1,1,0,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "2") (term "1,0,2,1,2,0,1,0,0,1,1,0,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "45") (term "0,2,1,1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "49") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "48") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "42") (term "0,2,1,2,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "28") (term "1,6,0,0,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "5") (term "0,2,1,1,0,1,0,0,1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "41") (term "1,0,2,1,1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "41") (term "0,2,1,1,0,1,0,1,0,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "2") (term "0,2,0,1,0,0,0,1,0,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "2") (term "0,2,1,0,1,0,1,0,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "2") (term "1,0,2,1,2,0,1,0,1,0,1,0,1,0,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "2") (term "0,2,1,1,0,1,0,1,0,1,0,1,0,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "2") (term "0,2,0,1,0,0,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "4") (term "1,0,2,1,2,0,1,0,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "42") (term "1,0,2,1,2,0,1,0,1,2,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "21") (term "0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "47") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "48") (term "1,0,2,1,0,1") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "41") (term "0,2,1,1,0,1,0,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "26") (term "6,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "1") (term "1,0,2,1,2,0,1,0,1,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "37") (term "1,0,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "27") (term "0,0,1,1,1") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "41") (term "1,0,2,1,2,0,1,0,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "40") (term "1,0,2,1,2,0,1,0,1,0,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "45") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "44") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "40") (term "1,0,2,1,1,1") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "40") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "40") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "44") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "45") (term "1,0,2,1,0,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "33") (term "3,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "47") (term "0,2,1,1,1") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "41") (term "0,2,1,1,0,1,0,1,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "2") (term "0,2,1,1,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "35") (term "0,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "5") (term "1,0,2,1,2,0,1,0,0,1,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "8") (term "0,2,1,1,0,1,0,0,1,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "8") (term "1,0,2,1,2,0,1,0,0,1,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "47") (term "0,2,1,1,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "1") (term "0,2,1,1,0,1,0,1,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "48") (term "1,0,2,1,0,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "45") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "3") (term "0,2,1,0,0,0,1,0,0,1,0,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "3") (term "1,0,2,0,1,0,0,1,0,1,0,1,0") (ifseqformula "38"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0,1,0,1,0"))
                                                               (rule "applyEq" (formula "2") (term "1,0,2,0,1,0,1,0,1,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "3") (term "1,0,2,1,2,0,1,0,0,1,1,0,1,0,0,1,0,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "27") (term "1,0,0,0,1,1") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "44") (term "0,2,1,1,1") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "3") (term "0,2,1,0,0,2,1,1,0,1,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "3") (term "0,2,1,1,0,1,0,0,1,1,0,1,0,0,1,0,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "3") (term "1,0,2,1,2,0,1,0,1,0,0,0,1,0,0,1,0,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "2") (term "0,2,0,1,0,0,1,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "3") (term "0,2,1,1,0,1,0,1,0,0,0,1,0,0,1,0,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "45") (term "1,0,2,1,0,1") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "3") (term "0,2,0,1,1,0,1,0,0,1,0,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "2") (term "1,0,2,0,1,0,0,0,0,1,0,1,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "2") (term "0,2,0,1,0,0,2,0,1,1,0,1") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "2") (term "1,0,2,0,1,0,0,1,0,1,0,1") (ifseqformula "37"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,1,0,1"))
                                                               (rule "applyEq" (formula "3") (term "1,0,2,0,1,0,0,0,0,1,0,0,1,0,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "3") (term "1,0,2,0,1,0,1,0,0,1,0,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "3") (term "0,2,1,0,0,1,0,1,0,1,0") (ifseqformula "37"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0,1,0,1,0"))
                                                               (rule "applyEq" (formula "2") (term "0,2,0,1,0,0,1,0,1,0,1") (ifseqformula "37"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,1,0,1"))
                                                               (rule "jmod_axiom" (formula "26") (term "0,1,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                               (rule "mul_literals" (formula "6") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "24") (term "0,1,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "0,1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,1,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,0,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "24") (term "1,0,1,1,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "26") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1,1"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "0,0,1,1"))
                                                               (rule "polySimp_sepNegMonomial" (formula "26") (term "1,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "0,1,1,1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0,1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0,1,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,1,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,1,0,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,1,0,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,1,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,1,0,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1,0,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1,1,0,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,1,0,1,0,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,0,1,1,0,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,1,1,0,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0,1,1,0,1,0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0,1,1,0,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,1,0,1,0,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0,1,1,0,1,0,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,1,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,1,1,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1,1"))
                                                               (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_0"))
                                                               (rule "simplifySelectOfAnon" (formula "4"))
                                                                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "52")) (ifInst ""  (formula "13")))
                                                               (rule "eqSymm" (formula "5"))
                                                               (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "pullOutSelect" (formula "39") (term "1,0,0") (inst "selectSK=arr_1"))
                                                               (rule "applyEq" (formula "2") (term "0,1,1,0,1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "2") (term "0,1,0,0,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "2") (term "0,0,0,1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "3") (term "0,0,1,1,1,0,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "3") (term "0,1,1,1,1,1,0,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "7") (term "0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "41") (term "1,2,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "2") (term "1,0,2,0,1,0,1") (ifseqformula "39"))
                                                               (rule "simplifySelectOfAnon" (formula "39"))
                                                                (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "51")) (ifInst ""  (formula "14")))
                                                               (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "1,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "3") (term "1,1,1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "41") (term "2,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,2,0,1,0,1"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,2,0,1,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,1,0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3") (term "0,1,1,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1,1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "7"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,0,1,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,1,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0,1,1,0,0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0,1,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0,1,1,0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0,1,1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,1,1,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1,0,1,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                               (rule "polySimp_mulAssoc" (formula "7") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "0,1"))
                                                               (rule "elementOfUnion" (formula "4") (term "0,0"))
                                                               (rule "disjointAllFields" (formula "4") (term "1,0,0") (ifseqformula "28"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "0,1,1,0,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,0,1,1,0,0"))
                                                               (rule "elementOfUnion" (formula "39") (term "0,0"))
                                                               (rule "disjointAllFields" (formula "39") (term "1,0,0") (ifseqformula "29"))
                                                                (builtin "One Step Simplification" (formula "39"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "39") (term "0,0"))
                                                               (rule "eqSymm" (formula "39") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "39") (term "0,0,0,0") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "39"))
                                                               (rule "applyEqReverse" (formula "40") (term "0,0,0") (ifseqformula "39"))
                                                               (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,1,0,0,1") (ifseqformula "39"))
                                                               (rule "applyEqReverse" (formula "2") (term "1,1,0,0,1,0") (ifseqformula "39"))
                                                               (rule "applyEqReverse" (formula "2") (term "0,0,0,2,0,1,0,1") (ifseqformula "39"))
                                                               (rule "applyEqReverse" (formula "2") (term "0,0,1,0,1,0") (ifseqformula "39"))
                                                               (rule "applyEqReverse" (formula "7") (term "0,1") (ifseqformula "39"))
                                                               (rule "applyEqReverse" (formula "3") (term "1,1,0,1,1,1,0,0") (ifseqformula "39"))
                                                               (rule "applyEqReverse" (formula "3") (term "0,0,1,1,1,1,0,0") (ifseqformula "39"))
                                                               (rule "applyEqReverse" (formula "41") (term "0,2,0") (ifseqformula "39"))
                                                               (rule "hideAuxiliaryEq" (formula "39"))
                                                               (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,1,0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,2,0,1,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,2,0,1,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,2,0,1,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,2,0,1,0,1"))
                                                               (rule "add_zero_right" (formula "2") (term "0,2,0,1,0,1"))
                                                               (rule "polySimp_addComm0" (formula "7") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "40") (term "2,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,1,1,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,1,1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "1,1,1,0,0,1"))
                                                               (rule "add_zero_right" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "7"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "0,1"))
                                                               (rule "replace_known_left" (formula "2") (term "0,0,0,1") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "7")))
                                                               (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_2"))
                                                               (rule "applyEq" (formula "9") (term "0") (ifseqformula "5"))
                                                               (rule "simplifySelectOfAnon" (formula "5"))
                                                                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "51")) (ifInst ""  (formula "15")))
                                                               (rule "inEqSimp_homoInEq0" (formula "6"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "9"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                               (rule "polySimp_mulAssoc" (formula "6") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "9") (term "0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
                                                               (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_3"))
                                                               (rule "simplifySelectOfAnon" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "14")))
                                                               (rule "inEqSimp_commuteGeq" (formula "2"))
                                                               (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "38"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "37") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                               (rule "elementOfUnion" (formula "6") (term "0,0"))
                                                               (rule "disjointAllFields" (formula "6") (term "1,0,0") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "6"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "6") (term "0,0"))
                                                               (rule "eqSymm" (formula "6") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "51"))
                                                                (builtin "One Step Simplification" (formula "6"))
                                                               (rule "applyEqReverse" (formula "10") (term "1,0,1") (ifseqformula "6"))
                                                               (rule "applyEqReverse" (formula "7") (term "0,1") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "6") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "9"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "6"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                                                               (rule "mul_literals" (formula "9") (term "0,0,1"))
                                                               (rule "replace_known_left" (formula "3") (term "0,0,1") (ifseqformula "9"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "0,1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "5") (term "1,0,0") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,1,0,0"))
                                                               (rule "add_zero_right" (formula "5") (term "0,0,0,0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                                                               (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                                                               (rule "leq_literals" (formula "5") (term "0,1,0,0"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                               (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "28"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0"))
                                                               (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "8"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "1"))
                                                               (rule "pullOutSelect" (formula "2") (term "0,0,1") (inst "selectSK=arr_4"))
                                                               (rule "simplifySelectOfAnon" (formula "2"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "52")) (ifInst ""  (formula "12")))
                                                               (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "11") (ifseqformula "52"))
                                                               (rule "narrowSelectArrayType" (formula "2") (term "1,0") (ifseqformula "42") (ifseqformula "52"))
                                                               (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                               (rule "disjointAllFields" (formula "2") (term "1,0,0") (ifseqformula "28"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1,1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1,1,0,0"))
                                                               (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "8"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                                               (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "3") (term "0,0,1") (ifseqformula "2"))
                                                               (rule "castDel" (formula "3") (term "0,1"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "2") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "inEqSimp_geqRight" (formula "47"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "4"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "6"))
                                                               (rule "mul_literals" (formula "33") (term "0,0"))
                                                               (rule "add_zero_left" (formula "33") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "33") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "38"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                                                               (rule "mul_literals" (formula "35") (term "0,0"))
                                                               (rule "add_zero_left" (formula "35") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "4"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                               (rule "mul_literals" (formula "8") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                                                               (rule "mul_literals" (formula "36") (term "0,0"))
                                                               (rule "add_zero_left" (formula "36") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "7"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                               (rule "mul_literals" (formula "35") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "35"))
                                                               (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                               (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "18") (term "0,0"))
                                                               (rule "qeq_literals" (formula "18") (term "0"))
                                                                (builtin "One Step Simplification" (formula "18"))
                                                               (rule "true_left" (formula "18"))
                                                               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "5"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0,0"))
                                                               (rule "qeq_literals" (formula "7") (term "0"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "7"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1"))
                                                               (rule "mul_literals" (formula "35") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "35"))
                                                               (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                                               (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                                               (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "34") (term "0,0"))
                                                               (rule "qeq_literals" (formula "34") (term "0"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "true_left" (formula "34"))
                                                               (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "5"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "1"))
                                                               (rule "mul_literals" (formula "36") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "34"))
                                                               (rule "inEqSimp_homoInEq0" (formula "36") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "36") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                                                               (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                               (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "36") (term "0,0"))
                                                               (rule "qeq_literals" (formula "36") (term "0"))
                                                                (builtin "One Step Simplification" (formula "36"))
                                                               (rule "true_left" (formula "36"))
                                                               (rule "commuteUnion" (formula "52") (term "1,0,2,0"))
                                                               (rule "commuteUnion" (formula "51") (term "1,0,2,0"))
                                                               (rule "commuteUnion" (formula "45") (term "1,0,0"))
                                                               (rule "commuteUnion" (formula "44") (term "1,0,2,0"))
                                                               (rule "commuteUnion" (formula "48") (term "1,0,2,0"))
                                                               (rule "commuteUnion" (formula "49") (term "1,0,2,0"))
                                                               (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "27") (term "0") (inst "b=b"))
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "translateJavaAddInt" (formula "27") (term "0,2,0,0,1,0"))
                                                               (rule "translateJavaSubInt" (formula "27") (term "0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "27") (term "0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "27") (term "0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "27") (term "0,2,1,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                               (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "0,0,1,1,0"))
                                                               (rule "mul_literals" (formula "27") (term "0,0,0,1,1,0"))
                                                               (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "30"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "translateJavaMulInt" (formula "30") (term "1,1,0,0,0,0,0,1,0,0"))
                                                               (rule "translateJavaMulInt" (formula "30") (term "1,1,0,0,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "30") (term "1,1,0,0,0,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "30") (term "1,1,0,0,0,0,1,0,0"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "33"))
                                                               (rule "andLeft" (formula "31"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "35"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "notLeft" (formula "31"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "36"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "notLeft" (formula "32"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "notLeft" (formula "32"))
                                                               (rule "andLeft" (formula "38"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "notLeft" (formula "31"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "notLeft" (formula "31"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "40"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "notLeft" (formula "31"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "41"))
                                                               (rule "notLeft" (formula "31"))
                                                               (rule "notLeft" (formula "30"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "disjointDefinition" (formula "66"))
                                                                (builtin "One Step Simplification" (formula "66"))
                                                               (rule "notLeft" (formula "66"))
                                                               (rule "disjointDefinition" (formula "65"))
                                                                (builtin "One Step Simplification" (formula "65"))
                                                               (rule "notLeft" (formula "65"))
                                                               (rule "disjointDefinition" (formula "64"))
                                                                (builtin "One Step Simplification" (formula "64"))
                                                               (rule "notLeft" (formula "64"))
                                                               (rule "eqSymm" (formula "86"))
                                                               (rule "disjointDefinition" (formula "63"))
                                                                (builtin "One Step Simplification" (formula "63"))
                                                               (rule "notLeft" (formula "63"))
                                                               (rule "eqSymm" (formula "85"))
                                                               (rule "disjointDefinition" (formula "62"))
                                                                (builtin "One Step Simplification" (formula "62"))
                                                               (rule "notLeft" (formula "62"))
                                                               (rule "eqSymm" (formula "84"))
                                                               (rule "disjointDefinition" (formula "61"))
                                                                (builtin "One Step Simplification" (formula "61"))
                                                               (rule "notLeft" (formula "61"))
                                                               (rule "eqSymm" (formula "83"))
                                                               (rule "disjointDefinition" (formula "60"))
                                                                (builtin "One Step Simplification" (formula "60"))
                                                               (rule "notLeft" (formula "60"))
                                                               (rule "eqSymm" (formula "82"))
                                                               (rule "disjointDefinition" (formula "59"))
                                                                (builtin "One Step Simplification" (formula "59"))
                                                               (rule "notLeft" (formula "59"))
                                                               (rule "eqSymm" (formula "81"))
                                                               (rule "disjointDefinition" (formula "58"))
                                                                (builtin "One Step Simplification" (formula "58"))
                                                               (rule "notLeft" (formula "58"))
                                                               (rule "eqSymm" (formula "80"))
                                                               (rule "disjointDefinition" (formula "57"))
                                                                (builtin "One Step Simplification" (formula "57"))
                                                               (rule "notLeft" (formula "57"))
                                                               (rule "eqSymm" (formula "79"))
                                                               (rule "disjointDefinition" (formula "56"))
                                                                (builtin "One Step Simplification" (formula "56"))
                                                               (rule "notLeft" (formula "56"))
                                                               (rule "eqSymm" (formula "78"))
                                                               (rule "disjointDefinition" (formula "55"))
                                                                (builtin "One Step Simplification" (formula "55"))
                                                               (rule "notLeft" (formula "55"))
                                                               (rule "eqSymm" (formula "77"))
                                                               (rule "disjointDefinition" (formula "54"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "notLeft" (formula "54"))
                                                               (rule "eqSymm" (formula "76"))
                                                               (rule "disjointDefinition" (formula "53"))
                                                                (builtin "One Step Simplification" (formula "53"))
                                                               (rule "notLeft" (formula "53"))
                                                               (rule "eqSymm" (formula "75"))
                                                               (rule "disjointDefinition" (formula "52"))
                                                                (builtin "One Step Simplification" (formula "52"))
                                                               (rule "notLeft" (formula "52"))
                                                               (rule "eqSymm" (formula "74"))
                                                               (rule "disjointDefinition" (formula "51"))
                                                                (builtin "One Step Simplification" (formula "51"))
                                                               (rule "notLeft" (formula "51"))
                                                               (rule "disjointDefinition" (formula "50"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "notLeft" (formula "50"))
                                                               (rule "eqSymm" (formula "72"))
                                                               (rule "disjointDefinition" (formula "49"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "notLeft" (formula "49"))
                                                               (rule "eqSymm" (formula "71"))
                                                               (rule "disjointDefinition" (formula "48"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "notLeft" (formula "48"))
                                                               (rule "disjointDefinition" (formula "47"))
                                                                (builtin "One Step Simplification" (formula "47"))
                                                               (rule "notLeft" (formula "47"))
                                                               (rule "disjointDefinition" (formula "46"))
                                                                (builtin "One Step Simplification" (formula "46"))
                                                               (rule "notLeft" (formula "46"))
                                                               (rule "disjointDefinition" (formula "45"))
                                                                (builtin "One Step Simplification" (formula "45"))
                                                               (rule "notLeft" (formula "45"))
                                                               (rule "disjointDefinition" (formula "44"))
                                                                (builtin "One Step Simplification" (formula "44"))
                                                               (rule "notLeft" (formula "44"))
                                                               (rule "disjointDefinition" (formula "43"))
                                                                (builtin "One Step Simplification" (formula "43"))
                                                               (rule "notLeft" (formula "43"))
                                                               (rule "disjointDefinition" (formula "42"))
                                                                (builtin "One Step Simplification" (formula "42"))
                                                               (rule "notLeft" (formula "42"))
                                                               (rule "disjointDefinition" (formula "41"))
                                                                (builtin "One Step Simplification" (formula "41"))
                                                               (rule "notLeft" (formula "41"))
                                                               (rule "disjointDefinition" (formula "39"))
                                                                (builtin "One Step Simplification" (formula "39"))
                                                               (rule "notLeft" (formula "39"))
                                                               (rule "disjointDefinition" (formula "39"))
                                                                (builtin "One Step Simplification" (formula "39"))
                                                               (rule "notLeft" (formula "39"))
                                                               (rule "applyEq" (formula "60") (term "0,1,0,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "57") (term "0,1,0,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "52") (term "0,1,0,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "56") (term "0,1,0,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "59") (term "0,1,0,2,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "53") (term "0,1,0,0") (ifseqformula "38"))
                                                               (rule "distributeIntersection" (formula "29") (term "0"))
                                                               (rule "distributeIntersection" (formula "28") (term "0"))
                                                               (rule "distributeIntersection" (formula "29") (term "1,0"))
                                                               (rule "distributeIntersection" (formula "29") (term "0,0"))
                                                               (rule "distributeIntersection" (formula "28") (term "1,0"))
                                                               (rule "distributeIntersection" (formula "28") (term "0,0"))
                                                               (rule "distributeIntersection" (formula "29") (term "1,1,0"))
                                                               (rule "distributeIntersection" (formula "29") (term "0,1,0"))
                                                               (rule "distributeIntersection" (formula "29") (term "0,0,0"))
                                                               (rule "distributeIntersection" (formula "29") (term "1,0,0"))
                                                               (rule "distributeIntersection" (formula "28") (term "1,1,0"))
                                                               (rule "distributeIntersection" (formula "28") (term "0,1,0"))
                                                               (rule "distributeIntersection" (formula "28") (term "0,0,0"))
                                                               (rule "distributeIntersection" (formula "28") (term "1,0,0"))
                                                               (rule "unionEqualsEmpty" (formula "29"))
                                                               (rule "andLeft" (formula "29"))
                                                               (rule "unionEqualsEmpty" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "unionEqualsEmpty" (formula "31"))
                                                               (rule "andLeft" (formula "31"))
                                                               (rule "unionEqualsEmpty" (formula "30"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "unionEqualsEmpty" (formula "29"))
                                                               (rule "andLeft" (formula "29"))
                                                               (rule "unionEqualsEmpty" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "unionEqualsEmpty" (formula "35"))
                                                                (builtin "One Step Simplification" (formula "35"))
                                                               (rule "andLeft" (formula "35"))
                                                               (rule "notLeft" (formula "36"))
                                                               (rule "notLeft" (formula "35"))
                                                               (rule "eqSymm" (formula "67"))
                                                               (rule "eqSymm" (formula "66"))
                                                               (rule "unionEqualsEmpty" (formula "34"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "andLeft" (formula "34"))
                                                               (rule "notLeft" (formula "35"))
                                                               (rule "notLeft" (formula "34"))
                                                               (rule "eqSymm" (formula "66"))
                                                               (rule "eqSymm" (formula "65"))
                                                               (rule "unionEqualsEmpty" (formula "33"))
                                                                (builtin "One Step Simplification" (formula "33"))
                                                               (rule "andLeft" (formula "33"))
                                                               (rule "notLeft" (formula "33"))
                                                               (rule "notLeft" (formula "33"))
                                                               (rule "eqSymm" (formula "65"))
                                                               (rule "eqSymm" (formula "64"))
                                                               (rule "unionEqualsEmpty" (formula "32"))
                                                                (builtin "One Step Simplification" (formula "32"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "notLeft" (formula "32"))
                                                               (rule "notLeft" (formula "32"))
                                                               (rule "eqSymm" (formula "64"))
                                                               (rule "eqSymm" (formula "63"))
                                                               (rule "unionEqualsEmpty" (formula "30"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "notLeft" (formula "31"))
                                                               (rule "notLeft" (formula "30"))
                                                               (rule "eqSymm" (formula "63"))
                                                               (rule "eqSymm" (formula "62"))
                                                               (rule "unionEqualsEmpty" (formula "30"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "notLeft" (formula "31"))
                                                               (rule "notLeft" (formula "30"))
                                                               (rule "eqSymm" (formula "62"))
                                                               (rule "eqSymm" (formula "61"))
                                                               (rule "unionEqualsEmpty" (formula "28"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "notLeft" (formula "28"))
                                                               (rule "notLeft" (formula "28"))
                                                               (rule "eqSymm" (formula "61"))
                                                               (rule "eqSymm" (formula "60"))
                                                               (rule "unionEqualsEmpty" (formula "28"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "notLeft" (formula "29"))
                                                               (rule "notLeft" (formula "28"))
                                                               (rule "eqSymm" (formula "60"))
                                                               (rule "eqSymm" (formula "59"))
                                                               (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "21") (term "0"))
                                                                (builtin "One Step Simplification" (formula "21"))
                                                               (rule "translateJavaAddInt" (formula "21") (term "3,0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "21") (term "0,1,0,0"))
                                                               (rule "andLeft" (formula "21"))
                                                               (rule "andLeft" (formula "21"))
                                                               (rule "andLeft" (formula "21"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "3,0"))
                                                               (rule "polySimp_addComm0" (formula "22") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "21"))
                                                               (rule "inEqSimp_commuteLeq" (formula "22"))
                                                               (rule "nnf_imp2or" (formula "27") (term "0"))
                                                               (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "26") (term "0") (inst "b=b"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "translateJavaAddInt" (formula "26") (term "2,0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "26") (term "3,0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "26") (term "0,2,1,3,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "26") (term "0,2,1,3,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                                               (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                                               (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "29") (term "0,0,1") (inst "b=b"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "translateJavaMod" (formula "29") (term "0,1,0,0,0,1"))
                                                               (rule "translateJavaAddInt" (formula "29") (term "0,2,1,3,0,1,0,0,1"))
                                                               (rule "translateJavaAddInt" (formula "29") (term "2,0,1,0,0,1"))
                                                               (rule "translateJavaAddInt" (formula "29") (term "3,0,1,0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "29") (term "0,2,1,3,0,1,0,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,0,1"))
                                                               (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,0,1"))
                                                               (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0,0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,0,0,1"))
                                                               (rule "jmod_axiom" (formula "29") (term "0,1,0,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,0,1"))
                                                               (rule "polySimp_homoEq" (formula "29") (term "1,0,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,1,0,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "29") (term "0,1,0,0,0,1"))
                                                               (rule "polySimp_sepPosMonomial" (formula "29") (term "1,0,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,1"))
                                                               (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0,1"))
                                                               (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0,1"))
                                                               (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "28") (term "0") (inst "b=b"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "translateJavaAddInt" (formula "28") (term "0,2,5,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "28") (term "0,2,5,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                                               (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                                               (rule "Contract_axiom_for_bucketStartsOrdering_in_Functions" (formula "41") (term "0"))
                                                               (rule "replace_known_left" (formula "41") (term "1,0") (ifseqformula "12"))
                                                                (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "117")) (ifInst ""  (formula "42")))
                                                               (rule "true_left" (formula "41"))
                                                               (rule "Definition_axiom_for_bucketStartsOrdering_in_de_wiesler_Functions" (formula "41") (term "0") (inst "b=b"))
                                                                (builtin "One Step Simplification" (formula "41"))
                                                               (rule "translateJavaAddInt" (formula "41") (term "0,2,1,1,0,1,0,1,0,1"))
                                                               (rule "translateJavaAddInt" (formula "41") (term "0,2,1,1,0,1,1,1,0,1"))
                                                               (rule "translateJavaAddInt" (formula "41") (term "0,2,0,1,1,0,1,0,1"))
                                                               (rule "translateJavaAddInt" (formula "41") (term "0,2,0,0,0,1,1,1,0,1"))
                                                               (rule "translateJavaAddInt" (formula "41") (term "0,2,0,1,1,1,1,0,1"))
                                                               (rule "translateJavaAddInt" (formula "41") (term "0,2,1,1,0,0"))
                                                               (rule "translateJavaAddInt" (formula "41") (term "0,2,0,1,0"))
                                                               (rule "andLeft" (formula "41"))
                                                               (rule "andLeft" (formula "41"))
                                                               (rule "andLeft" (formula "41"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,1,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,1,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0,2,1,1,0,1,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0,2,1,1,0,1,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0,2,0,0,0,1,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "43") (term "0,2,0"))
                                                               (rule "polySimp_addComm0" (formula "42") (term "0,2,1"))
                                                               (rule "inEqSimp_gtToGeq" (formula "44") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,1,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "41"))
                                                               (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0,1,1,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0,1,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,1,1,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "42"))
                                                               (rule "inEqSimp_commuteLeq" (formula "41"))
                                                               (rule "applyEq" (formula "42") (term "1,1,1,1,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "41") (term "0") (ifseqformula "25"))
                                                               (rule "inEqSimp_commuteGeq" (formula "41"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "41") (term "1,0,1,1,0"))
                                                               (rule "mul_literals" (formula "41") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "41") (term "1,1,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,1,0"))
                                                               (rule "nnf_imp2or" (formula "3") (term "0"))
                                                               (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                                               (rule "commuteUnion" (formula "39") (term "1,1,1"))
                                                               (rule "commuteUnion" (formula "39") (term "0,0,1"))
                                                               (rule "commuteUnion" (formula "61") (term "0,0,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "61") (term "1,1,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "58") (term "1,1,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "58") (term "0,0,0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "53") (term "0,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "53") (term "1,1,0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "57") (term "0,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "57") (term "1,1,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "60") (term "1,1,0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "60") (term "0,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "54") (term "1,1,0,1,0,0"))
                                                               (rule "commuteUnion" (formula "54") (term "0,0,1,0,0"))
                                                               (rule "nnf_imp2or" (formula "30") (term "0"))
                                                               (rule "commuteUnion" (formula "39") (term "0,1"))
                                                               (rule "commuteUnion" (formula "61") (term "0,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "58") (term "0,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "53") (term "0,0,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "57") (term "0,0,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "60") (term "0,0,0,1,0,2,0"))
                                                               (rule "commuteUnion" (formula "54") (term "1,0,0,1,0,0"))
                                                               (rule "commuteUnion_2" (formula "53") (term "0,0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "57") (term "0,0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "60") (term "0,0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "53") (term "0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "57") (term "0,1,0,2,0"))
                                                               (rule "commuteUnion_2" (formula "60") (term "0,1,0,2,0"))
                                                               (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "27") (term "0,0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "27") (term "0,0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "27") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "27") (term "0,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "0,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "0,1,1,0,0"))
                                                               (rule "nnf_imp2or" (formula "26") (term "0"))
                                                               (rule "nnf_imp2or" (formula "27") (term "0,1,0"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "bucket_starts[1 + b_0] >= 1 + bucket_starts[b_0] TRUE"
                                                                  (rule "replace_known_left" (formula "4") (term "0,1,1,1,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "10"))
                                                                  (rule "andLeft" (formula "2"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0"))
                                                                  (rule "leq_literals" (formula "2"))
                                                                  (rule "closeFalse" (formula "2"))
                                                               )
                                                               (branch "bucket_starts[1 + b_0] >= 1 + bucket_starts[b_0] FALSE"
                                                                  (rule "replace_known_right" (formula "3") (term "0,1,1,1,0,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "add_zero_right" (formula "3") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_geqRight" (formula "62"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_antiSymm" (formula "49") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "59") (term "1,0,0") (ifseqformula "49"))
                                                                  (rule "applyEq" (formula "27") (term "1,1,0,0,0,0,1,0") (ifseqformula "49"))
                                                                  (rule "applyEq" (formula "61") (term "1,2,1,1,0,2,0") (ifseqformula "49"))
                                                                  (rule "applyEq" (formula "54") (term "1,2,1,1,0,2,0") (ifseqformula "49"))
                                                                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "49"))
                                                                  (rule "applyEq" (formula "55") (term "1,3,0") (ifseqformula "49"))
                                                                  (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "49"))
                                                                  (rule "seqDef_lower_equals_upper" (formula "54") (term "0"))
                                                                  (rule "seqPermEmpty1" (formula "54"))
                                                                  (rule "eqSymm" (formula "54"))
                                                                  (rule "eqSeqEmpty" (formula "54"))
                                                                  (rule "lenOfSeqDef" (formula "54") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "polySimp_elimSub" (formula "54") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "54") (term "1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "54") (term "0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "54") (term "0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "54") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "54") (term "1,0,0,0,1"))
                                                                  (rule "times_zero_1" (formula "54") (term "0,0,0,1"))
                                                                  (rule "add_zero_left" (formula "54") (term "0,0,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "54") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "54") (term "1,1,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "54") (term "0,0,0,0,0"))
                                                                  (rule "applyEq" (formula "59") (term "1,2,1,1,0,2,0") (ifseqformula "49"))
                                                                  (rule "applyEq" (formula "55") (term "1,2,1,1,0,0") (ifseqformula "49"))
                                                                  (rule "applyEq" (formula "62") (term "1,0,0") (ifseqformula "49"))
                                                                  (rule "applyEq" (formula "62") (term "1,0,1") (ifseqformula "49"))
                                                                  (rule "applyEq" (formula "41") (term "1,0,0,1,1,1,0") (ifseqformula "49"))
                                                                  (rule "applyEq" (formula "3") (term "1,1,1,0,0,1,0") (ifseqformula "49"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "3") (term "1,1,0,0,1,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,1,1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "3") (term "1,1,0,0,1,0"))
                                                                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "49"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                                  (rule "add_literals" (formula "1") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "0"))
                                                                  (rule "qeq_literals" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "applyEq" (formula "50") (term "0") (ifseqformula "48"))
                                                                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "48"))
                                                                  (rule "applyEq" (formula "55") (term "1,2,1,1,0,2,0") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "48") (term "0") (ifseqformula "47"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "48"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "48") (term "0"))
                                                                  (rule "add_literals" (formula "48") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "48") (term "0"))
                                                                  (rule "leq_literals" (formula "48"))
                                                                  (rule "true_left" (formula "48"))
                                                                  (rule "applyEq" (formula "58") (term "1,2,1,1,0,2,0") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "25") (term "1,1,1,0,0") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "50") (term "0,1,0,0,0") (ifseqformula "47"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "50") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "50") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "50") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "50") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "50"))
                                                                  (rule "true_left" (formula "50"))
                                                                  (rule "applyEq" (formula "54") (term "1,0,1") (ifseqformula "47"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "7"))
                                                                  (rule "andLeft" (formula "4"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "4") (term "0"))
                                                                  (rule "leq_literals" (formula "4"))
                                                                  (rule "closeFalse" (formula "4"))
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "allRight" (formula "48") (inst "sk=iv_0") (userinteraction))
                                                               (rule "impRight" (formula "48"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "allLeftHide" (formula "25") (inst "t=add(add(iv_0, begin),
    int::select(heap, bucket_starts, arr(bucket)))") (userinteraction))
                                                               (rule "impLeft" (formula "25") (userinteraction))
                                                               (branch "Case 1"
                                                                  (rule "allRight" (formula "49") (inst "sk=iv_1"))
                                                                  (rule "impRight" (formula "49"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "eqSymm" (formula "39"))
                                                                  (rule "polySimp_elimSub" (formula "57") (term "2,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "57") (term "1,2,0,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,1,0,0,1"))
                                                                  (rule "mul_literals" (formula "4") (term "1,2,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_elimSub" (formula "49") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "49") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "42") (term "1,2,0,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "41") (term "1,2,0,1,0,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,2,0,1"))
                                                                  (rule "mul_literals" (formula "4") (term "1,2,0,1,0,2,0,1"))
                                                                  (rule "polySimp_elimSub" (formula "8") (term "2,0,1,0,1,0"))
                                                                  (rule "mul_literals" (formula "8") (term "1,2,0,1,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "41") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "45") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "9") (term "2,0,1,0,1,1"))
                                                                  (rule "mul_literals" (formula "9") (term "1,2,0,1,0,1,1"))
                                                                  (rule "polySimp_elimSub" (formula "6") (term "2,0,1,0,1,0"))
                                                                  (rule "mul_literals" (formula "6") (term "1,2,0,1,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "48") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "46") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "46") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,1,2,0"))
                                                                  (rule "mul_literals" (formula "42") (term "1,2,0,1,0,1,2,0"))
                                                                  (rule "polySimp_homoEq" (formula "28") (term "0,1,1"))
                                                                  (rule "polySimp_elimSub" (formula "5") (term "2,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "1,2,0,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,2,0,0,0"))
                                                                  (rule "mul_literals" (formula "51") (term "1,2,0,1,0,2,0,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,1,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "51") (term "1,2,0,1,0,1,0,0,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "2") (term "2,0,1,0,1,0,0,1"))
                                                                  (rule "mul_literals" (formula "2") (term "1,2,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_elimSub" (formula "2") (term "2,0,1,0,2,0,1"))
                                                                  (rule "mul_literals" (formula "2") (term "1,2,0,1,0,2,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "50") (term "0,2,1,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "6") (term "0,2,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "50") (term "0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "50") (term "0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "9") (term "0,2,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "49") (term "0,2,1,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "0,2,1,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "46") (term "0,2,1,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "52") (term "0,2,1,1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "57") (term "2,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,2,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "2,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "45") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "2,0,1,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "2,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "46") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,1,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "2,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,2,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "2,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "2,0,1,0,2,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "28") (term "0,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "57") (term "0,2,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "49") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,2,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "8") (term "0,2,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "9") (term "0,2,0,1,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "6") (term "0,2,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "46") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,1,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "5") (term "0,2,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,2,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,1,0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,0,2,0,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "23"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                  (rule "getOfSeqDef" (formula "52") (term "0,0"))
                                                                  (rule "castDel" (formula "52") (term "2,0,0"))
                                                                  (rule "castDel" (formula "52") (term "1,0,0"))
                                                                  (rule "replace_known_left" (formula "52") (term "0,0,0,0") (ifseqformula "3"))
                                                                   (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "polySimp_elimSub" (formula "52") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "52") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "10"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "3"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "50") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "0,1,0,0,1"))
                                                                  (rule "lenOfSeqDef" (formula "4") (term "1"))
                                                                  (rule "polySimp_elimSub" (formula "4") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,1,1"))
                                                                  (rule "inEqSimp_ltRight" (formula "57"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                  (rule "castedGetAny" (formula "52") (term "0"))
                                                                  (rule "lenOfSeqDef" (formula "3") (term "1"))
                                                                  (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,1,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "53") (term "0,2,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "53") (term "0,0,2,1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "22"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "53") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "53") (term "0,0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "53") (term "1,0,0,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "53") (term "0,0,1,0,0,0"))
                                                                  (rule "add_zero_left" (formula "53") (term "0,1,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "10"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "51") (term "0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "1,1"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,1,1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "5") (term "0,0,1,1"))
                                                                  (rule "add_literals" (formula "5") (term "1,0,0,1,1"))
                                                                  (rule "times_zero_1" (formula "5") (term "0,0,1,1"))
                                                                  (rule "add_zero_left" (formula "5") (term "0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "1,1"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,1,1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,1"))
                                                                  (rule "add_literals" (formula "3") (term "1,0,0,1,1"))
                                                                  (rule "times_zero_1" (formula "3") (term "0,0,1,1"))
                                                                  (rule "add_zero_left" (formula "3") (term "0,1,1"))
                                                                  (rule "getOfSeqDef" (formula "52") (term "0"))
                                                                  (rule "polySimp_elimSub" (formula "52") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "52") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "0,1,1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "51") (term "0,1"))
                                                                  (rule "polySimp_addComm1" (formula "51") (term "0,0,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "51") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "51") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "0,2,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "52") (term "0,0,2,0,1,0"))
                                                                  (rule "inEqSimp_ltRight" (formula "53"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "53") (term "1,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "53") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "53") (term "0,0,1,1,0,0"))
                                                                  (rule "add_literals" (formula "53") (term "1,0,0,1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "53") (term "0,0,1,1,0,0"))
                                                                  (rule "add_zero_left" (formula "53") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "52") (term "0,0,0,0,1"))
                                                                  (rule "add_literals" (formula "52") (term "1,1,0,0,0,0,1"))
                                                                  (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,1"))
                                                                  (rule "add_zero_right" (formula "52") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "52") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "52") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "52") (term "1,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "52") (term "0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "52") (term "0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0,0,0,1"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,1"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,1"))
                                                                  (rule "add_zero_right" (formula "6") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0,0,0,1"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,1"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,1"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                                                  (rule "inEqSimp_ltRight" (formula "53"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1,0"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,1,0") (ifseqformula "4"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEq" (formula "9") (term "0,2,1,1,0,1,0,0,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "1") (term "1,0,2,1,2,0,1,0,1,0,2,0,1,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "5") (term "1,0,2,1,2,0,1,0,0,1,1,0,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "5") (term "1,0,2,1,2,0,1,0,1,0,0,0,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "7") (term "0,2,1,1,0,1,0,1,0,0,0,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "31") (term "1,6,0,0,1") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "44") (term "0,2,1,1,0,1,0,1,0,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "53") (term "0,2,1,0,0") (ifseqformula "42"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "53") (term "0,0"))
                                                                  (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "53") (term "0,0"))
                                                                  (rule "replace_known_left" (formula "53") (term "0") (ifseqformula "6"))
                                                                   (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "inEqSimp_leqRight" (formula "53"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "2") (term "1,0,2,1,2,0,1,0,1,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "2") (term "0,2,1,0,2,0,1,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "8") (term "0,2,0,1,1,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "2") (term "0,2,1,1,0,1,0,1,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "2") (term "0,2,1,1,0,1,0,0,1,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "2") (term "0,2,1,1,0,1,0,1,0,2,0,1,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "2") (term "1,0,2,1,2,0,1,0,0,1,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "53") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "13") (term "0,2,1,1,0,1,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "13") (term "1,0,2,1,2,0,1,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "9") (term "1,0,2,1,2,0,1,0,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "2") (term "0,2,1,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "8") (term "1,0,2,1,2,0,1,0,1,0,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "42") (term "1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "4") (term "0,2,1,1,0,1,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "12") (term "0,2,1,1,0,1,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "9") (term "0,2,1,1,0,1,0,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "41") (term "1,0,2,0") (ifseqformula "43"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "41"))
                                                                  (rule "applyEq" (formula "10") (term "1,0,2,1,2,0,1,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "12") (term "1,0,2,1,2,0,1,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "4") (term "1,0,2,1,2,0,1,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "52") (term "0,2,1,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "52") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "3") (term "1,0,2,0,1,0,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "6") (term "0,2,1,1,0,1,0,1,0,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "6") (term "0,2,1,1,0,1,0,0,1,1,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "6") (term "0,2,1,0,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "6") (term "0,2,0,1,1,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "8") (term "1,0,2,1,2,0,1,0,0,1,1,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "8") (term "0,2,1,1,0,1,0,0,1,1,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "46") (term "0,2,1,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "45") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "8") (term "0,2,1,0,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "3") (term "0,2,1,0,2,1,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "49") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "50") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "45") (term "1,0,2,1,2,0,1,0,1,0,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "45") (term "1,0,2,1,1,1") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "53") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "40") (term "0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "46") (term "1,0,2,1,2,0,1,0,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "53") (term "1,0,2,1,0,1") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "46") (term "1,0,2,1,2,0,1,0,1,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "38") (term "3,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "52") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "46") (term "0,2,1,1,0,1,0,1,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "52") (term "0,2,1,1,1") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "46") (term "1,0,2,1,3,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "49") (term "0,2,1,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "45") (term "1,0,2,1,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "30") (term "7,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "49") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "50") (term "1,0,2,1,0,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "46") (term "0,2,1,1,0,1,0,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "50") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "45") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "45") (term "0,2,1,0,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "31") (term "6,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "45") (term "0,2,1,0,1") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "32") (term "0,0,1,1,1") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "53") (term "1,0,2,1,0,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "26") (term "0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "49") (term "1,0,2,1,0,1") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "6") (term "1,0,2,0,1,0,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "48") (term "0,2,1,1,1") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "8") (term "1,0,2,0,1,0,1,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "6") (term "1,0,2,0,1,0,0,0,0,1,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "30") (term "1,0,0,0,1,1") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "8") (term "1,0,2,0,1,0,0,0,0,1,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "2") (term "1,0,2,0,1,0,0,0,1,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "1") (term "0,2,1,0") (ifseqformula "41"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "applyEq" (formula "39") (term "0,2,0") (ifseqformula "41"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "39"))
                                                                  (rule "applyEq" (formula "3") (term "0,2,1,0,0,0,1,0") (ifseqformula "41"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1,0"))
                                                                  (rule "jmod_axiom" (formula "30") (term "0,1,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "30") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "0,0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "0,0,1,1"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "30") (term "1,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "0,1,1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                                                                  (rule "leq_literals" (formula "3") (term "0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=arr_0"))
                                                                  (rule "simplifySelectOfAnon" (formula "9"))
                                                                   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "56")) (ifInst ""  (formula "18")))
                                                                  (rule "eqSymm" (formula "10"))
                                                                  (rule "applyEqReverse" (formula "9") (term "1") (ifseqformula "10"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "hideAuxiliaryEq" (formula "10"))
                                                                  (rule "pullOutSelect" (formula "44") (term "1,2,0") (inst "selectSK=arr_1"))
                                                                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "44"))
                                                                  (rule "applyEq" (formula "2") (term "1,0,2,0,1,0") (ifseqformula "44"))
                                                                  (rule "applyEq" (formula "43") (term "1,0,0") (ifseqformula "44"))
                                                                  (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "44"))
                                                                  (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "44"))
                                                                  (rule "applyEq" (formula "6") (term "0,1,1,0") (ifseqformula "44"))
                                                                  (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "44"))
                                                                  (rule "applyEq" (formula "8") (term "0,1,1,0") (ifseqformula "44"))
                                                                  (rule "simplifySelectOfAnon" (formula "44"))
                                                                   (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "55")) (ifInst ""  (formula "19")))
                                                                  (rule "polySimp_addComm0" (formula "45") (term "2,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,2,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "8") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,0,2,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "12"))
                                                                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                                                  (rule "elementOfUnion" (formula "9") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "9") (term "1,0,0") (ifseqformula "32"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "9") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0,1,1,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0"))
                                                                  (rule "elementOfUnion" (formula "44") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "44") (term "1,0,0") (ifseqformula "33"))
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "44") (term "0,0"))
                                                                  (rule "eqSymm" (formula "44") (term "0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "44") (term "0,0,0,0") (ifseqformula "53"))
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "applyEqReverse" (formula "6") (term "1,1,0,0") (ifseqformula "44"))
                                                                  (rule "applyEqReverse" (formula "2") (term "0,0,0,2,0,1,0") (ifseqformula "44"))
                                                                  (rule "applyEqReverse" (formula "8") (term "0,0,1,0") (ifseqformula "44"))
                                                                  (rule "applyEqReverse" (formula "6") (term "0,0,1,0") (ifseqformula "44"))
                                                                  (rule "applyEqReverse" (formula "45") (term "0,2,0") (ifseqformula "44"))
                                                                  (rule "applyEqReverse" (formula "12") (term "0,1") (ifseqformula "44"))
                                                                  (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0") (ifseqformula "44"))
                                                                  (rule "applyEqReverse" (formula "43") (term "0,0,0") (ifseqformula "44"))
                                                                  (rule "applyEqReverse" (formula "8") (term "1,1,0,0") (ifseqformula "44"))
                                                                  (rule "hideAuxiliaryEq" (formula "44"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,0,2,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "2,0"))
                                                                  (rule "polySimp_addComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,2,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "12"))
                                                                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "0,1"))
                                                                  (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=arr_2"))
                                                                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "13"))
                                                                  (rule "simplifySelectOfAnon" (formula "13"))
                                                                   (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "55")) (ifInst ""  (formula "20")))
                                                                  (rule "inEqSimp_homoInEq1" (formula "14"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "10"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "10") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "0,1"))
                                                                  (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_3"))
                                                                  (rule "simplifySelectOfAnon" (formula "4"))
                                                                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "57")) (ifInst ""  (formula "19")))
                                                                  (rule "inEqSimp_commuteGeq" (formula "5"))
                                                                  (rule "elementOfUnion" (formula "14") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "14") (term "1,0,0") (ifseqformula "35"))
                                                                   (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "14") (term "0,0"))
                                                                  (rule "eqSymm" (formula "14") (term "0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "14") (term "0,0,0,0") (ifseqformula "54"))
                                                                   (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "applyEqReverse" (formula "15") (term "1,0,1") (ifseqformula "14"))
                                                                  (rule "applyEqReverse" (formula "11") (term "0,1") (ifseqformula "14"))
                                                                  (rule "hideAuxiliaryEq" (formula "14"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "11") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "14"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "11"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "0,1"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0,1"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "10") (term "1,0,0") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,0"))
                                                                  (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                                                                  (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,0"))
                                                                  (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                                                                  (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                                                                  (rule "leq_literals" (formula "10") (term "0,1,0,0"))
                                                                   (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "true_left" (formula "10"))
                                                                  (rule "elementOfUnion" (formula "4") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "4") (term "1,0,0") (ifseqformula "32"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,1,1,0,0"))
                                                                  (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "13"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                                                                  (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "12"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "4"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "39"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "38") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "39") (term "0"))
                                                                  (rule "add_literals" (formula "39") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "39") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "39") (term "0"))
                                                                  (rule "pullOutSelect" (formula "2") (term "0,1,0") (inst "selectSK=arr_4"))
                                                                  (rule "simplifySelectOfAnon" (formula "2"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "56")) (ifInst ""  (formula "17")))
                                                                  (rule "narrowSelectArrayType" (formula "2") (term "1,0") (ifseqformula "46") (ifseqformula "56"))
                                                                  (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "16") (ifseqformula "56"))
                                                                  (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "2") (term "1,0,0") (ifseqformula "32"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0,0,0,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0,0,0,1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "2") (term "0,0,0,0"))
                                                                  (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "6"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0,0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "12"))
                                                                  (rule "mul_literals" (formula "38") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "38") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "40"))
                                                                  (rule "mul_literals" (formula "39") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "39") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                                  (rule "polySimp_mulLiterals" (formula "39") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "39") (term "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "10"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "0,0,1"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0,0,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "45"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "44"))
                                                                  (rule "mul_literals" (formula "42") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "42") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                                  (rule "polySimp_mulLiterals" (formula "42") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "42") (term "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "11"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "13"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                                  (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "16") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "16") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "12"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "15") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                  (rule "mul_literals" (formula "15") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "15"))
                                                                  (rule "leq_literals" (formula "8") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "44"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                                  (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                                  (rule "mul_literals" (formula "43") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "43"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                                  (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "26") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "26") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "true_left" (formula "26"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "46"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "0,0,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1"))
                                                                  (rule "mul_literals" (formula "16") (term "0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "16") (term "1,0,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                                  (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "42") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                                                  (rule "mul_literals" (formula "42") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "42"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "44") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "44") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "44") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                                  (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "44") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "44") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "true_left" (formula "44"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "10"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                                                                  (rule "mul_literals" (formula "16") (term "0,0,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "15") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "15") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "true_left" (formula "15"))
                                                                  (rule "commuteUnion" (formula "60") (term "1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "59") (term "1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "56") (term "1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "53") (term "1,0,0"))
                                                                  (rule "commuteUnion" (formula "57") (term "1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "52") (term "1,0,2,0"))
                                                                  (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "35") (term "0") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "translateJavaAddInt" (formula "35") (term "0,2,0,0,1,0"))
                                                                  (rule "translateJavaSubInt" (formula "35") (term "0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "35") (term "0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "35") (term "0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "35") (term "0,2,1,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "35") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "0,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "35") (term "0,0,0,1,1,0"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "38"))
                                                                   (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "translateJavaMulInt" (formula "38") (term "1,1,0,0,0,0,1,0,0"))
                                                                  (rule "translateJavaMulInt" (formula "38") (term "1,1,0,0,0,0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "38") (term "1,1,0,0,0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "38") (term "1,1,0,0,0,0,0,1,0,0"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "41"))
                                                                  (rule "andLeft" (formula "39"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "43"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "notLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "45"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "notLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "46"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "48"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "49"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "disjointDefinition" (formula "74"))
                                                                   (builtin "One Step Simplification" (formula "74"))
                                                                  (rule "notLeft" (formula "74"))
                                                                  (rule "disjointDefinition" (formula "73"))
                                                                   (builtin "One Step Simplification" (formula "73"))
                                                                  (rule "notLeft" (formula "73"))
                                                                  (rule "disjointDefinition" (formula "72"))
                                                                   (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "notLeft" (formula "72"))
                                                                  (rule "eqSymm" (formula "94"))
                                                                  (rule "disjointDefinition" (formula "71"))
                                                                   (builtin "One Step Simplification" (formula "71"))
                                                                  (rule "notLeft" (formula "71"))
                                                                  (rule "eqSymm" (formula "93"))
                                                                  (rule "disjointDefinition" (formula "70"))
                                                                   (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "notLeft" (formula "70"))
                                                                  (rule "eqSymm" (formula "92"))
                                                                  (rule "disjointDefinition" (formula "69"))
                                                                   (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "notLeft" (formula "69"))
                                                                  (rule "eqSymm" (formula "91"))
                                                                  (rule "disjointDefinition" (formula "68"))
                                                                   (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "notLeft" (formula "68"))
                                                                  (rule "eqSymm" (formula "90"))
                                                                  (rule "disjointDefinition" (formula "67"))
                                                                   (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "notLeft" (formula "67"))
                                                                  (rule "eqSymm" (formula "89"))
                                                                  (rule "disjointDefinition" (formula "66"))
                                                                   (builtin "One Step Simplification" (formula "66"))
                                                                  (rule "notLeft" (formula "66"))
                                                                  (rule "eqSymm" (formula "88"))
                                                                  (rule "disjointDefinition" (formula "65"))
                                                                   (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "notLeft" (formula "65"))
                                                                  (rule "eqSymm" (formula "87"))
                                                                  (rule "disjointDefinition" (formula "64"))
                                                                   (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "notLeft" (formula "64"))
                                                                  (rule "eqSymm" (formula "86"))
                                                                  (rule "disjointDefinition" (formula "63"))
                                                                   (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "notLeft" (formula "63"))
                                                                  (rule "eqSymm" (formula "85"))
                                                                  (rule "disjointDefinition" (formula "62"))
                                                                   (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "notLeft" (formula "62"))
                                                                  (rule "eqSymm" (formula "84"))
                                                                  (rule "disjointDefinition" (formula "61"))
                                                                   (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "notLeft" (formula "61"))
                                                                  (rule "eqSymm" (formula "83"))
                                                                  (rule "disjointDefinition" (formula "60"))
                                                                   (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "notLeft" (formula "60"))
                                                                  (rule "eqSymm" (formula "82"))
                                                                  (rule "disjointDefinition" (formula "59"))
                                                                   (builtin "One Step Simplification" (formula "59"))
                                                                  (rule "notLeft" (formula "59"))
                                                                  (rule "disjointDefinition" (formula "58"))
                                                                   (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "notLeft" (formula "58"))
                                                                  (rule "eqSymm" (formula "80"))
                                                                  (rule "disjointDefinition" (formula "57"))
                                                                   (builtin "One Step Simplification" (formula "57"))
                                                                  (rule "notLeft" (formula "57"))
                                                                  (rule "eqSymm" (formula "79"))
                                                                  (rule "disjointDefinition" (formula "56"))
                                                                   (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "notLeft" (formula "56"))
                                                                  (rule "disjointDefinition" (formula "55"))
                                                                   (builtin "One Step Simplification" (formula "55"))
                                                                  (rule "notLeft" (formula "55"))
                                                                  (rule "disjointDefinition" (formula "54"))
                                                                   (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "notLeft" (formula "54"))
                                                                  (rule "disjointDefinition" (formula "53"))
                                                                   (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "notLeft" (formula "53"))
                                                                  (rule "disjointDefinition" (formula "52"))
                                                                   (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "notLeft" (formula "52"))
                                                                  (rule "disjointDefinition" (formula "51"))
                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "notLeft" (formula "51"))
                                                                  (rule "disjointDefinition" (formula "50"))
                                                                   (builtin "One Step Simplification" (formula "50"))
                                                                  (rule "notLeft" (formula "50"))
                                                                  (rule "disjointDefinition" (formula "49"))
                                                                   (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "notLeft" (formula "49"))
                                                                  (rule "disjointDefinition" (formula "47"))
                                                                   (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "notLeft" (formula "47"))
                                                                  (rule "disjointDefinition" (formula "47"))
                                                                   (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "notLeft" (formula "47"))
                                                                  (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "61") (term "0,1,0,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "67") (term "0,1,0,2,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "65") (term "0,1,0,2,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "64") (term "0,1,0,2,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "68") (term "0,1,0,2,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "60") (term "0,1,0,2,0") (ifseqformula "46"))
                                                                  (rule "distributeIntersection" (formula "37") (term "0"))
                                                                  (rule "distributeIntersection" (formula "36") (term "0"))
                                                                  (rule "unionEqualsEmpty" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "distributeIntersection" (formula "36") (term "0,0"))
                                                                  (rule "distributeIntersection" (formula "36") (term "1,0"))
                                                                  (rule "distributeIntersection" (formula "37") (term "0"))
                                                                  (rule "distributeIntersection" (formula "38") (term "0"))
                                                                  (rule "distributeIntersection" (formula "36") (term "1,0,0"))
                                                                  (rule "distributeIntersection" (formula "36") (term "0,0,0"))
                                                                  (rule "distributeIntersection" (formula "36") (term "1,1,0"))
                                                                  (rule "distributeIntersection" (formula "36") (term "0,1,0"))
                                                                  (rule "distributeIntersection" (formula "37") (term "0,0"))
                                                                  (rule "distributeIntersection" (formula "37") (term "1,0"))
                                                                  (rule "unionEqualsEmpty" (formula "38"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "unionEqualsEmpty" (formula "36"))
                                                                  (rule "andLeft" (formula "36"))
                                                                  (rule "unionEqualsEmpty" (formula "38"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "distributeIntersection" (formula "40") (term "0"))
                                                                  (rule "distributeIntersection" (formula "41") (term "0"))
                                                                  (rule "unionEqualsEmpty" (formula "36"))
                                                                  (rule "andLeft" (formula "36"))
                                                                  (rule "unionEqualsEmpty" (formula "38"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "unionEqualsEmpty" (formula "41"))
                                                                   (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "andLeft" (formula "41"))
                                                                  (rule "notLeft" (formula "42"))
                                                                  (rule "notLeft" (formula "41"))
                                                                  (rule "eqSymm" (formula "75"))
                                                                  (rule "eqSymm" (formula "74"))
                                                                  (rule "unionEqualsEmpty" (formula "40"))
                                                                   (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "notLeft" (formula "41"))
                                                                  (rule "notLeft" (formula "40"))
                                                                  (rule "eqSymm" (formula "74"))
                                                                  (rule "eqSymm" (formula "73"))
                                                                  (rule "unionEqualsEmpty" (formula "40"))
                                                                   (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "notLeft" (formula "41"))
                                                                  (rule "notLeft" (formula "40"))
                                                                  (rule "eqSymm" (formula "73"))
                                                                  (rule "eqSymm" (formula "72"))
                                                                  (rule "unionEqualsEmpty" (formula "40"))
                                                                   (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "notLeft" (formula "40"))
                                                                  (rule "notLeft" (formula "40"))
                                                                  (rule "eqSymm" (formula "72"))
                                                                  (rule "eqSymm" (formula "71"))
                                                                  (rule "unionEqualsEmpty" (formula "36"))
                                                                   (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "andLeft" (formula "36"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "36"))
                                                                  (rule "eqSymm" (formula "71"))
                                                                  (rule "eqSymm" (formula "70"))
                                                                  (rule "unionEqualsEmpty" (formula "36"))
                                                                   (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "andLeft" (formula "36"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "36"))
                                                                  (rule "eqSymm" (formula "70"))
                                                                  (rule "eqSymm" (formula "69"))
                                                                  (rule "unionEqualsEmpty" (formula "36"))
                                                                   (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "andLeft" (formula "36"))
                                                                  (rule "notLeft" (formula "36"))
                                                                  (rule "notLeft" (formula "36"))
                                                                  (rule "eqSymm" (formula "69"))
                                                                  (rule "eqSymm" (formula "68"))
                                                                  (rule "unionEqualsEmpty" (formula "36"))
                                                                   (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "andLeft" (formula "36"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "36"))
                                                                  (rule "eqSymm" (formula "68"))
                                                                  (rule "eqSymm" (formula "67"))
                                                                  (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "30") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "translateJavaAddInt" (formula "30") (term "0,1,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "30") (term "3,0,1,0"))
                                                                  (rule "andLeft" (formula "30"))
                                                                  (rule "andLeft" (formula "30"))
                                                                  (rule "andLeft" (formula "30"))
                                                                  (rule "polySimp_addComm0" (formula "32") (term "3,0"))
                                                                  (rule "polySimp_addComm0" (formula "31") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "30"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "31"))
                                                                  (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "37") (term "0,0,1") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "translateJavaAddInt" (formula "37") (term "3,0,1,0,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "37") (term "2,0,1,0,0,1"))
                                                                  (rule "translateJavaMod" (formula "37") (term "0,1,0,0,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "37") (term "0,2,1,3,0,1,0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "37") (term "0,2,1,3,0,1,0,0,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0,0,1"))
                                                                  (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,0,1"))
                                                                  (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0,0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,0,0,1"))
                                                                  (rule "jmod_axiom" (formula "37") (term "0,1,0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,1"))
                                                                  (rule "polySimp_homoEq" (formula "37") (term "1,0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,1,0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,1,0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,0,0,1"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "37") (term "1,0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1"))
                                                                  (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,0,1"))
                                                                  (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,0,1"))
                                                                  (rule "Definition_axiom_for_bucketStartsOrdering_in_de_wiesler_Functions" (formula "49") (term "0") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "translateJavaAddInt" (formula "49") (term "0,2,1,1,0,1,1,1,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "49") (term "0,2,1,1,0,1,0,1,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "49") (term "0,2,0,1,1,0,1,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "49") (term "0,2,0,0,0,1,1,1,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "49") (term "0,2,0,1,1,1,1,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "49") (term "0,2,1,1,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "49") (term "0,2,0,1,0"))
                                                                  (rule "andLeft" (formula "49"))
                                                                  (rule "andLeft" (formula "49"))
                                                                  (rule "andLeft" (formula "49"))
                                                                  (rule "polySimp_addComm0" (formula "52") (term "0,2,1,1,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "52") (term "0,2,0,0,0,1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "52") (term "0,2,0,1,1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "52") (term "0,2,0,1,1,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "52") (term "0,2,1,1,0,1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "51") (term "0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "50") (term "0,2,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "52") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,1,0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "49"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "51") (term "1,0,1,0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,1,1,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "51") (term "1,0,1,1,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "50"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "49"))
                                                                  (rule "applyEq" (formula "49") (term "0") (ifseqformula "34"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "49"))
                                                                  (rule "applyEq" (formula "49") (term "1,1,1,1,1,0") (ifseqformula "34"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "49") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "49") (term "0,1,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "49") (term "1,1,0,1,1,0"))
                                                                  (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "35") (term "0") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "translateJavaAddInt" (formula "35") (term "2,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "35") (term "3,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "35") (term "0,2,1,3,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "35") (term "0,2,1,3,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                                                  (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "36") (term "0") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "translateJavaAddInt" (formula "36") (term "0,2,5,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "36") (term "0,2,5,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                                                  (rule "arrayLengthIsAShort" (formula "27") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "true_left" (formula "27"))
                                                                  (rule "arrayLengthNotNegative" (formula "27") (term "0"))
                                                                  (rule "commuteUnion" (formula "47") (term "0,1"))
                                                                  (rule "commuteUnion" (formula "47") (term "1,1,1"))
                                                                  (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0"))
                                                                  (rule "commuteUnion" (formula "62") (term "1,1,0,1,0,0"))
                                                                  (rule "commuteUnion" (formula "68") (term "1,1,0,1,0,2,0"))
                                                                  (rule "commuteUnion_2" (formula "68") (term "0,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "66") (term "1,1,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "66") (term "0,0,0,1,0,2,0"))
                                                                  (rule "commuteUnion_2" (formula "65") (term "0,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "65") (term "1,1,0,1,0,2,0"))
                                                                  (rule "commuteUnion_2" (formula "69") (term "0,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "69") (term "1,1,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "61") (term "0,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "61") (term "1,1,0,1,0,2,0"))
                                                                  (rule "nnf_imp2or" (formula "38") (term "0"))
                                                                  (rule "ifthenelse_split" (formula "8") (term "0"))
                                                                  (branch "bucket_starts[1 + b_0] >= 1 + bucket_starts[b_0] TRUE"
                                                                     (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "8"))
                                                                      (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "7") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                     (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "7"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "7"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                                                     (rule "castDel" (formula "3") (term "0"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "inEqSimp_subsumption1" (formula "57") (ifseqformula "7"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "57") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0"))
                                                                     (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "57") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "57") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "57"))
                                                                     (rule "true_left" (formula "57"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                                                                     (rule "andLeft" (formula "8"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                     (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                                                     (rule "add_literals" (formula "8") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "8") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "8") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                                                     (rule "add_literals" (formula "8") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "8") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "8") (term "0"))
                                                                     (rule "leq_literals" (formula "8"))
                                                                     (rule "closeFalse" (formula "8"))
                                                                  )
                                                                  (branch "bucket_starts[1 + b_0] >= 1 + bucket_starts[b_0] FALSE"
                                                                     (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "70"))
                                                                      (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "inEqSimp_geqRight" (formula "70"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                     (rule "mul_literals" (formula "9") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "9") (term "0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                     (rule "mul_literals" (formula "8") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "8") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                                     (rule "mul_literals" (formula "9") (term "1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                                     (rule "mul_literals" (formula "8") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "15"))
                                                                     (rule "qeq_literals" (formula "9") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "closeFalse" (formula "9"))
                                                                  )
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "allLeftHide" (formula "25") (inst "t=j_0") (userinteraction))
                                                                  (rule "allRight" (formula "49") (inst "sk=iv_1"))
                                                                  (rule "impRight" (formula "49"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "eqSymm" (formula "40"))
                                                                  (rule "replace_known_left" (formula "27") (term "1,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "42") (term "1,2,0,1,0,1,0,0"))
                                                                  (rule "polySimp_homoEq" (formula "29") (term "0,1,1"))
                                                                  (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,1,0,0,1"))
                                                                  (rule "mul_literals" (formula "4") (term "1,2,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_elimSub" (formula "6") (term "2,0,1,0,1,0"))
                                                                  (rule "mul_literals" (formula "6") (term "1,2,0,1,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "46") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "46") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "5") (term "2,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "1,2,0,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "50") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "50") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "43") (term "2,0,1,0,1,2,0"))
                                                                  (rule "mul_literals" (formula "43") (term "1,2,0,1,0,1,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,2,0,1"))
                                                                  (rule "mul_literals" (formula "4") (term "1,2,0,1,0,2,0,1"))
                                                                  (rule "polySimp_elimSub" (formula "8") (term "2,0,1,0,1,0"))
                                                                  (rule "mul_literals" (formula "8") (term "1,2,0,1,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "42") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "47") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "57") (term "2,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "57") (term "1,2,0,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "43") (term "2,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "43") (term "1,2,0,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "49") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "49") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "9") (term "2,0,1,0,1,1"))
                                                                  (rule "mul_literals" (formula "9") (term "1,2,0,1,0,1,1"))
                                                                  (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,2,0,0,0"))
                                                                  (rule "mul_literals" (formula "51") (term "1,2,0,1,0,2,0,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,1,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "51") (term "1,2,0,1,0,1,0,0,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "2") (term "2,0,1,0,1,0,0,1"))
                                                                  (rule "mul_literals" (formula "2") (term "1,2,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_elimSub" (formula "2") (term "2,0,1,0,2,0,1"))
                                                                  (rule "mul_literals" (formula "2") (term "1,2,0,1,0,2,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "52") (term "0,2,1,1,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "47") (term "0,2,1,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "9") (term "0,2,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "42") (term "0,2,1,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "50") (term "0,2,1,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "6") (term "0,2,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "27") (term "0,0,2,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "27") (term "0,2,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "2,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "46") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "2,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "50") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "43") (term "2,0,1,0,1,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,2,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "2,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "57") (term "2,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "43") (term "2,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "2,0,1,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,2,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "2,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "2,0,1,0,2,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "6") (term "0,2,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "46") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "5") (term "0,2,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "50") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "43") (term "0,2,0,1,0,1,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,2,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "8") (term "0,2,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "57") (term "0,2,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "43") (term "0,2,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "49") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "9") (term "0,2,0,1,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,2,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,1,0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,0,2,0,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "23"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                  (rule "castedGetAny" (formula "52") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "3"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "10"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                  (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                                                                  (rule "lenOfSeqDef" (formula "4") (term "1"))
                                                                  (rule "polySimp_elimSub" (formula "4") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,1,1"))
                                                                  (rule "castedGetAny" (formula "51") (term "0"))
                                                                  (rule "lenOfSeqDef" (formula "2") (term "1"))
                                                                  (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,1,1,1"))
                                                                  (rule "inEqSimp_ltRight" (formula "57"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "22"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                                                                  (rule "getOfSeqDef" (formula "53") (term "0"))
                                                                  (rule "castDel" (formula "53") (term "1,0"))
                                                                  (rule "polySimp_elimSub" (formula "53") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "0,1,1,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "53") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "1,1"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,1,1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "5") (term "0,0,1,1"))
                                                                  (rule "add_literals" (formula "5") (term "1,0,0,1,1"))
                                                                  (rule "times_zero_1" (formula "5") (term "0,0,1,1"))
                                                                  (rule "add_zero_left" (formula "5") (term "0,1,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "10"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "1,1"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,1,1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,1"))
                                                                  (rule "add_literals" (formula "3") (term "1,0,0,1,1"))
                                                                  (rule "times_zero_1" (formula "3") (term "0,0,1,1"))
                                                                  (rule "add_zero_left" (formula "3") (term "0,1,1"))
                                                                  (rule "getOfSeqDef" (formula "52") (term "0"))
                                                                  (rule "polySimp_elimSub" (formula "52") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "52") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "0,1,1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "53") (term "0,2,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "53") (term "0,0,2,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "53") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "53") (term "0,0,1,1,0,0"))
                                                                  (rule "add_literals" (formula "53") (term "1,0,0,1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "53") (term "0,0,1,1,0,0"))
                                                                  (rule "add_zero_left" (formula "53") (term "0,1,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "0,2,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "52") (term "0,0,2,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "1,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "52") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "52") (term "0,0,1,1,0,0"))
                                                                  (rule "add_literals" (formula "52") (term "1,0,0,1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "52") (term "0,0,1,1,0,0"))
                                                                  (rule "add_zero_left" (formula "52") (term "0,1,1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1"))
                                                                  (rule "inEqSimp_ltRight" (formula "53"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "29") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0,0,0,1"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,1"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,1"))
                                                                  (rule "add_zero_right" (formula "6") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0,0,0,1"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,1"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,1"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0,0,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                                                                  (rule "inEqSimp_ltRight" (formula "53"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,1,0"))
                                                                  (rule "replace_known_left" (formula "2") (term "0,0,1,0") (ifseqformula "6"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1,0"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,1,0") (ifseqformula "4"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEq" (formula "1") (term "1,0,2,1,2,0,1,0,1,0,2,0,1,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "1") (term "0,2,1,1,0,1,0,1,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "2") (term "0,2,1,0,2,1,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "5") (term "0,2,1,1,0,1,0,1,0,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "1") (term "0,2,1,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "1") (term "1,0,2,1,2,0,1,0,0,1,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "1") (term "1,0,2,1,2,0,1,0,1,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "1") (term "0,2,1,0,2,0,1,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "1") (term "0,2,1,1,0,1,0,0,1,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "8") (term "0,2,1,1,0,1,0,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "53") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "46") (term "1,0,2,1,2,0,1,0,1,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "7") (term "1,0,2,1,2,0,1,0,0,1,1,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "53") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "52") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "31") (term "6,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "45") (term "0,2,1,0,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "50") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "11") (term "0,2,1,1,0,1,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "1") (term "0,2,1,1,0,1,0,1,0,2,0,1,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "12") (term "0,2,1,1,0,1,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "42") (term "1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "49") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "53") (term "1,0,2,1,0,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "2") (term "1,0,2,0,1,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0"))
                                                                  (rule "applyEq" (formula "7") (term "0,2,1,1,0,1,0,0,1,1,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "30") (term "0,2,1,0,2,1,0,1") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "5") (term "0,2,0,1,1,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "45") (term "0,2,1,1,0,1,0,1,0,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "5") (term "0,2,1,1,0,1,0,0,1,1,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "5") (term "1,0,2,1,2,0,1,0,1,0,0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "5") (term "1,0,2,1,2,0,1,0,0,1,1,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "29") (term "7,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "45") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "41") (term "1,0,2,0") (ifseqformula "43"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "41"))
                                                                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "9") (term "0,2,1,1,0,1,0,0,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "5") (term "0,2,1,0,0,0,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "51") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "39") (term "0,2,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "45") (term "1,0,2,1,2,0,1,0,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "44") (term "1,0,2,1,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "44") (term "0,2,1,0,1") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "49") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "31") (term "1,6,0,0,1") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "11") (term "1,0,2,1,2,0,1,0,0,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "51") (term "0,2,1,1,1") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "8") (term "1,0,2,1,2,0,1,0,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "7") (term "1,0,2,1,2,0,1,0,1,0,0,0,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "7") (term "0,2,0,1,1,0,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "3") (term "1,0,2,1,2,0,1,0,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "7") (term "0,2,1,0,0,0,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "48") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "45") (term "0,2,1,1,0,1,0,1,2,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "44") (term "1,0,2,1,2,0,1,0,1,0,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "45") (term "0,2,1,2,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "45") (term "0,2,1,1,0,1,0,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "31") (term "0,0,1,1,1") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "45") (term "1,0,2,1,3,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "44") (term "1,0,2,1,1,1") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "51") (term "0,2,1,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "52") (term "1,0,2,1,0,1") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "3") (term "0,2,1,1,0,1,0,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "7") (term "0,2,1,1,0,1,0,1,0,0,0,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "9") (term "1,0,2,1,2,0,1,0,0,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "44") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "48") (term "0,2,1,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "37") (term "3,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "49") (term "1,0,2,1,0,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "12") (term "1,0,2,1,2,0,1,0,0,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "48") (term "0,2,1,1,1") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "7") (term "1,0,2,0,1,0,1,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "42"))
                                                                  (rule "applyEq" (formula "48") (term "1,0,2,1,0,1") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "30") (term "1,0,0,0,1,1") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "5") (term "1,0,2,0,1,0,1,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "5") (term "1,0,2,0,1,0,0,0,0,1,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "7") (term "1,0,2,0,1,0,0,0,0,1,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "1") (term "1,0,2,0,1,0,0,0,1,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "39") (term "0,2,0") (ifseqformula "41"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "39"))
                                                                  (rule "applyEq" (formula "2") (term "0,2,1,0,0,1,0") (ifseqformula "41"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0"))
                                                                  (rule "jmod_axiom" (formula "30") (term "0,1,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                                  (rule "mul_literals" (formula "10") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0,0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "30") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "0,0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "0,0,1,1"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "30") (term "1,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "0,1,1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                                                                  (rule "mul_literals" (formula "28") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "1,1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0,1,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,1,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                                                  (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=arr_0"))
                                                                  (rule "simplifySelectOfAnon" (formula "8"))
                                                                   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "56")) (ifInst ""  (formula "17")))
                                                                  (rule "eqSymm" (formula "9"))
                                                                  (rule "applyEqReverse" (formula "8") (term "1") (ifseqformula "9"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "9"))
                                                                  (rule "pullOutSelect" (formula "43") (term "1,0,0") (inst "selectSK=arr_1"))
                                                                  (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "5") (term "0,1,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "1") (term "1,0,2,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "45") (term "1,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "7") (term "0,1,1,0") (ifseqformula "43"))
                                                                  (rule "simplifySelectOfAnon" (formula "43"))
                                                                   (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "55")) (ifInst ""  (formula "18")))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "5") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,2,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "45") (term "2,0"))
                                                                  (rule "polySimp_addComm0" (formula "7") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,0,2,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "11"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0"))
                                                                  (rule "elementOfUnion" (formula "8") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "8") (term "1,0,0") (ifseqformula "32"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "8") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "8") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "8") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0,1,1,0,0"))
                                                                  (rule "elementOfUnion" (formula "43") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "43") (term "1,0,0") (ifseqformula "33"))
                                                                   (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "43") (term "0,0"))
                                                                  (rule "eqSymm" (formula "43") (term "0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "43") (term "0,0,0,0") (ifseqformula "53"))
                                                                   (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "applyEqReverse" (formula "1") (term "0,0,0,2,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEqReverse" (formula "11") (term "0,1") (ifseqformula "43"))
                                                                  (rule "applyEqReverse" (formula "5") (term "0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEqReverse" (formula "7") (term "0,0,1,0") (ifseqformula "43"))
                                                                  (rule "applyEqReverse" (formula "45") (term "0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEqReverse" (formula "7") (term "1,1,0,0") (ifseqformula "43"))
                                                                  (rule "applyEqReverse" (formula "1") (term "1,0,1,0,0") (ifseqformula "43"))
                                                                  (rule "applyEqReverse" (formula "5") (term "1,1,0,0") (ifseqformula "43"))
                                                                  (rule "applyEqReverse" (formula "44") (term "0,0,0") (ifseqformula "43"))
                                                                  (rule "hideAuxiliaryEq" (formula "43"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,0,2,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "2,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,2,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "11"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0,1"))
                                                                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
                                                                  (rule "simplifySelectOfAnon" (formula "3"))
                                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")) (ifInst ""  (formula "17")))
                                                                  (rule "inEqSimp_commuteGeq" (formula "4"))
                                                                  (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=arr_3"))
                                                                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "10"))
                                                                  (rule "simplifySelectOfAnon" (formula "10"))
                                                                   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "56")) (ifInst ""  (formula "20")))
                                                                  (rule "inEqSimp_homoInEq0" (formula "11"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "14"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,0,1"))
                                                                  (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "3") (term "1,0,0") (ifseqformula "34"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                                                  (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "13"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
                                                                  (rule "elementOfUnion" (formula "10") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "10") (term "1,0,0") (ifseqformula "35"))
                                                                   (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "10") (term "0,0"))
                                                                  (rule "eqSymm" (formula "10") (term "0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "10") (term "0,0,0,0") (ifseqformula "54"))
                                                                   (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "applyEqReverse" (formula "14") (term "1,0,1") (ifseqformula "10"))
                                                                  (rule "applyEqReverse" (formula "11") (term "0,1") (ifseqformula "10"))
                                                                  (rule "hideAuxiliaryEq" (formula "10"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "10") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "13"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "10"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                                                                  (rule "mul_literals" (formula "13") (term "0,0,1"))
                                                                  (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "13"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "3"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "0,1"))
                                                                  (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "9"))
                                                                   (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "8") (term "1,0,0") (ifseqformula "9"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,1,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,1,0,0"))
                                                                  (rule "add_zero_right" (formula "8") (term "0,0,0,0,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                                                                  (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                                                                  (rule "leq_literals" (formula "8") (term "0,1,0,0"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "pullOutSelect" (formula "1") (term "0,1,0") (inst "selectSK=arr_4"))
                                                                  (rule "simplifySelectOfAnon" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "16")))
                                                                  (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "45") (ifseqformula "55"))
                                                                  (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "15") (ifseqformula "55"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "40"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "39") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                                  (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "32"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "5"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "11"))
                                                                  (rule "times_zero_1" (formula "38") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "38") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "40"))
                                                                  (rule "times_zero_1" (formula "39") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "39") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                                  (rule "polySimp_mulLiterals" (formula "39") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "39") (term "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "9"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "12") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "44"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "43"))
                                                                  (rule "times_zero_1" (formula "41") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "41") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "41") (term "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "10"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                                  (rule "add_literals" (formula "12") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "12"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "14") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "14") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "true_left" (formula "14"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "41") (term "1"))
                                                                  (rule "mul_literals" (formula "41") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "41"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                                  (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "23") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "23") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "true_left" (formula "23"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "39") (term "1"))
                                                                  (rule "mul_literals" (formula "39") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "39"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                                                                  (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "41") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "41") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "true_left" (formula "41"))
                                                                  (rule "commuteUnion" (formula "57") (term "1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "56") (term "1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "54") (term "1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "53") (term "1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "50") (term "1,0,0"))
                                                                  (rule "commuteUnion" (formula "49") (term "1,0,2,0"))
                                                                  (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "26") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "translateJavaAddInt" (formula "26") (term "0,1,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "26") (term "3,0,1,0"))
                                                                  (rule "andLeft" (formula "26"))
                                                                  (rule "andLeft" (formula "26"))
                                                                  (rule "andLeft" (formula "26"))
                                                                  (rule "polySimp_addComm0" (formula "28") (term "3,0"))
                                                                  (rule "polySimp_addComm0" (formula "27") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "26"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "27"))
                                                                  (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "35") (term "0") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "translateJavaAddInt" (formula "35") (term "0,2,0,0,1,0"))
                                                                  (rule "translateJavaSubInt" (formula "35") (term "0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "35") (term "0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "35") (term "0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "35") (term "0,2,1,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "35") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "0,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "35") (term "0,0,0,1,1,0"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "38"))
                                                                   (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "translateJavaMulInt" (formula "38") (term "1,1,0,0,0,0,1,0,0"))
                                                                  (rule "translateJavaMulInt" (formula "38") (term "1,1,0,0,0,0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "38") (term "1,1,0,0,0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "38") (term "1,1,0,0,0,0,0,1,0,0"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "41"))
                                                                  (rule "andLeft" (formula "39"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "43"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "notLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "45"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "notLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "46"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "48"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "49"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "disjointDefinition" (formula "74"))
                                                                   (builtin "One Step Simplification" (formula "74"))
                                                                  (rule "notLeft" (formula "74"))
                                                                  (rule "disjointDefinition" (formula "73"))
                                                                   (builtin "One Step Simplification" (formula "73"))
                                                                  (rule "notLeft" (formula "73"))
                                                                  (rule "disjointDefinition" (formula "72"))
                                                                   (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "notLeft" (formula "72"))
                                                                  (rule "eqSymm" (formula "94"))
                                                                  (rule "disjointDefinition" (formula "71"))
                                                                   (builtin "One Step Simplification" (formula "71"))
                                                                  (rule "notLeft" (formula "71"))
                                                                  (rule "eqSymm" (formula "93"))
                                                                  (rule "disjointDefinition" (formula "70"))
                                                                   (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "notLeft" (formula "70"))
                                                                  (rule "eqSymm" (formula "92"))
                                                                  (rule "disjointDefinition" (formula "69"))
                                                                   (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "notLeft" (formula "69"))
                                                                  (rule "eqSymm" (formula "91"))
                                                                  (rule "disjointDefinition" (formula "68"))
                                                                   (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "notLeft" (formula "68"))
                                                                  (rule "eqSymm" (formula "90"))
                                                                  (rule "disjointDefinition" (formula "67"))
                                                                   (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "notLeft" (formula "67"))
                                                                  (rule "eqSymm" (formula "89"))
                                                                  (rule "disjointDefinition" (formula "66"))
                                                                   (builtin "One Step Simplification" (formula "66"))
                                                                  (rule "notLeft" (formula "66"))
                                                                  (rule "eqSymm" (formula "88"))
                                                                  (rule "disjointDefinition" (formula "65"))
                                                                   (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "notLeft" (formula "65"))
                                                                  (rule "eqSymm" (formula "87"))
                                                                  (rule "disjointDefinition" (formula "64"))
                                                                   (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "notLeft" (formula "64"))
                                                                  (rule "eqSymm" (formula "86"))
                                                                  (rule "disjointDefinition" (formula "63"))
                                                                   (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "notLeft" (formula "63"))
                                                                  (rule "eqSymm" (formula "85"))
                                                                  (rule "disjointDefinition" (formula "62"))
                                                                   (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "notLeft" (formula "62"))
                                                                  (rule "eqSymm" (formula "84"))
                                                                  (rule "disjointDefinition" (formula "61"))
                                                                   (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "notLeft" (formula "61"))
                                                                  (rule "eqSymm" (formula "83"))
                                                                  (rule "disjointDefinition" (formula "60"))
                                                                   (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "notLeft" (formula "60"))
                                                                  (rule "eqSymm" (formula "82"))
                                                                  (rule "disjointDefinition" (formula "59"))
                                                                   (builtin "One Step Simplification" (formula "59"))
                                                                  (rule "notLeft" (formula "59"))
                                                                  (rule "disjointDefinition" (formula "58"))
                                                                   (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "notLeft" (formula "58"))
                                                                  (rule "eqSymm" (formula "80"))
                                                                  (rule "disjointDefinition" (formula "57"))
                                                                   (builtin "One Step Simplification" (formula "57"))
                                                                  (rule "notLeft" (formula "57"))
                                                                  (rule "eqSymm" (formula "79"))
                                                                  (rule "disjointDefinition" (formula "56"))
                                                                   (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "notLeft" (formula "56"))
                                                                  (rule "disjointDefinition" (formula "55"))
                                                                   (builtin "One Step Simplification" (formula "55"))
                                                                  (rule "notLeft" (formula "55"))
                                                                  (rule "disjointDefinition" (formula "54"))
                                                                   (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "notLeft" (formula "54"))
                                                                  (rule "disjointDefinition" (formula "53"))
                                                                   (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "notLeft" (formula "53"))
                                                                  (rule "disjointDefinition" (formula "52"))
                                                                   (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "notLeft" (formula "52"))
                                                                  (rule "disjointDefinition" (formula "51"))
                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "notLeft" (formula "51"))
                                                                  (rule "disjointDefinition" (formula "50"))
                                                                   (builtin "One Step Simplification" (formula "50"))
                                                                  (rule "notLeft" (formula "50"))
                                                                  (rule "disjointDefinition" (formula "49"))
                                                                   (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "notLeft" (formula "49"))
                                                                  (rule "disjointDefinition" (formula "48"))
                                                                   (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "notLeft" (formula "48"))
                                                                  (rule "disjointDefinition" (formula "47"))
                                                                   (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "notLeft" (formula "47"))
                                                                  (rule "applyEq" (formula "61") (term "0,1,0,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "60") (term "0,1,0,2,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "68") (term "0,1,0,2,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "64") (term "0,1,0,2,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "67") (term "0,1,0,2,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "65") (term "0,1,0,2,0") (ifseqformula "46"))
                                                                  (rule "distributeIntersection" (formula "36") (term "0"))
                                                                  (rule "distributeIntersection" (formula "37") (term "0"))
                                                                  (rule "distributeIntersection" (formula "36") (term "0,0"))
                                                                  (rule "distributeIntersection" (formula "36") (term "1,0"))
                                                                  (rule "unionEqualsEmpty" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "distributeIntersection" (formula "36") (term "1,0,0"))
                                                                  (rule "distributeIntersection" (formula "36") (term "0,0,0"))
                                                                  (rule "distributeIntersection" (formula "36") (term "1,1,0"))
                                                                  (rule "distributeIntersection" (formula "36") (term "0,1,0"))
                                                                  (rule "distributeIntersection" (formula "37") (term "0"))
                                                                  (rule "distributeIntersection" (formula "38") (term "0"))
                                                                  (rule "unionEqualsEmpty" (formula "36"))
                                                                  (rule "andLeft" (formula "36"))
                                                                  (rule "unionEqualsEmpty" (formula "38"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "distributeIntersection" (formula "40") (term "0,0"))
                                                                  (rule "distributeIntersection" (formula "40") (term "1,0"))
                                                                  (rule "unionEqualsEmpty" (formula "36"))
                                                                  (rule "andLeft" (formula "36"))
                                                                  (rule "unionEqualsEmpty" (formula "38"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "distributeIntersection" (formula "40") (term "0"))
                                                                  (rule "distributeIntersection" (formula "41") (term "0"))
                                                                  (rule "unionEqualsEmpty" (formula "42"))
                                                                  (rule "andLeft" (formula "42"))
                                                                  (rule "unionEqualsEmpty" (formula "37"))
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "eqSymm" (formula "75"))
                                                                  (rule "eqSymm" (formula "74"))
                                                                  (rule "unionEqualsEmpty" (formula "36"))
                                                                   (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "andLeft" (formula "36"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "36"))
                                                                  (rule "eqSymm" (formula "74"))
                                                                  (rule "eqSymm" (formula "73"))
                                                                  (rule "unionEqualsEmpty" (formula "36"))
                                                                   (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "andLeft" (formula "36"))
                                                                  (rule "notLeft" (formula "36"))
                                                                  (rule "notLeft" (formula "36"))
                                                                  (rule "eqSymm" (formula "73"))
                                                                  (rule "eqSymm" (formula "72"))
                                                                  (rule "unionEqualsEmpty" (formula "36"))
                                                                   (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "andLeft" (formula "36"))
                                                                  (rule "notLeft" (formula "36"))
                                                                  (rule "notLeft" (formula "36"))
                                                                  (rule "eqSymm" (formula "72"))
                                                                  (rule "eqSymm" (formula "71"))
                                                                  (rule "unionEqualsEmpty" (formula "36"))
                                                                   (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "andLeft" (formula "36"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "36"))
                                                                  (rule "eqSymm" (formula "71"))
                                                                  (rule "eqSymm" (formula "70"))
                                                                  (rule "unionEqualsEmpty" (formula "36"))
                                                                   (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "andLeft" (formula "36"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "36"))
                                                                  (rule "eqSymm" (formula "70"))
                                                                  (rule "eqSymm" (formula "69"))
                                                                  (rule "unionEqualsEmpty" (formula "37"))
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "eqSymm" (formula "69"))
                                                                  (rule "eqSymm" (formula "68"))
                                                                  (rule "unionEqualsEmpty" (formula "36"))
                                                                   (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "andLeft" (formula "36"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "36"))
                                                                  (rule "eqSymm" (formula "68"))
                                                                  (rule "eqSymm" (formula "67"))
                                                                  (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "33") (term "0") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "translateJavaAddInt" (formula "33") (term "0,2,5,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "33") (term "0,2,5,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                                                  (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "31") (term "0") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "translateJavaAddInt" (formula "31") (term "2,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "31") (term "3,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "31") (term "0,2,1,3,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "31") (term "0,2,1,3,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                                                  (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "34") (term "0,0,1") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "translateJavaMod" (formula "34") (term "0,1,0,0,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "34") (term "0,2,1,3,0,1,0,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "34") (term "2,0,1,0,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "34") (term "3,0,1,0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "34") (term "0,2,1,3,0,1,0,0,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,0,1"))
                                                                  (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,0,1"))
                                                                  (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0,0,1"))
                                                                  (rule "jmod_axiom" (formula "34") (term "0,1,0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0,0,1"))
                                                                  (rule "polySimp_homoEq" (formula "34") (term "1,0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,1,0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,0,0,1"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "34") (term "1,0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,1"))
                                                                  (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,0,1"))
                                                                  (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,0,1"))
                                                                  (rule "Contract_axiom_for_bucketStartsOrdering_in_Functions" (formula "46") (term "0"))
                                                                  (rule "replace_known_left" (formula "46") (term "1,0") (ifseqformula "17"))
                                                                   (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "122")) (ifInst ""  (formula "47")))
                                                                  (rule "true_left" (formula "46"))
                                                                  (rule "Definition_axiom_for_bucketStartsOrdering_in_de_wiesler_Functions" (formula "46") (term "0") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "translateJavaAddInt" (formula "46") (term "0,2,1,1,0,1,1,1,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "46") (term "0,2,1,1,0,1,0,1,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "46") (term "0,2,0,1,1,0,1,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "46") (term "0,2,0,0,0,1,1,1,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "46") (term "0,2,0,1,1,1,1,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "46") (term "0,2,1,1,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "46") (term "0,2,0,1,0"))
                                                                  (rule "andLeft" (formula "46"))
                                                                  (rule "andLeft" (formula "46"))
                                                                  (rule "andLeft" (formula "46"))
                                                                  (rule "polySimp_addComm0" (formula "49") (term "0,2,0,1,1,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "49") (term "0,2,1,1,0,1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "49") (term "0,2,1,1,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "49") (term "0,2,0,0,0,1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "49") (term "0,2,0,1,1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "48") (term "0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "47") (term "0,2,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "49") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,1,0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "46"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "48") (term "1,0,1,1,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "48") (term "1,0,1,0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,1,1,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "47"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "46"))
                                                                  (rule "applyEq" (formula "47") (term "1,1,1,1,1,0") (ifseqformula "30"))
                                                                  (rule "applyEq" (formula "46") (term "0") (ifseqformula "30"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "46"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "1,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "46") (term "0,1,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "46") (term "1,1,0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0"))
                                                                  (rule "commuteUnion" (formula "44") (term "0,0,1"))
                                                                  (rule "commuteUnion" (formula "44") (term "1,1,1"))
                                                                  (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "true_left" (formula "24"))
                                                                  (rule "arrayLengthNotNegative" (formula "24") (term "0"))
                                                                  (rule "commuteUnion_2" (formula "59") (term "0,0,1,0,0"))
                                                                  (rule "commuteUnion" (formula "59") (term "1,1,0,1,0,0"))
                                                                  (rule "commuteUnion" (formula "58") (term "1,1,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "58") (term "0,0,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "66") (term "0,0,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "66") (term "1,1,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "62") (term "0,0,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "62") (term "1,1,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "65") (term "0,0,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "65") (term "1,1,0,1,0,2,0"))
                                                                  (rule "commuteUnion_2" (formula "63") (term "0,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "63") (term "1,1,0,1,0,2,0"))
                                                                  (rule "nnf_imp2or" (formula "35") (term "0"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                  (branch "bucket_starts[1 + b_0] >= 1 + iv_0 + bucket_starts[b_0] TRUE"
                                                                     (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "4"))
                                                                     (rule "andLeft" (formula "33"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "33"))
                                                                     (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                                     (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                                                     (rule "add_literals" (formula "33") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "33") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "33") (term "0"))
                                                                     (rule "leq_literals" (formula "33"))
                                                                     (rule "closeFalse" (formula "33"))
                                                                  )
                                                                  (branch "bucket_starts[1 + b_0] >= 1 + iv_0 + bucket_starts[b_0] FALSE"
                                                                     (rule "inEqSimp_geqRight" (formula "67"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "15") (term "0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                     (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "15") (term "1,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "0,0,1"))
                                                                     (rule "mul_literals" (formula "15") (term "0,0,0,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "56") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "56") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "56") (term "0"))
                                                                     (rule "add_literals" (formula "56") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "56") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "56") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "12"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "0,0,0,0"))
                                                                     (rule "mul_literals" (formula "15") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0"))
                                                                     (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "15") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                                                     (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "15") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                     (rule "mul_literals" (formula "15") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "15"))
                                                                     (rule "leq_literals" (formula "8") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "true_left" (formula "8"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "54"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "0,0,0,0"))
                                                                     (rule "mul_literals" (formula "15") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                     (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                                                                     (rule "mul_literals" (formula "15") (term "0,0,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "16") (term "0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "16") (term "0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "16") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "16") (term "1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                     (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                                                                     (rule "mul_literals" (formula "16") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "16") (term "1,0,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "10"))
                                                                     (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "16") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "16") (term "0,0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                     (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                                                                     (rule "mul_literals" (formula "16") (term "0,0,1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "15") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                                                     (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "15") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0"))
                                                                     (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "15") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "15") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "15"))
                                                                     (rule "true_left" (formula "15"))
                                                                     (rule "commuteUnion" (formula "48") (term "0,1"))
                                                                     (rule "commuteUnion" (formula "63") (term "0,0,0,1,0,0"))
                                                                     (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,2,0"))
                                                                     (rule "commuteUnion_2" (formula "70") (term "0,0,1,0,2,0"))
                                                                     (rule "commuteUnion_2" (formula "66") (term "0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "69") (term "0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "67") (term "0,0,0,1,0,2,0"))
                                                                     (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                     (branch "bucket_starts[1 + b_0] >= 1 + bucket_starts[b_0] TRUE"
                                                                        (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "7"))
                                                                         (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                        (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                        (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "8"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "8"))
                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                                                        (rule "castDel" (formula "3") (term "0"))
                                                                        (rule "hideAuxiliaryEq" (formula "2"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "8"))
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                        (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "1") (term "0"))
                                                                        (rule "leq_literals" (formula "1"))
                                                                        (rule "closeFalse" (formula "1"))
                                                                     )
                                                                     (branch "bucket_starts[1 + b_0] >= 1 + bucket_starts[b_0] FALSE"
                                                                        (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "71"))
                                                                         (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "inEqSimp_geqRight" (formula "71"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                        (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                        (rule "times_zero_2" (formula "8") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                        (rule "times_zero_2" (formula "9") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "9") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                                        (rule "mul_literals" (formula "8") (term "1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                                        (rule "mul_literals" (formula "9") (term "1"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "8"))
                                                                        (rule "qeq_literals" (formula "7") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "7"))
                                                                        (rule "closeFalse" (formula "7"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "Assume values[j_0]@heap[anon( arrayRange(values, begin + bucket_starts[bucket], begin + bucket_starts[ 1 + bucket] - 1) cup storage.allArrays, anonOut_heap<<anonHeapFunction>>)] != values[j_0]"
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "eqSymm" (formula "35"))
                                                            (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,1"))
                                                            (rule "mul_literals" (formula "51") (term "1,2,0,1,0,1"))
                                                            (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,1,0"))
                                                            (rule "mul_literals" (formula "1") (term "1,2,0,1,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "38") (term "2,0,1,0,0"))
                                                            (rule "mul_literals" (formula "38") (term "1,2,0,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,0"))
                                                            (rule "mul_literals" (formula "51") (term "1,2,0,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "37") (term "1,2,0,1,0,1,0,0"))
                                                            (rule "polySimp_homoEq" (formula "24") (term "0,1,1"))
                                                            (rule "polySimp_elimSub" (formula "3") (term "2,0,1,0,1,0"))
                                                            (rule "mul_literals" (formula "3") (term "1,2,0,1,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "38") (term "2,0,1,0,1,2,0"))
                                                            (rule "mul_literals" (formula "38") (term "1,2,0,1,0,1,2,0"))
                                                            (rule "polySimp_elimSub" (formula "44") (term "2,0,1,0,2,0"))
                                                            (rule "mul_literals" (formula "44") (term "1,2,0,1,0,2,0"))
                                                            (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,2,0"))
                                                            (rule "mul_literals" (formula "37") (term "1,2,0,1,0,2,0"))
                                                            (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,2,0"))
                                                            (rule "mul_literals" (formula "45") (term "1,2,0,1,0,2,0"))
                                                            (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,2,0"))
                                                            (rule "mul_literals" (formula "41") (term "1,2,0,1,0,2,0"))
                                                            (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,1,1"))
                                                            (rule "mul_literals" (formula "4") (term "1,2,0,1,0,1,1"))
                                                            (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,2,0"))
                                                            (rule "mul_literals" (formula "42") (term "1,2,0,1,0,2,0"))
                                                            (rule "polySimp_elimSub" (formula "46") (term "2,0,1,0,0"))
                                                            (rule "mul_literals" (formula "46") (term "1,2,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "22") (term "0,2,1,1,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "42") (term "0,2,1,0,1"))
                                                            (rule "polySimp_addComm0" (formula "22") (term "0,2,1,0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "37") (term "0,2,1,1,1"))
                                                            (rule "polySimp_addComm0" (formula "45") (term "0,2,1,0,1"))
                                                            (rule "polySimp_addComm0" (formula "4") (term "0,2,1,1"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,2,1,0"))
                                                            (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,1"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "2,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "2,0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "2,0,1,0,1,2,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm1" (formula "45") (term "2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,1,1"))
                                                            (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "2,0,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,1"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "38") (term "0,2,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,0,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "38") (term "0,2,0,1,0,1,2,0"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "0,2,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "5"))
                                                            (rule "inEqSimp_ltRight" (formula "51"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "17"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "17") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "4"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                            (rule "applyEq" (formula "4") (term "1,0,2,1,2,0,1,0,0,1,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "4") (term "0,2,1,1,0,1,0,0,1,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "1") (term "1,0,2,1,2,0,1,0,0,1,0") (ifseqformula "36"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "applyEq" (formula "38") (term "1,0,2,1,2,0,1,0,1,0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "47") (term "0,2,1,1,0,1,0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "46") (term "1,0,2,1,0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "38") (term "1,0,2,1,1,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "39") (term "1,0,2,1,2,0,1,0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "47") (term "1,0,2,1,2,0,1,0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "5") (term "1,0,2,1,2,0,1,0,0,1,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "38") (term "1,0,2,1,1,1") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "25") (term "1,6,0,0,1") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "33") (term "0,2,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "46") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "45") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "46") (term "1,0,2,1,0,1") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "35") (term "1,0,2,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "18") (term "0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "37") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "44") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "2") (term "0,2,1,1,0,1,0,0,1,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "2") (term "1,0,2,1,2,0,1,0,0,1,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "33") (term "1,0,2,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "42") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "37") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "38") (term "1,0,2,1,2,0,1,0,1,2,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "38") (term "0,2,1,1,0,1,0,1,2,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "38") (term "0,2,1,2,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "41") (term "0,2,1,1,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "23") (term "6,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "44") (term "0,2,1,1,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "41") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "21") (term "7,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "30") (term "3,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "5") (term "0,2,1,1,0,1,0,0,1,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "45") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,1,0,1,0,2,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "37") (term "0,2,1,0,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "37") (term "0,2,1,0,1") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "24") (term "0,0,1,1,1") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "38") (term "1,0,2,1,3,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "38") (term "0,2,1,1,0,1,0,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "42") (term "1,0,2,1,0,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "41") (term "1,0,2,1,2,0,1,0,2,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "37") (term "0,2,1,1,0,1,0,1,0,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "44") (term "0,2,1,1,1") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "41") (term "0,2,1,1,1") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "23") (term "1,0,0,0,1,1") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "41") (term "1,0,2,1,0,1") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "1") (term "1,0,2,1,2,0,1,0,1,0") (ifseqformula "34"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "applyEq" (formula "1") (term "0,2,1,1,0,1,0,0,1,0") (ifseqformula "34"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "applyEq" (formula "1") (term "0,2,1,1,0,1,0,1,0") (ifseqformula "34"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "jmod_axiom" (formula "23") (term "0,1,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,1"))
                                                            (rule "polySimp_sepNegMonomial" (formula "23") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "23") (term "0,0,1,1"))
                                                            (rule "polySimp_sepNegMonomial" (formula "23") (term "1,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "0,1,1,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "mul_literals" (formula "3") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "0,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,0,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "1,0,1,1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=arr_0"))
                                                            (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "10")))
                                                            (rule "eqSymm" (formula "46"))
                                                            (rule "inEqSimp_commuteLeq" (formula "2"))
                                                            (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                            (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "26"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0"))
                                                            (rule "pullOutSelect" (formula "38") (term "1,2,0") (inst "selectSK=arr_1"))
                                                            (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "38"))
                                                            (rule "applyEq" (formula "5") (term "0") (ifseqformula "38"))
                                                            (rule "simplifySelectOfAnon" (formula "38"))
                                                             (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "50")) (ifInst ""  (formula "12")))
                                                            (rule "polySimp_addComm0" (formula "39") (term "2,0"))
                                                            (rule "polySimp_addComm0" (formula "37") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "5"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                            (rule "polySimp_mulAssoc" (formula "5") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0,1"))
                                                            (rule "elementOfUnion" (formula "38") (term "0,0"))
                                                            (rule "disjointAllFields" (formula "38") (term "1,0,0") (ifseqformula "27"))
                                                             (builtin "One Step Simplification" (formula "38"))
                                                            (rule "elementOfArrayRangeConcrete" (formula "38") (term "0,0"))
                                                            (rule "eqSymm" (formula "38") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "38") (term "0,0,0,0") (ifseqformula "48"))
                                                             (builtin "One Step Simplification" (formula "38"))
                                                            (rule "applyEqReverse" (formula "39") (term "0,2,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "37") (term "0,0,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "5") (term "0,1") (ifseqformula "38"))
                                                            (rule "hideAuxiliaryEq" (formula "38"))
                                                            (rule "polySimp_addComm0" (formula "38") (term "2,0"))
                                                            (rule "polySimp_addComm0" (formula "37") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "5") (term "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "5"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "0,1"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
                                                            (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                                                            (rule "simplifySelectOfAnon" (formula "3"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")) (ifInst ""  (formula "13")))
                                                            (rule "inEqSimp_homoInEq0" (formula "4"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "7"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                            (rule "polySimp_mulAssoc" (formula "4") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                                                            (rule "mul_literals" (formula "7") (term "0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "1,0,1"))
                                                            (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                            (rule "disjointAllFields" (formula "3") (term "1,0,0") (ifseqformula "28"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                            (rule "eqSymm" (formula "3") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "48"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "0,1") (ifseqformula "3"))
                                                            (rule "applyEqReverse" (formula "7") (term "1,0,1") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "polySimp_addComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                            (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "1") (term "1,0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,0,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                      )
                                                      (branch "CUT: b_0 = bucket FALSE"
                                                          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "6")) (userinteraction))
                                                         (rule "impLeft" (formula "35") (userinteraction))
                                                         (branch "Case 1"
                                                            (rule "eqSymm" (formula "46"))
                                                            (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,1,1"))
                                                            (rule "mul_literals" (formula "4") (term "1,2,0,1,0,1,1"))
                                                            (rule "polySimp_elimSub" (formula "3") (term "2,0,1,0,1,0"))
                                                            (rule "mul_literals" (formula "3") (term "1,2,0,1,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "44") (term "2,0,1,0,2,0"))
                                                            (rule "mul_literals" (formula "44") (term "1,2,0,1,0,2,0"))
                                                            (rule "polySimp_elimSub" (formula "36") (term "2,0,1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "1,2,0,1,0,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "36") (term "2,0,1,0,2,0"))
                                                            (rule "mul_literals" (formula "36") (term "1,2,0,1,0,2,0"))
                                                            (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,2,0"))
                                                            (rule "mul_literals" (formula "41") (term "1,2,0,1,0,2,0"))
                                                            (rule "polySimp_elimSub" (formula "43") (term "2,0,1,0,2,0"))
                                                            (rule "mul_literals" (formula "43") (term "1,2,0,1,0,2,0"))
                                                            (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,0"))
                                                            (rule "mul_literals" (formula "37") (term "1,2,0,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,0"))
                                                            (rule "mul_literals" (formula "51") (term "1,2,0,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,2,0"))
                                                            (rule "mul_literals" (formula "40") (term "1,2,0,1,0,2,0"))
                                                            (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,1"))
                                                            (rule "mul_literals" (formula "51") (term "1,2,0,1,0,1"))
                                                            (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,1,2,0"))
                                                            (rule "mul_literals" (formula "37") (term "1,2,0,1,0,1,2,0"))
                                                            (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,1,0"))
                                                            (rule "mul_literals" (formula "1") (term "1,2,0,1,0,1,0"))
                                                            (rule "polySimp_homoEq" (formula "24") (term "0,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0,2,1,0,1"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,2,1,0"))
                                                            (rule "polySimp_addComm0" (formula "4") (term "0,2,1,1"))
                                                            (rule "polySimp_addComm0" (formula "36") (term "0,2,1,1,1"))
                                                            (rule "polySimp_addComm0" (formula "22") (term "0,2,1,0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "22") (term "0,2,1,1,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "41") (term "0,2,1,0,1"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,1,1"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "2,0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "2,0,1,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm1" (formula "43") (term "2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,1"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0,1,2,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,0,2,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,0,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "36") (term "0,2,0,1,0,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "36") (term "0,2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm0" (formula "43") (term "0,2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,2,0"))
                                                            (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,1"))
                                                            (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0,1,2,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,1,0"))
                                                            (rule "inEqSimp_geqRight" (formula "45"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "19"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "7"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "6"))
                                                            (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0"))
                                                            (rule "inEqSimp_ltRight" (formula "51"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "18"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "18") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                            (rule "jmod_axiom" (formula "26") (term "0,1,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1,1"))
                                                            (rule "polySimp_sepNegMonomial" (formula "26") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "0,0,1,1"))
                                                            (rule "polySimp_sepNegMonomial" (formula "26") (term "1,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "0,1,1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                            (rule "mul_literals" (formula "2") (term "1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                            (rule "mul_literals" (formula "4") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "0,1,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,1,0,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,0,1,1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "andLeft" (formula "35"))
                                                            (rule "cut_direct" (formula "36") (term "0") (userinteraction))
                                                            (branch "CUT: b_0 > bucket TRUE"
                                                                (builtin "One Step Simplification" (formula "37") (userinteraction))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "eqTermCut" (formula "55") (term "1") (inst "s=int::select(heap, values, arr(j_0))") (userinteraction))
                                                               (branch "Assume values[j_0]@heap[anon( arrayRange(values, begin + bucket_starts[bucket], begin + bucket_starts[ 1 + bucket] - 1) cup storage.allArrays, anonOut_heap<<anonHeapFunction>>)] = values[j_0]"
                                                                  (rule "eqTermCut" (formula "56") (term "0") (inst "s=int::select(heap, values, arr(i_0))") (userinteraction))
                                                                  (branch "Assume values[i_0]@heap[anon( arrayRange(values, begin + bucket_starts[bucket], begin + bucket_starts[ 1 + bucket] - 1) cup storage.allArrays, anonOut_heap<<anonHeapFunction>>)] = values[i_0]"
                                                                     (rule "allLeftHide" (formula "24") (inst "t=i_0") (userinteraction))
                                                                     (rule "impLeft" (formula "24") (userinteraction))
                                                                     (branch "Case 1"
                                                                        (rule "eqSymm" (formula "52"))
                                                                        (rule "replace_known_left" (formula "36") (term "1,1") (ifseqformula "40"))
                                                                         (builtin "One Step Simplification" (formula "36"))
                                                                        (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "42") (term "1,2,0,1,0,1,0,0"))
                                                                        (rule "polySimp_elimSub" (formula "2") (term "2,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "2") (term "1,2,0,1,0,0"))
                                                                        (rule "polySimp_elimSub" (formula "5") (term "2,0,1,0,1,0"))
                                                                        (rule "mul_literals" (formula "5") (term "1,2,0,1,0,1,0"))
                                                                        (rule "polySimp_homoEq" (formula "25") (term "0,1,1"))
                                                                        (rule "polySimp_elimSub" (formula "43") (term "2,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "43") (term "1,2,0,1,0,0"))
                                                                        (rule "polySimp_elimSub" (formula "57") (term "2,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "57") (term "1,2,0,1,0,0"))
                                                                        (rule "polySimp_elimSub" (formula "57") (term "2,0,1,0,1"))
                                                                        (rule "mul_literals" (formula "57") (term "1,2,0,1,0,1"))
                                                                        (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,2,0"))
                                                                        (rule "mul_literals" (formula "42") (term "1,2,0,1,0,2,0"))
                                                                        (rule "polySimp_elimSub" (formula "49") (term "2,0,1,0,2,0"))
                                                                        (rule "mul_literals" (formula "49") (term "1,2,0,1,0,2,0"))
                                                                        (rule "polySimp_elimSub" (formula "46") (term "2,0,1,0,2,0"))
                                                                        (rule "mul_literals" (formula "46") (term "1,2,0,1,0,2,0"))
                                                                        (rule "polySimp_elimSub" (formula "3") (term "2,0,1,0,1,0"))
                                                                        (rule "mul_literals" (formula "3") (term "1,2,0,1,0,1,0"))
                                                                        (rule "polySimp_elimSub" (formula "43") (term "2,0,1,0,1,2,0"))
                                                                        (rule "mul_literals" (formula "43") (term "1,2,0,1,0,1,2,0"))
                                                                        (rule "polySimp_elimSub" (formula "6") (term "2,0,1,0,1,1"))
                                                                        (rule "mul_literals" (formula "6") (term "1,2,0,1,0,1,1"))
                                                                        (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "1") (term "1,2,0,1,0,0"))
                                                                        (rule "polySimp_elimSub" (formula "50") (term "2,0,1,0,2,0"))
                                                                        (rule "mul_literals" (formula "50") (term "1,2,0,1,0,2,0"))
                                                                        (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,2,0"))
                                                                        (rule "mul_literals" (formula "47") (term "1,2,0,1,0,2,0"))
                                                                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,1"))
                                                                        (rule "polySimp_addComm0" (formula "50") (term "0,2,1,0,1"))
                                                                        (rule "polySimp_addComm0" (formula "3") (term "0,2,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "42") (term "0,2,1,1,1"))
                                                                        (rule "polySimp_addComm0" (formula "51") (term "0,2,1,1,1"))
                                                                        (rule "polySimp_addComm0" (formula "47") (term "0,2,1,0,1"))
                                                                        (rule "polySimp_addComm0" (formula "6") (term "0,2,1,1"))
                                                                        (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "2,0,1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "2,0,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "43") (term "2,0,1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "57") (term "2,0,1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "57") (term "2,0,1,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm1" (formula "49") (term "2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm1" (formula "46") (term "2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm1" (formula "3") (term "2,0,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "43") (term "2,0,1,0,1,2,0"))
                                                                        (rule "polySimp_addComm1" (formula "6") (term "2,0,1,0,1,1"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "50") (term "2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "5") (term "0,2,0,1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,1"))
                                                                        (rule "mul_literals" (formula "25") (term "0,1,0,0,1,1"))
                                                                        (rule "polySimp_addComm0" (formula "43") (term "0,2,0,1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "57") (term "0,2,0,1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "57") (term "0,2,0,1,0,1"))
                                                                        (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm0" (formula "49") (term "0,2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm0" (formula "46") (term "0,2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "43") (term "0,2,0,1,0,1,2,0"))
                                                                        (rule "polySimp_addComm0" (formula "6") (term "0,2,0,1,0,1,1"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "50") (term "0,2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,2,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "4"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_gtToGeq" (formula "37"))
                                                                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,1"))
                                                                        (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,1"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "51") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "51") (term "0,1,0,0,1"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "38"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "7"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "36") (term "1,1"))
                                                                        (rule "inEqSimp_ltRight" (formula "57"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "52") (term "0,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "52") (term "0,1"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "52") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "52") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "52") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "52") (term "0,0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "19"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "6"))
                                                                        (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                        (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                                        (rule "apply_eq_monomials" (formula "1") (term "1,0") (ifseqformula "3"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "1") (term "1,0"))
                                                                        (rule "add_literals" (formula "1") (term "1,1,1,0"))
                                                                        (rule "times_zero_1" (formula "1") (term "1,1,0"))
                                                                        (rule "add_zero_right" (formula "1") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                        (rule "jmod_axiom" (formula "26") (term "0,1,1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1,1"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "26") (term "0,1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1,1"))
                                                                        (rule "polySimp_elimOne" (formula "26") (term "0,0,1,1"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "26") (term "1,1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "26") (term "0,1,1,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                        (rule "mul_literals" (formula "5") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                                        (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0"))
                                                                        (rule "polySimp_mulLiterals" (formula "37") (term "0,0"))
                                                                        (rule "polySimp_elimOne" (formula "37") (term "0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "52") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "52") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "52") (term "0,1"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "0"))
                                                                        (rule "polySimp_mulLiterals" (formula "52") (term "0,0"))
                                                                        (rule "polySimp_elimOne" (formula "52") (term "0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                        (rule "inEqSimp_contradEq3" (formula "53") (ifseqformula "38"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0"))
                                                                        (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "53") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "53") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "53"))
                                                                        (rule "false_right" (formula "53"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "37") (term "0") (ifseqformula "38"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                                                        (rule "leq_literals" (formula "37") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "37"))
                                                                        (rule "true_left" (formula "37"))
                                                                        (rule "pullOutSelect" (formula "42") (term "1,0,0") (inst "selectSK=arr_0"))
                                                                        (rule "applyEq" (formula "44") (term "1,2,0") (ifseqformula "42"))
                                                                        (rule "simplifySelectOfAnon" (formula "42"))
                                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "55")) (ifInst ""  (formula "13")))
                                                                        (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "2,0"))
                                                                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
                                                                        (rule "simplifySelectOfAnon" (formula "3"))
                                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "12")))
                                                                        (rule "eqSymm" (formula "4"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "4"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_2"))
                                                                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                                        (rule "simplifySelectOfAnon" (formula "2"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "57")) (ifInst ""  (formula "12")))
                                                                        (rule "eqSymm" (formula "3"))
                                                                        (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "3"))
                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "3"))
                                                                        (rule "hideAuxiliaryEq" (formula "3"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "1"))
                                                                        (rule "elementOfUnion" (formula "42") (term "0,0"))
                                                                        (rule "disjointAllFields" (formula "42") (term "1,0,0") (ifseqformula "29"))
                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "42") (term "0,0"))
                                                                        (rule "eqSymm" (formula "42") (term "0,0,0,0"))
                                                                        (rule "replace_known_right" (formula "42") (term "0,0,0,0") (ifseqformula "53"))
                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                        (rule "applyEqReverse" (formula "44") (term "0,2,0") (ifseqformula "42"))
                                                                        (rule "applyEqReverse" (formula "43") (term "0,0,0") (ifseqformula "42"))
                                                                        (rule "hideAuxiliaryEq" (formula "42"))
                                                                        (rule "polySimp_addComm0" (formula "43") (term "2,0"))
                                                                        (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                                        (rule "disjointAllFields" (formula "3") (term "1,0,0") (ifseqformula "28"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "0,1,1,0,0"))
                                                                        (rule "mul_literals" (formula "3") (term "0,0,1,1,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                                                        (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                        (rule "disjointAllFields" (formula "2") (term "1,0,0") (ifseqformula "28"))
                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "0,1,1,0,0"))
                                                                        (rule "mul_literals" (formula "2") (term "0,0,1,1,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0"))
                                                                        (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=arr_3"))
                                                                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                                                                        (rule "simplifySelectOfAnon" (formula "7"))
                                                                         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "55")) (ifInst ""  (formula "14")))
                                                                        (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                                                                        (rule "mul_literals" (formula "8") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "1,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_mulAssoc" (formula "4") (term "0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "0,1"))
                                                                        (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=arr_4"))
                                                                        (rule "simplifySelectOfAnon" (formula "6"))
                                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "56")) (ifInst ""  (formula "15")))
                                                                        (rule "inEqSimp_homoInEq0" (formula "7"))
                                                                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                        (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                        (rule "polySimp_mulAssoc" (formula "7") (term "0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "7") (term "0,1"))
                                                                        (rule "elementOfUnion" (formula "8") (term "0,0"))
                                                                        (rule "disjointAllFields" (formula "8") (term "1,0,0") (ifseqformula "31"))
                                                                         (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "8") (term "0,0"))
                                                                        (rule "eqSymm" (formula "8") (term "0,0,0,0"))
                                                                        (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "54"))
                                                                         (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "applyEqReverse" (formula "4") (term "0,1") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "9") (term "1,0,1") (ifseqformula "8"))
                                                                        (rule "hideAuxiliaryEq" (formula "8"))
                                                                        (rule "polySimp_addComm0" (formula "4") (term "1"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "8"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                                                                        (rule "mul_literals" (formula "8") (term "0,0,1"))
                                                                        (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "8"))
                                                                         (builtin "One Step Simplification" (formula "52"))
                                                                        (rule "inEqSimp_leqRight" (formula "52"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                                        (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "38"))
                                                                        (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "37") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                                        (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "42"))
                                                                        (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "43") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                                        (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "41"))
                                                                        (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "38") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                                        (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "41"))
                                                                        (rule "mul_literals" (formula "22") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "22") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                                        (rule "mul_literals" (formula "22") (term "1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "22"))
                                                                        (rule "leq_literals" (formula "10") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "true_left" (formula "10"))
                                                                        (rule "elementOfUnion" (formula "7") (term "0,0"))
                                                                        (rule "disjointAllFields" (formula "7") (term "1,0,0") (ifseqformula "31"))
                                                                         (builtin "One Step Simplification" (formula "7"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "7") (term "0,0"))
                                                                        (rule "eqSymm" (formula "7") (term "0,0,0,0"))
                                                                        (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "56"))
                                                                         (builtin "One Step Simplification" (formula "7"))
                                                                        (rule "applyEqReverse" (formula "8") (term "0,1") (ifseqformula "7"))
                                                                        (rule "hideAuxiliaryEq" (formula "7"))
                                                                        (rule "polySimp_addComm0" (formula "7") (term "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "1"))
                                                                        (rule "andLeft" (formula "7"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "7") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                                        (rule "add_literals" (formula "7") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "7") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "7") (term "0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
                                                                        (rule "add_literals" (formula "7") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "7") (term "1,0"))
                                                                        (rule "add_literals" (formula "7") (term "0"))
                                                                        (rule "leq_literals" (formula "7"))
                                                                        (rule "closeFalse" (formula "7"))
                                                                     )
                                                                     (branch "Case 2"
                                                                        (rule "allLeftHide" (formula "24") (inst "t=j_0") (userinteraction))
                                                                        (rule "eqSymm" (formula "52"))
                                                                        (rule "replace_known_left" (formula "37") (term "1,1") (ifseqformula "41"))
                                                                         (builtin "One Step Simplification" (formula "37"))
                                                                        (rule "replace_known_left" (formula "24") (term "1,0") (ifseqformula "4"))
                                                                         (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,2,0"))
                                                                        (rule "mul_literals" (formula "51") (term "1,2,0,1,0,2,0"))
                                                                        (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,2,0"))
                                                                        (rule "mul_literals" (formula "48") (term "1,2,0,1,0,2,0"))
                                                                        (rule "polySimp_elimSub" (formula "57") (term "2,0,1,0,1"))
                                                                        (rule "mul_literals" (formula "57") (term "1,2,0,1,0,1"))
                                                                        (rule "polySimp_elimSub" (formula "3") (term "2,0,1,0,1,0"))
                                                                        (rule "mul_literals" (formula "3") (term "1,2,0,1,0,1,0"))
                                                                        (rule "polySimp_homoEq" (formula "26") (term "0,1,1"))
                                                                        (rule "polySimp_elimSub" (formula "6") (term "2,0,1,0,1,1"))
                                                                        (rule "mul_literals" (formula "6") (term "1,2,0,1,0,1,1"))
                                                                        (rule "polySimp_elimSub" (formula "2") (term "2,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "2") (term "1,2,0,1,0,0"))
                                                                        (rule "polySimp_elimSub" (formula "44") (term "2,0,1,0,1,2,0"))
                                                                        (rule "mul_literals" (formula "44") (term "1,2,0,1,0,1,2,0"))
                                                                        (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,2,0"))
                                                                        (rule "mul_literals" (formula "47") (term "1,2,0,1,0,2,0"))
                                                                        (rule "polySimp_elimSub" (formula "43") (term "2,0,1,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "43") (term "1,2,0,1,0,1,0,0"))
                                                                        (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "1") (term "1,2,0,1,0,0"))
                                                                        (rule "polySimp_elimSub" (formula "5") (term "2,0,1,0,1,0"))
                                                                        (rule "mul_literals" (formula "5") (term "1,2,0,1,0,1,0"))
                                                                        (rule "polySimp_elimSub" (formula "44") (term "2,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "44") (term "1,2,0,1,0,0"))
                                                                        (rule "polySimp_elimSub" (formula "50") (term "2,0,1,0,2,0"))
                                                                        (rule "mul_literals" (formula "50") (term "1,2,0,1,0,2,0"))
                                                                        (rule "polySimp_elimSub" (formula "57") (term "2,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "57") (term "1,2,0,1,0,0"))
                                                                        (rule "polySimp_elimSub" (formula "43") (term "2,0,1,0,2,0"))
                                                                        (rule "mul_literals" (formula "43") (term "1,2,0,1,0,2,0"))
                                                                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,1"))
                                                                        (rule "polySimp_addComm0" (formula "6") (term "0,2,1,1"))
                                                                        (rule "polySimp_addComm0" (formula "51") (term "0,2,1,0,1"))
                                                                        (rule "polySimp_addComm0" (formula "43") (term "0,2,1,1,1"))
                                                                        (rule "polySimp_addComm0" (formula "3") (term "0,2,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "48") (term "0,2,1,0,1"))
                                                                        (rule "polySimp_addComm0" (formula "24") (term "0,2,1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm1" (formula "57") (term "2,0,1,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "3") (term "2,0,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "6") (term "2,0,1,0,1,1"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "2,0,1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "2,0,1,0,1,2,0"))
                                                                        (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm1" (formula "43") (term "2,0,1,0,1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "2,0,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "2,0,1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "50") (term "2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm1" (formula "57") (term "2,0,1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "43") (term "2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm0" (formula "57") (term "0,2,0,1,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,1"))
                                                                        (rule "mul_literals" (formula "26") (term "0,1,0,0,1,1"))
                                                                        (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "6") (term "0,2,0,1,0,1,1"))
                                                                        (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,0,1,2,0"))
                                                                        (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm0" (formula "43") (term "0,2,0,1,0,1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "5") (term "0,2,0,1,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "50") (term "0,2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm0" (formula "57") (term "0,2,0,1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "43") (term "0,2,0,1,0,2,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_gtToGeq" (formula "38"))
                                                                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "4"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "37") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "24") (term "1"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,1"))
                                                                        (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,1"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "39"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "7"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "37") (term "1,1"))
                                                                        (rule "inEqSimp_ltRight" (formula "57"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "19"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "25") (term "0,0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "6"))
                                                                        (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                        (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                                        (rule "apply_eq_monomials" (formula "1") (term "1,0") (ifseqformula "3"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
                                                                        (rule "add_literals" (formula "1") (term "1,1,1,0"))
                                                                        (rule "times_zero_1" (formula "1") (term "1,1,0"))
                                                                        (rule "add_zero_right" (formula "1") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                        (rule "jmod_axiom" (formula "27") (term "0,1,1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,1"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "27") (term "0,1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,1"))
                                                                        (rule "polySimp_elimOne" (formula "27") (term "0,0,1,1"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "27") (term "1,1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "27") (term "0,1,1,1"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                        (rule "mul_literals" (formula "5") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                                        (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0"))
                                                                        (rule "polySimp_mulLiterals" (formula "38") (term "0,0"))
                                                                        (rule "polySimp_elimOne" (formula "38") (term "0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "25") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "25") (term "0,1"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0"))
                                                                        (rule "polySimp_mulLiterals" (formula "25") (term "0,0"))
                                                                        (rule "polySimp_elimOne" (formula "25") (term "0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                        (rule "inEqSimp_contradEq3" (formula "53") (ifseqformula "39"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0"))
                                                                        (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "53") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "53") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "53"))
                                                                        (rule "false_right" (formula "53"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "38") (term "0") (ifseqformula "39"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "38") (term "0,0,0"))
                                                                        (rule "leq_literals" (formula "38") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "38"))
                                                                        (rule "true_left" (formula "38"))
                                                                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
                                                                        (rule "simplifySelectOfAnon" (formula "3"))
                                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")) (ifInst ""  (formula "12")))
                                                                        (rule "eqSymm" (formula "4"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "4"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "pullOutSelect" (formula "44") (term "1,2,0") (inst "selectSK=arr_1"))
                                                                        (rule "applyEq" (formula "43") (term "1,0,0") (ifseqformula "44"))
                                                                        (rule "simplifySelectOfAnon" (formula "44"))
                                                                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "55")) (ifInst ""  (formula "13")))
                                                                        (rule "polySimp_addComm0" (formula "45") (term "2,0"))
                                                                        (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                                        (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_2"))
                                                                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                                        (rule "simplifySelectOfAnon" (formula "2"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "57")) (ifInst ""  (formula "12")))
                                                                        (rule "eqSymm" (formula "3"))
                                                                        (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "3"))
                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "3"))
                                                                        (rule "hideAuxiliaryEq" (formula "3"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "1"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                                        (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                                        (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                                        (rule "leq_literals" (formula "25") (term "0,1"))
                                                                         (builtin "One Step Simplification" (formula "25"))
                                                                        (rule "notLeft" (formula "25"))
                                                                        (rule "inEqSimp_leqRight" (formula "52"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                                        (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                                        (rule "elementOfUnion" (formula "4") (term "0,0"))
                                                                        (rule "disjointAllFields" (formula "4") (term "1,0,0") (ifseqformula "29"))
                                                                         (builtin "One Step Simplification" (formula "4"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "4"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,1,1,0,0"))
                                                                        (rule "mul_literals" (formula "4") (term "0,0,1,1,0,0"))
                                                                        (rule "elementOfUnion" (formula "44") (term "0,0"))
                                                                        (rule "disjointAllFields" (formula "44") (term "1,0,0") (ifseqformula "30"))
                                                                         (builtin "One Step Simplification" (formula "44"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "44") (term "0,0"))
                                                                        (rule "eqSymm" (formula "44") (term "0,0,0,0"))
                                                                        (rule "replace_known_right" (formula "44") (term "0,0,0,0") (ifseqformula "53"))
                                                                         (builtin "One Step Simplification" (formula "44"))
                                                                        (rule "applyEqReverse" (formula "43") (term "0,0,0") (ifseqformula "44"))
                                                                        (rule "applyEqReverse" (formula "45") (term "0,2,0") (ifseqformula "44"))
                                                                        (rule "hideAuxiliaryEq" (formula "44"))
                                                                        (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "2,0"))
                                                                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                                        (rule "disjointAllFields" (formula "3") (term "1,0,0") (ifseqformula "29"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "0,1,1,0,0"))
                                                                        (rule "mul_literals" (formula "3") (term "0,0,1,1,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                                                        (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=arr_3"))
                                                                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "8"))
                                                                        (rule "simplifySelectOfAnon" (formula "8"))
                                                                         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "55")) (ifInst ""  (formula "15")))
                                                                        (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                        (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                                        (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                                                                        (rule "mul_literals" (formula "9") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_mulAssoc" (formula "5") (term "0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "0,1"))
                                                                        (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=arr_4"))
                                                                        (rule "simplifySelectOfAnon" (formula "7"))
                                                                         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "56")) (ifInst ""  (formula "16")))
                                                                        (rule "inEqSimp_homoInEq0" (formula "8"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                        (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                        (rule "polySimp_mulAssoc" (formula "8") (term "0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "0,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "41"))
                                                                        (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "38") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                                        (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "41"))
                                                                        (rule "times_zero_1" (formula "23") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "23") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                        (rule "mul_literals" (formula "23") (term "1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "23"))
                                                                        (rule "leq_literals" (formula "11") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "true_left" (formula "11"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "43"))
                                                                        (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "40"))
                                                                        (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "39") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                                        (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                                        (rule "elementOfUnion" (formula "9") (term "0,0"))
                                                                        (rule "disjointAllFields" (formula "9") (term "1,0,0") (ifseqformula "32"))
                                                                         (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "9") (term "0,0"))
                                                                        (rule "eqSymm" (formula "9") (term "0,0,0,0"))
                                                                        (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "57"))
                                                                         (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "applyEqReverse" (formula "5") (term "0,1") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "10") (term "1,0,1") (ifseqformula "9"))
                                                                        (rule "hideAuxiliaryEq" (formula "9"))
                                                                        (rule "polySimp_addComm0" (formula "5") (term "1"))
                                                                        (rule "polySimp_addComm1" (formula "9") (term "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "9"))
                                                                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                        (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                                                                        (rule "mul_literals" (formula "9") (term "0,0,1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "1"))
                                                                        (rule "andLeft" (formula "5"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                                        (rule "add_literals" (formula "5") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "5") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "5") (term "0"))
                                                                        (rule "leq_literals" (formula "5"))
                                                                        (rule "closeFalse" (formula "5"))
                                                                     )
                                                                  )
                                                                  (branch "Assume values[i_0]@heap[anon( arrayRange(values, begin + bucket_starts[bucket], begin + bucket_starts[ 1 + bucket] - 1) cup storage.allArrays, anonOut_heap<<anonHeapFunction>>)] != values[i_0]"
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "eqSymm" (formula "52"))
                                                                     (rule "replace_known_left" (formula "36") (term "1,1") (ifseqformula "40"))
                                                                      (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "polySimp_elimSub" (formula "5") (term "2,0,1,0,1,1"))
                                                                     (rule "mul_literals" (formula "5") (term "1,2,0,1,0,1,1"))
                                                                     (rule "polySimp_elimSub" (formula "50") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "50") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_homoEq" (formula "25") (term "0,1,1"))
                                                                     (rule "polySimp_elimSub" (formula "2") (term "2,0,1,0,1,0"))
                                                                     (rule "mul_literals" (formula "2") (term "1,2,0,1,0,1,0"))
                                                                     (rule "polySimp_elimSub" (formula "46") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "46") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "47") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "57") (term "2,0,1,0,1"))
                                                                     (rule "mul_literals" (formula "57") (term "1,2,0,1,0,1"))
                                                                     (rule "polySimp_elimSub" (formula "43") (term "2,0,1,0,1,2,0"))
                                                                     (rule "mul_literals" (formula "43") (term "1,2,0,1,0,1,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,1,0"))
                                                                     (rule "mul_literals" (formula "4") (term "1,2,0,1,0,1,0"))
                                                                     (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "1,2,0,1,0,0"))
                                                                     (rule "polySimp_elimSub" (formula "43") (term "2,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "43") (term "1,2,0,1,0,0"))
                                                                     (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "42") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "49") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "49") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "42") (term "1,2,0,1,0,1,0,0"))
                                                                     (rule "polySimp_elimSub" (formula "57") (term "2,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "57") (term "1,2,0,1,0,0"))
                                                                     (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "51") (term "1,2,0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,1"))
                                                                     (rule "polySimp_addComm0" (formula "47") (term "0,2,1,0,1"))
                                                                     (rule "polySimp_addComm0" (formula "23") (term "0,2,1,1,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "50") (term "0,2,1,0,1"))
                                                                     (rule "polySimp_addComm0" (formula "5") (term "0,2,1,1"))
                                                                     (rule "polySimp_addComm0" (formula "23") (term "0,2,1,0,0,0,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "42") (term "0,2,1,1,1"))
                                                                     (rule "polySimp_addComm0" (formula "2") (term "0,2,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "2,0,1,0,1,1"))
                                                                     (rule "polySimp_addComm1" (formula "50") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "2,0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "46") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "57") (term "2,0,1,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "43") (term "2,0,1,0,1,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "43") (term "2,0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "49") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "57") (term "2,0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "5") (term "0,2,0,1,0,1,1"))
                                                                     (rule "polySimp_addComm0" (formula "50") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,1"))
                                                                     (rule "mul_literals" (formula "25") (term "0,1,0,0,1,1"))
                                                                     (rule "polySimp_addComm0" (formula "46") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "57") (term "0,2,0,1,0,1"))
                                                                     (rule "polySimp_addComm0" (formula "43") (term "0,2,0,1,0,1,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "43") (term "0,2,0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "49") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "57") (term "0,2,0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "37"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "19"))
                                                                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "36") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,1"))
                                                                     (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,1"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,1,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "38"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "6"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "36") (term "1,1"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "5"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0"))
                                                                     (rule "inEqSimp_ltRight" (formula "57"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "18"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "18") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                                     (rule "apply_eq_monomials" (formula "1") (term "1,0") (ifseqformula "2"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "1,0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,1,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,1,0"))
                                                                     (rule "add_zero_right" (formula "1") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                     (rule "jmod_axiom" (formula "26") (term "0,1,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1,1"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "26") (term "0,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1,1"))
                                                                     (rule "polySimp_elimOne" (formula "26") (term "0,0,1,1"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "26") (term "1,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "26") (term "0,1,1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                     (rule "mul_literals" (formula "4") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                                     (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                                                     (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "24") (term "0,1,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "0,0"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "24") (term "0,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "24") (term "0,0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "24") (term "1,0,1,1,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                                     (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                     (rule "inEqSimp_contradEq3" (formula "53") (ifseqformula "38"))
                                                                     (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0"))
                                                                     (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "53") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "53") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "53"))
                                                                     (rule "false_right" (formula "53"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "37") (term "0") (ifseqformula "38"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                                                     (rule "leq_literals" (formula "37") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "true_left" (formula "37"))
                                                                     (rule "pullOutSelect" (formula "43") (term "1,2,0") (inst "selectSK=arr_0"))
                                                                     (rule "applyEq" (formula "42") (term "1,0,0") (ifseqformula "43"))
                                                                     (rule "simplifySelectOfAnon" (formula "43"))
                                                                      (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "55")) (ifInst ""  (formula "12")))
                                                                     (rule "polySimp_addComm0" (formula "44") (term "2,0"))
                                                                     (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                                     (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_1"))
                                                                     (rule "simplifySelectOfAnon" (formula "2"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "57")) (ifInst ""  (formula "11")))
                                                                     (rule "eqSymm" (formula "3"))
                                                                     (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "3"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=arr_2"))
                                                                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "11")))
                                                                     (rule "eqSymm" (formula "53"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "2"))
                                                                     (rule "elementOfUnion" (formula "44") (term "0,0"))
                                                                     (rule "disjointAllFields" (formula "44") (term "1,0,0") (ifseqformula "30"))
                                                                      (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "44") (term "0,0"))
                                                                     (rule "eqSymm" (formula "44") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "44") (term "0,0,0,0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "applyEqReverse" (formula "45") (term "0,2,0") (ifseqformula "44"))
                                                                     (rule "applyEqReverse" (formula "43") (term "0,0,0") (ifseqformula "44"))
                                                                     (rule "hideAuxiliaryEq" (formula "44"))
                                                                     (rule "polySimp_addComm0" (formula "44") (term "2,0"))
                                                                     (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                                     (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                                     (rule "disjointAllFields" (formula "3") (term "1,0,0") (ifseqformula "29"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "0,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "3") (term "0,0,1,1,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                     (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "29"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0"))
                                                                     (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=arr_3"))
                                                                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                                                                     (rule "simplifySelectOfAnon" (formula "7"))
                                                                      (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "56")) (ifInst ""  (formula "14")))
                                                                     (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                                     (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                                                                     (rule "mul_literals" (formula "8") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "1,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_mulAssoc" (formula "4") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "0,1"))
                                                                     (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=arr_4"))
                                                                     (rule "simplifySelectOfAnon" (formula "6"))
                                                                      (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "57")) (ifInst ""  (formula "15")))
                                                                     (rule "inEqSimp_homoInEq0" (formula "7"))
                                                                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                     (rule "polySimp_mulAssoc" (formula "7") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "7") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "7") (term "0,1"))
                                                                     (rule "elementOfUnion" (formula "8") (term "0,0"))
                                                                     (rule "disjointAllFields" (formula "8") (term "1,0,0") (ifseqformula "32"))
                                                                      (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "8") (term "0,0"))
                                                                     (rule "eqSymm" (formula "8") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "55"))
                                                                      (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "applyEqReverse" (formula "4") (term "0,1") (ifseqformula "8"))
                                                                     (rule "applyEqReverse" (formula "9") (term "1,0,1") (ifseqformula "8"))
                                                                     (rule "hideAuxiliaryEq" (formula "8"))
                                                                     (rule "polySimp_addComm0" (formula "4") (term "1"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "8"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                     (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                                                                     (rule "mul_literals" (formula "8") (term "0,0,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "41"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "40"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "37") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "39"))
                                                                     (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "38") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                                     (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "41"))
                                                                     (rule "times_zero_1" (formula "21") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "21") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                                     (rule "mul_literals" (formula "21") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "21"))
                                                                     (rule "leq_literals" (formula "9") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "true_left" (formula "9"))
                                                                     (rule "elementOfUnion" (formula "6") (term "0,0"))
                                                                     (rule "disjointAllFields" (formula "6") (term "1,0,0") (ifseqformula "31"))
                                                                      (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "6") (term "0,0"))
                                                                     (rule "eqSymm" (formula "6") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "57"))
                                                                      (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "applyEqReverse" (formula "7") (term "0,1") (ifseqformula "6"))
                                                                     (rule "hideAuxiliaryEq" (formula "6"))
                                                                     (rule "polySimp_addComm0" (formula "6") (term "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                     (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "6") (term "0,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "44") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                                     (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                                                                     (rule "mul_literals" (formula "35") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "35") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                                                                     (rule "mul_literals" (formula "36") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "36") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                                     (rule "polySimp_mulLiterals" (formula "36") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "36") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                                                                     (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                                     (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                     (rule "mul_literals" (formula "7") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "44"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "6"))
                                                                     (rule "mul_literals" (formula "37") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "37") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "48"))
                                                                     (rule "mul_literals" (formula "38") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "38") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                                     (rule "polySimp_mulLiterals" (formula "38") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "38") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "48"))
                                                                     (rule "mul_literals" (formula "39") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "39") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                                     (rule "polySimp_mulLiterals" (formula "39") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                                                     (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                                     (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                     (rule "add_literals" (formula "7") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                     (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "7"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                                     (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "9") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "9") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "true_left" (formula "9"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "7"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "37") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "37"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                                                     (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "17") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "17") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "true_left" (formula "17"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "5"))
                                                                     (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "38") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                                     (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "38") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                                                     (rule "mul_literals" (formula "38") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "36"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "38") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                                                     (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "38") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "38") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "true_left" (formula "38"))
                                                                     (rule "commuteUnion" (formula "60") (term "1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "56") (term "1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "57") (term "1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "53") (term "1,0,0"))
                                                                     (rule "commuteUnion" (formula "52") (term "1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "59") (term "1,0,2,0"))
                                                                     (rule "nnf_imp2or" (formula "26") (term "0"))
                                                                     (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "28") (term "0,0,1") (inst "b=b"))
                                                                      (builtin "One Step Simplification" (formula "28"))
                                                                     (rule "translateJavaAddInt" (formula "28") (term "3,0,1,0,0,1"))
                                                                     (rule "translateJavaMod" (formula "28") (term "0,1,0,0,0,1"))
                                                                     (rule "translateJavaAddInt" (formula "28") (term "2,0,1,0,0,1"))
                                                                     (rule "translateJavaAddInt" (formula "28") (term "0,2,1,3,0,1,0,0,1"))
                                                                     (rule "polySimp_addComm0" (formula "28") (term "0,2,1,3,0,1,0,0,1"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,0,1"))
                                                                     (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,0,1"))
                                                                     (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,0,1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0,0,1"))
                                                                     (rule "jmod_axiom" (formula "28") (term "0,1,0,0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0,1"))
                                                                     (rule "polySimp_homoEq" (formula "28") (term "1,0,0,0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,0,0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,1,0,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "28") (term "0,1,0,0,0,1"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "28") (term "1,0,0,0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,1"))
                                                                     (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0,1"))
                                                                     (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0,1"))
                                                                     (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "23") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "translateJavaAddInt" (formula "23") (term "0,1,0,0"))
                                                                     (rule "translateJavaAddInt" (formula "23") (term "3,0,1,0"))
                                                                     (rule "andLeft" (formula "23"))
                                                                     (rule "andLeft" (formula "23"))
                                                                     (rule "andLeft" (formula "23"))
                                                                     (rule "polySimp_addComm0" (formula "25") (term "3,0"))
                                                                     (rule "polySimp_addComm0" (formula "24") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "23"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "24"))
                                                                     (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "28") (term "0") (inst "b=b"))
                                                                      (builtin "One Step Simplification" (formula "28"))
                                                                     (rule "translateJavaAddInt" (formula "28") (term "2,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "28") (term "3,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "28") (term "0,2,1,3,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "28") (term "0,2,1,3,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                                                     (rule "Definition_axiom_for_bucketStartsOrdering_in_de_wiesler_Functions" (formula "37") (term "0") (inst "b=b"))
                                                                      (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "translateJavaAddInt" (formula "37") (term "0,2,0,0,0,1,1,1,0,1"))
                                                                     (rule "translateJavaAddInt" (formula "37") (term "0,2,1,1,0,1,1,1,0,1"))
                                                                     (rule "translateJavaAddInt" (formula "37") (term "0,2,0,1,1,1,1,0,1"))
                                                                     (rule "translateJavaAddInt" (formula "37") (term "0,2,1,1,0,0"))
                                                                     (rule "translateJavaAddInt" (formula "37") (term "0,2,0,1,1,0,1,0,1"))
                                                                     (rule "translateJavaAddInt" (formula "37") (term "0,2,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "37") (term "0,2,1,1,0,1,0,1,0,1"))
                                                                     (rule "andLeft" (formula "37"))
                                                                     (rule "andLeft" (formula "37"))
                                                                     (rule "andLeft" (formula "37"))
                                                                     (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,1,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "40") (term "0,2,1,1,0,1,1,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "40") (term "0,2,0,0,0,1,1,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,1,1,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "40") (term "0,2,1,1,0,1,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "39") (term "0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "38") (term "0,2,1"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,1,0"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "40") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,1,0,1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "37"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,1,1,1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,1,1,1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,1,0,1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "38"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "37"))
                                                                     (rule "applyEq" (formula "37") (term "0") (ifseqformula "27"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "37"))
                                                                     (rule "applyEq" (formula "37") (term "1,1,1,1,1,0") (ifseqformula "27"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "1,1,0,1,1,0"))
                                                                     (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "35"))
                                                                      (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "translateJavaMulInt" (formula "35") (term "1,1,0,0,0,0,1,0,0"))
                                                                     (rule "translateJavaMulInt" (formula "35") (term "1,1,0,0,0,0,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "35") (term "1,1,0,0,0,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "35") (term "1,1,0,0,0,0,0,1,0,0"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "andLeft" (formula "37"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "andLeft" (formula "38"))
                                                                     (rule "andLeft" (formula "36"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "andLeft" (formula "40"))
                                                                     (rule "andLeft" (formula "37"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "notLeft" (formula "37"))
                                                                     (rule "andLeft" (formula "41"))
                                                                     (rule "andLeft" (formula "37"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "notLeft" (formula "37"))
                                                                     (rule "andLeft" (formula "42"))
                                                                     (rule "andLeft" (formula "37"))
                                                                     (rule "notLeft" (formula "36"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "andLeft" (formula "43"))
                                                                     (rule "andLeft" (formula "37"))
                                                                     (rule "notLeft" (formula "36"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "37"))
                                                                     (rule "notLeft" (formula "36"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "37"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "notLeft" (formula "37"))
                                                                     (rule "andLeft" (formula "46"))
                                                                     (rule "notLeft" (formula "36"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "disjointDefinition" (formula "71"))
                                                                      (builtin "One Step Simplification" (formula "71"))
                                                                     (rule "notLeft" (formula "71"))
                                                                     (rule "disjointDefinition" (formula "70"))
                                                                      (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "notLeft" (formula "70"))
                                                                     (rule "disjointDefinition" (formula "69"))
                                                                      (builtin "One Step Simplification" (formula "69"))
                                                                     (rule "notLeft" (formula "69"))
                                                                     (rule "eqSymm" (formula "97"))
                                                                     (rule "disjointDefinition" (formula "68"))
                                                                      (builtin "One Step Simplification" (formula "68"))
                                                                     (rule "notLeft" (formula "68"))
                                                                     (rule "eqSymm" (formula "96"))
                                                                     (rule "disjointDefinition" (formula "67"))
                                                                      (builtin "One Step Simplification" (formula "67"))
                                                                     (rule "notLeft" (formula "67"))
                                                                     (rule "eqSymm" (formula "95"))
                                                                     (rule "disjointDefinition" (formula "66"))
                                                                      (builtin "One Step Simplification" (formula "66"))
                                                                     (rule "notLeft" (formula "66"))
                                                                     (rule "eqSymm" (formula "94"))
                                                                     (rule "disjointDefinition" (formula "65"))
                                                                      (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "notLeft" (formula "65"))
                                                                     (rule "eqSymm" (formula "93"))
                                                                     (rule "disjointDefinition" (formula "64"))
                                                                      (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "notLeft" (formula "64"))
                                                                     (rule "eqSymm" (formula "92"))
                                                                     (rule "disjointDefinition" (formula "63"))
                                                                      (builtin "One Step Simplification" (formula "63"))
                                                                     (rule "notLeft" (formula "63"))
                                                                     (rule "eqSymm" (formula "91"))
                                                                     (rule "disjointDefinition" (formula "62"))
                                                                      (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "notLeft" (formula "62"))
                                                                     (rule "eqSymm" (formula "90"))
                                                                     (rule "disjointDefinition" (formula "61"))
                                                                      (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "notLeft" (formula "61"))
                                                                     (rule "eqSymm" (formula "89"))
                                                                     (rule "disjointDefinition" (formula "60"))
                                                                      (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "notLeft" (formula "60"))
                                                                     (rule "eqSymm" (formula "88"))
                                                                     (rule "disjointDefinition" (formula "59"))
                                                                      (builtin "One Step Simplification" (formula "59"))
                                                                     (rule "notLeft" (formula "59"))
                                                                     (rule "eqSymm" (formula "87"))
                                                                     (rule "disjointDefinition" (formula "58"))
                                                                      (builtin "One Step Simplification" (formula "58"))
                                                                     (rule "notLeft" (formula "58"))
                                                                     (rule "eqSymm" (formula "86"))
                                                                     (rule "disjointDefinition" (formula "57"))
                                                                      (builtin "One Step Simplification" (formula "57"))
                                                                     (rule "notLeft" (formula "57"))
                                                                     (rule "eqSymm" (formula "85"))
                                                                     (rule "disjointDefinition" (formula "56"))
                                                                      (builtin "One Step Simplification" (formula "56"))
                                                                     (rule "notLeft" (formula "56"))
                                                                     (rule "disjointDefinition" (formula "55"))
                                                                      (builtin "One Step Simplification" (formula "55"))
                                                                     (rule "notLeft" (formula "55"))
                                                                     (rule "eqSymm" (formula "83"))
                                                                     (rule "disjointDefinition" (formula "54"))
                                                                      (builtin "One Step Simplification" (formula "54"))
                                                                     (rule "notLeft" (formula "54"))
                                                                     (rule "eqSymm" (formula "82"))
                                                                     (rule "disjointDefinition" (formula "53"))
                                                                      (builtin "One Step Simplification" (formula "53"))
                                                                     (rule "notLeft" (formula "53"))
                                                                     (rule "disjointDefinition" (formula "52"))
                                                                      (builtin "One Step Simplification" (formula "52"))
                                                                     (rule "notLeft" (formula "52"))
                                                                     (rule "disjointDefinition" (formula "51"))
                                                                      (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "notLeft" (formula "51"))
                                                                     (rule "disjointDefinition" (formula "50"))
                                                                      (builtin "One Step Simplification" (formula "50"))
                                                                     (rule "notLeft" (formula "50"))
                                                                     (rule "disjointDefinition" (formula "49"))
                                                                      (builtin "One Step Simplification" (formula "49"))
                                                                     (rule "notLeft" (formula "49"))
                                                                     (rule "disjointDefinition" (formula "48"))
                                                                      (builtin "One Step Simplification" (formula "48"))
                                                                     (rule "notLeft" (formula "48"))
                                                                     (rule "disjointDefinition" (formula "47"))
                                                                      (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "notLeft" (formula "47"))
                                                                     (rule "disjointDefinition" (formula "46"))
                                                                      (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "notLeft" (formula "46"))
                                                                     (rule "disjointDefinition" (formula "44"))
                                                                      (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "notLeft" (formula "44"))
                                                                     (rule "disjointDefinition" (formula "44"))
                                                                      (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "notLeft" (formula "44"))
                                                                     (rule "applyEq" (formula "68") (term "0,1,0,2,0") (ifseqformula "43"))
                                                                     (rule "applyEq" (formula "64") (term "0,1,0,0") (ifseqformula "43"))
                                                                     (rule "applyEq" (formula "63") (term "0,1,0,2,0") (ifseqformula "43"))
                                                                     (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "43"))
                                                                     (rule "applyEq" (formula "71") (term "0,1,0,2,0") (ifseqformula "43"))
                                                                     (rule "applyEq" (formula "67") (term "0,1,0,2,0") (ifseqformula "43"))
                                                                     (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "43"))
                                                                     (rule "applyEq" (formula "70") (term "0,1,0,2,0") (ifseqformula "43"))
                                                                     (rule "distributeIntersection" (formula "33") (term "0"))
                                                                     (rule "distributeIntersection" (formula "34") (term "0"))
                                                                     (rule "distributeIntersection" (formula "33") (term "1,0"))
                                                                     (rule "distributeIntersection" (formula "33") (term "0,0"))
                                                                     (rule "unionEqualsEmpty" (formula "34"))
                                                                     (rule "andLeft" (formula "34"))
                                                                     (rule "distributeIntersection" (formula "33") (term "0,1,0"))
                                                                     (rule "distributeIntersection" (formula "33") (term "1,1,0"))
                                                                     (rule "distributeIntersection" (formula "33") (term "1,0,0"))
                                                                     (rule "distributeIntersection" (formula "33") (term "0,0,0"))
                                                                     (rule "distributeIntersection" (formula "35") (term "0"))
                                                                     (rule "distributeIntersection" (formula "34") (term "0"))
                                                                     (rule "unionEqualsEmpty" (formula "33"))
                                                                     (rule "andLeft" (formula "33"))
                                                                     (rule "distributeIntersection" (formula "36") (term "0,0"))
                                                                     (rule "distributeIntersection" (formula "36") (term "1,0"))
                                                                     (rule "distributeIntersection" (formula "35") (term "1,0"))
                                                                     (rule "distributeIntersection" (formula "35") (term "0,0"))
                                                                     (rule "unionEqualsEmpty" (formula "34"))
                                                                     (rule "andLeft" (formula "34"))
                                                                     (rule "unionEqualsEmpty" (formula "33"))
                                                                     (rule "andLeft" (formula "33"))
                                                                     (rule "unionEqualsEmpty" (formula "38"))
                                                                     (rule "andLeft" (formula "38"))
                                                                     (rule "unionEqualsEmpty" (formula "37"))
                                                                     (rule "andLeft" (formula "37"))
                                                                     (rule "unionEqualsEmpty" (formula "36"))
                                                                      (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "andLeft" (formula "36"))
                                                                     (rule "notLeft" (formula "37"))
                                                                     (rule "notLeft" (formula "36"))
                                                                     (rule "eqSymm" (formula "78"))
                                                                     (rule "eqSymm" (formula "77"))
                                                                     (rule "unionEqualsEmpty" (formula "35"))
                                                                      (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "eqSymm" (formula "77"))
                                                                     (rule "eqSymm" (formula "76"))
                                                                     (rule "unionEqualsEmpty" (formula "33"))
                                                                      (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "andLeft" (formula "33"))
                                                                     (rule "notLeft" (formula "33"))
                                                                     (rule "notLeft" (formula "33"))
                                                                     (rule "eqSymm" (formula "76"))
                                                                     (rule "eqSymm" (formula "75"))
                                                                     (rule "unionEqualsEmpty" (formula "33"))
                                                                      (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "andLeft" (formula "33"))
                                                                     (rule "notLeft" (formula "33"))
                                                                     (rule "notLeft" (formula "33"))
                                                                     (rule "eqSymm" (formula "75"))
                                                                     (rule "eqSymm" (formula "74"))
                                                                     (rule "unionEqualsEmpty" (formula "35"))
                                                                      (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "eqSymm" (formula "74"))
                                                                     (rule "eqSymm" (formula "73"))
                                                                     (rule "unionEqualsEmpty" (formula "35"))
                                                                      (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "eqSymm" (formula "73"))
                                                                     (rule "eqSymm" (formula "72"))
                                                                     (rule "unionEqualsEmpty" (formula "34"))
                                                                      (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "andLeft" (formula "34"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "notLeft" (formula "34"))
                                                                     (rule "eqSymm" (formula "72"))
                                                                     (rule "eqSymm" (formula "71"))
                                                                     (rule "unionEqualsEmpty" (formula "33"))
                                                                      (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "andLeft" (formula "33"))
                                                                     (rule "notLeft" (formula "33"))
                                                                     (rule "notLeft" (formula "33"))
                                                                     (rule "eqSymm" (formula "71"))
                                                                     (rule "eqSymm" (formula "70"))
                                                                     (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "30") (term "0") (inst "b=b"))
                                                                      (builtin "One Step Simplification" (formula "30"))
                                                                     (rule "translateJavaAddInt" (formula "30") (term "0,2,5,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "30") (term "0,2,5,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                                                     (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "32") (term "0") (inst "b=b"))
                                                                      (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "translateJavaSubInt" (formula "32") (term "0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "32") (term "0,2,0,0,1,0"))
                                                                     (rule "polySimp_elimSub" (formula "32") (term "0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "32") (term "0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "32") (term "0,2,1,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "32") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "32") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "32") (term "0,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "32") (term "0,0,0,1,1,0"))
                                                                     (rule "commuteUnion" (formula "41") (term "1,1,1"))
                                                                     (rule "commuteUnion_2" (formula "41") (term "0,1"))
                                                                     (rule "commuteUnion_2" (formula "66") (term "0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "66") (term "1,1,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "62") (term "0,0,0,1,0,0"))
                                                                     (rule "commuteUnion" (formula "62") (term "1,1,0,1,0,0"))
                                                                     (rule "commuteUnion" (formula "61") (term "1,1,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "61") (term "0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "69") (term "1,1,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "69") (term "0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "65") (term "0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "65") (term "1,1,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "68") (term "0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "68") (term "1,1,0,1,0,2,0"))
                                                                     (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "29") (term "1,0,1,0,0,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "29") (term "0,0,1,0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,1,0,0"))
                                                                     (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0"))
                                                                     (rule "add_zero_left" (formula "29") (term "0,0,0,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "29") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "29") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "29") (term "0,1,1,0,0"))
                                                                     (rule "nnf_imp2or" (formula "29") (term "0,1,0"))
                                                                     (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "true_left" (formula "17"))
                                                                     (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                                                     (rule "nnf_imp2or" (formula "31") (term "0,0,1"))
                                                                     (rule "nnf_imp2or" (formula "28") (term "0"))
                                                                     (rule "commuteUnion" (formula "41") (term "0,0,1"))
                                                                     (rule "commuteUnion" (formula "66") (term "0,0,0,1,0,2,0"))
                                                                     (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0"))
                                                                     (rule "commuteUnion" (formula "61") (term "1,0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "69") (term "1,0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "65") (term "1,0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "68") (term "1,0,0,1,0,2,0"))
                                                                     (rule "nnf_imp2or" (formula "43") (term "0"))
                                                                     (rule "commuteUnion_2" (formula "41") (term "0,1"))
                                                                     (rule "commuteUnion_2" (formula "66") (term "0,0,1,0,2,0"))
                                                                     (rule "commuteUnion_2" (formula "62") (term "0,1,0,0"))
                                                                     (rule "commuteUnion_2" (formula "41") (term "1"))
                                                                     (rule "commuteUnion_2" (formula "66") (term "0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "62") (term "0,0,0,1,0,0"))
                                                                     (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                     (branch " bucket_starts[bucket] <= begin * -1 + i_0 & bucket_starts[1 + bucket] >= 1 + begin * -1 + i_0 TRUE"
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "applyEqReverse" (formula "124") (term "1") (ifseqformula "3"))
                                                                        (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "3"))
                                                                        (rule "hideAuxiliaryEq" (formula "3"))
                                                                        (rule "eqSymm" (formula "123"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "3"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "54"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                                        (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                        (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "9"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "2") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "true_left" (formula "2"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "1"))
                                                                        (rule "mul_literals" (formula "50") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "50") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                                        (rule "polySimp_mulLiterals" (formula "50") (term "1"))
                                                                        (rule "polySimp_elimOne" (formula "50") (term "1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "56"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                                        (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                                        (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "8"))
                                                                        (rule "andLeft" (formula "2"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                        (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "2") (term "0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                                                        (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "2") (term "0"))
                                                                        (rule "leq_literals" (formula "2"))
                                                                        (rule "closeFalse" (formula "2"))
                                                                     )
                                                                     (branch " bucket_starts[bucket] <= begin * -1 + i_0 & bucket_starts[1 + bucket] >= 1 + begin * -1 + i_0 FALSE"
                                                                        (rule "close" (formula "123") (ifseqformula "1"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch "Assume values[j_0]@heap[anon( arrayRange(values, begin + bucket_starts[bucket], begin + bucket_starts[ 1 + bucket] - 1) cup storage.allArrays, anonOut_heap<<anonHeapFunction>>)] != values[j_0]"
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "eqSymm" (formula "51"))
                                                                  (rule "replace_known_left" (formula "35") (term "1,1") (ifseqformula "39"))
                                                                   (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "polySimp_elimSub" (formula "3") (term "2,0,1,0,1,0"))
                                                                  (rule "mul_literals" (formula "3") (term "1,2,0,1,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "46") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "46") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,1,0"))
                                                                  (rule "mul_literals" (formula "1") (term "1,2,0,1,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,1,2,0"))
                                                                  (rule "mul_literals" (formula "42") (term "1,2,0,1,0,1,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "49") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "49") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "45") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "41") (term "1,2,0,1,0,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "56") (term "2,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "56") (term "1,2,0,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "42") (term "1,2,0,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,1,1"))
                                                                  (rule "mul_literals" (formula "4") (term "1,2,0,1,0,1,1"))
                                                                  (rule "polySimp_elimSub" (formula "56") (term "2,0,1,0,1"))
                                                                  (rule "mul_literals" (formula "56") (term "1,2,0,1,0,1"))
                                                                  (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "48") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_homoEq" (formula "24") (term "0,1,1"))
                                                                  (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "41") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "50") (term "2,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "50") (term "1,2,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "22") (term "0,2,1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "46") (term "0,2,1,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "49") (term "0,2,1,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "0,2,1,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "0,2,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "22") (term "0,2,1,1,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,2,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "2,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "46") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,1,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "45") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "56") (term "2,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "56") (term "2,0,1,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "50") (term "2,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "46") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "24") (term "0,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,1,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "49") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "56") (term "0,2,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "56") (term "0,2,0,1,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "50") (term "0,2,0,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "36"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "18"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "35") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "5"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "37"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "35") (term "1,1"))
                                                                  (rule "inEqSimp_ltRight" (formula "56"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "5"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "17"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "17") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                                  (rule "jmod_axiom" (formula "25") (term "0,1,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,1"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "25") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "0,0,1,1"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "25") (term "1,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "0,1,1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "23") (term "0,1,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "0,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "23") (term "0,0,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "23") (term "1,0,1,1,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_contradEq3" (formula "52") (ifseqformula "37"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0"))
                                                                  (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "52") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "52") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "false_right" (formula "52"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "36") (term "0") (ifseqformula "37"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "36") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "true_left" (formula "36"))
                                                                  (rule "pullOutSelect" (formula "42") (term "1,2,0") (inst "selectSK=arr_0"))
                                                                  (rule "applyEq" (formula "41") (term "1,0,0") (ifseqformula "42"))
                                                                  (rule "simplifySelectOfAnon" (formula "42"))
                                                                   (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "54")) (ifInst ""  (formula "11")))
                                                                  (rule "polySimp_addComm0" (formula "43") (term "2,0"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                                                  (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=arr_1"))
                                                                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                  (rule "simplifySelectOfAnon" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "10")))
                                                                  (rule "eqSymm" (formula "52"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "2"))
                                                                  (rule "elementOfUnion" (formula "43") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "43") (term "1,0,0") (ifseqformula "29"))
                                                                   (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "43") (term "0,0"))
                                                                  (rule "eqSymm" (formula "43") (term "0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "43") (term "0,0,0,0") (ifseqformula "53"))
                                                                   (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "applyEqReverse" (formula "42") (term "0,0,0") (ifseqformula "43"))
                                                                  (rule "applyEqReverse" (formula "44") (term "0,2,0") (ifseqformula "43"))
                                                                  (rule "hideAuxiliaryEq" (formula "43"))
                                                                  (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "43") (term "2,0"))
                                                                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "28"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0"))
                                                                  (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=arr_2"))
                                                                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "6"))
                                                                  (rule "simplifySelectOfAnon" (formula "6"))
                                                                   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "55")) (ifInst ""  (formula "13")))
                                                                  (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1"))
                                                                  (rule "mul_literals" (formula "7") (term "0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "1,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "3") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "0,1"))
                                                                  (rule "elementOfUnion" (formula "6") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "6") (term "1,0,0") (ifseqformula "30"))
                                                                   (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "6") (term "0,0"))
                                                                  (rule "eqSymm" (formula "6") (term "0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "53"))
                                                                   (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "applyEqReverse" (formula "7") (term "1,0,1") (ifseqformula "6"))
                                                                  (rule "applyEqReverse" (formula "3") (term "0,1") (ifseqformula "6"))
                                                                  (rule "hideAuxiliaryEq" (formula "6"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "3") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "6"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
                                                                  (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_3"))
                                                                  (rule "simplifySelectOfAnon" (formula "5"))
                                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "55")) (ifInst ""  (formula "13")))
                                                                  (rule "inEqSimp_homoInEq0" (formula "6"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "6") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "0,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "38"))
                                                                  (rule "times_zero_1" (formula "20") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "20") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                  (rule "mul_literals" (formula "20") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "20"))
                                                                  (rule "leq_literals" (formula "8") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "40"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "37"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "36") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "40"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "37") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                                  (rule "elementOfUnion" (formula "5") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "5") (term "1,0,0") (ifseqformula "30"))
                                                                   (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "5") (term "0,0"))
                                                                  (rule "eqSymm" (formula "5") (term "0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "56"))
                                                                   (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "applyEqReverse" (formula "6") (term "0,1") (ifseqformula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "polySimp_addComm0" (formula "5") (term "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,1"))
                                                                  (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_4"))
                                                                  (rule "simplifySelectOfAnon" (formula "2"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "59")) (ifInst ""  (formula "10")))
                                                                  (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                  (rule "disjointAllFields" (formula "2") (term "1,0,0") (ifseqformula "29"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,1,1,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                                  (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                                                                  (rule "times_zero_1" (formula "35") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "35") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "37"))
                                                                  (rule "times_zero_1" (formula "36") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "36") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "43"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "4"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "6"))
                                                                  (rule "times_zero_1" (formula "37") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "37") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "48"))
                                                                  (rule "times_zero_1" (formula "38") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "38") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "5"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "8"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "7") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "7") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "48"))
                                                                  (rule "times_zero_1" (formula "39") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "39") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                                  (rule "polySimp_mulLiterals" (formula "39") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "39") (term "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "38") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                                                  (rule "mul_literals" (formula "38") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "38"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                                                  (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "17") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "17") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1"))
                                                                  (rule "mul_literals" (formula "36") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "36"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "38") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                                                  (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "38") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "38") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "true_left" (formula "38"))
                                                                  (rule "commuteUnion" (formula "57") (term "1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "60") (term "1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "56") (term "1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "53") (term "1,0,0"))
                                                                  (rule "commuteUnion" (formula "59") (term "1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "52") (term "1,0,2,0"))
                                                                  (rule "nnf_imp2or" (formula "26") (term "0,1,0"))
                                                                  (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "27") (term "0") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "translateJavaAddInt" (formula "27") (term "0,2,5,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "27") (term "0,2,5,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                                  (rule "Contract_axiom_for_bucketStartsOrdering_in_Functions" (formula "34") (term "0"))
                                                                  (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "11"))
                                                                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "23")) (ifInst ""  (formula "65")) (ifInst ""  (formula "35")))
                                                                  (rule "true_left" (formula "34"))
                                                                  (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "28") (term "0,0,1") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "translateJavaAddInt" (formula "28") (term "3,0,1,0,0,1"))
                                                                  (rule "translateJavaMod" (formula "28") (term "0,1,0,0,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "28") (term "2,0,1,0,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "28") (term "0,2,1,3,0,1,0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "28") (term "0,2,1,3,0,1,0,0,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,0,1"))
                                                                  (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,0,1"))
                                                                  (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0,0,1"))
                                                                  (rule "jmod_axiom" (formula "28") (term "0,1,0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0,1"))
                                                                  (rule "polySimp_homoEq" (formula "28") (term "1,0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,1,0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0,1,0,0,0,1"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "28") (term "1,0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,1"))
                                                                  (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0,1"))
                                                                  (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0,1"))
                                                                  (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "23") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "translateJavaAddInt" (formula "23") (term "0,1,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "23") (term "3,0,1,0"))
                                                                  (rule "andLeft" (formula "23"))
                                                                  (rule "andLeft" (formula "23"))
                                                                  (rule "andLeft" (formula "23"))
                                                                  (rule "polySimp_addComm0" (formula "25") (term "3,0"))
                                                                  (rule "polySimp_addComm0" (formula "24") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "23"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "24"))
                                                                  (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "32") (term "0") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "32"))
                                                                  (rule "translateJavaSubInt" (formula "32") (term "0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "32") (term "0,2,0,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "32") (term "0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "32") (term "0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "32") (term "0,2,1,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "0,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "32") (term "0,0,0,1,1,0"))
                                                                  (rule "Definition_axiom_for_bucketStartsOrdering_in_de_wiesler_Functions" (formula "37") (term "0") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "translateJavaAddInt" (formula "37") (term "0,2,0,0,0,1,1,1,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "37") (term "0,2,1,1,0,1,1,1,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "37") (term "0,2,0,1,1,0,1,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "37") (term "0,2,0,1,1,1,1,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "37") (term "0,2,1,1,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "37") (term "0,2,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "37") (term "0,2,1,1,0,1,0,1,0,1"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,1,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "40") (term "0,2,1,1,0,1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "40") (term "0,2,1,1,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "40") (term "0,2,0,0,0,1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "39") (term "0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "38") (term "0,2,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "40") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,1,0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "37"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,1,1,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,1,0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,1,1,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "38"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "37"))
                                                                  (rule "applyEq" (formula "38") (term "1,1,1,1,1,0") (ifseqformula "27"))
                                                                  (rule "applyEq" (formula "37") (term "0") (ifseqformula "27"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "37"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "37") (term "0,1,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "1,1,0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0"))
                                                                  (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "28") (term "0") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "translateJavaAddInt" (formula "28") (term "0,2,1,3,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "28") (term "2,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "28") (term "3,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "28") (term "0,2,1,3,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "35"))
                                                                   (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "translateJavaMulInt" (formula "35") (term "1,1,0,0,0,0,1,0,0"))
                                                                  (rule "translateJavaMulInt" (formula "35") (term "1,1,0,0,0,0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "35") (term "1,1,0,0,0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "35") (term "1,1,0,0,0,0,0,1,0,0"))
                                                                  (rule "andLeft" (formula "35"))
                                                                  (rule "andLeft" (formula "35"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "35"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "andLeft" (formula "36"))
                                                                  (rule "andLeft" (formula "35"))
                                                                  (rule "andLeft" (formula "40"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "35"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "41"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "35"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "42"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "36"))
                                                                  (rule "andLeft" (formula "35"))
                                                                  (rule "andLeft" (formula "43"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "36"))
                                                                  (rule "andLeft" (formula "35"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "36"))
                                                                  (rule "andLeft" (formula "35"))
                                                                  (rule "andLeft" (formula "45"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "35"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "46"))
                                                                  (rule "notLeft" (formula "36"))
                                                                  (rule "notLeft" (formula "35"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "disjointDefinition" (formula "71"))
                                                                   (builtin "One Step Simplification" (formula "71"))
                                                                  (rule "notLeft" (formula "71"))
                                                                  (rule "disjointDefinition" (formula "70"))
                                                                   (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "notLeft" (formula "70"))
                                                                  (rule "disjointDefinition" (formula "69"))
                                                                   (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "notLeft" (formula "69"))
                                                                  (rule "eqSymm" (formula "97"))
                                                                  (rule "disjointDefinition" (formula "68"))
                                                                   (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "notLeft" (formula "68"))
                                                                  (rule "eqSymm" (formula "96"))
                                                                  (rule "disjointDefinition" (formula "67"))
                                                                   (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "notLeft" (formula "67"))
                                                                  (rule "eqSymm" (formula "95"))
                                                                  (rule "disjointDefinition" (formula "66"))
                                                                   (builtin "One Step Simplification" (formula "66"))
                                                                  (rule "notLeft" (formula "66"))
                                                                  (rule "eqSymm" (formula "94"))
                                                                  (rule "disjointDefinition" (formula "65"))
                                                                   (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "notLeft" (formula "65"))
                                                                  (rule "eqSymm" (formula "93"))
                                                                  (rule "disjointDefinition" (formula "64"))
                                                                   (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "notLeft" (formula "64"))
                                                                  (rule "eqSymm" (formula "92"))
                                                                  (rule "disjointDefinition" (formula "63"))
                                                                   (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "notLeft" (formula "63"))
                                                                  (rule "eqSymm" (formula "91"))
                                                                  (rule "disjointDefinition" (formula "62"))
                                                                   (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "notLeft" (formula "62"))
                                                                  (rule "eqSymm" (formula "90"))
                                                                  (rule "disjointDefinition" (formula "61"))
                                                                   (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "notLeft" (formula "61"))
                                                                  (rule "eqSymm" (formula "89"))
                                                                  (rule "disjointDefinition" (formula "60"))
                                                                   (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "notLeft" (formula "60"))
                                                                  (rule "eqSymm" (formula "88"))
                                                                  (rule "disjointDefinition" (formula "59"))
                                                                   (builtin "One Step Simplification" (formula "59"))
                                                                  (rule "notLeft" (formula "59"))
                                                                  (rule "eqSymm" (formula "87"))
                                                                  (rule "disjointDefinition" (formula "58"))
                                                                   (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "notLeft" (formula "58"))
                                                                  (rule "eqSymm" (formula "86"))
                                                                  (rule "disjointDefinition" (formula "57"))
                                                                   (builtin "One Step Simplification" (formula "57"))
                                                                  (rule "notLeft" (formula "57"))
                                                                  (rule "eqSymm" (formula "85"))
                                                                  (rule "disjointDefinition" (formula "56"))
                                                                   (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "notLeft" (formula "56"))
                                                                  (rule "disjointDefinition" (formula "55"))
                                                                   (builtin "One Step Simplification" (formula "55"))
                                                                  (rule "notLeft" (formula "55"))
                                                                  (rule "eqSymm" (formula "83"))
                                                                  (rule "disjointDefinition" (formula "54"))
                                                                   (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "notLeft" (formula "54"))
                                                                  (rule "eqSymm" (formula "82"))
                                                                  (rule "disjointDefinition" (formula "53"))
                                                                   (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "notLeft" (formula "53"))
                                                                  (rule "disjointDefinition" (formula "52"))
                                                                   (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "notLeft" (formula "52"))
                                                                  (rule "disjointDefinition" (formula "51"))
                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "notLeft" (formula "51"))
                                                                  (rule "disjointDefinition" (formula "50"))
                                                                   (builtin "One Step Simplification" (formula "50"))
                                                                  (rule "notLeft" (formula "50"))
                                                                  (rule "disjointDefinition" (formula "49"))
                                                                   (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "notLeft" (formula "49"))
                                                                  (rule "disjointDefinition" (formula "48"))
                                                                   (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "notLeft" (formula "48"))
                                                                  (rule "disjointDefinition" (formula "47"))
                                                                   (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "notLeft" (formula "47"))
                                                                  (rule "disjointDefinition" (formula "46"))
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "notLeft" (formula "46"))
                                                                  (rule "disjointDefinition" (formula "44"))
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "notLeft" (formula "44"))
                                                                  (rule "disjointDefinition" (formula "44"))
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "notLeft" (formula "44"))
                                                                  (rule "applyEq" (formula "70") (term "0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "63") (term "0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "68") (term "0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "71") (term "0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "64") (term "0,1,0,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "67") (term "0,1,0,2,0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "43"))
                                                                  (rule "distributeIntersection" (formula "34") (term "0"))
                                                                  (rule "distributeIntersection" (formula "33") (term "0"))
                                                                  (rule "distributeIntersection" (formula "34") (term "0,0"))
                                                                  (rule "distributeIntersection" (formula "34") (term "1,0"))
                                                                  (rule "unionEqualsEmpty" (formula "33"))
                                                                  (rule "andLeft" (formula "33"))
                                                                  (rule "distributeIntersection" (formula "35") (term "1,0,0"))
                                                                  (rule "distributeIntersection" (formula "35") (term "0,0,0"))
                                                                  (rule "distributeIntersection" (formula "35") (term "1,1,0"))
                                                                  (rule "distributeIntersection" (formula "35") (term "0,1,0"))
                                                                  (rule "distributeIntersection" (formula "33") (term "0"))
                                                                  (rule "distributeIntersection" (formula "34") (term "0"))
                                                                  (rule "unionEqualsEmpty" (formula "35"))
                                                                  (rule "andLeft" (formula "35"))
                                                                  (rule "unionEqualsEmpty" (formula "33"))
                                                                  (rule "andLeft" (formula "33"))
                                                                  (rule "distributeIntersection" (formula "35") (term "0,0"))
                                                                  (rule "distributeIntersection" (formula "35") (term "1,0"))
                                                                  (rule "unionEqualsEmpty" (formula "36"))
                                                                  (rule "andLeft" (formula "36"))
                                                                  (rule "unionEqualsEmpty" (formula "38"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "distributeIntersection" (formula "34") (term "0"))
                                                                  (rule "distributeIntersection" (formula "33") (term "0"))
                                                                  (rule "unionEqualsEmpty" (formula "35"))
                                                                  (rule "andLeft" (formula "35"))
                                                                  (rule "unionEqualsEmpty" (formula "38"))
                                                                   (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "eqSymm" (formula "78"))
                                                                  (rule "eqSymm" (formula "77"))
                                                                  (rule "unionEqualsEmpty" (formula "37"))
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "eqSymm" (formula "77"))
                                                                  (rule "eqSymm" (formula "76"))
                                                                  (rule "unionEqualsEmpty" (formula "38"))
                                                                   (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "eqSymm" (formula "76"))
                                                                  (rule "eqSymm" (formula "75"))
                                                                  (rule "unionEqualsEmpty" (formula "37"))
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "eqSymm" (formula "75"))
                                                                  (rule "eqSymm" (formula "74"))
                                                                  (rule "unionEqualsEmpty" (formula "34"))
                                                                   (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "andLeft" (formula "34"))
                                                                  (rule "notLeft" (formula "34"))
                                                                  (rule "notLeft" (formula "34"))
                                                                  (rule "eqSymm" (formula "74"))
                                                                  (rule "eqSymm" (formula "73"))
                                                                  (rule "unionEqualsEmpty" (formula "33"))
                                                                   (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "andLeft" (formula "33"))
                                                                  (rule "notLeft" (formula "33"))
                                                                  (rule "notLeft" (formula "33"))
                                                                  (rule "eqSymm" (formula "73"))
                                                                  (rule "eqSymm" (formula "72"))
                                                                  (rule "unionEqualsEmpty" (formula "34"))
                                                                   (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "andLeft" (formula "34"))
                                                                  (rule "notLeft" (formula "35"))
                                                                  (rule "notLeft" (formula "34"))
                                                                  (rule "eqSymm" (formula "72"))
                                                                  (rule "eqSymm" (formula "71"))
                                                                  (rule "unionEqualsEmpty" (formula "33"))
                                                                   (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "andLeft" (formula "33"))
                                                                  (rule "notLeft" (formula "33"))
                                                                  (rule "notLeft" (formula "33"))
                                                                  (rule "eqSymm" (formula "71"))
                                                                  (rule "eqSymm" (formula "70"))
                                                                  (rule "commuteUnion_2" (formula "41") (term "0,1"))
                                                                  (rule "commuteUnion" (formula "41") (term "1,1,1"))
                                                                  (rule "nnf_imp2or" (formula "29") (term "0"))
                                                                  (rule "commuteUnion" (formula "68") (term "0,0,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "68") (term "1,1,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "61") (term "1,1,0,1,0,2,0"))
                                                                  (rule "nnf_imp2or" (formula "30") (term "0"))
                                                                  (rule "commuteUnion" (formula "61") (term "0,0,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "66") (term "1,1,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "66") (term "0,0,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "69") (term "1,1,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "69") (term "0,0,1,0,2,0"))
                                                                  (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0"))
                                                                  (rule "commuteUnion" (formula "62") (term "1,1,0,1,0,0"))
                                                                  (rule "commuteUnion" (formula "65") (term "0,0,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "65") (term "1,1,0,1,0,2,0"))
                                                                  (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                                                  (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "nnf_imp2or" (formula "31") (term "0,0,1"))
                                                                  (rule "nnf_imp2or" (formula "32") (term "0"))
                                                                  (rule "commuteUnion" (formula "41") (term "0,0,1"))
                                                                  (rule "commuteUnion_2" (formula "68") (term "0,0,1,0,2,0"))
                                                                  (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "66") (term "0,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "69") (term "1,0,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "62") (term "0,0,0,1,0,0"))
                                                                  (rule "commuteUnion" (formula "65") (term "0,0,1,0,2,0"))
                                                                  (rule "commuteUnion_2" (formula "41") (term "0,1"))
                                                                  (rule "commuteUnion_2" (formula "68") (term "0,1,0,2,0"))
                                                                  (rule "commuteUnion_2" (formula "61") (term "0,1,0,2,0"))
                                                                  (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0"))
                                                                  (rule "commuteUnion_2" (formula "41") (term "1"))
                                                                  (rule "commuteUnion" (formula "68") (term "0,0,0,1,0,2,0"))
                                                                  (rule "commuteUnion" (formula "61") (term "0,0,0,1,0,2,0"))
                                                                  (rule "commuteUnion_2" (formula "62") (term "0,1,0,0"))
                                                                  (rule "nnf_imp2or" (formula "43") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "28") (term "0"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch " bucket_starts[bucket] <= begin * -1 + j_0 & bucket_starts[1 + bucket] >= 1 + begin * -1 + j_0 TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "124") (term "1") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "eqSymm" (formula "123"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "4"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "1"))
                                                                     (rule "times_zero_1" (formula "50") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "50") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                                     (rule "polySimp_mulLiterals" (formula "50") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "50") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                                     (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "60") (ifseqformula "2"))
                                                                     (rule "andLeft" (formula "60"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "60"))
                                                                     (rule "polySimp_mulComm0" (formula "60") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "60") (term "1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "60") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "60") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "60") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "60") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "60") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "60") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "60") (term "1,0,0,0"))
                                                                     (rule "add_literals" (formula "60") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "60") (term "0"))
                                                                     (rule "add_literals" (formula "60") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "60") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "60") (term "0"))
                                                                     (rule "leq_literals" (formula "60"))
                                                                     (rule "closeFalse" (formula "60"))
                                                                  )
                                                                  (branch " bucket_starts[bucket] <= begin * -1 + j_0 & bucket_starts[1 + bucket] >= 1 + begin * -1 + j_0 FALSE"
                                                                     (rule "close" (formula "123") (ifseqformula "1"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "CUT: b_0 > bucket FALSE"
                                                                (builtin "One Step Simplification" (formula "36") (userinteraction))
                                                               (rule "true_left" (formula "36") (userinteraction))
                                                               (rule "impLeft" (formula "35") (userinteraction))
                                                               (branch "Case 1"
                                                                  (rule "eqSymm" (formula "47"))
                                                                  (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "40") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,1,0"))
                                                                  (rule "mul_literals" (formula "1") (term "1,2,0,1,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "3") (term "2,0,1,0,1,0"))
                                                                  (rule "mul_literals" (formula "3") (term "1,2,0,1,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,1,1"))
                                                                  (rule "mul_literals" (formula "4") (term "1,2,0,1,0,1,1"))
                                                                  (rule "polySimp_homoEq" (formula "24") (term "0,1,1"))
                                                                  (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,1,2,0"))
                                                                  (rule "mul_literals" (formula "37") (term "1,2,0,1,0,1,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "41") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "37") (term "1,2,0,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "52") (term "2,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "52") (term "1,2,0,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "44") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "44") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "36") (term "2,0,1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "36") (term "1,2,0,1,0,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "36") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "36") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "43") (term "2,0,1,0,2,0"))
                                                                  (rule "mul_literals" (formula "43") (term "1,2,0,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "52") (term "2,0,1,0,1"))
                                                                  (rule "mul_literals" (formula "52") (term "1,2,0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "36") (term "0,2,1,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "0,2,1,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "0,2,1,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,2,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "0,2,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "22") (term "0,2,1,1,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "22") (term "0,2,1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "2,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0,1,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "52") (term "2,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "44") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "36") (term "2,0,1,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "36") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "43") (term "2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm1" (formula "52") (term "2,0,1,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "24") (term "0,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0,1,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "52") (term "0,2,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "36") (term "0,2,0,1,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "36") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "43") (term "0,2,0,1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "52") (term "0,2,0,1,0,1"))
                                                                  (rule "inEqSimp_ltRight" (formula "45"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_gtRight" (formula "46"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "0,1,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "7"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                                  (rule "inEqSimp_ltRight" (formula "52"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "19"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                                  (rule "jmod_axiom" (formula "27") (term "0,1,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,1"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "27") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "27") (term "0,0,1,1"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "27") (term "1,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "0,1,1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "0,1,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "25") (term "0,0,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "1,0,1,1,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "48"))
                                                                  (rule "inEqSimp_contradEq3" (formula "48") (ifseqformula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                                                  (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "48") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "48") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "false_right" (formula "48"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "3"))
                                                                  (rule "andLeft" (formula "2"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                  (rule "add_literals" (formula "2") (term "0"))
                                                                  (rule "leq_literals" (formula "2"))
                                                                  (rule "closeFalse" (formula "2"))
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "andLeft" (formula "35"))
                                                                  (rule "andLeft" (formula "35"))
                                                                  (rule "eqTermCut" (formula "54") (term "0") (inst "s=int::select(heap, values, arr(i_0))") (userinteraction))
                                                                  (branch "Assume values[i_0]@heap[anon( arrayRange(values, begin + bucket_starts[bucket], begin + bucket_starts[ 1 + bucket] - 1) cup storage.allArrays, anonOut_heap<<anonHeapFunction>>)] = values[i_0]"
                                                                     (rule "applyEq" (formula "55") (term "0") (ifseqformula "1") (userinteraction))
                                                                     (rule "allLeft" (formula "23") (inst "t=i_0") (userinteraction))
                                                                     (rule "impLeft" (formula "23") (userinteraction))
                                                                     (branch "Case 1"
                                                                        (rule "eqSymm" (formula "51"))
                                                                        (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,2,0"))
                                                                        (rule "mul_literals" (formula "40") (term "1,2,0,1,0,2,0"))
                                                                        (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,2,0"))
                                                                        (rule "mul_literals" (formula "47") (term "1,2,0,1,0,2,0"))
                                                                        (rule "polySimp_elimSub" (formula "2") (term "2,0,1,0,1,0"))
                                                                        (rule "mul_literals" (formula "2") (term "1,2,0,1,0,1,0"))
                                                                        (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,2,0"))
                                                                        (rule "mul_literals" (formula "48") (term "1,2,0,1,0,2,0"))
                                                                        (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "40") (term "1,2,0,1,0,1,0,0"))
                                                                        (rule "polySimp_elimSub" (formula "44") (term "2,0,1,0,2,0"))
                                                                        (rule "mul_literals" (formula "44") (term "1,2,0,1,0,2,0"))
                                                                        (rule "polySimp_homoEq" (formula "25") (term "0,1,1"))
                                                                        (rule "polySimp_elimSub" (formula "5") (term "2,0,1,0,1,1"))
                                                                        (rule "mul_literals" (formula "5") (term "1,2,0,1,0,1,1"))
                                                                        (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,1,2,0"))
                                                                        (rule "mul_literals" (formula "41") (term "1,2,0,1,0,1,2,0"))
                                                                        (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,1,0"))
                                                                        (rule "mul_literals" (formula "4") (term "1,2,0,1,0,1,0"))
                                                                        (rule "polySimp_elimSub" (formula "56") (term "2,0,1,0,1"))
                                                                        (rule "mul_literals" (formula "56") (term "1,2,0,1,0,1"))
                                                                        (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,2,0"))
                                                                        (rule "mul_literals" (formula "45") (term "1,2,0,1,0,2,0"))
                                                                        (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "1") (term "1,2,0,1,0,0"))
                                                                        (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "41") (term "1,2,0,1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,1"))
                                                                        (rule "polySimp_addComm0" (formula "48") (term "0,2,1,0,1"))
                                                                        (rule "polySimp_addComm0" (formula "5") (term "0,2,1,1"))
                                                                        (rule "polySimp_addComm0" (formula "23") (term "0,2,1,1,1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "45") (term "0,2,1,0,1"))
                                                                        (rule "polySimp_addComm0" (formula "49") (term "0,2,1,1,1"))
                                                                        (rule "polySimp_addComm0" (formula "23") (term "0,2,1,0,0,0,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "2") (term "0,2,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "40") (term "0,2,1,1,1"))
                                                                        (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "2,0,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "2,0,1,0,1,1"))
                                                                        (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,1,2,0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "56") (term "2,0,1,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "45") (term "2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,2,0"))
                                                                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,1"))
                                                                        (rule "mul_literals" (formula "25") (term "0,1,0,0,1,1"))
                                                                        (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm0" (formula "5") (term "0,2,0,1,0,1,1"))
                                                                        (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,1,2,0"))
                                                                        (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "56") (term "0,2,0,1,0,1"))
                                                                        (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0,2,0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,0"))
                                                                        (rule "inEqSimp_gtRight" (formula "50"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "24") (term "0,1,0,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "4"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,1"))
                                                                        (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,1"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "50") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "50") (term "0,1,0,0,1"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "38"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "7"))
                                                                        (rule "inEqSimp_ltRight" (formula "56"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "51") (term "0,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "51") (term "0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "19"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "51") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "51") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "51") (term "0,0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "6"))
                                                                        (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                        (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                                        (rule "jmod_axiom" (formula "27") (term "0,1,1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,1"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "27") (term "0,1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,1"))
                                                                        (rule "polySimp_elimOne" (formula "27") (term "0,0,1,1"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "27") (term "1,1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "27") (term "0,1,1,1"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "25") (term "0,1,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                        (rule "mul_literals" (formula "5") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "25") (term "0,1,1,0,0"))
                                                                        (rule "mul_literals" (formula "25") (term "0,0,1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "25") (term "1,0,1,1,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "51") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "51") (term "0,1"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "0"))
                                                                        (rule "polySimp_mulLiterals" (formula "51") (term "0,0"))
                                                                        (rule "polySimp_elimOne" (formula "51") (term "0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                        (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "52"))
                                                                        (rule "inEqSimp_contradEq7" (formula "52") (ifseqformula "2"))
                                                                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0"))
                                                                        (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "52") (term "0,0"))
                                                                        (rule "leq_literals" (formula "52") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "52"))
                                                                        (rule "false_right" (formula "52"))
                                                                        (rule "pullOutSelect" (formula "42") (term "1,0,0") (inst "selectSK=arr_0"))
                                                                        (rule "applyEq" (formula "44") (term "1,2,0") (ifseqformula "42"))
                                                                        (rule "simplifySelectOfAnon" (formula "42"))
                                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "55")) (ifInst ""  (formula "13")))
                                                                        (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "2,0"))
                                                                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
                                                                        (rule "simplifySelectOfAnon" (formula "3"))
                                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "12")))
                                                                        (rule "eqSymm" (formula "4"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "4"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "elementOfUnion" (formula "42") (term "0,0"))
                                                                        (rule "disjointAllFields" (formula "42") (term "1,0,0") (ifseqformula "30"))
                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "42") (term "0,0"))
                                                                        (rule "eqSymm" (formula "42") (term "0,0,0,0"))
                                                                        (rule "replace_known_right" (formula "42") (term "0,0,0,0") (ifseqformula "53"))
                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                        (rule "applyEqReverse" (formula "44") (term "0,2,0") (ifseqformula "42"))
                                                                        (rule "applyEqReverse" (formula "43") (term "0,0,0") (ifseqformula "42"))
                                                                        (rule "hideAuxiliaryEq" (formula "42"))
                                                                        (rule "polySimp_addComm0" (formula "43") (term "2,0"))
                                                                        (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                                        (rule "disjointAllFields" (formula "3") (term "1,0,0") (ifseqformula "29"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "0,1,1,0,0"))
                                                                        (rule "mul_literals" (formula "3") (term "0,0,1,1,0,0"))
                                                                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_2"))
                                                                        (rule "simplifySelectOfAnon" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "12")))
                                                                        (rule "inEqSimp_commuteLeq" (formula "2"))
                                                                        (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                        (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "30"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                                                                        (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0"))
                                                                        (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=arr_3"))
                                                                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "8"))
                                                                        (rule "simplifySelectOfAnon" (formula "8"))
                                                                         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "56")) (ifInst ""  (formula "15")))
                                                                        (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                        (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                                        (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                                                                        (rule "mul_literals" (formula "9") (term "0,0,1"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_mulAssoc" (formula "5") (term "0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "0,1"))
                                                                        (rule "elementOfUnion" (formula "8") (term "0,0"))
                                                                        (rule "disjointAllFields" (formula "8") (term "1,0,0") (ifseqformula "32"))
                                                                         (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "8") (term "0,0"))
                                                                        (rule "eqSymm" (formula "8") (term "0,0,0,0"))
                                                                        (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "54"))
                                                                         (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "applyEqReverse" (formula "5") (term "0,1") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "9") (term "1,0,1") (ifseqformula "8"))
                                                                        (rule "hideAuxiliaryEq" (formula "8"))
                                                                        (rule "polySimp_addComm0" (formula "5") (term "1"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "8"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                                                                        (rule "mul_literals" (formula "8") (term "0,0,1"))
                                                                        (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "8"))
                                                                         (builtin "One Step Simplification" (formula "52"))
                                                                        (rule "inEqSimp_leqRight" (formula "52"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                                        (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                                        (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=arr_4"))
                                                                        (rule "simplifySelectOfAnon" (formula "8"))
                                                                         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "56")) (ifInst ""  (formula "16")))
                                                                        (rule "inEqSimp_homoInEq0" (formula "9"))
                                                                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                        (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                        (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                        (rule "polySimp_mulAssoc" (formula "9") (term "0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "9") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "0,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "40"))
                                                                        (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "39") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                                        (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                                        (rule "elementOfUnion" (formula "8") (term "0,0"))
                                                                        (rule "disjointAllFields" (formula "8") (term "1,0,0") (ifseqformula "33"))
                                                                         (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "8") (term "0,0"))
                                                                        (rule "eqSymm" (formula "8") (term "0,0,0,0"))
                                                                        (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "55"))
                                                                         (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "applyEqReverse" (formula "9") (term "0,1") (ifseqformula "8"))
                                                                        (rule "hideAuxiliaryEq" (formula "8"))
                                                                        (rule "polySimp_addComm0" (formula "8") (term "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "1"))
                                                                        (rule "andLeft" (formula "8"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                                        (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                                                        (rule "add_literals" (formula "8") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "8") (term "1,0"))
                                                                        (rule "add_literals" (formula "8") (term "0"))
                                                                        (rule "leq_literals" (formula "8"))
                                                                        (rule "closeFalse" (formula "8"))
                                                                     )
                                                                     (branch "Case 2"
                                                                        (rule "allLeftHide" (formula "23") (inst "t=j_0") (userinteraction))
                                                                        (rule "impLeft" (formula "23") (userinteraction))
                                                                        (branch "Case 1"
                                                                           (rule "eqSymm" (formula "51"))
                                                                           (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                                                            (builtin "One Step Simplification" (formula "49"))
                                                                           (rule "polySimp_elimSub" (formula "56") (term "2,0,1,0,1"))
                                                                           (rule "mul_literals" (formula "56") (term "1,2,0,1,0,1"))
                                                                           (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,2,0"))
                                                                           (rule "mul_literals" (formula "45") (term "1,2,0,1,0,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,1,0"))
                                                                           (rule "mul_literals" (formula "4") (term "1,2,0,1,0,1,0"))
                                                                           (rule "polySimp_homoEq" (formula "25") (term "0,1,1"))
                                                                           (rule "polySimp_elimSub" (formula "5") (term "2,0,1,0,1,1"))
                                                                           (rule "mul_literals" (formula "5") (term "1,2,0,1,0,1,1"))
                                                                           (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "1,2,0,1,0,0"))
                                                                           (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,2,0"))
                                                                           (rule "mul_literals" (formula "40") (term "1,2,0,1,0,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,1,2,0"))
                                                                           (rule "mul_literals" (formula "41") (term "1,2,0,1,0,1,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "40") (term "1,2,0,1,0,1,0,0"))
                                                                           (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,2,0"))
                                                                           (rule "mul_literals" (formula "47") (term "1,2,0,1,0,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,2,0"))
                                                                           (rule "mul_literals" (formula "48") (term "1,2,0,1,0,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "41") (term "1,2,0,1,0,0"))
                                                                           (rule "polySimp_elimSub" (formula "44") (term "2,0,1,0,2,0"))
                                                                           (rule "mul_literals" (formula "44") (term "1,2,0,1,0,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "2") (term "2,0,1,0,1,0"))
                                                                           (rule "mul_literals" (formula "2") (term "1,2,0,1,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,1"))
                                                                           (rule "polySimp_addComm0" (formula "5") (term "0,2,1,1"))
                                                                           (rule "polySimp_addComm0" (formula "23") (term "0,2,1,1,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "2") (term "0,2,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "48") (term "0,2,1,0,1"))
                                                                           (rule "polySimp_addComm0" (formula "23") (term "0,2,1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "45") (term "0,2,1,0,1"))
                                                                           (rule "polySimp_addComm0" (formula "40") (term "0,2,1,1,1"))
                                                                           (rule "polySimp_addComm0" (formula "49") (term "0,2,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "56") (term "2,0,1,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "45") (term "2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "2,0,1,0,1,1"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,1,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "2,0,1,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "56") (term "0,2,0,1,0,1"))
                                                                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,1"))
                                                                           (rule "mul_literals" (formula "25") (term "0,1,0,0,1,1"))
                                                                           (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "5") (term "0,2,0,1,0,1,1"))
                                                                           (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,1,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,0,1,0"))
                                                                           (rule "inEqSimp_gtRight" (formula "50"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "24") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,1"))
                                                                           (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,1"))
                                                                           (rule "inEqSimp_leqRight" (formula "50"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "39"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "8"))
                                                                           (rule "inEqSimp_ltRight" (formula "56"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "7"))
                                                                           (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                                           (rule "jmod_axiom" (formula "28") (term "0,1,1,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,1,1"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "28") (term "0,1,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1,1"))
                                                                           (rule "polySimp_elimOne" (formula "28") (term "0,0,1,1"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "28") (term "1,1,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "28") (term "0,1,1,1"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                                                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "26") (term "0,1,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "26") (term "0,1,1,0,0"))
                                                                           (rule "mul_literals" (formula "26") (term "0,0,1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "26") (term "1,0,1,1,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                           (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                                           (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "52"))
                                                                           (rule "inEqSimp_contradEq7" (formula "52") (ifseqformula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0"))
                                                                           (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "52") (term "0,0"))
                                                                           (rule "leq_literals" (formula "52") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "52"))
                                                                           (rule "false_right" (formula "52"))
                                                                           (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_0"))
                                                                           (rule "simplifySelectOfAnon" (formula "4"))
                                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "56")) (ifInst ""  (formula "13")))
                                                                           (rule "eqSymm" (formula "5"))
                                                                           (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "hideAuxiliaryEq" (formula "5"))
                                                                           (rule "pullOutSelect" (formula "44") (term "1,2,0") (inst "selectSK=arr_1"))
                                                                           (rule "applyEq" (formula "43") (term "1,0,0") (ifseqformula "44"))
                                                                           (rule "simplifySelectOfAnon" (formula "44"))
                                                                            (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "55")) (ifInst ""  (formula "14")))
                                                                           (rule "polySimp_addComm0" (formula "45") (term "2,0"))
                                                                           (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                                           (rule "elementOfUnion" (formula "4") (term "0,0"))
                                                                           (rule "disjointAllFields" (formula "4") (term "1,0,0") (ifseqformula "30"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "0,1,1,0,0"))
                                                                           (rule "mul_literals" (formula "4") (term "0,0,1,1,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "4") (term "0,0,0,0"))
                                                                           (rule "elementOfUnion" (formula "44") (term "0,0"))
                                                                           (rule "disjointAllFields" (formula "44") (term "1,0,0") (ifseqformula "31"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "elementOfArrayRangeConcrete" (formula "44") (term "0,0"))
                                                                           (rule "eqSymm" (formula "44") (term "0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "44") (term "0,0,0,0") (ifseqformula "53"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "applyEqReverse" (formula "45") (term "0,2,0") (ifseqformula "44"))
                                                                           (rule "applyEqReverse" (formula "43") (term "0,0,0") (ifseqformula "44"))
                                                                           (rule "hideAuxiliaryEq" (formula "44"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "2,0"))
                                                                           (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                                           (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_2"))
                                                                           (rule "simplifySelectOfAnon" (formula "1"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "13")))
                                                                           (rule "inEqSimp_commuteLeq" (formula "2"))
                                                                           (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                           (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "31"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0"))
                                                                           (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=arr_3"))
                                                                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "9"))
                                                                           (rule "simplifySelectOfAnon" (formula "9"))
                                                                            (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "56")) (ifInst ""  (formula "16")))
                                                                           (rule "inEqSimp_homoInEq1" (formula "10"))
                                                                           (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "6"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                                           (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                                                                           (rule "mul_literals" (formula "10") (term "0,0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "1,0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                           (rule "polySimp_mulAssoc" (formula "6") (term "0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "0,0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "0,1"))
                                                                           (rule "polySimp_elimOne" (formula "6") (term "0,1"))
                                                                           (rule "elementOfUnion" (formula "9") (term "0,0"))
                                                                           (rule "disjointAllFields" (formula "9") (term "1,0,0") (ifseqformula "33"))
                                                                            (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "elementOfArrayRangeConcrete" (formula "9") (term "0,0"))
                                                                           (rule "eqSymm" (formula "9") (term "0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "54"))
                                                                            (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "applyEqReverse" (formula "10") (term "1,0,1") (ifseqformula "9"))
                                                                           (rule "applyEqReverse" (formula "6") (term "0,1") (ifseqformula "9"))
                                                                           (rule "hideAuxiliaryEq" (formula "9"))
                                                                           (rule "polySimp_addComm1" (formula "9") (term "1"))
                                                                           (rule "polySimp_addComm0" (formula "6") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "9"))
                                                                           (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                           (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                           (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                                                                           (rule "mul_literals" (formula "9") (term "0,0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "3"))
                                                                           (rule "andLeft" (formula "6"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                                           (rule "add_literals" (formula "6") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "6") (term "1,0"))
                                                                           (rule "add_literals" (formula "6") (term "0"))
                                                                           (rule "leq_literals" (formula "6"))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                        (branch "Case 2"
                                                                           (rule "cut" (inst "cutFormula=(  leq(add(begin,
           int::select(heap,
                       bucket_starts,
                       arr(bucket))),
       j_0)<<origin(\"User_Interaction @ node 33419 (cut)\",\"[]\")>>
 & lt(j_0,
      add(begin,
          int::select(heap,
                      bucket_starts,
                      arr(add(bucket, Z(1(#)))))))<<origin(\"User_Interaction @ node 33419 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 33419 (cut)\",\"[]\")>>") (userinteraction))
                                                                           (branch "CUT: begin + bucket_starts[bucket] <= j_0 & j_0 < begin + bucket_starts[bucket + 1] TRUE"
                                                                              (rule "seqPermForall" (inst "phi=lt(int::select(heap, values, arr(i_0)), (int)x)<<origin(\"User_Interaction @ node 33770 (seqPermForall)\",\"[]\")>>") (inst "iv=iv") (inst "x=x") (ifseqformula "42") (userinteraction))
                                                                              (rule "equiv_left" (formula "1") (userinteraction))
                                                                              (branch "Case 1"
                                                                                 (rule "allLeftHide" (formula "1") (inst "t=sub(j_0,
    add(begin,
        int::select(heap, bucket_starts, arr(bucket))))") (userinteraction))
                                                                                 (rule "impLeft" (formula "1") (userinteraction))
                                                                                 (branch "Case 1"
                                                                                    (rule "andLeft" (formula "2"))
                                                                                    (rule "eqSymm" (formula "55"))
                                                                                    (rule "polySimp_elimSub" (formula "52") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "52") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "53") (term "1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,1,2,0"))
                                                                                    (rule "mul_literals" (formula "45") (term "1,2,0,1,0,1,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "48") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "51") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "44") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "44") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "53") (term "2,0,1,0,1,0,0,1,1"))
                                                                                    (rule "mul_literals" (formula "53") (term "1,2,0,1,0,1,0,0,1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "5") (term "2,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "5") (term "1,2,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "4") (term "1,2,0,1,0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "29") (term "0,1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "60") (term "2,0,1,0,1"))
                                                                                    (rule "mul_literals" (formula "60") (term "1,2,0,1,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "49") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "49") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "53") (term "0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "44") (term "2,0,1,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "44") (term "1,2,0,1,0,1,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "8") (term "2,0,1,0,1,1"))
                                                                                    (rule "mul_literals" (formula "8") (term "1,2,0,1,0,1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "45") (term "1,2,0,1,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "53") (term "2,0,1,0,2,0,1,1"))
                                                                                    (rule "mul_literals" (formula "53") (term "1,2,0,1,0,2,0,1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,1,0,0,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "1,2,0,1,0,1,0,0,1,1,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "7") (term "2,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "7") (term "1,2,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,2,0,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "1,2,0,1,0,2,0,1,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "53") (term "1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "5") (term "0,2,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "27") (term "0,2,1,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "49") (term "0,2,1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "27") (term "0,2,1,1,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,2,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "44") (term "0,2,1,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "52") (term "0,2,1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "8") (term "0,2,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "3") (term "0,2,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "52") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "45") (term "2,0,1,0,1,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "44") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "53") (term "2,0,1,0,1,0,0,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "5") (term "2,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "60") (term "2,0,1,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "49") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "44") (term "2,0,1,0,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "8") (term "2,0,1,0,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "45") (term "2,0,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "53") (term "2,0,1,0,2,0,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,1,0,0,1,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "7") (term "2,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,2,0,1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "53") (term "1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "53") (term "0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,1"))
                                                                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "52") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "53") (term "0,1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0,1,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "53") (term "0,2,0,1,0,1,0,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "5") (term "0,2,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "60") (term "0,2,0,1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "49") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,0,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "8") (term "0,2,0,1,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "53") (term "0,2,0,1,0,2,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,1,0,0,1,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "7") (term "0,2,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,2,0,1,1,0,0"))
                                                                                    (rule "inEqSimp_gtRight" (formula "54"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "23"))
                                                                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "27"))
                                                                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "11"))
                                                                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                                    (rule "castedGetAny" (formula "2") (term "1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "54") (term "1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "54") (term "0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "42"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "10"))
                                                                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "54") (term "0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "54") (term "0,0,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                                                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0"))
                                                                                    (rule "lenOfSeqDef" (formula "54") (term "1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "54") (term "1,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "1,1,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "1,1,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "0,1,1,1,1"))
                                                                                    (rule "lenOfSeqDef" (formula "2") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "2") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1,1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "2") (term "1,1,1,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "0,1,1,1,1,0,0"))
                                                                                    (rule "inEqSimp_ltRight" (formula "60"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "22"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "10"))
                                                                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0"))
                                                                                    (rule "getOfSeqDef" (formula "3") (term "1,1,0"))
                                                                                    (rule "castDel" (formula "3") (term "1,1,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "3") (term "1,1,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "3") (term "0,2,1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,1,1,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "0,1,1,1,0,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "1,1,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "55") (term "1,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "55") (term "0,1,1,1"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "55") (term "0,0,1,1,1"))
                                                                                    (rule "add_literals" (formula "55") (term "1,0,0,1,1,1"))
                                                                                    (rule "times_zero_1" (formula "55") (term "0,0,1,1,1"))
                                                                                    (rule "add_zero_left" (formula "55") (term "0,1,1,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "3") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,1,1,1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,1,1,0,0"))
                                                                                    (rule "add_literals" (formula "3") (term "1,0,0,1,1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "3") (term "0,0,1,1,1,0,0"))
                                                                                    (rule "add_zero_left" (formula "3") (term "0,1,1,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,0,0,1,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1,1,0,1,1,0"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,1,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "3") (term "1,0,0,1,1,0,1,1,0"))
                                                                                    (rule "times_zero_1" (formula "3") (term "0,0,1,1,0,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "3") (term "0,1,1,0,1,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,1,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,1,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,1,1"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "7"))
                                                                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "55") (term "0,0,0,1,1"))
                                                                                    (rule "polySimp_pullOutFactor2b" (formula "55") (term "0,0,0,0,1,1"))
                                                                                    (rule "add_literals" (formula "55") (term "1,1,0,0,0,0,1,1"))
                                                                                    (rule "times_zero_1" (formula "55") (term "1,0,0,0,0,1,1"))
                                                                                    (rule "add_literals" (formula "55") (term "0,0,0,0,1,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1,1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0,0,0,1,1,0,0"))
                                                                                    (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,1,1,0,0"))
                                                                                    (rule "add_zero_right" (formula "3") (term "0,0,0,0,1,1,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "9"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,1,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "55") (term "0"))
                                                                                    (rule "times_zero_2" (formula "55") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "55") (term "0,0"))
                                                                                    (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "4"))
                                                                                     (builtin "One Step Simplification" (formula "55"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_ltRight" (formula "55"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,0,1,0"))
                                                                                    (rule "jmod_axiom" (formula "32") (term "0,1,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,1,1"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "32") (term "0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "32") (term "0,0,1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "32") (term "0,0,1,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                                    (rule "mul_literals" (formula "9") (term "0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "30") (term "0,1,0,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                                                                    (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                                                    (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "32") (term "1,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "32") (term "0,1,1,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "30") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "30") (term "0,0,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "0,1,1,0,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "4") (term "0,0,1,1,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,1,1,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "4") (term "0,1,0,1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
                                                                                    (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "56"))
                                                                                    (rule "inEqSimp_contradEq7" (formula "56") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0"))
                                                                                    (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "56") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "56") (term "0,0"))
                                                                                    (rule "leq_literals" (formula "56") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "56"))
                                                                                    (rule "false_right" (formula "56"))
                                                                                    (rule "pullOutSelect" (formula "48") (term "1,2,0") (inst "selectSK=arr_0"))
                                                                                    (rule "applyEq" (formula "4") (term "0,0,1,1,1,0,0") (ifseqformula "48"))
                                                                                    (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "48"))
                                                                                    (rule "applyEq" (formula "1") (term "0,1,1,0") (ifseqformula "48"))
                                                                                    (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "48"))
                                                                                    (rule "applyEq" (formula "4") (term "0,1,1,1,1,1,0,0") (ifseqformula "48"))
                                                                                    (rule "simplifySelectOfAnon" (formula "48"))
                                                                                     (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "59")) (ifInst ""  (formula "17")))
                                                                                    (rule "polySimp_addComm0" (formula "49") (term "2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "4") (term "1,1,1,1,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "0,1,1,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,1,1,1,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,1,1,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "4") (term "0,1,0,1,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=arr_1"))
                                                                                    (rule "simplifySelectOfAnon" (formula "7"))
                                                                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "61")) (ifInst ""  (formula "16")))
                                                                                    (rule "eqSymm" (formula "8"))
                                                                                    (rule "applyEqReverse" (formula "7") (term "1") (ifseqformula "8"))
                                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                                    (rule "hideAuxiliaryEq" (formula "8"))
                                                                                    (rule "elementOfUnion" (formula "48") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "48") (term "1,0,0") (ifseqformula "35"))
                                                                                     (builtin "One Step Simplification" (formula "48"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "48") (term "0,0"))
                                                                                    (rule "eqSymm" (formula "48") (term "0,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "48") (term "0,0,0,0") (ifseqformula "57"))
                                                                                     (builtin "One Step Simplification" (formula "48"))
                                                                                    (rule "applyEqReverse" (formula "4") (term "1,1,0,1,1,1,0,0") (ifseqformula "48"))
                                                                                    (rule "applyEqReverse" (formula "49") (term "0,2,0") (ifseqformula "48"))
                                                                                    (rule "applyEqReverse" (formula "1") (term "1,1,0,0") (ifseqformula "48"))
                                                                                    (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "48"))
                                                                                    (rule "applyEqReverse" (formula "1") (term "0,0,1,0") (ifseqformula "48"))
                                                                                    (rule "applyEqReverse" (formula "4") (term "0,0,1,1,1,1,0,0") (ifseqformula "48"))
                                                                                    (rule "hideAuxiliaryEq" (formula "48"))
                                                                                    (rule "polySimp_addComm0" (formula "48") (term "2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                                                    (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_2"))
                                                                                    (rule "simplifySelectOfAnon" (formula "2"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "60")) (ifInst ""  (formula "16")))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "3"))
                                                                                    (rule "elementOfUnion" (formula "8") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "8") (term "1,0,0") (ifseqformula "35"))
                                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "8") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "8") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "8") (term "0,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "8") (term "0,0,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "8") (term "0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0"))
                                                                                    (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=arr_3"))
                                                                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "12"))
                                                                                    (rule "simplifySelectOfAnon" (formula "12"))
                                                                                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "60")) (ifInst ""  (formula "19")))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "13"))
                                                                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "9"))
                                                                                    (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                                                                                    (rule "mul_literals" (formula "13") (term "0,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "13") (term "1,0,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "9") (term "0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "9") (term "0,1"))
                                                                                    (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "2") (term "0,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "2") (term "0,0,1,1,0,0"))
                                                                                    (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "7"))
                                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                                                                    (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "6"))
                                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "2"))
                                                                                    (rule "hideAuxiliaryEq" (formula "2"))
                                                                                    (rule "inEqSimp_commuteGeq" (formula "2"))
                                                                                    (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=arr_4"))
                                                                                    (rule "simplifySelectOfAnon" (formula "10"))
                                                                                     (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "60")) (ifInst ""  (formula "19")))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "11"))
                                                                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                                    (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "11") (term "0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "11") (term "0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "11") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "11") (term "0,1"))
                                                                                    (rule "elementOfUnion" (formula "12") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "12") (term "1,0,0") (ifseqformula "37"))
                                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "12") (term "0,0"))
                                                                                    (rule "eqSymm" (formula "12") (term "0,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "12") (term "0,0,0,0") (ifseqformula "58"))
                                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                                    (rule "applyEqReverse" (formula "8") (term "0,1") (ifseqformula "12"))
                                                                                    (rule "applyEqReverse" (formula "13") (term "1,0,1") (ifseqformula "12"))
                                                                                    (rule "hideAuxiliaryEq" (formula "12"))
                                                                                    (rule "polySimp_addComm0" (formula "8") (term "1"))
                                                                                    (rule "polySimp_addComm1" (formula "12") (term "1"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "12"))
                                                                                    (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "0,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                                                                                    (rule "mul_literals" (formula "12") (term "0,0,1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "43"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "5"))
                                                                                    (rule "mul_literals" (formula "41") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "41") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                                                                    (rule "polySimp_mulLiterals" (formula "41") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "41") (term "1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "5"))
                                                                                    (rule "polySimp_mulComm0" (formula "47") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "47") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                                                    (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                                    (rule "elementOfUnion" (formula "10") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "10") (term "1,0,0") (ifseqformula "36"))
                                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "10") (term "0,0"))
                                                                                    (rule "eqSymm" (formula "10") (term "0,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "10") (term "0,0,0,0") (ifseqformula "59"))
                                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                                    (rule "applyEqReverse" (formula "11") (term "0,1") (ifseqformula "10"))
                                                                                    (rule "hideAuxiliaryEq" (formula "10"))
                                                                                    (rule "polySimp_addComm0" (formula "10") (term "1"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "10"))
                                                                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "0,1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "44"))
                                                                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                                    (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "8"))
                                                                                    (rule "polySimp_mulComm0" (formula "47") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "47") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                                                    (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "42"))
                                                                                    (rule "polySimp_mulComm0" (formula "46") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "46") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                                                                                    (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "42"))
                                                                                    (rule "mul_literals" (formula "41") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "41") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                                                                    (rule "polySimp_mulLiterals" (formula "41") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "41") (term "1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "8"))
                                                                                    (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "11") (term "0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                                    (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "11") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "10"))
                                                                                    (rule "mul_literals" (formula "46") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "46") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                                                    (rule "polySimp_mulLiterals" (formula "46") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "46") (term "1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "9"))
                                                                                    (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                                                                    (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "41") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "41") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "41"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "21") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                                    (rule "true_left" (formula "21"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "50"))
                                                                                    (rule "mul_literals" (formula "47") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "47") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                                                                    (rule "polySimp_mulLiterals" (formula "47") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "47") (term "1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "48"))
                                                                                    (rule "polySimp_mulComm0" (formula "51") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "51") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "51"))
                                                                                    (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "51") (term "0"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "48"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "12") (term "0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "12") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "9"))
                                                                                    (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                                    (rule "add_literals" (formula "11") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                                    (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "11"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                                                                    (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "13") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "13") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "13"))
                                                                                    (rule "true_left" (formula "13"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "52"))
                                                                                    (rule "mul_literals" (formula "48") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "48") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                                                    (rule "polySimp_mulLiterals" (formula "48") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "48") (term "1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "41"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "48") (term "0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                                                                    (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "48") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "48") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "48"))
                                                                                    (rule "true_left" (formula "48"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "11"))
                                                                                    (rule "polySimp_mulComm0" (formula "47") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                                                                    (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                                                    (rule "mul_literals" (formula "47") (term "0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "47"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                                                                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                                                                                    (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "41") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "41") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "41"))
                                                                                    (rule "true_left" (formula "41"))
                                                                                    (rule "commuteUnion" (formula "63") (term "1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "59") (term "1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "62") (term "1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "55") (term "1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "60") (term "1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "56") (term "1,0,0"))
                                                                                    (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "37"))
                                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                                    (rule "translateJavaMulInt" (formula "37") (term "1,1,0,0,0,0,0,1,0,0"))
                                                                                    (rule "translateJavaMulInt" (formula "37") (term "1,1,0,0,0,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0,1,0,0"))
                                                                                    (rule "andLeft" (formula "37"))
                                                                                    (rule "andLeft" (formula "38"))
                                                                                    (rule "andLeft" (formula "37"))
                                                                                    (rule "andLeft" (formula "39"))
                                                                                    (rule "andLeft" (formula "37"))
                                                                                    (rule "andLeft" (formula "40"))
                                                                                    (rule "andLeft" (formula "38"))
                                                                                    (rule "andLeft" (formula "37"))
                                                                                    (rule "andLeft" (formula "42"))
                                                                                    (rule "andLeft" (formula "39"))
                                                                                    (rule "notLeft" (formula "38"))
                                                                                    (rule "andLeft" (formula "37"))
                                                                                    (rule "andLeft" (formula "43"))
                                                                                    (rule "andLeft" (formula "39"))
                                                                                    (rule "andLeft" (formula "37"))
                                                                                    (rule "notLeft" (formula "39"))
                                                                                    (rule "andLeft" (formula "44"))
                                                                                    (rule "andLeft" (formula "39"))
                                                                                    (rule "andLeft" (formula "37"))
                                                                                    (rule "notLeft" (formula "39"))
                                                                                    (rule "andLeft" (formula "45"))
                                                                                    (rule "andLeft" (formula "39"))
                                                                                    (rule "notLeft" (formula "38"))
                                                                                    (rule "andLeft" (formula "37"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "39"))
                                                                                    (rule "notLeft" (formula "38"))
                                                                                    (rule "andLeft" (formula "37"))
                                                                                    (rule "andLeft" (formula "47"))
                                                                                    (rule "andLeft" (formula "39"))
                                                                                    (rule "notLeft" (formula "38"))
                                                                                    (rule "andLeft" (formula "37"))
                                                                                    (rule "andLeft" (formula "48"))
                                                                                    (rule "notLeft" (formula "38"))
                                                                                    (rule "notLeft" (formula "37"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "disjointDefinition" (formula "73"))
                                                                                     (builtin "One Step Simplification" (formula "73"))
                                                                                    (rule "notLeft" (formula "73"))
                                                                                    (rule "disjointDefinition" (formula "72"))
                                                                                     (builtin "One Step Simplification" (formula "72"))
                                                                                    (rule "notLeft" (formula "72"))
                                                                                    (rule "disjointDefinition" (formula "71"))
                                                                                     (builtin "One Step Simplification" (formula "71"))
                                                                                    (rule "notLeft" (formula "71"))
                                                                                    (rule "eqSymm" (formula "97"))
                                                                                    (rule "disjointDefinition" (formula "70"))
                                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                                    (rule "notLeft" (formula "70"))
                                                                                    (rule "eqSymm" (formula "96"))
                                                                                    (rule "disjointDefinition" (formula "69"))
                                                                                     (builtin "One Step Simplification" (formula "69"))
                                                                                    (rule "notLeft" (formula "69"))
                                                                                    (rule "eqSymm" (formula "95"))
                                                                                    (rule "disjointDefinition" (formula "68"))
                                                                                     (builtin "One Step Simplification" (formula "68"))
                                                                                    (rule "notLeft" (formula "68"))
                                                                                    (rule "eqSymm" (formula "94"))
                                                                                    (rule "disjointDefinition" (formula "67"))
                                                                                     (builtin "One Step Simplification" (formula "67"))
                                                                                    (rule "notLeft" (formula "67"))
                                                                                    (rule "eqSymm" (formula "93"))
                                                                                    (rule "disjointDefinition" (formula "66"))
                                                                                     (builtin "One Step Simplification" (formula "66"))
                                                                                    (rule "notLeft" (formula "66"))
                                                                                    (rule "eqSymm" (formula "92"))
                                                                                    (rule "disjointDefinition" (formula "65"))
                                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                                    (rule "notLeft" (formula "65"))
                                                                                    (rule "eqSymm" (formula "91"))
                                                                                    (rule "disjointDefinition" (formula "64"))
                                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                                    (rule "notLeft" (formula "64"))
                                                                                    (rule "eqSymm" (formula "90"))
                                                                                    (rule "disjointDefinition" (formula "63"))
                                                                                     (builtin "One Step Simplification" (formula "63"))
                                                                                    (rule "notLeft" (formula "63"))
                                                                                    (rule "eqSymm" (formula "89"))
                                                                                    (rule "disjointDefinition" (formula "62"))
                                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                                    (rule "notLeft" (formula "62"))
                                                                                    (rule "eqSymm" (formula "88"))
                                                                                    (rule "disjointDefinition" (formula "61"))
                                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                                    (rule "notLeft" (formula "61"))
                                                                                    (rule "eqSymm" (formula "87"))
                                                                                    (rule "disjointDefinition" (formula "60"))
                                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                                    (rule "notLeft" (formula "60"))
                                                                                    (rule "eqSymm" (formula "86"))
                                                                                    (rule "disjointDefinition" (formula "59"))
                                                                                     (builtin "One Step Simplification" (formula "59"))
                                                                                    (rule "notLeft" (formula "59"))
                                                                                    (rule "eqSymm" (formula "85"))
                                                                                    (rule "disjointDefinition" (formula "58"))
                                                                                     (builtin "One Step Simplification" (formula "58"))
                                                                                    (rule "notLeft" (formula "58"))
                                                                                    (rule "disjointDefinition" (formula "57"))
                                                                                     (builtin "One Step Simplification" (formula "57"))
                                                                                    (rule "notLeft" (formula "57"))
                                                                                    (rule "eqSymm" (formula "83"))
                                                                                    (rule "disjointDefinition" (formula "56"))
                                                                                     (builtin "One Step Simplification" (formula "56"))
                                                                                    (rule "notLeft" (formula "56"))
                                                                                    (rule "eqSymm" (formula "82"))
                                                                                    (rule "disjointDefinition" (formula "55"))
                                                                                     (builtin "One Step Simplification" (formula "55"))
                                                                                    (rule "notLeft" (formula "55"))
                                                                                    (rule "disjointDefinition" (formula "54"))
                                                                                     (builtin "One Step Simplification" (formula "54"))
                                                                                    (rule "notLeft" (formula "54"))
                                                                                    (rule "disjointDefinition" (formula "53"))
                                                                                     (builtin "One Step Simplification" (formula "53"))
                                                                                    (rule "notLeft" (formula "53"))
                                                                                    (rule "disjointDefinition" (formula "52"))
                                                                                     (builtin "One Step Simplification" (formula "52"))
                                                                                    (rule "notLeft" (formula "52"))
                                                                                    (rule "disjointDefinition" (formula "51"))
                                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                                    (rule "notLeft" (formula "51"))
                                                                                    (rule "disjointDefinition" (formula "50"))
                                                                                     (builtin "One Step Simplification" (formula "50"))
                                                                                    (rule "notLeft" (formula "50"))
                                                                                    (rule "disjointDefinition" (formula "49"))
                                                                                     (builtin "One Step Simplification" (formula "49"))
                                                                                    (rule "notLeft" (formula "49"))
                                                                                    (rule "disjointDefinition" (formula "48"))
                                                                                     (builtin "One Step Simplification" (formula "48"))
                                                                                    (rule "notLeft" (formula "48"))
                                                                                    (rule "disjointDefinition" (formula "47"))
                                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                                    (rule "notLeft" (formula "47"))
                                                                                    (rule "disjointDefinition" (formula "46"))
                                                                                     (builtin "One Step Simplification" (formula "46"))
                                                                                    (rule "notLeft" (formula "46"))
                                                                                    (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "45"))
                                                                                    (rule "applyEq" (formula "64") (term "0,1,0,0") (ifseqformula "45"))
                                                                                    (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "45"))
                                                                                    (rule "applyEq" (formula "70") (term "0,1,0,2,0") (ifseqformula "45"))
                                                                                    (rule "applyEq" (formula "71") (term "0,1,0,2,0") (ifseqformula "45"))
                                                                                    (rule "applyEq" (formula "67") (term "0,1,0,2,0") (ifseqformula "45"))
                                                                                    (rule "applyEq" (formula "63") (term "0,1,0,2,0") (ifseqformula "45"))
                                                                                    (rule "applyEq" (formula "68") (term "0,1,0,2,0") (ifseqformula "45"))
                                                                                    (rule "distributeIntersection" (formula "36") (term "0"))
                                                                                    (rule "distributeIntersection" (formula "35") (term "0"))
                                                                                    (rule "distributeIntersection" (formula "36") (term "1,0"))
                                                                                    (rule "distributeIntersection" (formula "36") (term "0,0"))
                                                                                    (rule "unionEqualsEmpty" (formula "35"))
                                                                                    (rule "andLeft" (formula "35"))
                                                                                    (rule "distributeIntersection" (formula "37") (term "0,1,0"))
                                                                                    (rule "distributeIntersection" (formula "37") (term "1,1,0"))
                                                                                    (rule "distributeIntersection" (formula "37") (term "0,0,0"))
                                                                                    (rule "distributeIntersection" (formula "37") (term "1,0,0"))
                                                                                    (rule "distributeIntersection" (formula "35") (term "0"))
                                                                                    (rule "distributeIntersection" (formula "36") (term "0"))
                                                                                    (rule "unionEqualsEmpty" (formula "37"))
                                                                                    (rule "andLeft" (formula "37"))
                                                                                    (rule "distributeIntersection" (formula "35") (term "1,0"))
                                                                                    (rule "distributeIntersection" (formula "35") (term "0,0"))
                                                                                    (rule "distributeIntersection" (formula "36") (term "0,0"))
                                                                                    (rule "distributeIntersection" (formula "36") (term "1,0"))
                                                                                    (rule "unionEqualsEmpty" (formula "37"))
                                                                                    (rule "andLeft" (formula "37"))
                                                                                    (rule "unionEqualsEmpty" (formula "39"))
                                                                                    (rule "andLeft" (formula "39"))
                                                                                    (rule "unionEqualsEmpty" (formula "35"))
                                                                                    (rule "andLeft" (formula "35"))
                                                                                    (rule "unionEqualsEmpty" (formula "37"))
                                                                                    (rule "andLeft" (formula "37"))
                                                                                    (rule "unionEqualsEmpty" (formula "40"))
                                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                                    (rule "andLeft" (formula "40"))
                                                                                    (rule "notLeft" (formula "41"))
                                                                                    (rule "notLeft" (formula "40"))
                                                                                    (rule "eqSymm" (formula "78"))
                                                                                    (rule "eqSymm" (formula "77"))
                                                                                    (rule "unionEqualsEmpty" (formula "39"))
                                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                                    (rule "andLeft" (formula "39"))
                                                                                    (rule "notLeft" (formula "40"))
                                                                                    (rule "notLeft" (formula "39"))
                                                                                    (rule "eqSymm" (formula "77"))
                                                                                    (rule "eqSymm" (formula "76"))
                                                                                    (rule "unionEqualsEmpty" (formula "40"))
                                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                                    (rule "andLeft" (formula "40"))
                                                                                    (rule "notLeft" (formula "41"))
                                                                                    (rule "notLeft" (formula "40"))
                                                                                    (rule "eqSymm" (formula "76"))
                                                                                    (rule "eqSymm" (formula "75"))
                                                                                    (rule "unionEqualsEmpty" (formula "39"))
                                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                                    (rule "andLeft" (formula "39"))
                                                                                    (rule "notLeft" (formula "39"))
                                                                                    (rule "notLeft" (formula "39"))
                                                                                    (rule "eqSymm" (formula "75"))
                                                                                    (rule "eqSymm" (formula "74"))
                                                                                    (rule "unionEqualsEmpty" (formula "35"))
                                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                                    (rule "andLeft" (formula "35"))
                                                                                    (rule "notLeft" (formula "36"))
                                                                                    (rule "notLeft" (formula "35"))
                                                                                    (rule "eqSymm" (formula "74"))
                                                                                    (rule "eqSymm" (formula "73"))
                                                                                    (rule "unionEqualsEmpty" (formula "35"))
                                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                                    (rule "andLeft" (formula "35"))
                                                                                    (rule "notLeft" (formula "36"))
                                                                                    (rule "notLeft" (formula "35"))
                                                                                    (rule "eqSymm" (formula "73"))
                                                                                    (rule "eqSymm" (formula "72"))
                                                                                    (rule "unionEqualsEmpty" (formula "35"))
                                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                                    (rule "andLeft" (formula "35"))
                                                                                    (rule "notLeft" (formula "35"))
                                                                                    (rule "notLeft" (formula "35"))
                                                                                    (rule "eqSymm" (formula "72"))
                                                                                    (rule "eqSymm" (formula "71"))
                                                                                    (rule "unionEqualsEmpty" (formula "35"))
                                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                                    (rule "andLeft" (formula "35"))
                                                                                    (rule "notLeft" (formula "36"))
                                                                                    (rule "notLeft" (formula "35"))
                                                                                    (rule "eqSymm" (formula "71"))
                                                                                    (rule "eqSymm" (formula "70"))
                                                                                    (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "33") (term "0,0,1") (inst "b=b"))
                                                                                     (builtin "One Step Simplification" (formula "33"))
                                                                                    (rule "translateJavaMod" (formula "33") (term "0,1,0,0,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "33") (term "0,2,1,3,0,1,0,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "33") (term "2,0,1,0,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "33") (term "3,0,1,0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "33") (term "0,2,1,3,0,1,0,0,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,0,1"))
                                                                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,0,1"))
                                                                                    (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,0,1"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0,0,1"))
                                                                                    (rule "jmod_axiom" (formula "33") (term "0,1,0,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,0,1"))
                                                                                    (rule "polySimp_homoEq" (formula "33") (term "1,0,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,0,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,1,0,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "33") (term "0,1,0,0,0,1"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "33") (term "1,0,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1"))
                                                                                    (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,0,1"))
                                                                                    (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,0,1"))
                                                                                    (rule "Contract_axiom_for_bucketStartsOrdering_in_Functions" (formula "45") (term "0"))
                                                                                    (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "46"))
                                                                                     (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "27")) (ifInst ""  (formula "125")) (ifInst ""  (formula "16")))
                                                                                    (rule "true_left" (formula "45"))
                                                                                    (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "34") (term "0") (inst "b=b"))
                                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                                    (rule "translateJavaSubInt" (formula "34") (term "0,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "34") (term "0,2,0,0,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "34") (term "0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "34") (term "0,2,0,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "34") (term "0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "34") (term "1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "34") (term "1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "34") (term "0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "34") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "34") (term "0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "34") (term "0,0,0,1,1,0"))
                                                                                    (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "32") (term "0") (inst "b=b"))
                                                                                     (builtin "One Step Simplification" (formula "32"))
                                                                                    (rule "translateJavaAddInt" (formula "32") (term "0,2,5,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "32") (term "0,2,5,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                                                                    (rule "Definition_axiom_for_bucketStartsOrdering_in_de_wiesler_Functions" (formula "45") (term "0") (inst "b=b"))
                                                                                     (builtin "One Step Simplification" (formula "45"))
                                                                                    (rule "translateJavaAddInt" (formula "45") (term "0,2,0,1,1,1,1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "45") (term "0,2,1,1,0,1,1,1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "45") (term "0,2,0,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "45") (term "0,2,1,1,0,1,0,1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "45") (term "0,2,0,1,1,0,1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "45") (term "0,2,0,0,0,1,1,1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "45") (term "0,2,1,1,0,0"))
                                                                                    (rule "andLeft" (formula "45"))
                                                                                    (rule "andLeft" (formula "45"))
                                                                                    (rule "andLeft" (formula "45"))
                                                                                    (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,1,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "48") (term "0,2,1,1,0,1,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "48") (term "0,2,0,0,0,1,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "48") (term "0,2,1,1,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,1,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "47") (term "0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "46") (term "0,2,1"))
                                                                                    (rule "inEqSimp_gtToGeq" (formula "48") (term "0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "47") (term "1,0,1,1,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,1,1,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "47") (term "1,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "46"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                                    (rule "applyEq" (formula "45") (term "0") (ifseqformula "28"))
                                                                                    (rule "inEqSimp_commuteGeq" (formula "45"))
                                                                                    (rule "applyEq" (formula "45") (term "1,1,1,1,1,0") (ifseqformula "28"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "45") (term "0,1,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,0,1,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0"))
                                                                                    (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "29") (term "0") (inst "b=b"))
                                                                                     (builtin "One Step Simplification" (formula "29"))
                                                                                    (rule "translateJavaAddInt" (formula "29") (term "3,0,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "29") (term "2,0,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "29") (term "0,2,1,3,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "29") (term "0,2,1,3,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                                                                    (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "27") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                                    (rule "translateJavaAddInt" (formula "27") (term "3,0,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "27") (term "0,1,0,0"))
                                                                                    (rule "andLeft" (formula "27"))
                                                                                    (rule "andLeft" (formula "27"))
                                                                                    (rule "andLeft" (formula "27"))
                                                                                    (rule "polySimp_addComm0" (formula "29") (term "3,0"))
                                                                                    (rule "polySimp_addComm0" (formula "28") (term "0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "27"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "28"))
                                                                                    (rule "nnf_imp2or" (formula "34") (term "0,1,0"))
                                                                                    (rule "nnf_imp2or" (formula "4") (term "0"))
                                                                                    (rule "commuteUnion_2" (formula "46") (term "0,1"))
                                                                                    (rule "commuteUnion" (formula "46") (term "1,1,1"))
                                                                                    (rule "commuteUnion" (formula "65") (term "0,0,1,0,0"))
                                                                                    (rule "commuteUnion" (formula "65") (term "1,1,0,1,0,0"))
                                                                                    (rule "commuteUnion" (formula "71") (term "0,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "71") (term "1,1,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "72") (term "0,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "72") (term "1,1,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "68") (term "0,0,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "68") (term "1,1,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "64") (term "0,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "64") (term "1,1,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "69") (term "1,1,0,1,0,2,0"))
                                                                                    (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                                    (rule "true_left" (formula "23"))
                                                                                    (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                                                                    (rule "commuteUnion" (formula "69") (term "0,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "46") (term "0,0,1"))
                                                                                    (rule "commuteUnion" (formula "65") (term "1,0,0,1,0,0"))
                                                                                    (rule "commuteUnion" (formula "71") (term "1,0,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "72") (term "1,0,0,1,0,2,0"))
                                                                                    (rule "commuteUnion_2" (formula "68") (term "0,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "64") (term "1,0,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "69") (term "1,0,0,1,0,2,0"))
                                                                                    (rule "commuteUnion_2" (formula "46") (term "0,1"))
                                                                                    (rule "commuteUnion_2" (formula "68") (term "0,1,0,2,0"))
                                                                                    (rule "commuteUnion_2" (formula "46") (term "1"))
                                                                                    (rule "commuteUnion" (formula "68") (term "0,0,0,1,0,2,0"))
                                                                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                                    (branch "bucket_starts[1 + bucket] >= 1 + bucket_starts[bucket] TRUE"
                                                                                       (rule "replace_known_left" (formula "5") (term "0,1,1,1,0,0,0") (ifseqformula "1"))
                                                                                        (builtin "One Step Simplification" (formula "5"))
                                                                                       (rule "polySimp_addAssoc" (formula "5") (term "1,1,0,0,0"))
                                                                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                       (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                       (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                                                                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                       (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "1"))
                                                                                       (rule "inEqSimp_homoInEq0" (formula "54") (term "0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0"))
                                                                                       (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                                                                       (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                                                                       (rule "add_zero_right" (formula "54") (term "0,0"))
                                                                                       (rule "qeq_literals" (formula "54") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "54"))
                                                                                       (rule "true_left" (formula "54"))
                                                                                       (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "2"))
                                                                                       (rule "andLeft" (formula "7"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                                       (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "7") (term "0,1,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                                       (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                                                       (rule "add_literals" (formula "7") (term "1,1,0"))
                                                                                       (rule "times_zero_1" (formula "7") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "7") (term "0"))
                                                                                       (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
                                                                                       (rule "add_literals" (formula "7") (term "1,1,0"))
                                                                                       (rule "times_zero_1" (formula "7") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "7") (term "0"))
                                                                                       (rule "leq_literals" (formula "7"))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                    (branch "bucket_starts[1 + bucket] >= 1 + bucket_starts[bucket] FALSE"
                                                                                       (rule "replace_known_right" (formula "4") (term "0,1,1,1,0,0,0") (ifseqformula "73"))
                                                                                        (builtin "One Step Simplification" (formula "4"))
                                                                                       (rule "add_zero_right" (formula "4") (term "1,1,0,0,0"))
                                                                                       (rule "inEqSimp_geqRight" (formula "73"))
                                                                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "2") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                       (rule "inEqSimp_antiSymm" (formula "53") (ifseqformula "1"))
                                                                                       (rule "applyEq" (formula "48") (term "1,0,0,1,1,1,0") (ifseqformula "53"))
                                                                                       (rule "applyEq" (formula "65") (term "1,1,0") (ifseqformula "53"))
                                                                                       (rule "seqDef_lower_equals_upper" (formula "65") (term "0"))
                                                                                       (rule "seqPermEmpty1" (formula "65"))
                                                                                       (rule "eqSymm" (formula "65"))
                                                                                       (rule "eqSeqEmpty" (formula "65"))
                                                                                       (rule "lenOfSeqDef" (formula "65") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "65"))
                                                                                       (rule "polySimp_elimSub" (formula "65") (term "0,1"))
                                                                                       (rule "polySimp_mulComm0" (formula "65") (term "1,0,1"))
                                                                                       (rule "polySimp_rightDist" (formula "65") (term "1,0,1"))
                                                                                       (rule "polySimp_mulComm0" (formula "65") (term "0,1,0,1"))
                                                                                       (rule "polySimp_addComm1" (formula "65") (term "0,1"))
                                                                                       (rule "polySimp_addAssoc" (formula "65") (term "0,0,1"))
                                                                                       (rule "polySimp_pullOutFactor1" (formula "65") (term "0,0,0,1"))
                                                                                       (rule "add_literals" (formula "65") (term "1,0,0,0,1"))
                                                                                       (rule "times_zero_1" (formula "65") (term "0,0,0,1"))
                                                                                       (rule "add_zero_left" (formula "65") (term "0,0,1"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "65") (term "0,1,0,0,0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "65") (term "0,0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor2b" (formula "65") (term "0,0,0,0,0"))
                                                                                       (rule "add_literals" (formula "65") (term "1,1,0,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "65") (term "1,0,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "65") (term "0,0,0,0,0"))
                                                                                       (rule "applyEq" (formula "72") (term "1,2,1,1,0,2,0") (ifseqformula "53"))
                                                                                       (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "53"))
                                                                                       (rule "applyEq" (formula "54") (term "0") (ifseqformula "53"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "54"))
                                                                                       (rule "polySimp_pullOutFactor1" (formula "54") (term "0"))
                                                                                       (rule "add_literals" (formula "54") (term "1,0"))
                                                                                       (rule "times_zero_1" (formula "54") (term "0"))
                                                                                       (rule "leq_literals" (formula "54"))
                                                                                       (rule "true_left" (formula "54"))
                                                                                       (rule "applyEq" (formula "68") (term "1,2,1,1,0,2,0") (ifseqformula "53"))
                                                                                       (rule "applyEq" (formula "72") (term "1,2,1,1,0,2,0") (ifseqformula "53"))
                                                                                       (rule "applyEq" (formula "69") (term "1,0,0") (ifseqformula "53"))
                                                                                       (rule "applyEq" (formula "65") (term "1,2,1,1,0,0") (ifseqformula "53"))
                                                                                       (rule "applyEq" (formula "72") (term "1,0,0") (ifseqformula "53"))
                                                                                       (rule "applyEq" (formula "54") (term "0") (ifseqformula "53"))
                                                                                       (rule "applyEq" (formula "64") (term "1,3,0") (ifseqformula "53"))
                                                                                       (rule "applyEq" (formula "4") (term "1,1,1,0,0,1,0") (ifseqformula "53"))
                                                                                       (rule "polySimp_pullOutFactor2b" (formula "4") (term "1,1,0,0,1,0"))
                                                                                       (rule "add_literals" (formula "4") (term "1,1,1,1,0,0,1,0"))
                                                                                       (rule "times_zero_1" (formula "4") (term "1,1,1,0,0,1,0"))
                                                                                       (rule "add_zero_right" (formula "4") (term "1,1,0,0,1,0"))
                                                                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "53"))
                                                                                       (rule "applyEq" (formula "71") (term "1,0,1") (ifseqformula "53"))
                                                                                       (rule "applyEq" (formula "68") (term "1,2,1,1,0,2,0") (ifseqformula "53"))
                                                                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "53"))
                                                                                       (rule "inEqSimp_homoInEq0" (formula "1"))
                                                                                       (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                                                       (rule "add_literals" (formula "1") (term "1,0"))
                                                                                       (rule "times_zero_1" (formula "1") (term "0"))
                                                                                       (rule "qeq_literals" (formula "1"))
                                                                                       (rule "true_left" (formula "1"))
                                                                                       (rule "applyEq" (formula "62") (term "1,0,1") (ifseqformula "52"))
                                                                                       (rule "polySimp_pullOutFactor2" (formula "62") (term "0,1"))
                                                                                       (rule "add_literals" (formula "62") (term "1,0,1"))
                                                                                       (rule "times_zero_1" (formula "62") (term "0,1"))
                                                                                        (builtin "One Step Simplification" (formula "62"))
                                                                                       (rule "true_left" (formula "62"))
                                                                                       (rule "applyEq" (formula "66") (term "1,0,1") (ifseqformula "52"))
                                                                                       (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "4"))
                                                                                       (rule "andLeft" (formula "5"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                                       (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "5") (term "0,1,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                                       (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                                                       (rule "add_literals" (formula "5") (term "1,1,0"))
                                                                                       (rule "times_zero_1" (formula "5") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "5") (term "0"))
                                                                                       (rule "polySimp_pullOutFactor2b" (formula "5") (term "0"))
                                                                                       (rule "add_literals" (formula "5") (term "1,1,0"))
                                                                                       (rule "times_zero_1" (formula "5") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "5") (term "0"))
                                                                                       (rule "leq_literals" (formula "5"))
                                                                                       (rule "closeFalse" (formula "5"))
                                                                                    )
                                                                                 )
                                                                                 (branch "Case 2"
                                                                                    (rule "andLeft" (formula "3"))
                                                                                    (rule "eqSymm" (formula "55"))
                                                                                    (rule "polySimp_elimSub" (formula "5") (term "2,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "5") (term "1,2,0,1,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "2") (term "2,0,1,0,1,0,0,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "2") (term "1,2,0,1,0,1,0,0,1,1,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "9") (term "2,0,1,0,1,1"))
                                                                                    (rule "mul_literals" (formula "9") (term "1,2,0,1,0,1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "45") (term "1,2,0,1,0,1,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,1,0,0,0,1"))
                                                                                    (rule "mul_literals" (formula "1") (term "1,2,0,1,0,1,0,0,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "2") (term "2,0,1,0,2,0,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "2") (term "1,2,0,1,0,2,0,1,1,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "50") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "50") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "46") (term "2,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "46") (term "1,2,0,1,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "6") (term "2,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "6") (term "1,2,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "46") (term "2,0,1,0,1,2,0"))
                                                                                    (rule "mul_literals" (formula "46") (term "1,2,0,1,0,1,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "49") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "49") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "52") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "52") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "45") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "53") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "53") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "60") (term "2,0,1,0,1"))
                                                                                    (rule "mul_literals" (formula "60") (term "1,2,0,1,0,1"))
                                                                                    (rule "polySimp_homoEq" (formula "30") (term "0,1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,2,0,0,1"))
                                                                                    (rule "mul_literals" (formula "1") (term "1,2,0,1,0,2,0,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "1") (term "1,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "8") (term "2,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "8") (term "1,2,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "53") (term "0,2,1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "2") (term "0,2,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "45") (term "0,2,1,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "50") (term "0,2,1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "28") (term "0,2,1,1,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "28") (term "0,2,1,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "6") (term "0,2,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "9") (term "0,2,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "4") (term "0,2,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "5") (term "2,0,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "2,0,1,0,1,0,0,1,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "9") (term "2,0,1,0,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "45") (term "2,0,1,0,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,1,0,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "2,0,1,0,2,0,1,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "50") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "46") (term "2,0,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "6") (term "2,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "46") (term "2,0,1,0,1,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "49") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "52") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "45") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "53") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "60") (term "2,0,1,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,2,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "8") (term "2,0,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,1"))
                                                                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "5") (term "0,2,0,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,0,1,0,0,1,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "9") (term "0,2,0,1,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,1,0,0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,0,2,0,1,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "50") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "46") (term "0,2,0,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "6") (term "0,2,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "46") (term "0,2,0,1,0,1,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "49") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "52") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "53") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "60") (term "0,2,0,1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,2,0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "8") (term "0,2,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_gtRight" (formula "54"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "12"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "28"))
                                                                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "24"))
                                                                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "29") (term "0,1,0,1,0"))
                                                                                    (rule "getOfSeqDef" (formula "3") (term "0,1,1,0"))
                                                                                    (rule "castDel" (formula "3") (term "2,0,1,1,0"))
                                                                                    (rule "castDel" (formula "3") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "3") (term "1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "3") (term "0,2,1,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1,1"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "11"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "43"))
                                                                                    (rule "polySimp_addAssoc" (formula "2") (term "1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "2") (term "0,1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "0,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "1,1,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                                                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0"))
                                                                                    (rule "lenOfSeqDef" (formula "3") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "3") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,1,1,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "0,1,1,1,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "10"))
                                                                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0"))
                                                                                    (rule "inEqSimp_ltRight" (formula "60"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "23"))
                                                                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "4") (term "1,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "times_zero_1" (formula "4") (term "0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "4") (term "0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                                    (rule "castedGetAny" (formula "3") (term "1"))
                                                                                    (rule "polySimp_addAssoc" (formula "4") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "4") (term "0,1,1,1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,1,1,1,0,0"))
                                                                                    (rule "add_literals" (formula "4") (term "1,0,0,1,1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "4") (term "0,0,1,1,1,0,0"))
                                                                                    (rule "add_zero_left" (formula "4") (term "0,1,1,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,1,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0,0,1,1,0,0"))
                                                                                    (rule "getOfSeqDef" (formula "3") (term "1"))
                                                                                    (rule "polySimp_elimSub" (formula "3") (term "1,1,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,1,1,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "0,1,1,1,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,1,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "3") (term "0,2,0,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,2,0,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0,2,0,1,1"))
                                                                                    (rule "polySimp_pullOutFactor2" (formula "3") (term "0,0,0,0,2,0,1,1"))
                                                                                    (rule "add_literals" (formula "3") (term "1,0,0,0,0,2,0,1,1"))
                                                                                    (rule "times_zero_1" (formula "3") (term "0,0,0,0,2,0,1,1"))
                                                                                    (rule "add_zero_left" (formula "3") (term "0,0,0,2,0,1,1"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "3") (term "1,1,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,1,1,0,1"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,1,0,1"))
                                                                                    (rule "add_literals" (formula "3") (term "1,0,0,1,1,0,1"))
                                                                                    (rule "times_zero_1" (formula "3") (term "0,0,1,1,0,1"))
                                                                                    (rule "add_zero_left" (formula "3") (term "0,1,1,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1,1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0,0,0,1,1,0,0"))
                                                                                    (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,1,1,0,0"))
                                                                                    (rule "add_zero_right" (formula "4") (term "0,0,0,0,1,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0,1,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "8"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "10"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "4") (term "0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0,1,0"))
                                                                                    (rule "times_zero_2" (formula "3") (term "1,0,0,0,0,1,0"))
                                                                                    (rule "add_zero_right" (formula "3") (term "0,0,0,0,1,0"))
                                                                                    (rule "replace_known_left" (formula "3") (term "0,0,0,1,0") (ifseqformula "5"))
                                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "jmod_axiom" (formula "32") (term "0,1,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,1,1"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "32") (term "0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "32") (term "0,0,1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "32") (term "0,0,1,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                                    (rule "mul_literals" (formula "9") (term "0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                                                    (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                                                                    (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "30") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "32") (term "1,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "32") (term "0,1,1,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "30") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "30") (term "0,0,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,1,0,0,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,1,0,0,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "0,1,1,0,0,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "4") (term "0,0,1,1,0,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "0,0,0,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "3") (term "0,0,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                                    (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "56"))
                                                                                    (rule "inEqSimp_contradEq7" (formula "56") (ifseqformula "2"))
                                                                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0"))
                                                                                    (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "56") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "56") (term "0,0"))
                                                                                    (rule "leq_literals" (formula "56") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "56"))
                                                                                    (rule "false_right" (formula "56"))
                                                                                    (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=arr_0"))
                                                                                    (rule "simplifySelectOfAnon" (formula "7"))
                                                                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "60")) (ifInst ""  (formula "16")))
                                                                                    (rule "eqSymm" (formula "8"))
                                                                                    (rule "applyEqReverse" (formula "7") (term "1") (ifseqformula "8"))
                                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                                    (rule "hideAuxiliaryEq" (formula "8"))
                                                                                    (rule "pullOutSelect" (formula "47") (term "1,0,0") (inst "selectSK=arr_1"))
                                                                                    (rule "applyEq" (formula "4") (term "0,0,1,1,1,0,0") (ifseqformula "47"))
                                                                                    (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                                                                    (rule "applyEq" (formula "4") (term "0,1,1,1,1,1,0,0") (ifseqformula "47"))
                                                                                    (rule "applyEq" (formula "49") (term "1,2,0") (ifseqformula "47"))
                                                                                    (rule "applyEq" (formula "3") (term "1,0,2,0,1,0") (ifseqformula "47"))
                                                                                    (rule "simplifySelectOfAnon" (formula "47"))
                                                                                     (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "59")) (ifInst ""  (formula "17")))
                                                                                    (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "4") (term "1,1,1,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "49") (term "2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,2,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "3") (term "0,0,2,0,1,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "0,1,1,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,1,1,1,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,1,1,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "4") (term "0,1,0,1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "0,0,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "0,0,0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "3") (term "0,0,0,0,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0,1,0,0"))
                                                                                    (rule "elementOfUnion" (formula "7") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "7") (term "1,0,0") (ifseqformula "34"))
                                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "7") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "7") (term "0,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "7") (term "0,0,1,1,0,0"))
                                                                                    (rule "elementOfUnion" (formula "47") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "47") (term "1,0,0") (ifseqformula "35"))
                                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "47") (term "0,0"))
                                                                                    (rule "eqSymm" (formula "47") (term "0,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "47") (term "0,0,0,0") (ifseqformula "57"))
                                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                                    (rule "applyEqReverse" (formula "4") (term "1,1,0,1,1,1,0,0") (ifseqformula "47"))
                                                                                    (rule "applyEqReverse" (formula "4") (term "0,0,1,1,1,1,0,0") (ifseqformula "47"))
                                                                                    (rule "applyEqReverse" (formula "3") (term "0,0,0,2,0,1,0") (ifseqformula "47"))
                                                                                    (rule "applyEqReverse" (formula "49") (term "0,2,0") (ifseqformula "47"))
                                                                                    (rule "applyEqReverse" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "47"))
                                                                                    (rule "applyEqReverse" (formula "48") (term "0,0,0") (ifseqformula "47"))
                                                                                    (rule "hideAuxiliaryEq" (formula "47"))
                                                                                    (rule "polySimp_addComm0" (formula "3") (term "0,0,2,0,1,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,2,0,1,0"))
                                                                                    (rule "add_literals" (formula "3") (term "1,1,0,2,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "3") (term "1,0,2,0,1,0"))
                                                                                    (rule "add_zero_right" (formula "3") (term "0,2,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "48") (term "2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "3") (term "1,1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "3") (term "1,1,0,0"))
                                                                                    (rule "add_zero_right" (formula "3") (term "1,0,0"))
                                                                                    (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "6"))
                                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_2"))
                                                                                    (rule "simplifySelectOfAnon" (formula "1"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "16")))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                                                                    (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=arr_3"))
                                                                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "12"))
                                                                                    (rule "simplifySelectOfAnon" (formula "12"))
                                                                                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "60")) (ifInst ""  (formula "19")))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "13"))
                                                                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "9"))
                                                                                    (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                                                                                    (rule "mul_literals" (formula "13") (term "0,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "13") (term "1,0,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "9") (term "0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "9") (term "0,1"))
                                                                                    (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=arr_4"))
                                                                                    (rule "simplifySelectOfAnon" (formula "11"))
                                                                                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "61")) (ifInst ""  (formula "20")))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "12"))
                                                                                    (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "12") (term "0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "12") (term "0,1"))
                                                                                    (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "37"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "6"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "7"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "1"))
                                                                                    (rule "hideAuxiliaryEq" (formula "1"))
                                                                                    (rule "inEqSimp_commuteGeq" (formula "1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "5"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "42") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "42") (term "1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "45"))
                                                                                    (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "44") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                                                    (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                                                    (rule "elementOfUnion" (formula "12") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "12") (term "1,0,0") (ifseqformula "37"))
                                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "12") (term "0,0"))
                                                                                    (rule "eqSymm" (formula "12") (term "0,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "12") (term "0,0,0,0") (ifseqformula "60"))
                                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                                    (rule "applyEqReverse" (formula "8") (term "0,1") (ifseqformula "12"))
                                                                                    (rule "applyEqReverse" (formula "13") (term "1,0,1") (ifseqformula "12"))
                                                                                    (rule "hideAuxiliaryEq" (formula "12"))
                                                                                    (rule "polySimp_addComm0" (formula "8") (term "1"))
                                                                                    (rule "polySimp_addComm1" (formula "12") (term "1"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "12"))
                                                                                    (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "0,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                                                                                    (rule "mul_literals" (formula "12") (term "0,0,1"))
                                                                                    (rule "elementOfUnion" (formula "10") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "10") (term "1,0,0") (ifseqformula "36"))
                                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "10") (term "0,0"))
                                                                                    (rule "eqSymm" (formula "10") (term "0,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "10") (term "0,0,0,0") (ifseqformula "59"))
                                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                                    (rule "applyEqReverse" (formula "11") (term "0,1") (ifseqformula "10"))
                                                                                    (rule "hideAuxiliaryEq" (formula "10"))
                                                                                    (rule "polySimp_addComm0" (formula "10") (term "1"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "10"))
                                                                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "0,1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "5"))
                                                                                    (rule "polySimp_mulComm0" (formula "46") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "46") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                                                                                    (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                                                    (rule "pullOutSelect" (formula "3") (term "0,0") (inst "selectSK=arr_5"))
                                                                                    (rule "simplifySelectOfAnon" (formula "3"))
                                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "16")))
                                                                                    (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "52") (ifseqformula "62"))
                                                                                    (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "15") (ifseqformula "62"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "45"))
                                                                                    (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                                    (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                                    (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "3") (term "1,0,0") (ifseqformula "35"))
                                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "0,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "3") (term "0,0,1,1,0,0"))
                                                                                    (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "7"))
                                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                                                                    (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "6"))
                                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "3"))
                                                                                    (rule "castDel" (formula "4") (term "0"))
                                                                                    (rule "hideAuxiliaryEq" (formula "3"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                                                                    (rule "andLeft" (formula "1"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                                    (rule "add_literals" (formula "1") (term "0"))
                                                                                    (rule "leq_literals" (formula "1"))
                                                                                    (rule "closeFalse" (formula "1"))
                                                                                 )
                                                                              )
                                                                              (branch "Case 2"
                                                                                 (rule "allRight" (formula "52") (inst "sk=iv_0") (userinteraction))
                                                                                 (rule "impRight" (formula "52"))
                                                                                 (rule "andLeft" (formula "2"))
                                                                                 (rule "andLeft" (formula "1"))
                                                                                 (rule "allLeftHide" (formula "28") (inst "t=i_0") (userinteraction))
                                                                                 (rule "impLeft" (formula "28") (userinteraction))
                                                                                 (branch "Case 1"
                                                                                    (rule "allRight" (formula "54") (inst "sk=iv_1"))
                                                                                    (rule "impRight" (formula "54"))
                                                                                    (rule "andLeft" (formula "1"))
                                                                                    (rule "eqSymm" (formula "59"))
                                                                                    (rule "polySimp_elimSub" (formula "50") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "50") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "11") (term "2,0,1,0,1,1"))
                                                                                    (rule "mul_literals" (formula "11") (term "1,2,0,1,0,1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "53") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "53") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_homoEq" (formula "31") (term "0,1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,1,0,0,1"))
                                                                                    (rule "mul_literals" (formula "4") (term "1,2,0,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,1,2,0"))
                                                                                    (rule "mul_literals" (formula "47") (term "1,2,0,1,0,1,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "10") (term "2,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "10") (term "1,2,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "54") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "54") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,2,0,1"))
                                                                                    (rule "mul_literals" (formula "4") (term "1,2,0,1,0,2,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "7") (term "2,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "7") (term "1,2,0,1,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "46") (term "2,0,1,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "46") (term "1,2,0,1,0,1,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "46") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "46") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "8") (term "2,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "8") (term "1,2,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "47") (term "1,2,0,1,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "51") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "64") (term "2,0,1,0,1"))
                                                                                    (rule "mul_literals" (formula "64") (term "1,2,0,1,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "56") (term "2,0,1,0,2,0,0,1"))
                                                                                    (rule "mul_literals" (formula "56") (term "1,2,0,1,0,2,0,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "56") (term "2,0,1,0,1,0,0,0,1"))
                                                                                    (rule "mul_literals" (formula "56") (term "1,2,0,1,0,1,0,0,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "2") (term "2,0,1,0,1,0,0,1"))
                                                                                    (rule "mul_literals" (formula "2") (term "1,2,0,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "2") (term "2,0,1,0,2,0,1"))
                                                                                    (rule "mul_literals" (formula "2") (term "1,2,0,1,0,2,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "46") (term "0,2,1,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "55") (term "0,2,1,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "51") (term "0,2,1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "54") (term "0,2,1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "11") (term "0,2,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "6") (term "0,2,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "57") (term "0,2,1,1,0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "8") (term "0,2,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "50") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "11") (term "2,0,1,0,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "53") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,1,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "10") (term "2,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,2,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "7") (term "2,0,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "46") (term "2,0,1,0,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "46") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "8") (term "2,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "64") (term "2,0,1,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "56") (term "2,0,1,0,2,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "56") (term "2,0,1,0,1,0,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "2,0,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "2,0,1,0,2,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "50") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,1"))
                                                                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "11") (term "0,2,0,1,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "53") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,1,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "10") (term "0,2,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "54") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,2,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "7") (term "0,2,0,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "46") (term "0,2,0,1,0,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "46") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "8") (term "0,2,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "64") (term "0,2,0,1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "56") (term "0,2,0,1,0,2,0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "56") (term "0,2,0,1,0,1,0,0,0,1"))
                                                                                    (rule "inEqSimp_gtRight" (formula "58"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,0,2,0,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "10"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "30"))
                                                                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "14"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "26"))
                                                                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                                    (rule "getOfSeqDef" (formula "58") (term "0,1"))
                                                                                    (rule "castDel" (formula "58") (term "2,0,1"))
                                                                                    (rule "castDel" (formula "58") (term "1,0,1"))
                                                                                    (rule "replace_known_left" (formula "58") (term "0,0,0,1") (ifseqformula "4"))
                                                                                     (builtin "One Step Simplification" (formula "58"))
                                                                                    (rule "polySimp_elimSub" (formula "58") (term "1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,1"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "4"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "13"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                                    (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "58") (term "0,1,1,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "58") (term "1,0,0,1"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                                                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "56") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0"))
                                                                                    (rule "lenOfSeqDef" (formula "5") (term "1"))
                                                                                    (rule "polySimp_elimSub" (formula "5") (term "1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "5") (term "1,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "5") (term "1,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "5") (term "0,1,1,1"))
                                                                                    (rule "castedGetAny" (formula "57") (term "1"))
                                                                                    (rule "lenOfSeqDef" (formula "3") (term "1"))
                                                                                    (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "0,1,1,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "12"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0"))
                                                                                    (rule "inEqSimp_ltRight" (formula "64"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "7"))
                                                                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "57") (term "0"))
                                                                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "25"))
                                                                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "59") (term "0,2,1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "59") (term "0,0,2,1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "57") (term "0,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "59") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "59") (term "0,0,1,0,0,1"))
                                                                                    (rule "add_literals" (formula "59") (term "1,0,0,1,0,0,1"))
                                                                                    (rule "times_zero_1" (formula "59") (term "0,0,1,0,0,1"))
                                                                                    (rule "add_zero_left" (formula "59") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "57") (term "0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "57") (term "0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "6") (term "1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "6") (term "0,1,1"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "6") (term "0,0,1,1"))
                                                                                    (rule "add_literals" (formula "6") (term "1,0,0,1,1"))
                                                                                    (rule "times_zero_1" (formula "6") (term "0,0,1,1"))
                                                                                    (rule "add_zero_left" (formula "6") (term "0,1,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "4") (term "1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "4") (term "0,1,1"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,1,1"))
                                                                                    (rule "add_literals" (formula "4") (term "1,0,0,1,1"))
                                                                                    (rule "times_zero_1" (formula "4") (term "0,0,1,1"))
                                                                                    (rule "add_zero_left" (formula "4") (term "0,1,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                                    (rule "getOfSeqDef" (formula "58") (term "1"))
                                                                                    (rule "polySimp_elimSub" (formula "58") (term "1,1,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "58") (term "1,1,1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "58") (term "1,1,1,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "58") (term "0,1,1,1,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "57") (term "0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "58") (term "0,2,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "58") (term "0,0,2,0,1,1"))
                                                                                    (rule "inEqSimp_ltRight" (formula "59"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "13"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "59") (term "1,1,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "59") (term "0,1,1,0,1"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "59") (term "0,0,1,1,0,1"))
                                                                                    (rule "add_literals" (formula "59") (term "1,0,0,1,1,0,1"))
                                                                                    (rule "times_zero_1" (formula "59") (term "0,0,1,1,0,1"))
                                                                                    (rule "add_zero_left" (formula "59") (term "0,1,1,0,1"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "11"))
                                                                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0,0,0,1"))
                                                                                    (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,1"))
                                                                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,1"))
                                                                                    (rule "add_zero_right" (formula "7") (term "0,0,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0,0,0,1"))
                                                                                    (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,1"))
                                                                                    (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,1"))
                                                                                    (rule "add_zero_right" (formula "5") (term "0,0,0,0,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_ltRight" (formula "59"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,1,0"))
                                                                                    (rule "replace_known_left" (formula "1") (term "0,0,0,1,0") (ifseqformula "5"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "jmod_axiom" (formula "35") (term "0,1,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,1,1"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "35") (term "0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,0,1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "35") (term "0,0,1,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "13") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                                                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                                                    (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "35") (term "1,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,1,1,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "59") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "59") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "59") (term "0,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                                                                    (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "59") (term "0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "59") (term "0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "59") (term "0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                                                    (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                                                    (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "60"))
                                                                                    (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "4"))
                                                                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                                                                    (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "60") (term "0,0"))
                                                                                    (rule "leq_literals" (formula "60") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                                    (rule "false_right" (formula "60"))
                                                                                    (rule "pullOutSelect" (formula "51") (term "1,2,0") (inst "selectSK=arr_0"))
                                                                                    (rule "applyEq" (formula "6") (term "0,1,1,0") (ifseqformula "51"))
                                                                                    (rule "applyEq" (formula "50") (term "1,0,0") (ifseqformula "51"))
                                                                                    (rule "applyEq" (formula "1") (term "1,0,2,0,1,0") (ifseqformula "51"))
                                                                                    (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "51"))
                                                                                    (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "51"))
                                                                                    (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "51"))
                                                                                    (rule "applyEq" (formula "8") (term "0,1,1,0") (ifseqformula "51"))
                                                                                    (rule "simplifySelectOfAnon" (formula "51"))
                                                                                     (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "63")) (ifInst ""  (formula "21")))
                                                                                    (rule "polySimp_addComm0" (formula "52") (term "2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "6") (term "1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "50") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,2,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "8") (term "1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,0,2,0,1,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0"))
                                                                                    (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=arr_1"))
                                                                                    (rule "simplifySelectOfAnon" (formula "11"))
                                                                                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "65")) (ifInst ""  (formula "20")))
                                                                                    (rule "eqSymm" (formula "12"))
                                                                                    (rule "applyEqReverse" (formula "11") (term "1") (ifseqformula "12"))
                                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                                    (rule "hideAuxiliaryEq" (formula "12"))
                                                                                    (rule "elementOfUnion" (formula "51") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "51") (term "1,0,0") (ifseqformula "38"))
                                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "51") (term "0,0"))
                                                                                    (rule "eqSymm" (formula "51") (term "0,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "51") (term "0,0,0,0") (ifseqformula "61"))
                                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                                    (rule "applyEqReverse" (formula "6") (term "1,1,0,0") (ifseqformula "51"))
                                                                                    (rule "applyEqReverse" (formula "1") (term "1,0,1,0,0") (ifseqformula "51"))
                                                                                    (rule "applyEqReverse" (formula "6") (term "0,0,1,0") (ifseqformula "51"))
                                                                                    (rule "applyEqReverse" (formula "52") (term "0,2,0") (ifseqformula "51"))
                                                                                    (rule "applyEqReverse" (formula "1") (term "0,0,0,2,0,1,0") (ifseqformula "51"))
                                                                                    (rule "applyEqReverse" (formula "50") (term "0,0,0") (ifseqformula "51"))
                                                                                    (rule "applyEqReverse" (formula "8") (term "0,0,1,0") (ifseqformula "51"))
                                                                                    (rule "applyEqReverse" (formula "8") (term "1,1,0,0") (ifseqformula "51"))
                                                                                    (rule "hideAuxiliaryEq" (formula "51"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "51") (term "2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,0,2,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "50") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,2,0,1,0"))
                                                                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
                                                                                    (rule "simplifySelectOfAnon" (formula "3"))
                                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")) (ifInst ""  (formula "20")))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "4"))
                                                                                    (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_3"))
                                                                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "16"))
                                                                                    (rule "simplifySelectOfAnon" (formula "16"))
                                                                                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "64")) (ifInst ""  (formula "23")))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "17"))
                                                                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "13"))
                                                                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                                                                    (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "17") (term "0,1"))
                                                                                    (rule "mul_literals" (formula "17") (term "0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "17") (term "1,0,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "13") (term "0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "13") (term "0,1"))
                                                                                    (rule "elementOfUnion" (formula "12") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "12") (term "1,0,0") (ifseqformula "39"))
                                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "12") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "0,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "12") (term "0,0,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0"))
                                                                                    (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=arr_4"))
                                                                                    (rule "simplifySelectOfAnon" (formula "15"))
                                                                                     (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "65")) (ifInst ""  (formula "24")))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "16"))
                                                                                    (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                                    (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "16") (term "0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "16") (term "0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "16") (term "0,1"))
                                                                                    (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "3") (term "1,0,0") (ifseqformula "40"))
                                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                                                                    (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "10"))
                                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
                                                                                    (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "11"))
                                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "3"))
                                                                                    (rule "hideAuxiliaryEq" (formula "3"))
                                                                                    (rule "inEqSimp_commuteGeq" (formula "3"))
                                                                                    (rule "elementOfUnion" (formula "16") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "16") (term "1,0,0") (ifseqformula "40"))
                                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "16") (term "0,0"))
                                                                                    (rule "eqSymm" (formula "16") (term "0,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "16") (term "0,0,0,0") (ifseqformula "62"))
                                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "applyEqReverse" (formula "17") (term "1,0,1") (ifseqformula "16"))
                                                                                    (rule "applyEqReverse" (formula "12") (term "0,1") (ifseqformula "16"))
                                                                                    (rule "hideAuxiliaryEq" (formula "16"))
                                                                                    (rule "polySimp_addComm1" (formula "16") (term "1"))
                                                                                    (rule "polySimp_addComm0" (formula "12") (term "1"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "16"))
                                                                                    (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "12"))
                                                                                    (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                                    (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                                                                                    (rule "mul_literals" (formula "16") (term "0,0,1"))
                                                                                    (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "16"))
                                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                                    (rule "inEqSimp_leqRight" (formula "60"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "0,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "47"))
                                                                                    (rule "polySimp_mulComm0" (formula "46") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "46") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                                                                                    (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "10"))
                                                                                    (rule "mul_literals" (formula "45") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "45") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                                                                    (rule "polySimp_mulLiterals" (formula "45") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "45") (term "1"))
                                                                                    (rule "elementOfUnion" (formula "15") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "15") (term "1,0,0") (ifseqformula "40"))
                                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "15") (term "0,0"))
                                                                                    (rule "eqSymm" (formula "15") (term "0,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "15") (term "0,0,0,0") (ifseqformula "63"))
                                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                                    (rule "applyEqReverse" (formula "16") (term "0,1") (ifseqformula "15"))
                                                                                    (rule "hideAuxiliaryEq" (formula "15"))
                                                                                    (rule "polySimp_addComm0" (formula "15") (term "1"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "15"))
                                                                                    (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                                                                    (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "15") (term "0,1"))
                                                                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "15"))
                                                                                    (rule "andLeft" (formula "1"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0"))
                                                                                    (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                                    (rule "add_literals" (formula "1") (term "0"))
                                                                                    (rule "leq_literals" (formula "1"))
                                                                                    (rule "closeFalse" (formula "1"))
                                                                                 )
                                                                                 (branch "Case 2"
                                                                                    (rule "allLeftHide" (formula "28") (inst "t=add(add(iv_0, begin),
    int::select(heap, bucket_starts, arr(bucket)))") (userinteraction))
                                                                                    (rule "allRight" (formula "54") (inst "sk=iv_1"))
                                                                                    (rule "impRight" (formula "54"))
                                                                                    (rule "andLeft" (formula "1"))
                                                                                    (rule "eqSymm" (formula "59"))
                                                                                    (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "51") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,2,0,1"))
                                                                                    (rule "mul_literals" (formula "4") (term "1,2,0,1,0,2,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,1,0,0,1"))
                                                                                    (rule "mul_literals" (formula "4") (term "1,2,0,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "11") (term "2,0,1,0,1,1"))
                                                                                    (rule "mul_literals" (formula "11") (term "1,2,0,1,0,1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,1,2,0"))
                                                                                    (rule "mul_literals" (formula "48") (term "1,2,0,1,0,1,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "48") (term "1,2,0,1,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "52") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "52") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "55") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "55") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "10") (term "2,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "10") (term "1,2,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "47") (term "1,2,0,1,0,1,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "54") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "54") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_homoEq" (formula "32") (term "0,1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "8") (term "2,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "8") (term "1,2,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "47") (term "1,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "7") (term "2,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "7") (term "1,2,0,1,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "64") (term "2,0,1,0,1"))
                                                                                    (rule "mul_literals" (formula "64") (term "1,2,0,1,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "56") (term "2,0,1,0,2,0,0,1"))
                                                                                    (rule "mul_literals" (formula "56") (term "1,2,0,1,0,2,0,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "56") (term "2,0,1,0,1,0,0,0,1"))
                                                                                    (rule "mul_literals" (formula "56") (term "1,2,0,1,0,1,0,0,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "2") (term "2,0,1,0,2,0,1"))
                                                                                    (rule "mul_literals" (formula "2") (term "1,2,0,1,0,2,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "2") (term "2,0,1,0,1,0,0,1"))
                                                                                    (rule "mul_literals" (formula "2") (term "1,2,0,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "47") (term "0,2,1,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "30") (term "0,2,1,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "30") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "6") (term "0,2,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "11") (term "0,2,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "57") (term "0,2,1,1,0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,2,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "52") (term "0,2,1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "8") (term "0,2,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "55") (term "0,2,1,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,2,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "11") (term "2,0,1,0,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,1,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "52") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "55") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "10") (term "2,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "8") (term "2,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm1" (formula "7") (term "2,0,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "64") (term "2,0,1,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "56") (term "2,0,1,0,2,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "56") (term "2,0,1,0,1,0,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "2,0,1,0,2,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "2,0,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,1"))
                                                                                    (rule "mul_literals" (formula "32") (term "0,1,0,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,2,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "11") (term "0,2,0,1,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,1,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "52") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "55") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "10") (term "0,2,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "54") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "8") (term "0,2,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "7") (term "0,2,0,1,0,0"))
                                                                                    (rule "inEqSimp_gtRight" (formula "58"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "64") (term "0,2,0,1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "57") (term "0,2,0,1,0,2,0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "57") (term "0,2,0,1,0,1,0,0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,0,2,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,0,1,0,0,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "14"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "30"))
                                                                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "26"))
                                                                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "10"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                                    (rule "getOfSeqDef" (formula "58") (term "0,1"))
                                                                                    (rule "castDel" (formula "58") (term "2,0,1"))
                                                                                    (rule "castDel" (formula "58") (term "1,0,1"))
                                                                                    (rule "replace_known_left" (formula "58") (term "0,0,0,1") (ifseqformula "4"))
                                                                                     (builtin "One Step Simplification" (formula "58"))
                                                                                    (rule "polySimp_elimSub" (formula "58") (term "1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,1"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "13"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "4"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "58") (term "0,1,1,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "58") (term "1,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "31") (term "0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0"))
                                                                                    (rule "lenOfSeqDef" (formula "5") (term "1"))
                                                                                    (rule "polySimp_elimSub" (formula "5") (term "1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "5") (term "1,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "5") (term "1,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "5") (term "0,1,1,1"))
                                                                                    (rule "castedGetAny" (formula "57") (term "1"))
                                                                                    (rule "lenOfSeqDef" (formula "3") (term "1"))
                                                                                    (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "0,1,1,1"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "24"))
                                                                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "24") (term "0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "12"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "6"))
                                                                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0"))
                                                                                    (rule "inEqSimp_ltRight" (formula "64"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "59") (term "0,2,1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "59") (term "0,0,2,1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "59") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "59") (term "0,0,1,0,0,1"))
                                                                                    (rule "add_literals" (formula "59") (term "1,0,0,1,0,0,1"))
                                                                                    (rule "times_zero_1" (formula "59") (term "0,0,1,0,0,1"))
                                                                                    (rule "add_zero_left" (formula "59") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "6") (term "1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "6") (term "0,1,1"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "6") (term "0,0,1,1"))
                                                                                    (rule "add_literals" (formula "6") (term "1,0,0,1,1"))
                                                                                    (rule "times_zero_1" (formula "6") (term "0,0,1,1"))
                                                                                    (rule "add_zero_left" (formula "6") (term "0,1,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "4") (term "1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "4") (term "0,1,1"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,1,1"))
                                                                                    (rule "add_literals" (formula "4") (term "1,0,0,1,1"))
                                                                                    (rule "times_zero_1" (formula "4") (term "0,0,1,1"))
                                                                                    (rule "add_zero_left" (formula "4") (term "0,1,1"))
                                                                                    (rule "getOfSeqDef" (formula "58") (term "1"))
                                                                                    (rule "polySimp_elimSub" (formula "58") (term "1,1,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "58") (term "1,1,1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "58") (term "1,1,1,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "58") (term "0,1,1,1,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "58") (term "0,2,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "58") (term "0,0,2,0,1,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "58") (term "1,1,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "58") (term "0,1,1,0,1"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "58") (term "0,0,1,1,0,1"))
                                                                                    (rule "add_literals" (formula "58") (term "1,0,0,1,1,0,1"))
                                                                                    (rule "times_zero_1" (formula "58") (term "0,0,1,1,0,1"))
                                                                                    (rule "add_zero_left" (formula "58") (term "0,1,1,0,1"))
                                                                                    (rule "inEqSimp_ltRight" (formula "59"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "13"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "33") (term "0,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "33") (term "1,0,0,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "33") (term "0,0,0,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "33") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "11"))
                                                                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0,0,0,1"))
                                                                                    (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,1"))
                                                                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,1"))
                                                                                    (rule "add_zero_right" (formula "7") (term "0,0,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0,0,0,1"))
                                                                                    (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,1"))
                                                                                    (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,1"))
                                                                                    (rule "add_zero_right" (formula "5") (term "0,0,0,0,1"))
                                                                                    (rule "inEqSimp_ltRight" (formula "59"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,1,0"))
                                                                                    (rule "replace_known_left" (formula "1") (term "0,0,0,1,0") (ifseqformula "5"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "jmod_axiom" (formula "36") (term "0,1,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,1,1"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "36") (term "0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "36") (term "0,0,1,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "13") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                                                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                                                    (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "34") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "34") (term "0,1"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "36") (term "1,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "36") (term "0,1,1,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                                                    (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                                                                    (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "34") (term "1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "34") (term "1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "34") (term "0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "34") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "34") (term "0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "34") (term "0,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                                                    (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "60"))
                                                                                    (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "4"))
                                                                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                                                                    (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "60") (term "0,0"))
                                                                                    (rule "leq_literals" (formula "60") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                                    (rule "false_right" (formula "60"))
                                                                                    (rule "pullOutSelect" (formula "52") (term "1,2,0") (inst "selectSK=arr_0"))
                                                                                    (rule "applyEq" (formula "8") (term "0,1,1,0") (ifseqformula "52"))
                                                                                    (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "52"))
                                                                                    (rule "applyEq" (formula "6") (term "0,1,1,0") (ifseqformula "52"))
                                                                                    (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "52"))
                                                                                    (rule "applyEq" (formula "1") (term "1,0,2,0,1,0") (ifseqformula "52"))
                                                                                    (rule "applyEq" (formula "51") (term "1,0,0") (ifseqformula "52"))
                                                                                    (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "52"))
                                                                                    (rule "simplifySelectOfAnon" (formula "52"))
                                                                                     (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "63")) (ifInst ""  (formula "21")))
                                                                                    (rule "polySimp_addComm0" (formula "53") (term "2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "8") (term "1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "6") (term "1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,2,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "51") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,0,2,0,1,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0"))
                                                                                    (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=arr_1"))
                                                                                    (rule "simplifySelectOfAnon" (formula "11"))
                                                                                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "65")) (ifInst ""  (formula "20")))
                                                                                    (rule "eqSymm" (formula "12"))
                                                                                    (rule "applyEqReverse" (formula "11") (term "1") (ifseqformula "12"))
                                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                                    (rule "hideAuxiliaryEq" (formula "12"))
                                                                                    (rule "elementOfUnion" (formula "52") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "52") (term "1,0,0") (ifseqformula "39"))
                                                                                     (builtin "One Step Simplification" (formula "52"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "52") (term "0,0"))
                                                                                    (rule "eqSymm" (formula "52") (term "0,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "52") (term "0,0,0,0") (ifseqformula "61"))
                                                                                     (builtin "One Step Simplification" (formula "52"))
                                                                                    (rule "applyEqReverse" (formula "6") (term "1,1,0,0") (ifseqformula "52"))
                                                                                    (rule "applyEqReverse" (formula "8") (term "1,1,0,0") (ifseqformula "52"))
                                                                                    (rule "applyEqReverse" (formula "53") (term "0,2,0") (ifseqformula "52"))
                                                                                    (rule "applyEqReverse" (formula "1") (term "0,0,0,2,0,1,0") (ifseqformula "52"))
                                                                                    (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "52"))
                                                                                    (rule "applyEqReverse" (formula "8") (term "0,0,1,0") (ifseqformula "52"))
                                                                                    (rule "applyEqReverse" (formula "6") (term "0,0,1,0") (ifseqformula "52"))
                                                                                    (rule "applyEqReverse" (formula "1") (term "1,0,1,0,0") (ifseqformula "52"))
                                                                                    (rule "hideAuxiliaryEq" (formula "52"))
                                                                                    (rule "polySimp_addComm0" (formula "52") (term "2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,0,2,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "51") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,2,0,1,0"))
                                                                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
                                                                                    (rule "simplifySelectOfAnon" (formula "3"))
                                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")) (ifInst ""  (formula "20")))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "4"))
                                                                                    (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_3"))
                                                                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "16"))
                                                                                    (rule "simplifySelectOfAnon" (formula "16"))
                                                                                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "64")) (ifInst ""  (formula "23")))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "17"))
                                                                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "13"))
                                                                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                                                                    (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "17") (term "0,1"))
                                                                                    (rule "mul_literals" (formula "17") (term "0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "17") (term "1,0,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "13") (term "0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "13") (term "0,1"))
                                                                                    (rule "elementOfUnion" (formula "12") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "12") (term "1,0,0") (ifseqformula "40"))
                                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "12") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "0,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "12") (term "0,0,1,1,0,0"))
                                                                                    (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=arr_4"))
                                                                                    (rule "simplifySelectOfAnon" (formula "15"))
                                                                                     (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "65")) (ifInst ""  (formula "24")))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "16"))
                                                                                    (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                                    (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "16") (term "0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "16") (term "0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "16") (term "0,1"))
                                                                                    (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "3") (term "1,0,0") (ifseqformula "41"))
                                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                                                                    (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "10"))
                                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
                                                                                    (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "11"))
                                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "3"))
                                                                                    (rule "hideAuxiliaryEq" (formula "3"))
                                                                                    (rule "inEqSimp_commuteGeq" (formula "3"))
                                                                                    (rule "elementOfUnion" (formula "16") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "16") (term "1,0,0") (ifseqformula "41"))
                                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "16") (term "0,0"))
                                                                                    (rule "eqSymm" (formula "16") (term "0,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "16") (term "0,0,0,0") (ifseqformula "62"))
                                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "applyEqReverse" (formula "12") (term "0,1") (ifseqformula "16"))
                                                                                    (rule "applyEqReverse" (formula "17") (term "1,0,1") (ifseqformula "16"))
                                                                                    (rule "hideAuxiliaryEq" (formula "16"))
                                                                                    (rule "polySimp_addComm0" (formula "12") (term "1"))
                                                                                    (rule "polySimp_addComm1" (formula "16") (term "1"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "12"))
                                                                                    (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "16"))
                                                                                    (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "0,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                                    (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                                                                                    (rule "mul_literals" (formula "16") (term "0,0,1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "9"))
                                                                                    (rule "mul_literals" (formula "45") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "45") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                                                                    (rule "polySimp_mulLiterals" (formula "45") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "45") (term "1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "48"))
                                                                                    (rule "polySimp_mulComm0" (formula "47") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "47") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                                                    (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                                    (rule "elementOfUnion" (formula "14") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "14") (term "1,0,0") (ifseqformula "40"))
                                                                                     (builtin "One Step Simplification" (formula "14"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "14") (term "0,0"))
                                                                                    (rule "eqSymm" (formula "14") (term "0,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "14") (term "0,0,0,0") (ifseqformula "63"))
                                                                                     (builtin "One Step Simplification" (formula "14"))
                                                                                    (rule "applyEqReverse" (formula "15") (term "0,1") (ifseqformula "14"))
                                                                                    (rule "hideAuxiliaryEq" (formula "14"))
                                                                                    (rule "polySimp_addComm0" (formula "14") (term "1"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "14"))
                                                                                    (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "0,1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "9"))
                                                                                    (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "50") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                                                    (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                                                    (rule "pullOutSelect" (formula "1") (term "0,1,0") (inst "selectSK=arr_5"))
                                                                                    (rule "simplifySelectOfAnon" (formula "1"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "20")))
                                                                                    (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "19") (ifseqformula "66"))
                                                                                    (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "56") (ifseqformula "66"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "49"))
                                                                                    (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                                    (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "11") (term "0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                                    (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "39"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,0,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,1,0,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "0,0,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "6"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "13"))
                                                                                    (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "52") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                                                                    (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "47"))
                                                                                    (rule "polySimp_mulComm0" (formula "51") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "51") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "51"))
                                                                                    (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "51") (term "0"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "47"))
                                                                                    (rule "mul_literals" (formula "46") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "46") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                                                    (rule "polySimp_mulLiterals" (formula "46") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "46") (term "1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "15"))
                                                                                    (rule "mul_literals" (formula "50") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "50") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                                                    (rule "polySimp_mulLiterals" (formula "50") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "50") (term "1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "13"))
                                                                                    (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "16") (term "0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "16") (term "0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                                    (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                                                    (rule "mul_literals" (formula "16") (term "0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "14"))
                                                                                    (rule "polySimp_mulComm0" (formula "46") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "46") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                                                    (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "46") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "46"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                                                    (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "26") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "26") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "26"))
                                                                                    (rule "true_left" (formula "26"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "53"))
                                                                                    (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                                    (rule "polySimp_rightDist" (formula "17") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "17") (term "0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "56"))
                                                                                    (rule "mul_literals" (formula "53") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "53") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                                                                    (rule "polySimp_mulLiterals" (formula "53") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "53") (term "1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "57") (ifseqformula "54"))
                                                                                    (rule "polySimp_mulComm0" (formula "57") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "57") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                                                                                    (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "57") (term "0"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "14"))
                                                                                    (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                                                    (rule "add_literals" (formula "16") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                                                    (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                                                    (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "16"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                                                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                                                    (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "18") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "18") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                                    (rule "true_left" (formula "18"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "57"))
                                                                                    (rule "mul_literals" (formula "53") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "53") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                                                                    (rule "polySimp_mulLiterals" (formula "53") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "53") (term "1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "46"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "53") (term "0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0"))
                                                                                    (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "53") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "53") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "53"))
                                                                                    (rule "true_left" (formula "53"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "16"))
                                                                                    (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "52") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                                                    (rule "polySimp_mulComm0" (formula "52") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "52") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "52") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "52") (term "1,1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "52"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "46") (term "0"))
                                                                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "46") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "46") (term "0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0"))
                                                                                    (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "46") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "46") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "46"))
                                                                                    (rule "true_left" (formula "46"))
                                                                                    (rule "commuteUnion" (formula "64") (term "1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "61") (term "1,0,0"))
                                                                                    (rule "commuteUnion" (formula "65") (term "1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "68") (term "1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "67") (term "1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "60") (term "1,0,2,0"))
                                                                                    (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "34") (term "0") (inst "b=b"))
                                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                                    (rule "translateJavaAddInt" (formula "34") (term "2,0,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "34") (term "3,0,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "34") (term "0,2,1,3,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "34") (term "0,2,1,3,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                                                                    (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "37") (term "0") (inst "b=b"))
                                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                                    (rule "translateJavaAddInt" (formula "37") (term "0,2,5,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "37") (term "0,2,5,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                                                                    (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "32") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "32"))
                                                                                    (rule "translateJavaAddInt" (formula "32") (term "0,1,0,0"))
                                                                                    (rule "translateJavaAddInt" (formula "32") (term "3,0,1,0"))
                                                                                    (rule "andLeft" (formula "32"))
                                                                                    (rule "andLeft" (formula "32"))
                                                                                    (rule "andLeft" (formula "32"))
                                                                                    (rule "polySimp_addComm0" (formula "34") (term "3,0"))
                                                                                    (rule "polySimp_addComm0" (formula "33") (term "0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "32"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "33"))
                                                                                    (rule "Contract_axiom_for_bucketStartsOrdering_in_Functions" (formula "47") (term "0"))
                                                                                    (rule "replace_known_left" (formula "47") (term "1,0") (ifseqformula "21"))
                                                                                     (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "75")) (ifInst ""  (formula "48")))
                                                                                    (rule "true_left" (formula "47"))
                                                                                    (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "45"))
                                                                                     (builtin "One Step Simplification" (formula "45"))
                                                                                    (rule "translateJavaMulInt" (formula "45") (term "1,1,0,0,0,0,0,1,0,0"))
                                                                                    (rule "translateJavaMulInt" (formula "45") (term "1,1,0,0,0,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "45") (term "1,1,0,0,0,0,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "45") (term "1,1,0,0,0,0,1,0,0"))
                                                                                    (rule "andLeft" (formula "45"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "45"))
                                                                                    (rule "andLeft" (formula "47"))
                                                                                    (rule "andLeft" (formula "45"))
                                                                                    (rule "andLeft" (formula "48"))
                                                                                    (rule "andLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "45"))
                                                                                    (rule "andLeft" (formula "50"))
                                                                                    (rule "andLeft" (formula "47"))
                                                                                    (rule "notLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "45"))
                                                                                    (rule "andLeft" (formula "51"))
                                                                                    (rule "andLeft" (formula "47"))
                                                                                    (rule "andLeft" (formula "45"))
                                                                                    (rule "notLeft" (formula "47"))
                                                                                    (rule "andLeft" (formula "52"))
                                                                                    (rule "andLeft" (formula "47"))
                                                                                    (rule "andLeft" (formula "45"))
                                                                                    (rule "notLeft" (formula "47"))
                                                                                    (rule "andLeft" (formula "53"))
                                                                                    (rule "andLeft" (formula "47"))
                                                                                    (rule "notLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "45"))
                                                                                    (rule "andLeft" (formula "54"))
                                                                                    (rule "andLeft" (formula "47"))
                                                                                    (rule "notLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "45"))
                                                                                    (rule "andLeft" (formula "55"))
                                                                                    (rule "andLeft" (formula "47"))
                                                                                    (rule "notLeft" (formula "46"))
                                                                                    (rule "andLeft" (formula "45"))
                                                                                    (rule "andLeft" (formula "56"))
                                                                                    (rule "notLeft" (formula "46"))
                                                                                    (rule "notLeft" (formula "45"))
                                                                                    (rule "andLeft" (formula "54"))
                                                                                    (rule "andLeft" (formula "54"))
                                                                                    (rule "andLeft" (formula "54"))
                                                                                    (rule "andLeft" (formula "54"))
                                                                                    (rule "andLeft" (formula "54"))
                                                                                    (rule "andLeft" (formula "54"))
                                                                                    (rule "andLeft" (formula "54"))
                                                                                    (rule "andLeft" (formula "54"))
                                                                                    (rule "andLeft" (formula "54"))
                                                                                    (rule "andLeft" (formula "54"))
                                                                                    (rule "andLeft" (formula "54"))
                                                                                    (rule "andLeft" (formula "54"))
                                                                                    (rule "andLeft" (formula "54"))
                                                                                    (rule "andLeft" (formula "54"))
                                                                                    (rule "andLeft" (formula "54"))
                                                                                    (rule "andLeft" (formula "54"))
                                                                                    (rule "andLeft" (formula "54"))
                                                                                    (rule "disjointDefinition" (formula "81"))
                                                                                     (builtin "One Step Simplification" (formula "81"))
                                                                                    (rule "notLeft" (formula "81"))
                                                                                    (rule "disjointDefinition" (formula "80"))
                                                                                     (builtin "One Step Simplification" (formula "80"))
                                                                                    (rule "notLeft" (formula "80"))
                                                                                    (rule "disjointDefinition" (formula "79"))
                                                                                     (builtin "One Step Simplification" (formula "79"))
                                                                                    (rule "notLeft" (formula "79"))
                                                                                    (rule "eqSymm" (formula "105"))
                                                                                    (rule "disjointDefinition" (formula "78"))
                                                                                     (builtin "One Step Simplification" (formula "78"))
                                                                                    (rule "notLeft" (formula "78"))
                                                                                    (rule "eqSymm" (formula "104"))
                                                                                    (rule "disjointDefinition" (formula "77"))
                                                                                     (builtin "One Step Simplification" (formula "77"))
                                                                                    (rule "notLeft" (formula "77"))
                                                                                    (rule "eqSymm" (formula "103"))
                                                                                    (rule "disjointDefinition" (formula "76"))
                                                                                     (builtin "One Step Simplification" (formula "76"))
                                                                                    (rule "notLeft" (formula "76"))
                                                                                    (rule "eqSymm" (formula "102"))
                                                                                    (rule "disjointDefinition" (formula "75"))
                                                                                     (builtin "One Step Simplification" (formula "75"))
                                                                                    (rule "notLeft" (formula "75"))
                                                                                    (rule "eqSymm" (formula "101"))
                                                                                    (rule "disjointDefinition" (formula "74"))
                                                                                     (builtin "One Step Simplification" (formula "74"))
                                                                                    (rule "notLeft" (formula "74"))
                                                                                    (rule "eqSymm" (formula "100"))
                                                                                    (rule "disjointDefinition" (formula "73"))
                                                                                     (builtin "One Step Simplification" (formula "73"))
                                                                                    (rule "notLeft" (formula "73"))
                                                                                    (rule "eqSymm" (formula "99"))
                                                                                    (rule "disjointDefinition" (formula "72"))
                                                                                     (builtin "One Step Simplification" (formula "72"))
                                                                                    (rule "notLeft" (formula "72"))
                                                                                    (rule "eqSymm" (formula "98"))
                                                                                    (rule "disjointDefinition" (formula "71"))
                                                                                     (builtin "One Step Simplification" (formula "71"))
                                                                                    (rule "notLeft" (formula "71"))
                                                                                    (rule "eqSymm" (formula "97"))
                                                                                    (rule "disjointDefinition" (formula "70"))
                                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                                    (rule "notLeft" (formula "70"))
                                                                                    (rule "eqSymm" (formula "96"))
                                                                                    (rule "disjointDefinition" (formula "69"))
                                                                                     (builtin "One Step Simplification" (formula "69"))
                                                                                    (rule "notLeft" (formula "69"))
                                                                                    (rule "eqSymm" (formula "95"))
                                                                                    (rule "disjointDefinition" (formula "68"))
                                                                                     (builtin "One Step Simplification" (formula "68"))
                                                                                    (rule "notLeft" (formula "68"))
                                                                                    (rule "eqSymm" (formula "94"))
                                                                                    (rule "disjointDefinition" (formula "67"))
                                                                                     (builtin "One Step Simplification" (formula "67"))
                                                                                    (rule "notLeft" (formula "67"))
                                                                                    (rule "eqSymm" (formula "93"))
                                                                                    (rule "disjointDefinition" (formula "66"))
                                                                                     (builtin "One Step Simplification" (formula "66"))
                                                                                    (rule "notLeft" (formula "66"))
                                                                                    (rule "disjointDefinition" (formula "65"))
                                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                                    (rule "notLeft" (formula "65"))
                                                                                    (rule "eqSymm" (formula "91"))
                                                                                    (rule "disjointDefinition" (formula "64"))
                                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                                    (rule "notLeft" (formula "64"))
                                                                                    (rule "eqSymm" (formula "90"))
                                                                                    (rule "disjointDefinition" (formula "63"))
                                                                                     (builtin "One Step Simplification" (formula "63"))
                                                                                    (rule "notLeft" (formula "63"))
                                                                                    (rule "disjointDefinition" (formula "62"))
                                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                                    (rule "notLeft" (formula "62"))
                                                                                    (rule "disjointDefinition" (formula "61"))
                                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                                    (rule "notLeft" (formula "61"))
                                                                                    (rule "disjointDefinition" (formula "60"))
                                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                                    (rule "notLeft" (formula "60"))
                                                                                    (rule "disjointDefinition" (formula "59"))
                                                                                     (builtin "One Step Simplification" (formula "59"))
                                                                                    (rule "notLeft" (formula "59"))
                                                                                    (rule "disjointDefinition" (formula "58"))
                                                                                     (builtin "One Step Simplification" (formula "58"))
                                                                                    (rule "notLeft" (formula "58"))
                                                                                    (rule "disjointDefinition" (formula "57"))
                                                                                     (builtin "One Step Simplification" (formula "57"))
                                                                                    (rule "notLeft" (formula "57"))
                                                                                    (rule "disjointDefinition" (formula "56"))
                                                                                     (builtin "One Step Simplification" (formula "56"))
                                                                                    (rule "notLeft" (formula "56"))
                                                                                    (rule "disjointDefinition" (formula "55"))
                                                                                     (builtin "One Step Simplification" (formula "55"))
                                                                                    (rule "notLeft" (formula "55"))
                                                                                    (rule "disjointDefinition" (formula "54"))
                                                                                     (builtin "One Step Simplification" (formula "54"))
                                                                                    (rule "notLeft" (formula "54"))
                                                                                    (rule "applyEq" (formula "79") (term "0,1,0,2,0") (ifseqformula "53"))
                                                                                    (rule "applyEq" (formula "76") (term "0,1,0,2,0") (ifseqformula "53"))
                                                                                    (rule "applyEq" (formula "75") (term "0,1,0,2,0") (ifseqformula "53"))
                                                                                    (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "53"))
                                                                                    (rule "applyEq" (formula "78") (term "0,1,0,2,0") (ifseqformula "53"))
                                                                                    (rule "applyEq" (formula "71") (term "0,1,0,2,0") (ifseqformula "53"))
                                                                                    (rule "applyEq" (formula "72") (term "0,1,0,0") (ifseqformula "53"))
                                                                                    (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "53"))
                                                                                    (rule "distributeIntersection" (formula "43") (term "0"))
                                                                                    (rule "distributeIntersection" (formula "44") (term "0"))
                                                                                    (rule "distributeIntersection" (formula "43") (term "0,0"))
                                                                                    (rule "distributeIntersection" (formula "43") (term "1,0"))
                                                                                    (rule "distributeIntersection" (formula "44") (term "1,0"))
                                                                                    (rule "distributeIntersection" (formula "44") (term "0,0"))
                                                                                    (rule "distributeIntersection" (formula "43") (term "1,0,0"))
                                                                                    (rule "distributeIntersection" (formula "43") (term "0,0,0"))
                                                                                    (rule "distributeIntersection" (formula "43") (term "1,1,0"))
                                                                                    (rule "distributeIntersection" (formula "43") (term "0,1,0"))
                                                                                    (rule "distributeIntersection" (formula "44") (term "1,1,0"))
                                                                                    (rule "distributeIntersection" (formula "44") (term "0,1,0"))
                                                                                    (rule "distributeIntersection" (formula "44") (term "1,0,0"))
                                                                                    (rule "distributeIntersection" (formula "44") (term "0,0,0"))
                                                                                    (rule "unionEqualsEmpty" (formula "43"))
                                                                                    (rule "andLeft" (formula "43"))
                                                                                    (rule "unionEqualsEmpty" (formula "45"))
                                                                                    (rule "andLeft" (formula "45"))
                                                                                    (rule "unionEqualsEmpty" (formula "43"))
                                                                                    (rule "andLeft" (formula "43"))
                                                                                    (rule "unionEqualsEmpty" (formula "45"))
                                                                                    (rule "andLeft" (formula "45"))
                                                                                    (rule "unionEqualsEmpty" (formula "47"))
                                                                                    (rule "andLeft" (formula "47"))
                                                                                    (rule "unionEqualsEmpty" (formula "49"))
                                                                                    (rule "andLeft" (formula "49"))
                                                                                    (rule "unionEqualsEmpty" (formula "44"))
                                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                                    (rule "andLeft" (formula "44"))
                                                                                    (rule "notLeft" (formula "45"))
                                                                                    (rule "notLeft" (formula "44"))
                                                                                    (rule "eqSymm" (formula "86"))
                                                                                    (rule "eqSymm" (formula "85"))
                                                                                    (rule "unionEqualsEmpty" (formula "43"))
                                                                                     (builtin "One Step Simplification" (formula "43"))
                                                                                    (rule "andLeft" (formula "43"))
                                                                                    (rule "notLeft" (formula "44"))
                                                                                    (rule "notLeft" (formula "43"))
                                                                                    (rule "eqSymm" (formula "85"))
                                                                                    (rule "eqSymm" (formula "84"))
                                                                                    (rule "unionEqualsEmpty" (formula "44"))
                                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                                    (rule "andLeft" (formula "44"))
                                                                                    (rule "notLeft" (formula "44"))
                                                                                    (rule "notLeft" (formula "44"))
                                                                                    (rule "eqSymm" (formula "84"))
                                                                                    (rule "eqSymm" (formula "83"))
                                                                                    (rule "unionEqualsEmpty" (formula "43"))
                                                                                     (builtin "One Step Simplification" (formula "43"))
                                                                                    (rule "andLeft" (formula "43"))
                                                                                    (rule "notLeft" (formula "43"))
                                                                                    (rule "notLeft" (formula "43"))
                                                                                    (rule "eqSymm" (formula "83"))
                                                                                    (rule "eqSymm" (formula "82"))
                                                                                    (rule "unionEqualsEmpty" (formula "43"))
                                                                                     (builtin "One Step Simplification" (formula "43"))
                                                                                    (rule "andLeft" (formula "43"))
                                                                                    (rule "notLeft" (formula "44"))
                                                                                    (rule "notLeft" (formula "43"))
                                                                                    (rule "eqSymm" (formula "82"))
                                                                                    (rule "eqSymm" (formula "81"))
                                                                                    (rule "unionEqualsEmpty" (formula "43"))
                                                                                     (builtin "One Step Simplification" (formula "43"))
                                                                                    (rule "andLeft" (formula "43"))
                                                                                    (rule "notLeft" (formula "44"))
                                                                                    (rule "notLeft" (formula "43"))
                                                                                    (rule "eqSymm" (formula "81"))
                                                                                    (rule "eqSymm" (formula "80"))
                                                                                    (rule "unionEqualsEmpty" (formula "43"))
                                                                                     (builtin "One Step Simplification" (formula "43"))
                                                                                    (rule "andLeft" (formula "43"))
                                                                                    (rule "notLeft" (formula "43"))
                                                                                    (rule "notLeft" (formula "43"))
                                                                                    (rule "eqSymm" (formula "80"))
                                                                                    (rule "eqSymm" (formula "79"))
                                                                                    (rule "unionEqualsEmpty" (formula "43"))
                                                                                     (builtin "One Step Simplification" (formula "43"))
                                                                                    (rule "andLeft" (formula "43"))
                                                                                    (rule "notLeft" (formula "44"))
                                                                                    (rule "notLeft" (formula "43"))
                                                                                    (rule "eqSymm" (formula "79"))
                                                                                    (rule "eqSymm" (formula "78"))
                                                                                    (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "41") (term "0,0,1") (inst "b=b"))
                                                                                     (builtin "One Step Simplification" (formula "41"))
                                                                                    (rule "translateJavaAddInt" (formula "41") (term "0,2,1,3,0,1,0,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "41") (term "2,0,1,0,0,1"))
                                                                                    (rule "translateJavaMod" (formula "41") (term "0,1,0,0,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "41") (term "3,0,1,0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "41") (term "0,2,1,3,0,1,0,0,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,0,1"))
                                                                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,0,1"))
                                                                                    (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,0,1"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0,0,1"))
                                                                                    (rule "jmod_axiom" (formula "41") (term "0,1,0,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,0,0,1"))
                                                                                    (rule "polySimp_homoEq" (formula "41") (term "1,0,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,1,0,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,0,0,1"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "41") (term "1,0,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1"))
                                                                                    (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,0,1"))
                                                                                    (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,0,1"))
                                                                                    (rule "Definition_axiom_for_bucketStartsOrdering_in_de_wiesler_Functions" (formula "53") (term "0") (inst "b=b"))
                                                                                     (builtin "One Step Simplification" (formula "53"))
                                                                                    (rule "translateJavaAddInt" (formula "53") (term "0,2,1,1,0,1,0,1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "53") (term "0,2,0,1,1,0,1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "53") (term "0,2,0,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "53") (term "0,2,0,0,0,1,1,1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "53") (term "0,2,1,1,0,0"))
                                                                                    (rule "translateJavaAddInt" (formula "53") (term "0,2,0,1,1,1,1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "53") (term "0,2,1,1,0,1,1,1,0,1"))
                                                                                    (rule "andLeft" (formula "53"))
                                                                                    (rule "andLeft" (formula "53"))
                                                                                    (rule "andLeft" (formula "53"))
                                                                                    (rule "polySimp_addComm0" (formula "56") (term "0,2,0,1,1,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "56") (term "0,2,0,1,1,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "56") (term "0,2,0,0,0,1,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "56") (term "0,2,1,1,0,1,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "56") (term "0,2,1,1,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "55") (term "0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "54") (term "0,2,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_gtToGeq" (formula "56") (term "0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "53"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,1,1,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "55") (term "1,0,1,1,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "55") (term "1,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "54"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "53"))
                                                                                    (rule "applyEq" (formula "53") (term "0") (ifseqformula "36"))
                                                                                    (rule "inEqSimp_commuteGeq" (formula "53"))
                                                                                    (rule "applyEq" (formula "53") (term "1,1,1,1,1,0") (ifseqformula "36"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "53") (term "0,1,0,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "53") (term "1,1,0,1,1,0"))
                                                                                    (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "42") (term "0") (inst "b=b"))
                                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                                    (rule "translateJavaSubInt" (formula "42") (term "0,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "42") (term "0,2,0,0,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "42") (term "0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "42") (term "0,2,0,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "42") (term "0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "42") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "42") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "42") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,0,0,1,1,0"))
                                                                                    (rule "commuteUnion_2" (formula "51") (term "0,1"))
                                                                                    (rule "commuteUnion" (formula "51") (term "1,1,1"))
                                                                                    (rule "arrayLengthNotNegative" (formula "28") (term "0"))
                                                                                    (rule "arrayLengthIsAShort" (formula "28") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "28"))
                                                                                    (rule "true_left" (formula "28"))
                                                                                    (rule "commute_and" (formula "39") (term "0"))
                                                                                    (rule "commuteUnion" (formula "77") (term "1,1,0,1,0,2,0"))
                                                                                    (rule "commuteUnion_2" (formula "77") (term "0,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "74") (term "0,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "74") (term "1,1,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "73") (term "1,1,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "73") (term "0,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "76") (term "1,1,0,1,0,2,0"))
                                                                                    (rule "commuteUnion_2" (formula "76") (term "0,0,1,0,2,0"))
                                                                                    (rule "commuteUnion_2" (formula "69") (term "0,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "69") (term "1,1,0,1,0,2,0"))
                                                                                    (rule "commuteUnion" (formula "70") (term "0,0,1,0,0"))
                                                                                    (rule "commuteUnion" (formula "70") (term "1,1,0,1,0,0"))
                                                                                    (rule "nnf_imp2or" (formula "37") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "40") (term "0"))
                                                                                    (rule "ifthenelse_split" (formula "3") (term "0,0"))
                                                                                    (branch " bucket_starts[1 + bucket] >= 1 + iv_0 + bucket_starts[bucket] TRUE"
                                                                                       (rule "castDel" (formula "4") (term "0"))
                                                                                       (rule "inEqSimp_contradInEq0" (formula "40") (term "1") (ifseqformula "4"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                                                       (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                                                       (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                                                       (rule "add_literals" (formula "40") (term "0,0,1"))
                                                                                       (rule "leq_literals" (formula "40") (term "0,1"))
                                                                                        (builtin "One Step Simplification" (formula "40"))
                                                                                       (rule "notLeft" (formula "40"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "59"))
                                                                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                                       (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                                                       (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                                       (rule "replace_known_left" (formula "79") (term "0") (ifseqformula "3"))
                                                                                        (builtin "One Step Simplification" (formula "79"))
                                                                                       (rule "inEqSimp_geqRight" (formula "79"))
                                                                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                       (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                                       (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                                                       (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "66") (ifseqformula "1"))
                                                                                       (rule "polySimp_mulComm0" (formula "66") (term "0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "66") (term "0"))
                                                                                       (rule "polySimp_addComm0" (formula "66") (term "0,0"))
                                                                                       (rule "polySimp_pullOutFactor2b" (formula "66") (term "0"))
                                                                                       (rule "add_literals" (formula "66") (term "1,1,0"))
                                                                                       (rule "times_zero_1" (formula "66") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "66") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "66"))
                                                                                       (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "66") (term "0"))
                                                                                       (rule "inEqSimp_contradInEq1" (formula "66") (ifseqformula "11"))
                                                                                       (rule "qeq_literals" (formula "66") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "66"))
                                                                                       (rule "closeFalse" (formula "66"))
                                                                                    )
                                                                                    (branch " bucket_starts[1 + bucket] >= 1 + iv_0 + bucket_starts[bucket] FALSE"
                                                                                       (rule "inEqSimp_geqRight" (formula "78"))
                                                                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                                                       (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                                       (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                                       (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
                                                                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                                                                                       (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                                                                                       (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                                                                                       (rule "mul_literals" (formula "12") (term "0,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                                       (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                                       (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                                       (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                                       (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                                                                                       (rule "polySimp_rightDist" (formula "12") (term "0,0,1"))
                                                                                       (rule "mul_literals" (formula "12") (term "0,0,0,1"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "1"))
                                                                                       (rule "polySimp_mulComm0" (formula "60") (term "0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                                                                       (rule "polySimp_addComm0" (formula "60") (term "0,0"))
                                                                                       (rule "polySimp_pullOutFactor2b" (formula "60") (term "0"))
                                                                                       (rule "add_literals" (formula "60") (term "1,1,0"))
                                                                                       (rule "times_zero_1" (formula "60") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "60") (term "0"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "11"))
                                                                                       (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "12") (term "0,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0"))
                                                                                       (rule "mul_literals" (formula "12") (term "0,0,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                                       (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                                                       (rule "polySimp_pullOutFactor2b" (formula "12") (term "0"))
                                                                                       (rule "add_literals" (formula "12") (term "1,1,0"))
                                                                                       (rule "times_zero_1" (formula "12") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "12") (term "0"))
                                                                                       (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                                                       (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                                                       (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                                                       (rule "add_zero_right" (formula "12") (term "0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                                       (rule "mul_literals" (formula "12") (term "1"))
                                                                                       (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "12"))
                                                                                       (rule "leq_literals" (formula "9") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "9"))
                                                                                       (rule "true_left" (formula "9"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "59"))
                                                                                       (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                                       (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "12") (term "0,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0"))
                                                                                       (rule "mul_literals" (formula "12") (term "0,0,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0,0"))
                                                                                       (rule "add_literals" (formula "12") (term "1,1,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                                                       (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "12"))
                                                                                       (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                                                       (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                                       (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                                                       (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                                       (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                                       (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                                                                       (rule "polySimp_rightDist" (formula "20") (term "0,1"))
                                                                                       (rule "mul_literals" (formula "20") (term "0,0,1"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "12"))
                                                                                       (rule "polySimp_mulComm0" (formula "59") (term "0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "59") (term "0"))
                                                                                       (rule "polySimp_addAssoc" (formula "59") (term "0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "59") (term "0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "59"))
                                                                                       (rule "polySimp_mulComm0" (formula "59") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "59") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "59") (term "0,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1"))
                                                                                       (rule "mul_literals" (formula "59") (term "0,0,1"))
                                                                                       (rule "polySimp_elimOne" (formula "59") (term "1,0,1"))
                                                                                       (rule "commuteUnion" (formula "55") (term "0,0,1"))
                                                                                       (rule "commuteUnion" (formula "82") (term "0,0,0,1,0,2,0"))
                                                                                       (rule "commuteUnion" (formula "79") (term "1,0,0,1,0,2,0"))
                                                                                       (rule "ifthenelse_split" (formula "9") (term "0"))
                                                                                       (branch "bucket_starts[1 + bucket] >= 1 + bucket_starts[bucket] TRUE"
                                                                                          (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "9"))
                                                                                           (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "10"))
                                                                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                                          (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                                          (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "8") (term "0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                                          (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "8"))
                                                                                           (builtin "One Step Simplification" (formula "2"))
                                                                                          (rule "applyEqReverse" (formula "3") (term "0,1,0") (ifseqformula "2"))
                                                                                          (rule "castDel" (formula "3") (term "1,0"))
                                                                                          (rule "hideAuxiliaryEq" (formula "2"))
                                                                                          (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "7"))
                                                                                           (builtin "One Step Simplification" (formula "2"))
                                                                                          (rule "inEqSimp_subsumption1" (formula "63") (ifseqformula "8"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "63") (term "0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0"))
                                                                                          (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                                                                          (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                                                                          (rule "add_zero_right" (formula "63") (term "0,0"))
                                                                                          (rule "qeq_literals" (formula "63") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "63"))
                                                                                          (rule "true_left" (formula "63"))
                                                                                          (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
                                                                                          (rule "andLeft" (formula "9"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                                          (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                                                                          (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                                                          (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                                                          (rule "add_zero_right" (formula "9") (term "0,0,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                                                          (rule "add_literals" (formula "9") (term "1,1,0"))
                                                                                          (rule "times_zero_1" (formula "9") (term "1,0"))
                                                                                          (rule "add_zero_right" (formula "9") (term "0"))
                                                                                          (rule "leq_literals" (formula "9"))
                                                                                          (rule "closeFalse" (formula "9"))
                                                                                       )
                                                                                       (branch "bucket_starts[1 + bucket] >= 1 + bucket_starts[bucket] FALSE"
                                                                                          (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "83"))
                                                                                           (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "inEqSimp_geqRight" (formula "83"))
                                                                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "10"))
                                                                                          (rule "mul_literals" (formula "10") (term "1,0"))
                                                                                          (rule "add_zero_right" (formula "10") (term "0"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                                          (rule "mul_literals" (formula "9") (term "1,0"))
                                                                                          (rule "add_zero_right" (formula "9") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                                                          (rule "mul_literals" (formula "10") (term "1"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                                                          (rule "mul_literals" (formula "9") (term "1"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "12"))
                                                                                          (rule "qeq_literals" (formula "10") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                                          (rule "closeFalse" (formula "10"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch "CUT: begin + bucket_starts[bucket] <= j_0 & j_0 < begin + bucket_starts[bucket + 1] FALSE"
                                                                              (rule "eqSymm" (formula "52"))
                                                                              (rule "polySimp_elimSub" (formula "5") (term "2,0,1,0,1,1"))
                                                                              (rule "mul_literals" (formula "5") (term "1,2,0,1,0,1,1"))
                                                                              (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,2,0"))
                                                                              (rule "mul_literals" (formula "48") (term "1,2,0,1,0,2,0"))
                                                                              (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,2,0"))
                                                                              (rule "mul_literals" (formula "41") (term "1,2,0,1,0,2,0"))
                                                                              (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,1,2,0"))
                                                                              (rule "mul_literals" (formula "42") (term "1,2,0,1,0,1,2,0"))
                                                                              (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "41") (term "1,2,0,1,0,1,0,0"))
                                                                              (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "42") (term "1,2,0,1,0,0"))
                                                                              (rule "polySimp_elimSub" (formula "57") (term "2,0,1,0,1"))
                                                                              (rule "mul_literals" (formula "57") (term "1,2,0,1,0,1"))
                                                                              (rule "polySimp_elimSub" (formula "46") (term "2,0,1,0,2,0"))
                                                                              (rule "mul_literals" (formula "46") (term "1,2,0,1,0,2,0"))
                                                                              (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "1") (term "1,2,0,1,0,0"))
                                                                              (rule "polySimp_homoEq" (formula "26") (term "0,1,1"))
                                                                              (rule "polySimp_elimSub" (formula "2") (term "2,0,1,0,1,0"))
                                                                              (rule "mul_literals" (formula "2") (term "1,2,0,1,0,1,0"))
                                                                              (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,2,0"))
                                                                              (rule "mul_literals" (formula "45") (term "1,2,0,1,0,2,0"))
                                                                              (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,1,0"))
                                                                              (rule "mul_literals" (formula "4") (term "1,2,0,1,0,1,0"))
                                                                              (rule "polySimp_elimSub" (formula "49") (term "2,0,1,0,2,0"))
                                                                              (rule "mul_literals" (formula "49") (term "1,2,0,1,0,2,0"))
                                                                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,1"))
                                                                              (rule "polySimp_addComm0" (formula "2") (term "0,2,1,0"))
                                                                              (rule "polySimp_addComm0" (formula "5") (term "0,2,1,1"))
                                                                              (rule "polySimp_addComm0" (formula "24") (term "0,2,1,1,1,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "46") (term "0,2,1,0,1"))
                                                                              (rule "polySimp_addComm0" (formula "41") (term "0,2,1,1,1"))
                                                                              (rule "polySimp_addComm0" (formula "50") (term "0,2,1,1,1"))
                                                                              (rule "polySimp_addComm0" (formula "24") (term "0,2,1,0,0,0,0,1,0"))
                                                                              (rule "polySimp_addComm0" (formula "49") (term "0,2,1,0,1"))
                                                                              (rule "polySimp_addComm1" (formula "5") (term "2,0,1,0,1,1"))
                                                                              (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,2,0"))
                                                                              (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,2,0"))
                                                                              (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,1,2,0"))
                                                                              (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "57") (term "2,0,1,0,1"))
                                                                              (rule "polySimp_addComm1" (formula "46") (term "2,0,1,0,2,0"))
                                                                              (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "2") (term "2,0,1,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "45") (term "2,0,1,0,2,0"))
                                                                              (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "49") (term "2,0,1,0,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "5") (term "0,2,0,1,0,1,1"))
                                                                              (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,2,0"))
                                                                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,1"))
                                                                              (rule "mul_literals" (formula "26") (term "0,1,0,0,1,1"))
                                                                              (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,1,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,1,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "57") (term "0,2,0,1,0,1"))
                                                                              (rule "polySimp_addComm0" (formula "46") (term "0,2,0,1,0,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,0,1,0"))
                                                                              (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,1,0"))
                                                                              (rule "polySimp_addComm0" (formula "49") (term "0,2,0,1,0,2,0"))
                                                                              (rule "inEqSimp_gtRight" (formula "51"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "24"))
                                                                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "4"))
                                                                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "25") (term "0,1,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,1"))
                                                                              (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,1"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,1,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "51") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1"))
                                                                              (rule "polySimp_mulComm0" (formula "51") (term "0,1,0,0,1"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "7"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "39"))
                                                                              (rule "inEqSimp_ltRight" (formula "57"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                              (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "52") (term "0,0,1"))
                                                                              (rule "polySimp_addComm1" (formula "52") (term "0,1"))
                                                                              (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                              (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "19"))
                                                                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                                              (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "52") (term "0"))
                                                                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "52") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "52") (term "0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "52") (term "0,0,0"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                              (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "6"))
                                                                              (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                              (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                                              (rule "jmod_axiom" (formula "28") (term "0,1,1,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,1,1"))
                                                                              (rule "polySimp_sepNegMonomial" (formula "28") (term "0,1,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1,1"))
                                                                              (rule "polySimp_elimOne" (formula "28") (term "0,0,1,1"))
                                                                              (rule "polySimp_sepNegMonomial" (formula "28") (term "1,1,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "28") (term "0,1,1,1"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                                                              (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0"))
                                                                              (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                              (rule "mul_literals" (formula "5") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "26") (term "0,1,0,1,0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "26") (term "0,1,1,0,0"))
                                                                              (rule "mul_literals" (formula "26") (term "0,0,1,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "26") (term "1,0,1,1,0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "52") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "52") (term "0,1"))
                                                                              (rule "polySimp_elimOne" (formula "52") (term "0,1"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                                              (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "0"))
                                                                              (rule "polySimp_mulLiterals" (formula "52") (term "0,0"))
                                                                              (rule "polySimp_elimOne" (formula "52") (term "0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                              (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "53"))
                                                                              (rule "inEqSimp_contradEq7" (formula "53") (ifseqformula "2"))
                                                                              (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0"))
                                                                              (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "53") (term "0,0"))
                                                                              (rule "leq_literals" (formula "53") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "53"))
                                                                              (rule "false_right" (formula "53"))
                                                                              (rule "pullOutSelect" (formula "44") (term "1,2,0") (inst "selectSK=arr_0"))
                                                                              (rule "applyEq" (formula "43") (term "1,0,0") (ifseqformula "44"))
                                                                              (rule "simplifySelectOfAnon" (formula "44"))
                                                                               (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "56")) (ifInst ""  (formula "13")))
                                                                              (rule "polySimp_addComm0" (formula "45") (term "2,0"))
                                                                              (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
                                                                              (rule "simplifySelectOfAnon" (formula "3"))
                                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")) (ifInst ""  (formula "12")))
                                                                              (rule "eqSymm" (formula "4"))
                                                                              (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "4"))
                                                                               (builtin "One Step Simplification" (formula "3"))
                                                                              (rule "hideAuxiliaryEq" (formula "4"))
                                                                              (rule "elementOfUnion" (formula "44") (term "0,0"))
                                                                              (rule "disjointAllFields" (formula "44") (term "1,0,0") (ifseqformula "31"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "elementOfArrayRangeConcrete" (formula "44") (term "0,0"))
                                                                              (rule "eqSymm" (formula "44") (term "0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "44") (term "0,0,0,0") (ifseqformula "54"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "applyEqReverse" (formula "43") (term "0,0,0") (ifseqformula "44"))
                                                                              (rule "applyEqReverse" (formula "45") (term "0,2,0") (ifseqformula "44"))
                                                                              (rule "hideAuxiliaryEq" (formula "44"))
                                                                              (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "44") (term "2,0"))
                                                                              (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                                              (rule "disjointAllFields" (formula "3") (term "1,0,0") (ifseqformula "30"))
                                                                               (builtin "One Step Simplification" (formula "3"))
                                                                              (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "3"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "3") (term "0,1,1,0,0"))
                                                                              (rule "mul_literals" (formula "3") (term "0,0,1,1,0,0"))
                                                                              (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_2"))
                                                                              (rule "simplifySelectOfAnon" (formula "1"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "12")))
                                                                              (rule "inEqSimp_commuteLeq" (formula "2"))
                                                                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                              (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "31"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                                                                              (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "53"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "1"))
                                                                              (rule "hideAuxiliaryEq" (formula "1"))
                                                                              (rule "inEqSimp_commuteGeq" (formula "1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "25"))
                                                                              (rule "andLeft" (formula "1"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                              (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "1") (term "0"))
                                                                              (rule "leq_literals" (formula "1"))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "Assume values[i_0]@heap[anon( arrayRange(values, begin + bucket_starts[bucket], begin + bucket_starts[ 1 + bucket] - 1) cup storage.allArrays, anonOut_heap<<anonHeapFunction>>)] != values[i_0]"
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "eqSymm" (formula "50"))
                                                                     (rule "polySimp_elimSub" (formula "3") (term "2,0,1,0,1,0"))
                                                                     (rule "mul_literals" (formula "3") (term "1,2,0,1,0,1,0"))
                                                                     (rule "polySimp_elimSub" (formula "55") (term "2,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "55") (term "1,2,0,1,0,0"))
                                                                     (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,1,0"))
                                                                     (rule "mul_literals" (formula "1") (term "1,2,0,1,0,1,0"))
                                                                     (rule "polySimp_elimSub" (formula "39") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "39") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,1,1"))
                                                                     (rule "mul_literals" (formula "4") (term "1,2,0,1,0,1,1"))
                                                                     (rule "polySimp_elimSub" (formula "55") (term "2,0,1,0,1"))
                                                                     (rule "mul_literals" (formula "55") (term "1,2,0,1,0,1"))
                                                                     (rule "polySimp_elimSub" (formula "39") (term "2,0,1,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "39") (term "1,2,0,1,0,1,0,0"))
                                                                     (rule "polySimp_elimSub" (formula "46") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "46") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "43") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "43") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_homoEq" (formula "24") (term "0,1,1"))
                                                                     (rule "polySimp_elimSub" (formula "44") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "44") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,1,2,0"))
                                                                     (rule "mul_literals" (formula "40") (term "1,2,0,1,0,1,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "47") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "40") (term "1,2,0,1,0,0"))
                                                                     (rule "polySimp_elimSub" (formula "48") (term "2,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "48") (term "1,2,0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,1"))
                                                                     (rule "polySimp_addComm0" (formula "39") (term "0,2,1,1,1"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0,2,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "47") (term "0,2,1,0,1"))
                                                                     (rule "polySimp_addComm0" (formula "44") (term "0,2,1,0,1"))
                                                                     (rule "polySimp_addComm0" (formula "22") (term "0,2,1,1,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "4") (term "0,2,1,1"))
                                                                     (rule "polySimp_addComm0" (formula "22") (term "0,2,1,0,0,0,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "2,0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "55") (term "2,0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "39") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "2,0,1,0,1,1"))
                                                                     (rule "polySimp_addComm1" (formula "55") (term "2,0,1,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "39") (term "2,0,1,0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "46") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "43") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "44") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,1,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "48") (term "2,0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "55") (term "0,2,0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1"))
                                                                     (rule "mul_literals" (formula "24") (term "0,1,0,0,1,1"))
                                                                     (rule "polySimp_addComm0" (formula "39") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,0,1,1"))
                                                                     (rule "polySimp_addComm0" (formula "55") (term "0,2,0,1,0,1"))
                                                                     (rule "polySimp_addComm0" (formula "39") (term "0,2,0,1,0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "46") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "43") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,1,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0,0"))
                                                                     (rule "inEqSimp_gtRight" (formula "49"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "19"))
                                                                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,1"))
                                                                     (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,1"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,1,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "6"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "37"))
                                                                     (rule "inEqSimp_ltRight" (formula "55"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                     (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "18"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "18") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                                     (rule "jmod_axiom" (formula "26") (term "0,1,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1,1"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "26") (term "0,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1,1"))
                                                                     (rule "polySimp_elimOne" (formula "26") (term "0,0,1,1"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "26") (term "1,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "26") (term "0,1,1,1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "24") (term "0,1,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                     (rule "mul_literals" (formula "4") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                                                     (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "24") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "24") (term "0,0,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "24") (term "1,0,1,1,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                                     (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                     (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "51"))
                                                                     (rule "inEqSimp_contradEq7" (formula "51") (ifseqformula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0"))
                                                                     (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "51") (term "0,0"))
                                                                     (rule "leq_literals" (formula "51") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "false_right" (formula "51"))
                                                                     (rule "pullOutSelect" (formula "41") (term "1,0,0") (inst "selectSK=arr_0"))
                                                                     (rule "applyEq" (formula "43") (term "1,2,0") (ifseqformula "41"))
                                                                     (rule "simplifySelectOfAnon" (formula "41"))
                                                                      (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "54")) (ifInst ""  (formula "12")))
                                                                     (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "43") (term "2,0"))
                                                                     (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=arr_1"))
                                                                     (rule "applyEq" (formula "2") (term "1") (ifseqformula "1"))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "11")))
                                                                     (rule "eqSymm" (formula "52"))
                                                                     (rule "elementOfUnion" (formula "42") (term "0,0"))
                                                                     (rule "disjointAllFields" (formula "42") (term "1,0,0") (ifseqformula "30"))
                                                                      (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "42") (term "0,0"))
                                                                     (rule "eqSymm" (formula "42") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "42") (term "0,0,0,0") (ifseqformula "53"))
                                                                      (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "applyEqReverse" (formula "44") (term "0,2,0") (ifseqformula "42"))
                                                                     (rule "applyEqReverse" (formula "43") (term "0,0,0") (ifseqformula "42"))
                                                                     (rule "hideAuxiliaryEq" (formula "42"))
                                                                     (rule "polySimp_addComm0" (formula "43") (term "2,0"))
                                                                     (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                     (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "29"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0"))
                                                                     (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_2"))
                                                                     (rule "simplifySelectOfAnon" (formula "2"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "56")) (ifInst ""  (formula "12")))
                                                                     (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                     (rule "disjointAllFields" (formula "2") (term "1,0,0") (ifseqformula "30"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "0,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "2") (term "0,0,1,1,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0"))
                                                                     (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=arr_3"))
                                                                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "8"))
                                                                     (rule "simplifySelectOfAnon" (formula "8"))
                                                                      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "56")) (ifInst ""  (formula "15")))
                                                                     (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                                                                     (rule "mul_literals" (formula "9") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                     (rule "polySimp_mulAssoc" (formula "5") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "0,1"))
                                                                     (rule "elementOfUnion" (formula "8") (term "0,0"))
                                                                     (rule "disjointAllFields" (formula "8") (term "1,0,0") (ifseqformula "32"))
                                                                      (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "8") (term "0,0"))
                                                                     (rule "eqSymm" (formula "8") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "applyEqReverse" (formula "9") (term "1,0,1") (ifseqformula "8"))
                                                                     (rule "applyEqReverse" (formula "5") (term "0,1") (ifseqformula "8"))
                                                                     (rule "hideAuxiliaryEq" (formula "8"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "1"))
                                                                     (rule "polySimp_addComm0" (formula "5") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "8"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                     (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                                                                     (rule "mul_literals" (formula "8") (term "0,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "0,1"))
                                                                     (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=arr_4"))
                                                                     (rule "simplifySelectOfAnon" (formula "7"))
                                                                      (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "56")) (ifInst ""  (formula "15")))
                                                                     (rule "inEqSimp_homoInEq0" (formula "8"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                     (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                     (rule "polySimp_mulAssoc" (formula "8") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "8") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "0,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "39"))
                                                                     (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "38") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                                     (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                     (rule "elementOfUnion" (formula "7") (term "0,0"))
                                                                     (rule "disjointAllFields" (formula "7") (term "1,0,0") (ifseqformula "32"))
                                                                      (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "7") (term "0,0"))
                                                                     (rule "eqSymm" (formula "7") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "55"))
                                                                      (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "applyEqReverse" (formula "8") (term "0,1") (ifseqformula "7"))
                                                                     (rule "hideAuxiliaryEq" (formula "7"))
                                                                     (rule "polySimp_addComm0" (formula "7") (term "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "0,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "5"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "37"))
                                                                     (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "41") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                                     (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "7"))
                                                                     (rule "times_zero_1" (formula "40") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "40") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                                     (rule "polySimp_mulLiterals" (formula "40") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "40") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "5"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                     (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                     (rule "mul_literals" (formula "8") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "38"))
                                                                     (rule "times_zero_1" (formula "37") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "37") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "43"))
                                                                     (rule "polySimp_mulComm0" (formula "46") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "46") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                                                                     (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "43"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "9") (term "0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "9") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "46"))
                                                                     (rule "times_zero_1" (formula "43") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "43") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "43") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "9"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                                                     (rule "mul_literals" (formula "42") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "42"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                                     (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "19") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "19") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "true_left" (formula "19"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "6"))
                                                                     (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                                     (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                                     (rule "mul_literals" (formula "43") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "6"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                                     (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                     (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                     (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "8"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                                     (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "10") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "10") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "true_left" (formula "10"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "48"))
                                                                     (rule "mul_literals" (formula "44") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "44") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                                     (rule "polySimp_mulLiterals" (formula "44") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "44") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "41"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "44") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                                     (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "44") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "44") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "true_left" (formula "44"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "8"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "1"))
                                                                     (rule "mul_literals" (formula "42") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "42"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                                                                     (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "41") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "41") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "41"))
                                                                     (rule "true_left" (formula "41"))
                                                                     (rule "commuteUnion" (formula "51") (term "1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "58") (term "1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "55") (term "1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "56") (term "1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "59") (term "1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "52") (term "1,0,0"))
                                                                     (rule "nnf_imp2or" (formula "27") (term "0"))
                                                                     (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "24") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "24"))
                                                                     (rule "translateJavaAddInt" (formula "24") (term "0,1,0,0"))
                                                                     (rule "translateJavaAddInt" (formula "24") (term "3,0,1,0"))
                                                                     (rule "andLeft" (formula "24"))
                                                                     (rule "andLeft" (formula "24"))
                                                                     (rule "andLeft" (formula "24"))
                                                                     (rule "polySimp_addComm0" (formula "26") (term "3,0"))
                                                                     (rule "polySimp_addComm0" (formula "25") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "24"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "25"))
                                                                     (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "36"))
                                                                      (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "translateJavaMulInt" (formula "36") (term "1,1,0,0,0,0,1,0,0"))
                                                                     (rule "translateJavaMulInt" (formula "36") (term "1,1,0,0,0,0,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "36") (term "1,1,0,0,0,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "36") (term "1,1,0,0,0,0,0,1,0,0"))
                                                                     (rule "andLeft" (formula "36"))
                                                                     (rule "andLeft" (formula "36"))
                                                                     (rule "andLeft" (formula "38"))
                                                                     (rule "andLeft" (formula "36"))
                                                                     (rule "andLeft" (formula "39"))
                                                                     (rule "andLeft" (formula "37"))
                                                                     (rule "andLeft" (formula "36"))
                                                                     (rule "andLeft" (formula "41"))
                                                                     (rule "andLeft" (formula "38"))
                                                                     (rule "andLeft" (formula "36"))
                                                                     (rule "notLeft" (formula "38"))
                                                                     (rule "andLeft" (formula "42"))
                                                                     (rule "andLeft" (formula "38"))
                                                                     (rule "andLeft" (formula "36"))
                                                                     (rule "notLeft" (formula "38"))
                                                                     (rule "andLeft" (formula "43"))
                                                                     (rule "andLeft" (formula "38"))
                                                                     (rule "notLeft" (formula "37"))
                                                                     (rule "andLeft" (formula "36"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "38"))
                                                                     (rule "notLeft" (formula "37"))
                                                                     (rule "andLeft" (formula "36"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "38"))
                                                                     (rule "notLeft" (formula "37"))
                                                                     (rule "andLeft" (formula "36"))
                                                                     (rule "andLeft" (formula "46"))
                                                                     (rule "andLeft" (formula "38"))
                                                                     (rule "andLeft" (formula "36"))
                                                                     (rule "notLeft" (formula "38"))
                                                                     (rule "andLeft" (formula "47"))
                                                                     (rule "notLeft" (formula "37"))
                                                                     (rule "notLeft" (formula "36"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "disjointDefinition" (formula "72"))
                                                                      (builtin "One Step Simplification" (formula "72"))
                                                                     (rule "notLeft" (formula "72"))
                                                                     (rule "disjointDefinition" (formula "71"))
                                                                      (builtin "One Step Simplification" (formula "71"))
                                                                     (rule "notLeft" (formula "71"))
                                                                     (rule "disjointDefinition" (formula "70"))
                                                                      (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "notLeft" (formula "70"))
                                                                     (rule "eqSymm" (formula "96"))
                                                                     (rule "disjointDefinition" (formula "69"))
                                                                      (builtin "One Step Simplification" (formula "69"))
                                                                     (rule "notLeft" (formula "69"))
                                                                     (rule "eqSymm" (formula "95"))
                                                                     (rule "disjointDefinition" (formula "68"))
                                                                      (builtin "One Step Simplification" (formula "68"))
                                                                     (rule "notLeft" (formula "68"))
                                                                     (rule "eqSymm" (formula "94"))
                                                                     (rule "disjointDefinition" (formula "67"))
                                                                      (builtin "One Step Simplification" (formula "67"))
                                                                     (rule "notLeft" (formula "67"))
                                                                     (rule "eqSymm" (formula "93"))
                                                                     (rule "disjointDefinition" (formula "66"))
                                                                      (builtin "One Step Simplification" (formula "66"))
                                                                     (rule "notLeft" (formula "66"))
                                                                     (rule "eqSymm" (formula "92"))
                                                                     (rule "disjointDefinition" (formula "65"))
                                                                      (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "notLeft" (formula "65"))
                                                                     (rule "eqSymm" (formula "91"))
                                                                     (rule "disjointDefinition" (formula "64"))
                                                                      (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "notLeft" (formula "64"))
                                                                     (rule "eqSymm" (formula "90"))
                                                                     (rule "disjointDefinition" (formula "63"))
                                                                      (builtin "One Step Simplification" (formula "63"))
                                                                     (rule "notLeft" (formula "63"))
                                                                     (rule "eqSymm" (formula "89"))
                                                                     (rule "disjointDefinition" (formula "62"))
                                                                      (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "notLeft" (formula "62"))
                                                                     (rule "eqSymm" (formula "88"))
                                                                     (rule "disjointDefinition" (formula "61"))
                                                                      (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "notLeft" (formula "61"))
                                                                     (rule "eqSymm" (formula "87"))
                                                                     (rule "disjointDefinition" (formula "60"))
                                                                      (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "notLeft" (formula "60"))
                                                                     (rule "eqSymm" (formula "86"))
                                                                     (rule "disjointDefinition" (formula "59"))
                                                                      (builtin "One Step Simplification" (formula "59"))
                                                                     (rule "notLeft" (formula "59"))
                                                                     (rule "eqSymm" (formula "85"))
                                                                     (rule "disjointDefinition" (formula "58"))
                                                                      (builtin "One Step Simplification" (formula "58"))
                                                                     (rule "notLeft" (formula "58"))
                                                                     (rule "eqSymm" (formula "84"))
                                                                     (rule "disjointDefinition" (formula "57"))
                                                                      (builtin "One Step Simplification" (formula "57"))
                                                                     (rule "notLeft" (formula "57"))
                                                                     (rule "disjointDefinition" (formula "56"))
                                                                      (builtin "One Step Simplification" (formula "56"))
                                                                     (rule "notLeft" (formula "56"))
                                                                     (rule "eqSymm" (formula "82"))
                                                                     (rule "disjointDefinition" (formula "55"))
                                                                      (builtin "One Step Simplification" (formula "55"))
                                                                     (rule "notLeft" (formula "55"))
                                                                     (rule "eqSymm" (formula "81"))
                                                                     (rule "disjointDefinition" (formula "54"))
                                                                      (builtin "One Step Simplification" (formula "54"))
                                                                     (rule "notLeft" (formula "54"))
                                                                     (rule "disjointDefinition" (formula "53"))
                                                                      (builtin "One Step Simplification" (formula "53"))
                                                                     (rule "notLeft" (formula "53"))
                                                                     (rule "disjointDefinition" (formula "52"))
                                                                      (builtin "One Step Simplification" (formula "52"))
                                                                     (rule "notLeft" (formula "52"))
                                                                     (rule "disjointDefinition" (formula "51"))
                                                                      (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "notLeft" (formula "51"))
                                                                     (rule "disjointDefinition" (formula "50"))
                                                                      (builtin "One Step Simplification" (formula "50"))
                                                                     (rule "notLeft" (formula "50"))
                                                                     (rule "disjointDefinition" (formula "49"))
                                                                      (builtin "One Step Simplification" (formula "49"))
                                                                     (rule "notLeft" (formula "49"))
                                                                     (rule "disjointDefinition" (formula "48"))
                                                                      (builtin "One Step Simplification" (formula "48"))
                                                                     (rule "notLeft" (formula "48"))
                                                                     (rule "disjointDefinition" (formula "47"))
                                                                      (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "notLeft" (formula "47"))
                                                                     (rule "disjointDefinition" (formula "46"))
                                                                      (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "notLeft" (formula "46"))
                                                                     (rule "disjointDefinition" (formula "45"))
                                                                      (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "notLeft" (formula "45"))
                                                                     (rule "applyEq" (formula "66") (term "0,1,0,2,0") (ifseqformula "44"))
                                                                     (rule "applyEq" (formula "70") (term "0,1,0,2,0") (ifseqformula "44"))
                                                                     (rule "applyEq" (formula "67") (term "0,1,0,2,0") (ifseqformula "44"))
                                                                     (rule "applyEq" (formula "69") (term "0,1,0,2,0") (ifseqformula "44"))
                                                                     (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "44"))
                                                                     (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "44"))
                                                                     (rule "applyEq" (formula "63") (term "0,1,0,0") (ifseqformula "44"))
                                                                     (rule "applyEq" (formula "62") (term "0,1,0,2,0") (ifseqformula "44"))
                                                                     (rule "distributeIntersection" (formula "35") (term "0"))
                                                                     (rule "distributeIntersection" (formula "34") (term "0"))
                                                                     (rule "distributeIntersection" (formula "35") (term "1,0"))
                                                                     (rule "distributeIntersection" (formula "35") (term "0,0"))
                                                                     (rule "distributeIntersection" (formula "34") (term "1,0"))
                                                                     (rule "distributeIntersection" (formula "34") (term "0,0"))
                                                                     (rule "distributeIntersection" (formula "35") (term "0,1,0"))
                                                                     (rule "distributeIntersection" (formula "35") (term "1,1,0"))
                                                                     (rule "distributeIntersection" (formula "35") (term "1,0,0"))
                                                                     (rule "distributeIntersection" (formula "35") (term "0,0,0"))
                                                                     (rule "distributeIntersection" (formula "34") (term "1,1,0"))
                                                                     (rule "distributeIntersection" (formula "34") (term "0,1,0"))
                                                                     (rule "distributeIntersection" (formula "34") (term "1,0,0"))
                                                                     (rule "distributeIntersection" (formula "34") (term "0,0,0"))
                                                                     (rule "unionEqualsEmpty" (formula "35"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "unionEqualsEmpty" (formula "34"))
                                                                     (rule "andLeft" (formula "34"))
                                                                     (rule "unionEqualsEmpty" (formula "36"))
                                                                     (rule "andLeft" (formula "36"))
                                                                     (rule "unionEqualsEmpty" (formula "38"))
                                                                     (rule "andLeft" (formula "38"))
                                                                     (rule "unionEqualsEmpty" (formula "34"))
                                                                     (rule "andLeft" (formula "34"))
                                                                     (rule "unionEqualsEmpty" (formula "36"))
                                                                     (rule "andLeft" (formula "36"))
                                                                     (rule "unionEqualsEmpty" (formula "38"))
                                                                      (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "andLeft" (formula "38"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "notLeft" (formula "38"))
                                                                     (rule "eqSymm" (formula "77"))
                                                                     (rule "eqSymm" (formula "76"))
                                                                     (rule "unionEqualsEmpty" (formula "38"))
                                                                      (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "andLeft" (formula "38"))
                                                                     (rule "notLeft" (formula "38"))
                                                                     (rule "notLeft" (formula "38"))
                                                                     (rule "eqSymm" (formula "76"))
                                                                     (rule "eqSymm" (formula "75"))
                                                                     (rule "unionEqualsEmpty" (formula "38"))
                                                                      (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "andLeft" (formula "38"))
                                                                     (rule "notLeft" (formula "38"))
                                                                     (rule "notLeft" (formula "38"))
                                                                     (rule "eqSymm" (formula "75"))
                                                                     (rule "eqSymm" (formula "74"))
                                                                     (rule "unionEqualsEmpty" (formula "38"))
                                                                      (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "andLeft" (formula "38"))
                                                                     (rule "notLeft" (formula "38"))
                                                                     (rule "notLeft" (formula "38"))
                                                                     (rule "eqSymm" (formula "74"))
                                                                     (rule "eqSymm" (formula "73"))
                                                                     (rule "unionEqualsEmpty" (formula "35"))
                                                                      (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "eqSymm" (formula "73"))
                                                                     (rule "eqSymm" (formula "72"))
                                                                     (rule "unionEqualsEmpty" (formula "34"))
                                                                      (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "andLeft" (formula "34"))
                                                                     (rule "notLeft" (formula "34"))
                                                                     (rule "notLeft" (formula "34"))
                                                                     (rule "eqSymm" (formula "72"))
                                                                     (rule "eqSymm" (formula "71"))
                                                                     (rule "unionEqualsEmpty" (formula "35"))
                                                                      (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "notLeft" (formula "36"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "eqSymm" (formula "71"))
                                                                     (rule "eqSymm" (formula "70"))
                                                                     (rule "unionEqualsEmpty" (formula "34"))
                                                                      (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "andLeft" (formula "34"))
                                                                     (rule "notLeft" (formula "34"))
                                                                     (rule "notLeft" (formula "34"))
                                                                     (rule "eqSymm" (formula "70"))
                                                                     (rule "eqSymm" (formula "69"))
                                                                     (rule "commuteUnion_2" (formula "42") (term "0,1"))
                                                                     (rule "commuteUnion" (formula "42") (term "1,1,1"))
                                                                     (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "32") (term "0,0,1") (inst "b=b"))
                                                                      (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "translateJavaAddInt" (formula "32") (term "2,0,1,0,0,1"))
                                                                     (rule "translateJavaMod" (formula "32") (term "0,1,0,0,0,1"))
                                                                     (rule "translateJavaAddInt" (formula "32") (term "3,0,1,0,0,1"))
                                                                     (rule "translateJavaAddInt" (formula "32") (term "0,2,1,3,0,1,0,0,1"))
                                                                     (rule "polySimp_addComm0" (formula "32") (term "0,2,1,3,0,1,0,0,1"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,0,1"))
                                                                     (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,0,1"))
                                                                     (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,0,1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,0,0,1"))
                                                                     (rule "jmod_axiom" (formula "32") (term "0,1,0,0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,0,1"))
                                                                     (rule "polySimp_homoEq" (formula "32") (term "1,0,0,0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0,0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,0,0,0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,1,0,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "32") (term "0,1,0,0,0,1"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "32") (term "1,0,0,0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,1"))
                                                                     (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,0,1"))
                                                                     (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,0,1"))
                                                                     (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "33") (term "0") (inst "b=b"))
                                                                      (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "translateJavaSubInt" (formula "33") (term "0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "33") (term "0,2,0,0,1,0"))
                                                                     (rule "polySimp_elimSub" (formula "33") (term "0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "33") (term "0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "33") (term "0,2,1,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "33") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "33") (term "1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "33") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "33") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "33") (term "0,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "33") (term "0,0,0,1,1,0"))
                                                                     (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "31") (term "0") (inst "b=b"))
                                                                      (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "translateJavaAddInt" (formula "31") (term "0,2,5,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "31") (term "0,2,5,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                                                     (rule "Definition_axiom_for_bucketStartsOrdering_in_de_wiesler_Functions" (formula "44") (term "0") (inst "b=b"))
                                                                      (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "translateJavaAddInt" (formula "44") (term "0,2,0,1,1,1,1,0,1"))
                                                                     (rule "translateJavaAddInt" (formula "44") (term "0,2,0,1,1,0,1,0,1"))
                                                                     (rule "translateJavaAddInt" (formula "44") (term "0,2,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "44") (term "0,2,1,1,0,1,0,1,0,1"))
                                                                     (rule "translateJavaAddInt" (formula "44") (term "0,2,0,0,0,1,1,1,0,1"))
                                                                     (rule "translateJavaAddInt" (formula "44") (term "0,2,1,1,0,1,1,1,0,1"))
                                                                     (rule "translateJavaAddInt" (formula "44") (term "0,2,1,1,0,0"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "polySimp_addComm0" (formula "47") (term "0,2,1,1,0,1,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "47") (term "0,2,1,1,0,1,1,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,1,1,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,1,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "47") (term "0,2,0,0,0,1,1,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "46") (term "0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "45") (term "0,2,1"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,1,0"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "47") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,1,0,1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "46") (term "1,0,1,0,1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "46") (term "1,0,1,1,1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,1,1,1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                     (rule "applyEq" (formula "44") (term "0") (ifseqformula "28"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "44"))
                                                                     (rule "applyEq" (formula "44") (term "1,1,1,1,1,0") (ifseqformula "28"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "44") (term "1,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "44") (term "0,1,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "44") (term "1,1,0,1,1,0"))
                                                                     (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "29") (term "0") (inst "b=b"))
                                                                      (builtin "One Step Simplification" (formula "29"))
                                                                     (rule "translateJavaAddInt" (formula "29") (term "2,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "29") (term "3,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "29") (term "0,2,1,3,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "29") (term "0,2,1,3,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                                                     (rule "commuteUnion" (formula "64") (term "0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "64") (term "1,1,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "68") (term "0,0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "68") (term "1,1,0,1,0,2,0"))
                                                                     (rule "commuteUnion_2" (formula "65") (term "0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "65") (term "1,1,0,1,0,2,0"))
                                                                     (rule "commuteUnion_2" (formula "67") (term "0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "67") (term "1,1,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "61") (term "1,1,0,1,0,0"))
                                                                     (rule "commuteUnion" (formula "61") (term "0,0,0,1,0,0"))
                                                                     (rule "commuteUnion" (formula "60") (term "1,1,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "60") (term "0,0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "42") (term "0,0,1"))
                                                                     (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "30") (term "0,1,0,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "30") (term "0,0,1,0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,1,0,0"))
                                                                     (rule "add_literals" (formula "30") (term "0,0,0,0,1,0,0"))
                                                                     (rule "add_zero_left" (formula "30") (term "0,0,0,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "30") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "30") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "30") (term "0,1,1,0,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "30") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "30") (term "0,0,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "30") (term "1,0,1,0,0,0"))
                                                                     (rule "nnf_imp2or" (formula "30") (term "0,1,0"))
                                                                     (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                                                     (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "true_left" (formula "20"))
                                                                     (rule "commuteUnion" (formula "64") (term "1,0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "68") (term "0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "65") (term "0,0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "67") (term "0,0,0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "61") (term "0,0,1,0,0"))
                                                                     (rule "commuteUnion_2" (formula "60") (term "0,0,1,0,2,0"))
                                                                     (rule "commuteUnion_2" (formula "42") (term "0,1"))
                                                                     (rule "commuteUnion_2" (formula "65") (term "0,0,1,0,2,0"))
                                                                     (rule "commuteUnion_2" (formula "67") (term "0,0,1,0,2,0"))
                                                                     (rule "commuteUnion_2" (formula "60") (term "0,1,0,2,0"))
                                                                     (rule "commuteUnion_2" (formula "42") (term "1"))
                                                                     (rule "commuteUnion_2" (formula "65") (term "0,1,0,2,0"))
                                                                     (rule "commuteUnion_2" (formula "67") (term "0,1,0,2,0"))
                                                                     (rule "commuteUnion" (formula "60") (term "0,0,0,1,0,2,0"))
                                                                     (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                     (branch " bucket_starts[bucket] <= begin * -1 + i_0 & bucket_starts[1 + bucket] >= 1 + begin * -1 + i_0 TRUE"
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "3"))
                                                                        (rule "applyEqReverse" (formula "123") (term "1") (ifseqformula "3"))
                                                                        (rule "hideAuxiliaryEq" (formula "3"))
                                                                        (rule "eqSymm" (formula "122"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "4"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "56") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "56") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "56"))
                                                                        (rule "polySimp_mulLiterals" (formula "56") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "56") (term "0"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "56"))
                                                                        (rule "andLeft" (formula "11"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "11"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                                        (rule "add_literals" (formula "11") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "11") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "11") (term "0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                                                                        (rule "add_literals" (formula "11") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "11") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "11") (term "0"))
                                                                        (rule "leq_literals" (formula "11"))
                                                                        (rule "closeFalse" (formula "11"))
                                                                     )
                                                                     (branch " bucket_starts[bucket] <= begin * -1 + i_0 & bucket_starts[1 + bucket] >= 1 + begin * -1 + i_0 FALSE"
                                                                        (rule "close" (formula "122") (ifseqformula "1"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "andRight" (formula "44"))
                                                   (branch "Case 1"
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "44") (term "0") (inst "b=b") (userinteraction))
                                                      (rule "Definition_axiom_for_smallBucketIsSorted_in_de_wiesler_Sorter" (formula "44") (term "0,1,0,0,0") (userinteraction))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "closeTrue" (formula "44"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "44"))
                                                      (branch "Case 1"
                                                         (rule "impRight" (formula "44"))
                                                          (builtin "One Step Simplification" (formula "45") (userinteraction))
                                                         (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "45") (term "0") (inst "b=b") (userinteraction))
                                                          (builtin "One Step Simplification" (formula "45") (userinteraction))
                                                         (rule "allRight" (formula "45") (inst "sk=b_0") (userinteraction))
                                                         (rule "impRight" (formula "45"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "impLeft" (formula "22") (userinteraction))
                                                         (branch "Case 1"
                                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "43")))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "22") (term "0,0") (inst "b=b") (userinteraction))
                                                             (builtin "One Step Simplification" (formula "22") (userinteraction))
                                                            (rule "andLeft" (formula "22"))
                                                            (rule "allLeftHide" (formula "22") (inst "t=b_0") (userinteraction))
                                                            (rule "impLeft" (formula "22") (userinteraction))
                                                            (branch "Case 1"
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "translateJavaMod" (formula "44") (term "0,1"))
                                                               (rule "translateJavaSubInt" (formula "49") (term "2,0,1,0,0"))
                                                               (rule "translateJavaAddInt" (formula "49") (term "2,0"))
                                                               (rule "translateJavaMod" (formula "3") (term "0"))
                                                               (rule "translateJavaSubInt" (formula "43") (term "2,0,1,0,2,0"))
                                                               (rule "translateJavaAddInt" (formula "43") (term "0,1"))
                                                               (rule "translateJavaAddInt" (formula "49") (term "3,0"))
                                                               (rule "translateJavaSubInt" (formula "42") (term "2,0,1,0,2,0"))
                                                               (rule "translateJavaAddInt" (formula "42") (term "1,1"))
                                                               (rule "translateJavaSubInt" (formula "40") (term "2,0,1,0,2,0"))
                                                               (rule "translateJavaAddInt" (formula "40") (term "0,1"))
                                                               (rule "translateJavaSubInt" (formula "39") (term "2,0,1,0,2,0"))
                                                               (rule "translateJavaAddInt" (formula "39") (term "1,1"))
                                                               (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,0"))
                                                               (rule "translateJavaAddInt" (formula "36") (term "2,0"))
                                                               (rule "translateJavaAddInt" (formula "35") (term "0,0"))
                                                               (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,2,0"))
                                                               (rule "translateJavaAddInt" (formula "35") (term "0,1"))
                                                               (rule "translateJavaAddInt" (formula "35") (term "1,1"))
                                                               (rule "translateJavaSubInt" (formula "49") (term "2,0,1,0,1,2,0"))
                                                               (rule "translateJavaAddInt" (formula "43") (term "0,2,1,0,1"))
                                                               (rule "translateJavaSubInt" (formula "49") (term "2,0,1,0,1,3,0"))
                                                               (rule "translateJavaAddInt" (formula "49") (term "0,2,1,3,0"))
                                                               (rule "translateJavaAddInt" (formula "40") (term "0,2,1,0,1"))
                                                               (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,1,2,0"))
                                                               (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,1,0,0"))
                                                               (rule "translateJavaAddInt" (formula "35") (term "0,2,1,1,1"))
                                                               (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "3"))
                                                                (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                               (rule "closeTrue" (formula "44"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "observerDependency" (formula "22") (term "0") (inst "termWithSmallHeap=de.wiesler.Sorter::isEqualityBucket(anon(heap,
                                         union(arrayRange(values,
                                                          add(begin,
                                                              int::select(heap,
                                                                          bucket_starts,
                                                                          arr(bucket))),
                                                          javaSubInt(add(begin,
                                                                         int::select(heap,
                                                                                     bucket_starts,
                                                                                     arr(add(Z(1(#)),
                                                                                             bucket)))),
                                                                     Z(1(#)))),
                                               LocSet::final(storage,
                                                             de.wiesler.Storage::$allArrays)),
                                         anonOut_heap<<anonHeapFunction>>),
                                    values<<origin(\"assignable @ file Sorter.java @ line 436\",\"[]\")>>,
                                    javaAddInt(begin<<origin(\"assignable @ file Sorter.java @ line 436\",\"[]\")>>,
                                               int::select(anon(heap,
                                                                union(arrayRange(values,
                                                                                 add(begin,
                                                                                     int::select(heap,
                                                                                                 bucket_starts,
                                                                                                 arr(bucket))),
                                                                                 javaSubInt(add(begin,
                                                                                                int::select(heap,
                                                                                                            bucket_starts,
                                                                                                            arr(add(Z(1(#)),
                                                                                                                    bucket)))),
                                                                                            Z(1(#)))),
                                                                      LocSet::final(storage,
                                                                                    de.wiesler.Storage::$allArrays)),
                                                                anonOut_heap<<anonHeapFunction>>),
                                                           bucket_starts<<origin(\"assignable @ file Sorter.java @ line 436\",\"[]\")>>,
                                                           arr(b_0))),
                                    javaAddInt(begin<<origin(\"assignable @ file Sorter.java @ line 436\",\"[]\")>>,
                                               int::select(anon(heap,
                                                                union(arrayRange(values,
                                                                                 add(begin,
                                                                                     int::select(heap,
                                                                                                 bucket_starts,
                                                                                                 arr(bucket))),
                                                                                 javaSubInt(add(begin,
                                                                                                int::select(heap,
                                                                                                            bucket_starts,
                                                                                                            arr(add(Z(1(#)),
                                                                                                                    bucket)))),
                                                                                            Z(1(#)))),
                                                                      LocSet::final(storage,
                                                                                    de.wiesler.Storage::$allArrays)),
                                                                anonOut_heap<<anonHeapFunction>>),
                                                           bucket_starts<<origin(\"assignable @ file Sorter.java @ line 436\",\"[]\")>>,
                                                           arr(javaAddInt(b_0,
                                                                          Z(1(#)))))))") (userinteraction))
                                                               (branch "Case 1"
                                                                  (rule "close" (formula "49") (ifseqformula "22"))
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "allLeftHide" (formula "34") (inst "t=b_0") (userinteraction))
                                                                  (rule "andRight" (formula "45"))
                                                                  (branch "Case 1"
                                                                     (rule "andRight" (formula "45"))
                                                                     (branch "Case 1"
                                                                        (rule "andRight" (formula "45"))
                                                                        (branch "Case 1"
                                                                            (builtin "One Step Simplification" (formula "45") (userinteraction))
                                                                           (rule "allRight" (formula "45") (inst "sk=_ov_0"))
                                                                           (rule "impRight" (formula "45"))
                                                                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "translateJavaSubInt" (formula "51") (term "2,0,1,0,0"))
                                                                           (rule "translateJavaMod" (formula "4") (term "0"))
                                                                           (rule "translateJavaAddInt" (formula "51") (term "2,0"))
                                                                           (rule "translateJavaSubInt" (formula "45") (term "2,0,1,0,2,0"))
                                                                           (rule "translateJavaAddInt" (formula "51") (term "3,0"))
                                                                           (rule "translateJavaAddInt" (formula "45") (term "0,1"))
                                                                           (rule "translateJavaSubInt" (formula "44") (term "2,0,1,0,2,0"))
                                                                           (rule "translateJavaAddInt" (formula "44") (term "1,1"))
                                                                           (rule "translateJavaSubInt" (formula "42") (term "2,0,1,0,2,0"))
                                                                           (rule "translateJavaAddInt" (formula "42") (term "0,1"))
                                                                           (rule "translateJavaSubInt" (formula "41") (term "2,0,1,0,2,0"))
                                                                           (rule "translateJavaAddInt" (formula "41") (term "1,1"))
                                                                           (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,0"))
                                                                           (rule "translateJavaAddInt" (formula "38") (term "2,0"))
                                                                           (rule "translateJavaAddInt" (formula "37") (term "0,0"))
                                                                           (rule "translateJavaSubInt" (formula "37") (term "2,0,1,0,2,0"))
                                                                           (rule "translateJavaAddInt" (formula "37") (term "0,1"))
                                                                           (rule "translateJavaAddInt" (formula "37") (term "1,1"))
                                                                           (rule "translateJavaAddInt" (formula "23") (term "2,0"))
                                                                           (rule "translateJavaAddInt" (formula "23") (term "3,0"))
                                                                           (rule "translateJavaSubInt" (formula "51") (term "2,0,1,0,1,2,0"))
                                                                           (rule "translateJavaSubInt" (formula "51") (term "2,0,1,0,1,3,0"))
                                                                           (rule "translateJavaAddInt" (formula "51") (term "0,2,1,3,0"))
                                                                           (rule "translateJavaAddInt" (formula "45") (term "0,2,1,0,1"))
                                                                           (rule "translateJavaAddInt" (formula "42") (term "0,2,1,0,1"))
                                                                           (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,1,2,0"))
                                                                           (rule "translateJavaSubInt" (formula "37") (term "2,0,1,0,1,0,0"))
                                                                           (rule "translateJavaAddInt" (formula "37") (term "0,2,1,1,1"))
                                                                           (rule "translateJavaAddInt" (formula "23") (term "0,2,1,3,0"))
                                                                           (rule "eqSymm" (formula "35") (term "0,1,0"))
                                                                           (rule "polySimp_homoEq" (formula "24") (term "0"))
                                                                           (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "51") (term "1,2,0,1,0,0"))
                                                                           (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,2,0"))
                                                                           (rule "mul_literals" (formula "45") (term "1,2,0,1,0,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "44") (term "2,0,1,0,2,0"))
                                                                           (rule "mul_literals" (formula "44") (term "1,2,0,1,0,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,2,0"))
                                                                           (rule "mul_literals" (formula "42") (term "1,2,0,1,0,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,2,0"))
                                                                           (rule "mul_literals" (formula "41") (term "1,2,0,1,0,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "38") (term "2,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "38") (term "1,2,0,1,0,0"))
                                                                           (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,2,0"))
                                                                           (rule "mul_literals" (formula "37") (term "1,2,0,1,0,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,1,2,0"))
                                                                           (rule "mul_literals" (formula "51") (term "1,2,0,1,0,1,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,1,3,0"))
                                                                           (rule "mul_literals" (formula "51") (term "1,2,0,1,0,1,3,0"))
                                                                           (rule "polySimp_elimSub" (formula "38") (term "2,0,1,0,1,2,0"))
                                                                           (rule "mul_literals" (formula "38") (term "1,2,0,1,0,1,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "37") (term "1,2,0,1,0,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "51") (term "0,2,1,3,0"))
                                                                           (rule "polySimp_addComm0" (formula "45") (term "0,2,1,0,1"))
                                                                           (rule "polySimp_addComm0" (formula "42") (term "0,2,1,0,1"))
                                                                           (rule "polySimp_addComm0" (formula "37") (term "0,2,1,1,1"))
                                                                           (rule "polySimp_addComm0" (formula "23") (term "0,2,1,3,0"))
                                                                           (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "45") (term "2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "38") (term "2,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,1,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,1,3,0"))
                                                                           (rule "polySimp_addComm1" (formula "38") (term "2,0,1,0,1,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,2,0"))
                                                                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "38") (term "0,2,0,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,1,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,1,3,0"))
                                                                           (rule "polySimp_addComm0" (formula "38") (term "0,2,0,1,0,1,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0,1,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,1"))
                                                                           (rule "inEqSimp_gtToGeq" (formula "35") (term "0,1,1"))
                                                                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,1"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "17"))
                                                                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "35") (term "0,0,1,1"))
                                                                           (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,1,0,1"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "35") (term "0,0,1,1,1"))
                                                                           (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "24") (term "0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "15"))
                                                                           (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                                           (rule "replace_known_left" (formula "35") (term "0,1,1") (ifseqformula "2"))
                                                                            (builtin "One Step Simplification" (formula "35"))
                                                                           (rule "jmod_axiom" (formula "24") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1"))
                                                                           (rule "jmod_axiom" (formula "4") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_homoEq" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "24") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "24") (term "0,0"))
                                                                           (rule "polySimp_elimOne" (formula "24") (term "0,0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "24") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "24") (term "0,1"))
                                                                           (rule "polySimp_sepPosMonomial" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                                                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                                           (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "35") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,1"))
                                                                           (rule "polySimp_elimOne" (formula "35") (term "0,0,0,1"))
                                                                           (rule "inEqSimp_contradEq3" (formula "35") (term "0,1,0") (ifseqformula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "35") (term "0,0,0,1,0"))
                                                                           (rule "qeq_literals" (formula "35") (term "0,0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "35"))
                                                                           (rule "inEqSimp_subsumption1" (formula "35") (term "0,0") (ifseqformula "3"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "35") (term "0,0,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "35") (term "1,1,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "35") (term "1,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "35") (term "0,0,0,0"))
                                                                           (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "35"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "35") (term "0,0,1") (ifseqformula "2"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0,0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,1"))
                                                                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,1"))
                                                                           (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,1"))
                                                                           (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0,1"))
                                                                           (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,1"))
                                                                           (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,1"))
                                                                           (rule "add_zero_right" (formula "35") (term "0,0,0,0,1"))
                                                                           (rule "leq_literals" (formula "35") (term "0,0,0,1"))
                                                                            (builtin "One Step Simplification" (formula "35"))
                                                                           (rule "pullOutSelect" (formula "51") (term "1,2,0") (inst "selectSK=arr_0"))
                                                                           (rule "simplifySelectOfAnon" (formula "1"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "10")))
                                                                           (rule "polySimp_addComm0" (formula "52") (term "2,0"))
                                                                           (rule "pullOutSelect" (formula "52") (term "1,3,0") (inst "selectSK=arr_1"))
                                                                           (rule "simplifySelectOfAnon" (formula "1"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "11")))
                                                                           (rule "polySimp_addComm0" (formula "53") (term "3,0"))
                                                                           (rule "pullOutSelect" (formula "40") (term "1,2,0") (inst "selectSK=arr_2"))
                                                                           (rule "applyEq" (formula "39") (term "1,0,0") (ifseqformula "40"))
                                                                           (rule "simplifySelectOfAnon" (formula "40"))
                                                                            (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "52")) (ifInst ""  (formula "11")))
                                                                           (rule "polySimp_addComm0" (formula "41") (term "2,0"))
                                                                           (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                                                                           (rule "newSym_eq" (formula "6") (inst "newSymDef=add(Z(neglit(1(#))), mul(b_0, Z(0(#))))") (inst "l=l_0"))
                                                                           (rule "times_zero_1" (formula "6") (term "1,1,1"))
                                                                           (rule "add_zero_right" (formula "6") (term "1,1"))
                                                                           (rule "polySimp_addComm0" (formula "6") (term "1"))
                                                                           (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "7") (term "0"))
                                                                           (rule "polySimp_rightDist" (formula "7") (term "0"))
                                                                           (rule "mul_literals" (formula "7") (term "0,0"))
                                                                           (rule "polySimp_homoEq" (formula "7"))
                                                                           (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                           (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                           (rule "add_literals" (formula "7") (term "0,0,0"))
                                                                           (rule "polySimp_sepPosMonomial" (formula "7"))
                                                                           (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                           (rule "mul_literals" (formula "7") (term "0,1"))
                                                                           (rule "applyEq" (formula "38") (term "0,2,1,0,0,1") (ifseqformula "7"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,1"))
                                                                           (rule "applyEqRigid" (formula "38") (term "1,0,2,0,1,0,1") (ifseqformula "7"))
                                                                           (rule "polySimp_addAssoc" (formula "38") (term "0,2,0,1,0,1"))
                                                                           (rule "add_literals" (formula "38") (term "0,0,2,0,1,0,1"))
                                                                           (rule "add_zero_left" (formula "38") (term "0,2,0,1,0,1"))
                                                                           (rule "applyEq" (formula "38") (term "1,0,2,0,1,1") (ifseqformula "7"))
                                                                           (rule "polySimp_addAssoc" (formula "38") (term "0,2,0,1,1"))
                                                                           (rule "add_literals" (formula "38") (term "0,0,2,0,1,1"))
                                                                           (rule "add_zero_left" (formula "38") (term "0,2,0,1,1"))
                                                                           (rule "applyEqRigid" (formula "26") (term "1,0,2,1,3,0") (ifseqformula "7"))
                                                                           (rule "polySimp_addAssoc" (formula "26") (term "0,2,1,3,0"))
                                                                           (rule "add_literals" (formula "26") (term "0,0,2,1,3,0"))
                                                                           (rule "add_zero_left" (formula "26") (term "0,2,1,3,0"))
                                                                           (rule "applyEqRigid" (formula "38") (term "0,0") (ifseqformula "7"))
                                                                           (rule "applyEqRigid" (formula "4") (term "1,1") (ifseqformula "7"))
                                                                           (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                                           (rule "add_literals" (formula "4") (term "0,1"))
                                                                           (rule "applyEqRigid" (formula "26") (term "0,2,1,2,0") (ifseqformula "7"))
                                                                           (rule "applyEqRigid" (formula "38") (term "0,2,1,1,1") (ifseqformula "7"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "38") (term "1,1"))
                                                                           (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqRigid" (formula "1") (term "1,0,2,2,0") (ifseqformula "7"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,2,2,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,2,2,0"))
                                                                           (rule "add_zero_left" (formula "1") (term "0,2,2,0"))
                                                                           (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "7"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                                                           (rule "add_literals" (formula "5") (term "0,1"))
                                                                           (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                                                           (rule "applyEq" (formula "1") (term "1,0,1,0,0") (ifseqformula "7"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                                                           (rule "add_zero_left" (formula "1") (term "0,1,0,0"))
                                                                           (rule "applyEqRigid" (formula "1") (term "1,0,2,1,0") (ifseqformula "7"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,2,1,0"))
                                                                           (rule "add_zero_left" (formula "1") (term "0,2,1,0"))
                                                                           (rule "applyEqRigid" (formula "2") (term "0,2,1,0") (ifseqformula "7"))
                                                                           (rule "applyEq" (formula "2") (term "0,2,2,0") (ifseqformula "7"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0"))
                                                                           (rule "mul_literals" (formula "38") (term "1,0"))
                                                                           (rule "elimGcdGeq" (formula "38") (term "0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                                                                           (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                                                                           (rule "sub_literals" (formula "38") (term "0,0,0,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "38") (term "0,0,0,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                                                           (rule "polySimp_addLiterals" (formula "38") (term "0,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "38") (term "0,0,0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "38") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,0,0"))
                                                                           (rule "add_literals" (formula "38") (term "1,1,0,1,0,0"))
                                                                           (rule "times_zero_1" (formula "38") (term "1,0,1,0,0"))
                                                                           (rule "add_literals" (formula "38") (term "0,1,0,0"))
                                                                           (rule "leq_literals" (formula "38") (term "1,0,0"))
                                                                            (builtin "One Step Simplification" (formula "38"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "38") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "38") (term "1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "38") (term "0,0,0"))
                                                                           (rule "qeq_literals" (formula "38") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "38"))
                                                                           (rule "elementOfUnion" (formula "41") (term "0,0"))
                                                                           (rule "disjointAllFields" (formula "41") (term "1,0,0") (ifseqformula "30"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "elementOfArrayRangeConcrete" (formula "41") (term "0,0"))
                                                                           (rule "eqSymm" (formula "41") (term "0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "41") (term "0,0,0,0") (ifseqformula "51"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "applyEqReverse" (formula "40") (term "0,0,0") (ifseqformula "41"))
                                                                           (rule "applyEqReverse" (formula "42") (term "0,2,0") (ifseqformula "41"))
                                                                           (rule "hideAuxiliaryEq" (formula "41"))
                                                                           (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "41") (term "2,0"))
                                                                           (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                           (rule "disjointAllFields" (formula "2") (term "1,0,0") (ifseqformula "30"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                                           (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "50"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "applyEqReverse" (formula "54") (term "0,2,0") (ifseqformula "2"))
                                                                           (rule "hideAuxiliaryEq" (formula "2"))
                                                                           (rule "polySimp_addComm0" (formula "53") (term "2,0"))
                                                                           (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                           (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "29"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                           (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "49"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "applyEqReverse" (formula "53") (term "0,3,0") (ifseqformula "1"))
                                                                           (rule "hideAuxiliaryEq" (formula "1"))
                                                                           (rule "polySimp_addComm0" (formula "52") (term "3,0"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
                                                                           (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "34") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                                           (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "2"))
                                                                           (rule "mul_literals" (formula "17") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "17") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                                           (rule "mul_literals" (formula "17") (term "1"))
                                                                           (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                                                                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                                                           (rule "leq_literals" (formula "17") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "17"))
                                                                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                                           (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "17") (term "0,0"))
                                                                           (rule "leq_literals" (formula "17") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "17"))
                                                                           (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "17"))
                                                                            (builtin "One Step Simplification" (formula "38"))
                                                                           (rule "andLeft" (formula "38"))
                                                                           (rule "andLeft" (formula "38"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
                                                                           (rule "times_zero_1" (formula "34") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "34") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                                           (rule "polySimp_mulLiterals" (formula "34") (term "1"))
                                                                           (rule "polySimp_elimOne" (formula "34") (term "1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "40"))
                                                                           (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                                           (rule "polySimp_mulLiterals" (formula "38") (term "1"))
                                                                           (rule "polySimp_elimOne" (formula "38") (term "1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "40"))
                                                                           (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "38") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                                           (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                           (rule "commuteUnion" (formula "57") (term "1,0,0"))
                                                                           (rule "commuteUnion" (formula "51") (term "1,0,2,0"))
                                                                           (rule "commuteUnion" (formula "50") (term "1,0,2,0"))
                                                                           (rule "commuteUnion" (formula "48") (term "1,0,2,0"))
                                                                           (rule "commuteUnion" (formula "47") (term "1,0,2,0"))
                                                                           (rule "commuteUnion" (formula "44") (term "1,0,0"))
                                                                           (rule "commuteUnion" (formula "43") (term "1,0,2,0"))
                                                                           (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "22") (term "0") (inst "b=b"))
                                                                            (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "translateJavaAddInt" (formula "22") (term "0,2,1,3,0,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "22") (term "2,0,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "22") (term "3,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "22") (term "0,2,1,3,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                                                           (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                                                           (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "27") (term "0") (inst "b=b"))
                                                                            (builtin "One Step Simplification" (formula "27"))
                                                                           (rule "translateJavaSubInt" (formula "27") (term "0,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "27") (term "0,2,0,0,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "27") (term "0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "27") (term "0,2,0,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "27") (term "0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                                           (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "27") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "27") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "27") (term "0,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "27") (term "0,0,0,1,1,0"))
                                                                           (rule "Contract_axiom_for_bucketStartsOrdering_in_Functions" (formula "32") (term "0"))
                                                                           (rule "replace_known_right" (formula "32") (term "0,1,1,0,0") (ifseqformula "56"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")) (ifInst ""  (formula "33")))
                                                                           (rule "true_left" (formula "32"))
                                                                           (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "23") (term "0") (inst "b=b"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "translateJavaAddInt" (formula "23") (term "0,2,5,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "23") (term "0,2,5,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                                                           (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                                                           (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "24") (term "0") (inst "b=b"))
                                                                            (builtin "One Step Simplification" (formula "24"))
                                                                           (rule "translateJavaAddInt" (formula "24") (term "0,2,5,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "24") (term "0,2,5,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                                           (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                                           (rule "Definition_axiom_for_bucketStartsOrdering_in_de_wiesler_Functions" (formula "32") (term "0") (inst "b=b"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "translateJavaAddInt" (formula "32") (term "0,2,1,1,0,1,0,1,0,1"))
                                                                           (rule "translateJavaAddInt" (formula "32") (term "0,2,1,1,0,1,1,1,0,1"))
                                                                           (rule "translateJavaAddInt" (formula "32") (term "0,2,0,1,1,0,1,0,1"))
                                                                           (rule "translateJavaAddInt" (formula "32") (term "0,2,0,0,0,1,1,1,0,1"))
                                                                           (rule "translateJavaAddInt" (formula "32") (term "0,2,0,1,1,1,1,0,1"))
                                                                           (rule "translateJavaAddInt" (formula "32") (term "0,2,1,1,0,0"))
                                                                           (rule "translateJavaAddInt" (formula "32") (term "0,2,0,1,0"))
                                                                           (rule "andLeft" (formula "32"))
                                                                           (rule "andLeft" (formula "32"))
                                                                           (rule "andLeft" (formula "32"))
                                                                           (rule "polySimp_addComm0" (formula "35") (term "0,2,0,1,1,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "35") (term "0,2,1,1,0,1,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "35") (term "0,2,0,0,0,1,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "35") (term "0,2,0,1,1,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "35") (term "0,2,1,1,0,1,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "34") (term "0,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "33") (term "0,2,1"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_gtToGeq" (formula "35") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,1,0,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "32"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,1,1,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,1,1,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,1,0,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "33"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "32"))
                                                                           (rule "applyEq" (formula "32") (term "0") (ifseqformula "21"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "32"))
                                                                           (rule "applyEq" (formula "32") (term "1,1,1,1,1,0") (ifseqformula "21"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "32") (term "1,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "32") (term "0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "32") (term "1,1,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,1,0"))
                                                                           (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "30"))
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "translateJavaMulInt" (formula "30") (term "1,1,0,0,0,0,1,0,0"))
                                                                           (rule "translateJavaMulInt" (formula "30") (term "1,1,0,0,0,0,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "30") (term "1,1,0,0,0,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "30") (term "1,1,0,0,0,0,0,1,0,0"))
                                                                           (rule "andLeft" (formula "30"))
                                                                           (rule "andLeft" (formula "30"))
                                                                           (rule "andLeft" (formula "32"))
                                                                           (rule "andLeft" (formula "30"))
                                                                           (rule "andLeft" (formula "33"))
                                                                           (rule "andLeft" (formula "30"))
                                                                           (rule "andLeft" (formula "32"))
                                                                           (rule "andLeft" (formula "35"))
                                                                           (rule "andLeft" (formula "30"))
                                                                           (rule "notLeft" (formula "32"))
                                                                           (rule "andLeft" (formula "32"))
                                                                           (rule "andLeft" (formula "36"))
                                                                           (rule "andLeft" (formula "30"))
                                                                           (rule "notLeft" (formula "32"))
                                                                           (rule "andLeft" (formula "32"))
                                                                           (rule "andLeft" (formula "37"))
                                                                           (rule "andLeft" (formula "30"))
                                                                           (rule "notLeft" (formula "32"))
                                                                           (rule "andLeft" (formula "32"))
                                                                           (rule "andLeft" (formula "38"))
                                                                           (rule "andLeft" (formula "30"))
                                                                           (rule "notLeft" (formula "32"))
                                                                           (rule "andLeft" (formula "32"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "notLeft" (formula "31"))
                                                                           (rule "andLeft" (formula "30"))
                                                                           (rule "andLeft" (formula "32"))
                                                                           (rule "andLeft" (formula "40"))
                                                                           (rule "notLeft" (formula "31"))
                                                                           (rule "andLeft" (formula "30"))
                                                                           (rule "andLeft" (formula "32"))
                                                                           (rule "andLeft" (formula "41"))
                                                                           (rule "notLeft" (formula "31"))
                                                                           (rule "notLeft" (formula "30"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "disjointDefinition" (formula "66"))
                                                                            (builtin "One Step Simplification" (formula "66"))
                                                                           (rule "notLeft" (formula "66"))
                                                                           (rule "disjointDefinition" (formula "65"))
                                                                            (builtin "One Step Simplification" (formula "65"))
                                                                           (rule "notLeft" (formula "65"))
                                                                           (rule "disjointDefinition" (formula "64"))
                                                                            (builtin "One Step Simplification" (formula "64"))
                                                                           (rule "notLeft" (formula "64"))
                                                                           (rule "eqSymm" (formula "85"))
                                                                           (rule "disjointDefinition" (formula "63"))
                                                                            (builtin "One Step Simplification" (formula "63"))
                                                                           (rule "notLeft" (formula "63"))
                                                                           (rule "eqSymm" (formula "84"))
                                                                           (rule "disjointDefinition" (formula "62"))
                                                                            (builtin "One Step Simplification" (formula "62"))
                                                                           (rule "notLeft" (formula "62"))
                                                                           (rule "eqSymm" (formula "83"))
                                                                           (rule "disjointDefinition" (formula "61"))
                                                                            (builtin "One Step Simplification" (formula "61"))
                                                                           (rule "notLeft" (formula "61"))
                                                                           (rule "eqSymm" (formula "82"))
                                                                           (rule "disjointDefinition" (formula "60"))
                                                                            (builtin "One Step Simplification" (formula "60"))
                                                                           (rule "notLeft" (formula "60"))
                                                                           (rule "eqSymm" (formula "81"))
                                                                           (rule "disjointDefinition" (formula "59"))
                                                                            (builtin "One Step Simplification" (formula "59"))
                                                                           (rule "notLeft" (formula "59"))
                                                                           (rule "eqSymm" (formula "80"))
                                                                           (rule "disjointDefinition" (formula "58"))
                                                                            (builtin "One Step Simplification" (formula "58"))
                                                                           (rule "notLeft" (formula "58"))
                                                                           (rule "eqSymm" (formula "79"))
                                                                           (rule "disjointDefinition" (formula "57"))
                                                                            (builtin "One Step Simplification" (formula "57"))
                                                                           (rule "notLeft" (formula "57"))
                                                                           (rule "eqSymm" (formula "78"))
                                                                           (rule "disjointDefinition" (formula "56"))
                                                                            (builtin "One Step Simplification" (formula "56"))
                                                                           (rule "notLeft" (formula "56"))
                                                                           (rule "eqSymm" (formula "77"))
                                                                           (rule "disjointDefinition" (formula "55"))
                                                                            (builtin "One Step Simplification" (formula "55"))
                                                                           (rule "notLeft" (formula "55"))
                                                                           (rule "eqSymm" (formula "76"))
                                                                           (rule "disjointDefinition" (formula "54"))
                                                                            (builtin "One Step Simplification" (formula "54"))
                                                                           (rule "notLeft" (formula "54"))
                                                                           (rule "eqSymm" (formula "75"))
                                                                           (rule "disjointDefinition" (formula "53"))
                                                                            (builtin "One Step Simplification" (formula "53"))
                                                                           (rule "notLeft" (formula "53"))
                                                                           (rule "eqSymm" (formula "74"))
                                                                           (rule "disjointDefinition" (formula "52"))
                                                                            (builtin "One Step Simplification" (formula "52"))
                                                                           (rule "notLeft" (formula "52"))
                                                                           (rule "eqSymm" (formula "73"))
                                                                           (rule "disjointDefinition" (formula "51"))
                                                                            (builtin "One Step Simplification" (formula "51"))
                                                                           (rule "notLeft" (formula "51"))
                                                                           (rule "disjointDefinition" (formula "50"))
                                                                            (builtin "One Step Simplification" (formula "50"))
                                                                           (rule "notLeft" (formula "50"))
                                                                           (rule "eqSymm" (formula "71"))
                                                                           (rule "disjointDefinition" (formula "49"))
                                                                            (builtin "One Step Simplification" (formula "49"))
                                                                           (rule "notLeft" (formula "49"))
                                                                           (rule "eqSymm" (formula "70"))
                                                                           (rule "disjointDefinition" (formula "48"))
                                                                            (builtin "One Step Simplification" (formula "48"))
                                                                           (rule "notLeft" (formula "48"))
                                                                           (rule "disjointDefinition" (formula "47"))
                                                                            (builtin "One Step Simplification" (formula "47"))
                                                                           (rule "notLeft" (formula "47"))
                                                                           (rule "disjointDefinition" (formula "46"))
                                                                            (builtin "One Step Simplification" (formula "46"))
                                                                           (rule "notLeft" (formula "46"))
                                                                           (rule "disjointDefinition" (formula "45"))
                                                                            (builtin "One Step Simplification" (formula "45"))
                                                                           (rule "notLeft" (formula "45"))
                                                                           (rule "disjointDefinition" (formula "44"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "notLeft" (formula "44"))
                                                                           (rule "disjointDefinition" (formula "43"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "notLeft" (formula "43"))
                                                                           (rule "disjointDefinition" (formula "42"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "notLeft" (formula "42"))
                                                                           (rule "disjointDefinition" (formula "41"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "notLeft" (formula "41"))
                                                                           (rule "disjointDefinition" (formula "39"))
                                                                            (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "notLeft" (formula "39"))
                                                                           (rule "disjointDefinition" (formula "39"))
                                                                            (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "notLeft" (formula "39"))
                                                                           (rule "applyEq" (formula "52") (term "0,1,0,0") (ifseqformula "38"))
                                                                           (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "38"))
                                                                           (rule "applyEq" (formula "56") (term "0,1,0,2,0") (ifseqformula "38"))
                                                                           (rule "applyEq" (formula "51") (term "0,1,0,2,0") (ifseqformula "38"))
                                                                           (rule "applyEq" (formula "55") (term "0,1,0,2,0") (ifseqformula "38"))
                                                                           (rule "applyEq" (formula "101") (term "0,1,0,0") (ifseqformula "38"))
                                                                           (rule "applyEq" (formula "59") (term "0,1,0,2,0") (ifseqformula "38"))
                                                                           (rule "applyEq" (formula "58") (term "0,1,0,2,0") (ifseqformula "38"))
                                                                           (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "38"))
                                                                           (rule "distributeIntersection" (formula "29") (term "0"))
                                                                           (rule "distributeIntersection" (formula "28") (term "0"))
                                                                           (rule "distributeIntersection" (formula "29") (term "0,0"))
                                                                           (rule "distributeIntersection" (formula "29") (term "1,0"))
                                                                           (rule "distributeIntersection" (formula "28") (term "1,0"))
                                                                           (rule "distributeIntersection" (formula "28") (term "0,0"))
                                                                           (rule "distributeIntersection" (formula "29") (term "1,0,0"))
                                                                           (rule "distributeIntersection" (formula "29") (term "0,0,0"))
                                                                           (rule "distributeIntersection" (formula "29") (term "0,1,0"))
                                                                           (rule "distributeIntersection" (formula "29") (term "1,1,0"))
                                                                           (rule "distributeIntersection" (formula "28") (term "1,1,0"))
                                                                           (rule "distributeIntersection" (formula "28") (term "0,1,0"))
                                                                           (rule "distributeIntersection" (formula "28") (term "0,0,0"))
                                                                           (rule "distributeIntersection" (formula "28") (term "1,0,0"))
                                                                           (rule "unionEqualsEmpty" (formula "29"))
                                                                           (rule "andLeft" (formula "29"))
                                                                           (rule "unionEqualsEmpty" (formula "28"))
                                                                           (rule "andLeft" (formula "28"))
                                                                           (rule "unionEqualsEmpty" (formula "30"))
                                                                           (rule "andLeft" (formula "30"))
                                                                           (rule "unionEqualsEmpty" (formula "32"))
                                                                           (rule "andLeft" (formula "32"))
                                                                           (rule "unionEqualsEmpty" (formula "29"))
                                                                           (rule "andLeft" (formula "29"))
                                                                           (rule "unionEqualsEmpty" (formula "28"))
                                                                           (rule "andLeft" (formula "28"))
                                                                           (rule "unionEqualsEmpty" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "andLeft" (formula "33"))
                                                                           (rule "notLeft" (formula "33"))
                                                                           (rule "notLeft" (formula "33"))
                                                                           (rule "eqSymm" (formula "66"))
                                                                           (rule "eqSymm" (formula "65"))
                                                                           (rule "unionEqualsEmpty" (formula "32"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "andLeft" (formula "32"))
                                                                           (rule "notLeft" (formula "32"))
                                                                           (rule "notLeft" (formula "32"))
                                                                           (rule "eqSymm" (formula "65"))
                                                                           (rule "eqSymm" (formula "64"))
                                                                           (rule "unionEqualsEmpty" (formula "32"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "andLeft" (formula "32"))
                                                                           (rule "notLeft" (formula "32"))
                                                                           (rule "notLeft" (formula "32"))
                                                                           (rule "eqSymm" (formula "64"))
                                                                           (rule "eqSymm" (formula "63"))
                                                                           (rule "unionEqualsEmpty" (formula "32"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "andLeft" (formula "32"))
                                                                           (rule "notLeft" (formula "33"))
                                                                           (rule "notLeft" (formula "32"))
                                                                           (rule "eqSymm" (formula "63"))
                                                                           (rule "eqSymm" (formula "62"))
                                                                           (rule "unionEqualsEmpty" (formula "30"))
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "andLeft" (formula "30"))
                                                                           (rule "notLeft" (formula "31"))
                                                                           (rule "notLeft" (formula "30"))
                                                                           (rule "eqSymm" (formula "62"))
                                                                           (rule "eqSymm" (formula "61"))
                                                                           (rule "unionEqualsEmpty" (formula "30"))
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "andLeft" (formula "30"))
                                                                           (rule "notLeft" (formula "30"))
                                                                           (rule "notLeft" (formula "30"))
                                                                           (rule "eqSymm" (formula "61"))
                                                                           (rule "eqSymm" (formula "60"))
                                                                           (rule "unionEqualsEmpty" (formula "29"))
                                                                            (builtin "One Step Simplification" (formula "29"))
                                                                           (rule "andLeft" (formula "29"))
                                                                           (rule "notLeft" (formula "30"))
                                                                           (rule "notLeft" (formula "29"))
                                                                           (rule "eqSymm" (formula "60"))
                                                                           (rule "eqSymm" (formula "59"))
                                                                           (rule "unionEqualsEmpty" (formula "28"))
                                                                            (builtin "One Step Simplification" (formula "28"))
                                                                           (rule "andLeft" (formula "28"))
                                                                           (rule "notLeft" (formula "28"))
                                                                           (rule "notLeft" (formula "28"))
                                                                           (rule "eqSymm" (formula "59"))
                                                                           (rule "eqSymm" (formula "58"))
                                                                           (rule "commuteUnion" (formula "36") (term "1,1,1"))
                                                                           (rule "commuteUnion_2" (formula "36") (term "0,1"))
                                                                           (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "20") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "20"))
                                                                           (rule "translateJavaAddInt" (formula "20") (term "3,0,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "20") (term "0,1,0,0"))
                                                                           (rule "andLeft" (formula "20"))
                                                                           (rule "andLeft" (formula "20"))
                                                                           (rule "andLeft" (formula "20"))
                                                                           (rule "polySimp_addComm0" (formula "22") (term "3,0"))
                                                                           (rule "polySimp_addComm0" (formula "21") (term "0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "20"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "21"))
                                                                           (rule "commuteUnion_2" (formula "53") (term "0,0,1,0,0"))
                                                                           (rule "commuteUnion" (formula "53") (term "1,1,0,1,0,0"))
                                                                           (rule "commuteUnion_2" (formula "57") (term "0,0,1,0,2,0"))
                                                                           (rule "commuteUnion" (formula "57") (term "1,1,0,1,0,2,0"))
                                                                           (rule "commuteUnion" (formula "52") (term "0,0,1,0,2,0"))
                                                                           (rule "commuteUnion" (formula "52") (term "1,1,0,1,0,2,0"))
                                                                           (rule "commuteUnion" (formula "56") (term "1,1,0,1,0,2,0"))
                                                                           (rule "commuteUnion" (formula "56") (term "0,0,0,1,0,2,0"))
                                                                           (rule "commuteUnion" (formula "118") (term "0,0,1,0,0"))
                                                                           (rule "commuteUnion" (formula "118") (term "1,1,0,1,0,0"))
                                                                           (rule "commuteUnion" (formula "60") (term "0,0,1,0,2,0"))
                                                                           (rule "commuteUnion" (formula "60") (term "1,1,0,1,0,2,0"))
                                                                           (rule "commuteUnion" (formula "59") (term "1,1,0,1,0,2,0"))
                                                                           (rule "commuteUnion_2" (formula "59") (term "0,0,1,0,2,0"))
                                                                           (rule "commute_or" (formula "29"))
                                                                           (rule "nnf_imp2or" (formula "25") (term "0"))
                                                                           (rule "nnf_imp2or" (formula "30") (term "0"))
                                                                           (rule "nnf_imp2or" (formula "26") (term "0"))
                                                                           (rule "commuteUnion" (formula "39") (term "0,0,1"))
                                                                           (rule "nnf_imp2or" (formula "27") (term "0"))
                                                                           (rule "commuteUnion" (formula "53") (term "0,0,0,1,0,0"))
                                                                           (rule "commuteUnion" (formula "57") (term "0,0,0,1,0,2,0"))
                                                                           (rule "commuteUnion" (formula "52") (term "1,0,0,1,0,2,0"))
                                                                           (rule "commuteUnion" (formula "56") (term "0,0,1,0,2,0"))
                                                                           (rule "commuteUnion" (formula "118") (term "1,0,0,1,0,0"))
                                                                           (rule "commuteUnion" (formula "60") (term "1,0,0,1,0,2,0"))
                                                                           (rule "commuteUnion" (formula "59") (term "0,0,0,1,0,2,0"))
                                                                           (rule "commuteUnion_2" (formula "39") (term "0,1"))
                                                                           (rule "commuteUnion_2" (formula "53") (term "0,0,1,0,0"))
                                                                           (rule "commuteUnion_2" (formula "57") (term "0,0,1,0,2,0"))
                                                                           (rule "Definition_axiom_for_isEqualityBucket_in_de_wiesler_Sorter" (formula "28") (term "0") (inst "i=i"))
                                                                            (builtin "One Step Simplification" (formula "28"))
                                                                           (rule "translateJavaSubInt" (formula "28") (term "1,1,0,0"))
                                                                           (rule "translateJavaAddInt" (formula "28") (term "0,2,1,1,0"))
                                                                           (rule "eqSymm" (formula "28") (term "1,0"))
                                                                           (rule "polySimp_elimSub" (formula "28") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "28") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "28") (term "0,2,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "28") (term "1,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "28") (term "0,1,1,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "28") (term "0,0,1,0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,0"))
                                                                           (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "0,1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,1,0,0"))
                                                                           (rule "mul_literals" (formula "28") (term "0,0,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "28") (term "1,0,1,1,0,0"))
                                                                           (rule "commuteUnion_2" (formula "59") (term "0,0,1,0,2,0"))
                                                                           (rule "commuteUnion_2" (formula "39") (term "1"))
                                                                           (rule "commuteUnion_2" (formula "53") (term "0,1,0,0"))
                                                                           (rule "commuteUnion_2" (formula "57") (term "0,1,0,2,0"))
                                                                           (rule "nnf_imp2or" (formula "41") (term "0"))
                                                                           (rule "commuteUnion_2" (formula "59") (term "0,1,0,2,0"))
                                                                           (rule "arrayLengthIsAShort" (formula "14") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "14"))
                                                                           (rule "true_left" (formula "14"))
                                                                           (rule "arrayLengthNotNegative" (formula "14") (term "0"))
                                                                           (rule "jdiv_axiom" (formula "4") (term "0"))
                                                                           (rule "eqSymm" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "0,0,2,0"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "0,0,2,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0"))
                                                                           (rule "mul_literals" (formula "4") (term "0,0,0,2,0"))
                                                                           (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "5"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0"))
                                                                           (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                                           (rule "inEqSimp_subsumption6" (formula "4") (term "0,0") (ifseqformula "18"))
                                                                           (rule "greater_literals" (formula "4") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                                                                           (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "polyDiv_pullOut" (formula "4") (term "0") (inst "polyDivCoeff=l_0"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0"))
                                                                           (rule "equal_literals" (formula "4") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "polySimp_homoEq" (formula "4"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "4") (term "1,1,0,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "4") (term "1,0,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "4") (term "0,0,0,1,0"))
                                                                           (rule "div_literals" (formula "4") (term "0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                                           (rule "add_literals" (formula "4") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "true_left" (formula "4"))
                                                                           (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                                                           (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                                           (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                                           (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                                           (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                                                           (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                                           (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                                           (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                                                           (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                                           (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                                           (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                                                           (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                                           (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                                                           (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                                                           (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                                                           (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                                           (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                                                           (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                                                           (rule "nnf_imp2or" (formula "28") (term "0"))
                                                                           (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "28") (term "0,0,1,0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,0"))
                                                                           (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "0,1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,1,0,0"))
                                                                           (rule "mul_literals" (formula "28") (term "0,0,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "28") (term "1,0,1,1,0,0"))
                                                                           (rule "nnf_imp2or" (formula "41") (term "0,1,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "41") (term "0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "41") (term "0,0,0,0,0,1,0"))
                                                                           (rule "add_zero_left" (formula "41") (term "0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "41") (term "1,0,0,1,0"))
                                                                           (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0"))
                                                                           (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0"))
                                                                           (rule "mul_literals" (formula "41") (term "1,0,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0"))
                                                                           (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0"))
                                                                           (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                                                           (rule "nnf_imp2or" (formula "41") (term "1,1,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "41") (term "0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "41") (term "0,0,0,0,1,1,0"))
                                                                           (rule "add_zero_left" (formula "41") (term "0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "41") (term "1,0,1,1,0"))
                                                                           (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "22") (term "0") (inst "j=j") (inst "i=i"))
                                                                            (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,0"))
                                                                           (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,0"))
                                                                           (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                                                           (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                                                           (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                                                           (rule "nnf_imp2or" (formula "22") (term "0"))
                                                                           (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "25") (term "0,1,0") (inst "i=i"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "translateJavaSubInt" (formula "25") (term "1,1,0,0,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "25") (term "0,2,1,1,0,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "25") (term "1,1,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "25") (term "1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "25") (term "0,2,1,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "25") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "25") (term "0,1,1,0,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,1,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "25") (term "0,0,1,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,0,0,1,0"))
                                                                           (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "25") (term "0,1,1,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "25") (term "0,0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "25") (term "1,0,1,1,0,0,1,0"))
                                                                           (rule "Definition_axiom_for_isBucketPartitioned_in_de_wiesler_Sorter" (formula "26") (term "0,1,0") (inst "j=j") (inst "i=i"))
                                                                            (builtin "One Step Simplification" (formula "26"))
                                                                           (rule "translateJavaAddInt" (formula "26") (term "1,1,0,0,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "26") (term "0,0,0,0,1,0,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "26") (term "0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,0,1,0"))
                                                                           (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,1,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,1,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "26") (term "0,1,0,1,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "26") (term "0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "26") (term "0,0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "26") (term "1,0,1,1,0,0,1,0"))
                                                                           (rule "Definition_axiom_for_smallBucketIsSorted_in_de_wiesler_Sorter" (formula "27") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "27"))
                                                                           (rule "true_left" (formula "27"))
                                                                           (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                                                           (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                                                           (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                                                           (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                                                           (rule "Definition_axiom_for_isEqualityBucket_in_de_wiesler_Sorter" (formula "117") (term "0") (inst "i=i"))
                                                                            (builtin "One Step Simplification" (formula "117"))
                                                                           (rule "translateJavaAddInt" (formula "117") (term "0,2,1,1,0"))
                                                                           (rule "translateJavaSubInt" (formula "117") (term "1,1,0,0"))
                                                                           (rule "allRight" (formula "117") (inst "sk=i_0"))
                                                                           (rule "impRight" (formula "117"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "eqSymm" (formula "119"))
                                                                           (rule "polySimp_elimSub" (formula "2") (term "1"))
                                                                           (rule "mul_literals" (formula "2") (term "1,1"))
                                                                           (rule "polySimp_addComm0" (formula "119") (term "0,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "1"))
                                                                           (rule "polySimp_addComm0" (formula "2") (term "0,1"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "1"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                           (rule "pullOutSelect" (formula "119") (term "1") (inst "selectSK=arr_3"))
                                                                           (rule "simplifySelectOfAnon" (formula "1"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")) (ifInst ""  (formula "11")))
                                                                           (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                           (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1,0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "1") (term "1,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "1,1,1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "0,1,1,1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,0,1,1,1,0,0"))
                                                                           (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                           (rule "elementOfUnion" (formula "1") (term "1,0,0,0"))
                                                                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "eqSymm" (formula "1") (term "1,0,0,0,0,0"))
                                                                           (rule "eqSymm" (formula "1") (term "0,0,0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "1") (term "1,0,0,0,0,0") (ifseqformula "66"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                                                           (rule "elementOfUnion" (formula "1") (term "1,1,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "eqSymm" (formula "1") (term "1,1,1,0,0,0"))
                                                                           (rule "eqSymm" (formula "1") (term "0,1,1,0,0,0"))
                                                                           (rule "replace_known_right" (formula "1") (term "1,1,1,0,0,0") (ifseqformula "68"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                                                                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                                                                           (rule "eqSymm" (formula "1") (term "1,0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "63"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                                                                           (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                                           (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "70"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
                                                                           (rule "pullOutSelect" (formula "120") (term "0") (inst "selectSK=arr_4"))
                                                                           (rule "simplifySelectOfAnon" (formula "1"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "120")) (ifInst ""  (formula "12")))
                                                                           (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                           (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "1") (term "1,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,1,1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1,0,1,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,1,0,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,0,0,1,1,0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "1,1,1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "0,1,1,1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,0,1,1,1,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0,0"))
                                                                           (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                           (rule "elementOfUnion" (formula "1") (term "1,0,0,0"))
                                                                           (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "eqSymm" (formula "1") (term "1,1,0,0,0,0"))
                                                                           (rule "eqSymm" (formula "1") (term "0,1,0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "1") (term "0,1,0,0,0,0") (ifseqformula "64"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                                                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                                                                           (rule "eqSymm" (formula "1") (term "1,0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "67"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                                                           (rule "elementOfUnion" (formula "1") (term "1,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "eqSymm" (formula "1") (term "1,1,0,0,0"))
                                                                           (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                                                           (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "68"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
                                                                           (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "51") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "51") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "51"))
                                                                           (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "51") (term "0"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "2") (term "1,0,0") (ifseqformula "51"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0"))
                                                                           (rule "add_zero_right" (formula "2") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0,1,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0"))
                                                                           (rule "add_zero_right" (formula "2") (term "0,0,1,0,0"))
                                                                           (rule "leq_literals" (formula "2") (term "0,1,0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "applyEqReverse" (formula "122") (term "1") (ifseqformula "2"))
                                                                           (rule "hideAuxiliaryEq" (formula "2"))
                                                                           (rule "eqSymm" (formula "121"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "1") (term "1,1,0,0") (ifseqformula "50"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,1,0,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0,1,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,1,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,1,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,1,0,0"))
                                                                           (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0,0"))
                                                                           (rule "add_zero_right" (formula "1") (term "0,0,1,1,0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0,1,1,0,0"))
                                                                           (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0,0"))
                                                                           (rule "add_zero_right" (formula "1") (term "0,0,1,1,0,0"))
                                                                           (rule "leq_literals" (formula "1") (term "0,1,1,0,0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "70"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                                                                           (rule "applyEqReverse" (formula "121") (term "1") (ifseqformula "1"))
                                                                           (rule "hideAuxiliaryEq" (formula "1"))
                                                                           (rule "eqSymm" (formula "120"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "51"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                                           (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "50"))
                                                                           (rule "polySimp_mulComm0" (formula "47") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "47") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                                           (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "47"))
                                                                           (rule "mul_literals" (formula "45") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "45") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                                                           (rule "polySimp_mulLiterals" (formula "45") (term "1"))
                                                                           (rule "polySimp_elimOne" (formula "45") (term "1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "45") (term "0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                                                           (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "45") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                                                           (rule "mul_literals" (formula "45") (term "0,1"))
                                                                           (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "45"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                                           (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "16") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "16") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "16"))
                                                                           (rule "true_left" (formula "16"))
                                                                           (rule "nnf_imp2or" (formula "24") (term "0,1,0"))
                                                                           (rule "nnf_imp2or" (formula "27") (term "0,1,0"))
                                                                           (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "58") (term "0"))
                                                                           (rule "wellFormedAnon" (formula "58") (term "1,0"))
                                                                           (rule "replace_known_left" (formula "58") (term "0,1,0") (ifseqformula "10"))
                                                                            (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "123")) (ifInst ""  (formula "60")) (ifInst ""  (formula "59")))
                                                                           (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "59") (term "0") (inst "i=i"))
                                                                            (builtin "One Step Simplification" (formula "59"))
                                                                           (rule "translateJavaAddInt" (formula "59") (term "0,2,1,1,0"))
                                                                           (rule "translateJavaSubInt" (formula "59") (term "1,1,0,0"))
                                                                           (rule "polySimp_elimSub" (formula "59") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "59") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "59") (term "0,2,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "59") (term "1,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "59") (term "0,1,1,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "59") (term "0,1,0,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "59") (term "0,0,1,0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,1,0,0"))
                                                                           (rule "add_literals" (formula "59") (term "0,0,0,0,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "59") (term "1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "59") (term "0,1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,1,0,0"))
                                                                           (rule "mul_literals" (formula "59") (term "0,0,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "59") (term "1,0,1,1,0,0"))
                                                                           (rule "nnf_imp2or" (formula "28") (term "0,1,0"))
                                                                           (rule "arrayLengthIsAShort" (formula "39") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "true_left" (formula "39"))
                                                                           (rule "arrayLengthNotNegative" (formula "39") (term "0"))
                                                                           (rule "applyEq" (formula "39") (term "0") (ifseqformula "40"))
                                                                           (rule "qeq_literals" (formula "39"))
                                                                           (rule "true_left" (formula "39"))
                                                                           (rule "arrayLengthIsAShort" (formula "38") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "38"))
                                                                           (rule "true_left" (formula "38"))
                                                                           (rule "arrayLengthNotNegative" (formula "38") (term "0"))
                                                                           (rule "applyEq" (formula "38") (term "0") (ifseqformula "39"))
                                                                           (rule "qeq_literals" (formula "38"))
                                                                           (rule "true_left" (formula "38"))
                                                                           (rule "arrayLengthIsAShort" (formula "37") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "37"))
                                                                           (rule "true_left" (formula "37"))
                                                                           (rule "arrayLengthNotNegative" (formula "37") (term "0"))
                                                                           (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
                                                                           (rule "qeq_literals" (formula "37"))
                                                                           (rule "true_left" (formula "37"))
                                                                           (rule "arrayLengthNotNegative" (formula "36") (term "0"))
                                                                           (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                                                                           (rule "qeq_literals" (formula "36"))
                                                                           (rule "true_left" (formula "36"))
                                                                           (rule "arrayLengthIsAShort" (formula "36") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "36"))
                                                                           (rule "true_left" (formula "36"))
                                                                           (rule "arrayLengthNotNegative" (formula "35") (term "0"))
                                                                           (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                                           (rule "qeq_literals" (formula "35"))
                                                                           (rule "true_left" (formula "35"))
                                                                           (rule "arrayLengthIsAShort" (formula "35") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "35"))
                                                                           (rule "true_left" (formula "35"))
                                                                           (rule "arrayLengthNotNegative" (formula "34") (term "0"))
                                                                           (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                                           (rule "qeq_literals" (formula "34"))
                                                                           (rule "true_left" (formula "34"))
                                                                           (rule "arrayLengthIsAShort" (formula "34") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "true_left" (formula "34"))
                                                                           (rule "arrayLengthNotNegative" (formula "33") (term "0"))
                                                                           (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                                                                           (rule "qeq_literals" (formula "33"))
                                                                           (rule "true_left" (formula "33"))
                                                                           (rule "arrayLengthIsAShort" (formula "32") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "true_left" (formula "32"))
                                                                           (rule "arrayLengthIsAShort" (formula "33") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "true_left" (formula "33"))
                                                                           (rule "arrayLengthNotNegative" (formula "32") (term "0"))
                                                                           (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
                                                                           (rule "qeq_literals" (formula "32"))
                                                                           (rule "true_left" (formula "32"))
                                                                           (rule "associativeLawUnion" (formula "40") (term "0,1"))
                                                                           (rule "associativeLawUnion" (formula "57") (term "0,1,0,2,0"))
                                                                           (rule "associativeLawUnion" (formula "62") (term "0,1,0,2,0"))
                                                                           (rule "associativeLawUnion" (formula "66") (term "0,1,0,2,0"))
                                                                           (rule "commute_or" (formula "29") (term "0,0"))
                                                                           (rule "commute_or_2" (formula "42") (term "0,0"))
                                                                           (rule "jdiv_axiom" (formula "30") (term "0,0,0"))
                                                                           (rule "eqSymm" (formula "30"))
                                                                           (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "20"))
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "eqSymm" (formula "30"))
                                                                           (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "30"))
                                                                           (rule "associativeLawUnion" (formula "64") (term "0,0,1,0,2,0"))
                                                                           (rule "associativeLawUnion" (formula "66") (term "0,0,1,0,2,0"))
                                                                           (rule "cnf_rightDist" (formula "43") (term "0,1,0"))
                                                                           (rule "cnf_rightDist" (formula "43") (term "1,1,0"))
                                                                           (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "true_left" (formula "23"))
                                                                           (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                                                           (rule "nnf_notAnd" (formula "25") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0"))
                                                                           (rule "nnf_notAnd" (formula "28") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,0,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,0,1,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,1,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "28") (term "0,0,1,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,0,1,0"))
                                                                           (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,1,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "28") (term "0,0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "28") (term "1,0,1,1,0,0,1,0"))
                                                                           (rule "nnf_imp2or" (formula "61") (term "0"))
                                                                           (rule "cut_direct" (formula "32") (term "1"))
                                                                           (branch "CUT: num_buckets = 1 + bucket TRUE"
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "true_left" (formula "33"))
                                                                              (rule "applyEq" (formula "25") (term "1,1,1,0,0,1,0") (ifseqformula "32"))
                                                                              (rule "polySimp_addAssoc" (formula "25") (term "1,1,0,0,1,0"))
                                                                              (rule "add_literals" (formula "25") (term "0,1,1,0,0,1,0"))
                                                                              (rule "applyEq" (formula "21") (term "0") (ifseqformula "32"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "21"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                                                              (rule "add_literals" (formula "21") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "21") (term "0"))
                                                                              (rule "leq_literals" (formula "21"))
                                                                              (rule "true_left" (formula "21"))
                                                                              (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "31"))
                                                                              (rule "polySimp_addAssoc" (formula "23") (term "1"))
                                                                              (rule "add_literals" (formula "23") (term "0,1"))
                                                                              (rule "applyEq" (formula "24") (term "1,1,1,0,0") (ifseqformula "31"))
                                                                              (rule "polySimp_addAssoc" (formula "24") (term "1,1,0,0"))
                                                                              (rule "add_literals" (formula "24") (term "0,1,1,0,0"))
                                                                              (rule "applyEq" (formula "21") (term "0") (ifseqformula "31"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "21"))
                                                                              (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                                              (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                                              (rule "add_literals" (formula "21") (term "0,0"))
                                                                              (rule "applyEq" (formula "26") (term "0,2,0") (ifseqformula "31"))
                                                                              (rule "applyEq" (formula "32") (term "1,1,0,0") (ifseqformula "31"))
                                                                              (rule "applyEq" (formula "43") (term "1,1,0,0") (ifseqformula "31"))
                                                                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "31"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                              (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                              (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                                              (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                              (rule "add_zero_left" (formula "6") (term "0,0"))
                                                                              (rule "applyEq" (formula "28") (term "1,1,0,0") (ifseqformula "31"))
                                                                              (rule "applyEq" (formula "50") (term "0") (ifseqformula "26"))
                                                                              (rule "inEqSimp_commuteGeq" (formula "50"))
                                                                              (rule "applyEq" (formula "59") (term "1,2,1,1,0,1,1,0") (ifseqformula "26"))
                                                                              (rule "polySimp_addAssoc" (formula "59") (term "2,1,1,0,1,1,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,2,1,1,0,1,1,0"))
                                                                              (rule "add_literals" (formula "59") (term "1,1,0,2,1,1,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "59") (term "1,0,2,1,1,0,1,1,0"))
                                                                              (rule "add_literals" (formula "59") (term "0,2,1,1,0,1,1,0"))
                                                                              (rule "applyEq" (formula "59") (term "1,2,1,1,0,0,1,0") (ifseqformula "26"))
                                                                              (rule "polySimp_addAssoc" (formula "59") (term "2,1,1,0,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,2,1,1,0,0,1,0"))
                                                                              (rule "add_literals" (formula "59") (term "1,1,0,2,1,1,0,0,1,0"))
                                                                              (rule "times_zero_1" (formula "59") (term "1,0,2,1,1,0,0,1,0"))
                                                                              (rule "add_literals" (formula "59") (term "0,2,1,1,0,0,1,0"))
                                                                              (rule "applyEq" (formula "59") (term "1,1,1,0,0,0") (ifseqformula "26"))
                                                                              (rule "polySimp_addAssoc" (formula "59") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,1,1,0,0,0"))
                                                                              (rule "add_literals" (formula "59") (term "1,1,0,1,1,0,0,0"))
                                                                              (rule "times_zero_1" (formula "59") (term "1,0,1,1,0,0,0"))
                                                                              (rule "add_literals" (formula "59") (term "0,1,1,0,0,0"))
                                                                              (rule "applyEq" (formula "52") (term "0") (ifseqformula "26"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "52"))
                                                                              (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                                                              (rule "polySimp_mulAssoc" (formula "52") (term "0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "52") (term "0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "52") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor2" (formula "52") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "52") (term "1,0,0,0"))
                                                                              (rule "times_zero_1" (formula "52") (term "0,0,0"))
                                                                              (rule "add_zero_left" (formula "52") (term "0,0"))
                                                                              (rule "applyEq" (formula "63") (term "1,2,1,1,0,2,0") (ifseqformula "26"))
                                                                              (rule "polySimp_addAssoc" (formula "63") (term "2,1,1,0,2,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,2,1,1,0,2,0"))
                                                                              (rule "add_literals" (formula "63") (term "1,1,0,2,1,1,0,2,0"))
                                                                              (rule "times_zero_1" (formula "63") (term "1,0,2,1,1,0,2,0"))
                                                                              (rule "add_literals" (formula "63") (term "0,2,1,1,0,2,0"))
                                                                              (rule "applyEq" (formula "43") (term "1,0,1,0,1,1,0") (ifseqformula "26"))
                                                                              (rule "applyEq" (formula "57") (term "1,1,1") (ifseqformula "26"))
                                                                              (rule "polySimp_addAssoc" (formula "57") (term "1,1"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "57") (term "0,1,1"))
                                                                              (rule "add_literals" (formula "57") (term "1,0,1,1"))
                                                                              (rule "times_zero_1" (formula "57") (term "0,1,1"))
                                                                              (rule "add_zero_left" (formula "57") (term "1,1"))
                                                                              (rule "applyEq" (formula "53") (term "1") (ifseqformula "26"))
                                                                              (rule "applyEq" (formula "50") (term "0") (ifseqformula "26"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "50"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "50") (term "0"))
                                                                              (rule "add_literals" (formula "50") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "50") (term "0"))
                                                                              (rule "qeq_literals" (formula "50"))
                                                                              (rule "true_left" (formula "50"))
                                                                              (rule "applyEq" (formula "50") (term "1") (ifseqformula "26"))
                                                                              (rule "applyEq" (formula "64") (term "1,2,1,1,0,2,0") (ifseqformula "26"))
                                                                              (rule "polySimp_addAssoc" (formula "64") (term "2,1,1,0,2,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,2,1,1,0,2,0"))
                                                                              (rule "add_literals" (formula "64") (term "1,1,0,2,1,1,0,2,0"))
                                                                              (rule "times_zero_1" (formula "64") (term "1,0,2,1,1,0,2,0"))
                                                                              (rule "add_literals" (formula "64") (term "0,2,1,1,0,2,0"))
                                                                              (rule "applyEq" (formula "61") (term "1,2,1,1,0,2,0") (ifseqformula "26"))
                                                                              (rule "polySimp_addAssoc" (formula "61") (term "2,1,1,0,2,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,2,1,1,0,2,0"))
                                                                              (rule "add_literals" (formula "61") (term "1,1,0,2,1,1,0,2,0"))
                                                                              (rule "times_zero_1" (formula "61") (term "1,0,2,1,1,0,2,0"))
                                                                              (rule "add_literals" (formula "61") (term "0,2,1,1,0,2,0"))
                                                                              (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "26"))
                                                                              (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "65") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "65") (term "1,0,0,0"))
                                                                              (rule "times_zero_1" (formula "65") (term "0,0,0"))
                                                                              (rule "add_zero_left" (formula "65") (term "0,0"))
                                                                              (rule "seqDef_lower_equals_upper" (formula "65") (term "0"))
                                                                              (rule "seqPermEmpty1" (formula "65"))
                                                                              (rule "eqSymm" (formula "65"))
                                                                              (rule "eqSeqEmpty" (formula "65"))
                                                                              (rule "lenOfSeqDef" (formula "65") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "65"))
                                                                              (rule "polySimp_elimSub" (formula "65") (term "0,1"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,1"))
                                                                              (rule "polySimp_rightDist" (formula "65") (term "1,0,1"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "0,1,0,1"))
                                                                              (rule "polySimp_addAssoc" (formula "65") (term "0,1"))
                                                                              (rule "polySimp_addComm0" (formula "65") (term "0,0,1"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "65") (term "0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "65") (term "0,0,0,0"))
                                                                              (rule "applyEq" (formula "62") (term "1,0,0") (ifseqformula "26"))
                                                                              (rule "polySimp_addAssoc" (formula "62") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "62") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "62") (term "1,0,0,0"))
                                                                              (rule "times_zero_1" (formula "62") (term "0,0,0"))
                                                                              (rule "add_zero_left" (formula "62") (term "0,0"))
                                                                              (rule "seqDef_lower_equals_upper" (formula "62") (term "0"))
                                                                              (rule "eqSymm" (formula "62"))
                                                                              (rule "eqSeqEmpty" (formula "62"))
                                                                              (rule "lenOfSeqDef" (formula "62") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "62"))
                                                                              (rule "polySimp_elimSub" (formula "62") (term "0,1"))
                                                                              (rule "polySimp_mulComm0" (formula "62") (term "1,0,1"))
                                                                              (rule "polySimp_rightDist" (formula "62") (term "1,0,1"))
                                                                              (rule "polySimp_mulComm0" (formula "62") (term "0,1,0,1"))
                                                                              (rule "polySimp_addAssoc" (formula "62") (term "0,1"))
                                                                              (rule "polySimp_addComm0" (formula "62") (term "0,0,1"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "62") (term "0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "62") (term "0,0,0,0"))
                                                                              (rule "applyEq" (formula "56") (term "1,2,1,1,0,2,0") (ifseqformula "26"))
                                                                              (rule "polySimp_addAssoc" (formula "56") (term "2,1,1,0,2,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,2,1,1,0,2,0"))
                                                                              (rule "add_literals" (formula "56") (term "1,1,0,2,1,1,0,2,0"))
                                                                              (rule "times_zero_1" (formula "56") (term "1,0,2,1,1,0,2,0"))
                                                                              (rule "add_literals" (formula "56") (term "0,2,1,1,0,2,0"))
                                                                              (rule "applyEq" (formula "57") (term "1,2,1,1,0,0") (ifseqformula "26"))
                                                                              (rule "polySimp_addAssoc" (formula "57") (term "2,1,1,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,2,1,1,0,0"))
                                                                              (rule "add_literals" (formula "57") (term "1,1,0,2,1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "57") (term "1,0,2,1,1,0,0"))
                                                                              (rule "add_literals" (formula "57") (term "0,2,1,1,0,0"))
                                                                              (rule "applyEq" (formula "57") (term "1,3,0") (ifseqformula "26"))
                                                                              (rule "polySimp_addAssoc" (formula "57") (term "3,0"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "57") (term "0,3,0"))
                                                                              (rule "add_literals" (formula "57") (term "1,0,3,0"))
                                                                              (rule "times_zero_1" (formula "57") (term "0,3,0"))
                                                                              (rule "add_zero_left" (formula "57") (term "3,0"))
                                                                              (rule "applyEq" (formula "56") (term "1,1,0") (ifseqformula "26"))
                                                                              (rule "polySimp_addAssoc" (formula "56") (term "1,0"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "56") (term "0,1,0"))
                                                                              (rule "add_literals" (formula "56") (term "1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "56") (term "0,1,0"))
                                                                              (rule "add_zero_left" (formula "56") (term "1,0"))
                                                                              (rule "applyEq" (formula "64") (term "1,0,0,0") (ifseqformula "26"))
                                                                              (rule "polySimp_addAssoc" (formula "64") (term "0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "64") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "64") (term "1,1,0,0,0,0,0"))
                                                                              (rule "times_zero_1" (formula "64") (term "1,0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "64") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor2b" (formula "64") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "64") (term "1,1,0,0,0"))
                                                                              (rule "times_zero_1" (formula "64") (term "1,0,0,0"))
                                                                              (rule "add_zero_right" (formula "64") (term "0,0,0"))
                                                                              (rule "leq_literals" (formula "64") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "64"))
                                                                              (rule "true_left" (formula "64"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                                                              (rule "polySimp_mulLiterals" (formula "51") (term "1"))
                                                                              (rule "polySimp_elimOne" (formula "51") (term "1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "6"))
                                                                              (rule "andLeft" (formula "5"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                              (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                              (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                              (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                                                                              (rule "add_literals" (formula "5") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "5") (term "1,0"))
                                                                              (rule "add_literals" (formula "5") (term "0"))
                                                                              (rule "leq_literals" (formula "5"))
                                                                              (rule "closeFalse" (formula "5"))
                                                                           )
                                                                           (branch "CUT: num_buckets = 1 + bucket FALSE"
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "inEqSimp_strengthen1" (formula "21") (ifseqformula "69"))
                                                                              (rule "polySimp_addAssoc" (formula "21") (term "1"))
                                                                              (rule "add_literals" (formula "21") (term "0,1"))
                                                                              (rule "inEqSimp_contradEq7" (formula "69") (ifseqformula "21"))
                                                                              (rule "polySimp_rightDist" (formula "69") (term "1,0,0"))
                                                                              (rule "mul_literals" (formula "69") (term "0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "69") (term "0,0"))
                                                                              (rule "polySimp_addComm1" (formula "69") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "69") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0"))
                                                                              (rule "add_literals" (formula "69") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "69") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "69") (term "0,0"))
                                                                              (rule "leq_literals" (formula "69") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "69"))
                                                                              (rule "false_right" (formula "69"))
                                                                              (rule "newSym_eq" (formula "32") (inst "newSymDef=mul(bucket, Z(0(#)))") (inst "l=l_1"))
                                                                              (rule "times_zero_1" (formula "32") (term "1,1"))
                                                                              (rule "add_zero_right" (formula "32") (term "1"))
                                                                              (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                                                              (rule "eqSymm" (formula "33"))
                                                                              (rule "applyEq" (formula "60") (term "0,2,1,1,1,1,0,2,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "68") (term "0,2,1,1,1,1,0,2,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "45") (term "1,1,1,1,1,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "60") (term "0,2,1,0,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "45") (term "1,0,0,0,1,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "61") (term "0,2,1,1,1,1,0,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "52") (term "1,0,2,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "52") (term "0,2,1") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "68") (term "0,2,1,1,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "62") (term "1,0,2,1,1,1,0,0,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "69") (term "1,0,2,1,0,1") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "61") (term "1,0,2,1,3,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "54") (term "1,0,2,1") (ifseqformula "33"))
                                                                              (rule "inEqSimp_commuteGeq" (formula "54"))
                                                                              (rule "applyEq" (formula "45") (term "1,1,1,0,1,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "62") (term "1,0,2,1,2,1,1,0,0,1,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "55") (term "1,0,2,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "20") (term "0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "53") (term "1,0,2,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "60") (term "1,0,2,1,1,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "62") (term "0,2,1,1,1,1,0,1,1,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "68") (term "0,2,1,1,1") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "33"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                              (rule "applyEq" (formula "60") (term "1,0,2,1,2,1,1,0,2,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "66") (term "1,0,2,1,0,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "62") (term "1,0,2,1,2,1,1,0,1,1,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "45") (term "1,0,0,1,1,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "51") (term "0,2,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "49") (term "0,2,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "45") (term "1,0,2,1,0,1,0,1,1,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "65") (term "1,0,2,1,2,1,1,0,2,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "68") (term "1,0,2,1,2,1,1,0,2,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "61") (term "1,0,2,1,2,1,1,0,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "65") (term "0,2,1,1,1,1,0,2,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "69") (term "0,2,1,1,1,1,0,2,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "69") (term "1,0,2,1,0,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "65") (term "0,2,1,1,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "66") (term "0,2,1,1,1,1,0,2,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "50") (term "0,2,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "61") (term "0,2,1,2,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "28") (term "1,1,0,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "56") (term "1,0,2,1") (ifseqformula "33"))
                                                                              (rule "inEqSimp_commuteGeq" (formula "56"))
                                                                              (rule "applyEq" (formula "66") (term "1,0,2,1,2,1,1,0,2,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "62") (term "0,2,1,1,1,1,0,0,1,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "60") (term "0,2,1,0,1") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "62") (term "0,2,1,1,0,0,0,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "60") (term "1,0,2,1,1,1") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "69") (term "1,0,2,1,2,1,1,0,2,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "45") (term "0,2,1,0,1,0,1,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "66") (term "1,0,2,1,0,1") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "45") (term "1,1,0,0,0") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "33"))
                                                                              (rule "applyEq" (formula "65") (term "0,2,1,1,1") (ifseqformula "33"))
                                                                              (rule "applyEqRigid" (formula "31") (term "1") (ifseqformula "32"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                              (rule "mul_literals" (formula "5") (term "0,1"))
                                                                              (rule "elimGcdGeq_antec" (formula "5") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)"))
                                                                              (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,1,0"))
                                                                              (rule "leq_literals" (formula "5") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "5"))
                                                                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                              (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "5") (term "0,0"))
                                                                              (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                              (rule "add_zero_left" (formula "5") (term "0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                              (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "5") (term "0,0"))
                                                                              (rule "leq_literals" (formula "5") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "5"))
                                                                              (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                                                              (rule "leq_literals" (formula "20") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "20"))
                                                                              (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                                                              (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                                                                              (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                                              (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "20") (term "0,0"))
                                                                              (rule "leq_literals" (formula "20") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "20"))
                                                                              (rule "polyDiv_pullOut" (formula "32") (term "0") (inst "polyDivCoeff=l_1"))
                                                                              (rule "equal_literals" (formula "32") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "32") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "32") (term "1,0,0,0"))
                                                                              (rule "times_zero_1" (formula "32") (term "0,0,0"))
                                                                              (rule "div_literals" (formula "32") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "32") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "true_left" (formula "32"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "52"))
                                                                              (rule "polySimp_mulComm0" (formula "51") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "51") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "51"))
                                                                              (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "51") (term "0"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "53"))
                                                                              (rule "polySimp_mulComm0" (formula "51") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "51") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "51"))
                                                                              (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "51") (term "0"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "55"))
                                                                              (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "52") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                                                              (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "49"))
                                                                              (rule "mul_literals" (formula "48") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "48") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "1"))
                                                                              (rule "polySimp_elimOne" (formula "48") (term "1"))
                                                                              (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "46"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "48") (term "0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                                                              (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "48") (term "0,0"))
                                                                              (rule "qeq_literals" (formula "48") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "48"))
                                                                              (rule "true_left" (formula "48"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "56"))
                                                                              (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "52") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                                                              (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "50"))
                                                                              (rule "times_zero_1" (formula "48") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "48") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "1"))
                                                                              (rule "polySimp_elimOne" (formula "48") (term "1"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "51"))
                                                                              (rule "times_zero_1" (formula "48") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "48") (term "0"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "53"))
                                                                              (rule "mul_literals" (formula "49") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "49") (term "0"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "60"))
                                                                              (rule "mul_literals" (formula "48") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "48") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "1"))
                                                                              (rule "polySimp_elimOne" (formula "48") (term "1"))
                                                                              (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "46"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "48") (term "0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                                                              (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "48") (term "0,0"))
                                                                              (rule "qeq_literals" (formula "48") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "48"))
                                                                              (rule "true_left" (formula "48"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "61"))
                                                                              (rule "mul_literals" (formula "49") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "49") (term "0"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "1"))
                                                                              (rule "mul_literals" (formula "49") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "49") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                                              (rule "polySimp_mulLiterals" (formula "49") (term "1"))
                                                                              (rule "polySimp_elimOne" (formula "49") (term "1"))
                                                                              (rule "nnf_notAnd" (formula "29") (term "0,0,1,0"))
                                                                              (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,1,0,0,1,0"))
                                                                              (rule "mul_literals" (formula "29") (term "0,0,1,0,0,1,0,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,1,0,0,1,0"))
                                                                              (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0,1,0"))
                                                                              (rule "add_zero_left" (formula "29") (term "0,0,0,1,0,0,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,0"))
                                                                              (rule "polySimp_mulAssoc" (formula "29") (term "0,1,1,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,1,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "29") (term "0,1,1,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "29") (term "0,1,1,0,0,1,0"))
                                                                              (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,0,0,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,0,1,0"))
                                                                              (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "29") (term "1,0,1,0,0,0,1,0"))
                                                                              (rule "nnf_imp2or" (formula "29") (term "0,1,0,1,0"))
                                                                              (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                                                              (rule "inEqSimp_notGeq" (formula "65") (term "0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "0,1,0,0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "65") (term "0,1,0,0,0"))
                                                                              (rule "mul_literals" (formula "65") (term "0,0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "65") (term "1,0,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "65") (term "1,0,1,0,0,0"))
                                                                              (rule "inEqSimp_notLeq" (formula "65") (term "1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "65") (term "1,0,0,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "65") (term "0,1,0,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "65") (term "0,0,1,0,0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "65") (term "0,0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,1,0,0"))
                                                                              (rule "add_literals" (formula "65") (term "0,0,0,0,1,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "65") (term "0,1,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "65") (term "1,0,1,1,0,0"))
                                                                              (rule "mul_literals" (formula "65") (term "0,0,1,1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "65") (term "1,0,1,1,0,0"))
                                                                              (rule "associativeLawUnion" (formula "64") (term "0,0,1,0,0"))
                                                                              (rule "commute_or" (formula "25") (term "0,0,1,0"))
                                                                              (rule "nnf_notAnd" (formula "29") (term "0,0,1,0,1,0"))
                                                                              (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0,1,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0,1,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,0,0,0,1,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,1,0,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,0,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,0,1,0,1,0"))
                                                                              (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0,1,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "29") (term "1,0,1,0,0,0,1,0,1,0"))
                                                                              (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,1,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                              (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,1,0,1,0"))
                                                                              (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,1,0,1,0"))
                                                                              (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,1,0,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1,0,1,0"))
                                                                              (rule "associativeLawUnion" (formula "42") (term "0,1"))
                                                                              (rule "commute_or" (formula "44") (term "1,1,1,0"))
                                                                              (rule "associativeLawUnion" (formula "63") (term "0,1,0,2,0"))
                                                                              (rule "associativeLawUnion" (formula "68") (term "0,1,0,2,0"))
                                                                              (rule "associativeLawUnion" (formula "72") (term "0,1,0,2,0"))
                                                                              (rule "cnf_rightDist" (formula "44") (term "0,0,1,0"))
                                                                              (rule "commute_or" (formula "44") (term "1,0,1,0"))
                                                                              (rule "associativeLawUnion" (formula "69") (term "0,0,1,0,2,0"))
                                                                              (rule "associativeLawUnion" (formula "71") (term "0,0,1,0,2,0"))
                                                                              (rule "allLeft" (formula "30") (inst "t=i_0"))
                                                                              (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "131"))
                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                                                              (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0"))
                                                                              (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "30") (term "1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "30") (term "0,1,0"))
                                                                              (rule "mul_literals" (formula "30") (term "0,0,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                                                              (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                                                              (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                                                              (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                                                              (rule "polySimp_rightDist" (formula "30") (term "0,1,1"))
                                                                              (rule "mul_literals" (formula "30") (term "0,0,1,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "3"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "30") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0,0"))
                                                                              (rule "mul_literals" (formula "30") (term "0,0,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "30") (term "1,0,1,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                                                              (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                                                              (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                                              (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                                                              (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                                                              (rule "add_literals" (formula "30") (term "0,0,0"))
                                                                              (rule "leq_literals" (formula "30") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "1"))
                                                                              (rule "andLeft" (formula "30"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "30"))
                                                                              (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                                              (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                                                              (rule "add_literals" (formula "30") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "30") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "30") (term "0"))
                                                                              (rule "polySimp_pullOutFactor2b" (formula "30") (term "0"))
                                                                              (rule "add_literals" (formula "30") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "30") (term "1,0"))
                                                                              (rule "add_literals" (formula "30") (term "0"))
                                                                              (rule "leq_literals" (formula "30"))
                                                                              (rule "closeFalse" (formula "30"))
                                                                           )
                                                                        )
                                                                        (branch "Case 2"
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "translateJavaAddInt" (formula "22") (term "2,0"))
                                                                           (rule "translateJavaSubInt" (formula "50") (term "2,0,1,0,0"))
                                                                           (rule "translateJavaAddInt" (formula "22") (term "3,0"))
                                                                           (rule "translateJavaAddInt" (formula "50") (term "2,0"))
                                                                           (rule "translateJavaAddInt" (formula "50") (term "3,0"))
                                                                           (rule "translateJavaMod" (formula "3") (term "0"))
                                                                           (rule "translateJavaSubInt" (formula "44") (term "2,0,1,0,2,0"))
                                                                           (rule "translateJavaAddInt" (formula "44") (term "0,1"))
                                                                           (rule "translateJavaSubInt" (formula "43") (term "2,0,1,0,2,0"))
                                                                           (rule "translateJavaAddInt" (formula "43") (term "1,1"))
                                                                           (rule "translateJavaSubInt" (formula "41") (term "2,0,1,0,2,0"))
                                                                           (rule "translateJavaAddInt" (formula "41") (term "0,1"))
                                                                           (rule "translateJavaSubInt" (formula "40") (term "2,0,1,0,2,0"))
                                                                           (rule "translateJavaAddInt" (formula "40") (term "1,1"))
                                                                           (rule "translateJavaSubInt" (formula "37") (term "2,0,1,0,0"))
                                                                           (rule "translateJavaAddInt" (formula "37") (term "2,0"))
                                                                           (rule "translateJavaAddInt" (formula "36") (term "0,0"))
                                                                           (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,2,0"))
                                                                           (rule "translateJavaAddInt" (formula "36") (term "0,1"))
                                                                           (rule "translateJavaAddInt" (formula "36") (term "1,1"))
                                                                           (rule "translateJavaAddInt" (formula "22") (term "0,2,1,3,0"))
                                                                           (rule "translateJavaSubInt" (formula "50") (term "2,0,1,0,1,2,0"))
                                                                           (rule "translateJavaAddInt" (formula "50") (term "0,2,1,3,0"))
                                                                           (rule "translateJavaSubInt" (formula "50") (term "2,0,1,0,1,3,0"))
                                                                           (rule "translateJavaAddInt" (formula "44") (term "0,2,1,0,1"))
                                                                           (rule "translateJavaAddInt" (formula "41") (term "0,2,1,0,1"))
                                                                           (rule "translateJavaSubInt" (formula "37") (term "2,0,1,0,1,2,0"))
                                                                           (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,1,0,0"))
                                                                           (rule "translateJavaAddInt" (formula "36") (term "0,2,1,1,1"))
                                                                           (rule "notRight" (formula "45"))
                                                                           (rule "close" (formula "49") (ifseqformula "1"))
                                                                        )
                                                                     )
                                                                     (branch "Case 2"
                                                                        (rule "andRight" (formula "45"))
                                                                        (branch "Case 1"
                                                                           (rule "andRight" (formula "45"))
                                                                           (branch "Case 1"
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "closeTrue" (formula "45"))
                                                                           )
                                                                           (branch "Case 2"
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "translateJavaAddInt" (formula "22") (term "2,0"))
                                                                              (rule "translateJavaAddInt" (formula "22") (term "3,0"))
                                                                              (rule "translateJavaSubInt" (formula "44") (term "2,0,1,0,2,0"))
                                                                              (rule "translateJavaAddInt" (formula "44") (term "0,1"))
                                                                              (rule "translateJavaAddInt" (formula "45") (term "1"))
                                                                              (rule "translateJavaSubInt" (formula "43") (term "2,0,1,0,2,0"))
                                                                              (rule "translateJavaAddInt" (formula "43") (term "1,1"))
                                                                              (rule "translateJavaAddInt" (formula "45") (term "0"))
                                                                              (rule "translateJavaMod" (formula "3") (term "0"))
                                                                              (rule "translateJavaSubInt" (formula "41") (term "2,0,1,0,2,0"))
                                                                              (rule "translateJavaSubInt" (formula "50") (term "2,0,1,0,0"))
                                                                              (rule "translateJavaAddInt" (formula "41") (term "0,1"))
                                                                              (rule "translateJavaAddInt" (formula "50") (term "2,0"))
                                                                              (rule "translateJavaAddInt" (formula "50") (term "3,0"))
                                                                              (rule "translateJavaSubInt" (formula "40") (term "2,0,1,0,2,0"))
                                                                              (rule "translateJavaAddInt" (formula "40") (term "1,1"))
                                                                              (rule "translateJavaSubInt" (formula "37") (term "2,0,1,0,0"))
                                                                              (rule "translateJavaAddInt" (formula "37") (term "2,0"))
                                                                              (rule "translateJavaAddInt" (formula "36") (term "0,0"))
                                                                              (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,2,0"))
                                                                              (rule "translateJavaAddInt" (formula "36") (term "0,1"))
                                                                              (rule "translateJavaAddInt" (formula "36") (term "1,1"))
                                                                              (rule "translateJavaAddInt" (formula "22") (term "0,2,1,3,0"))
                                                                              (rule "translateJavaAddInt" (formula "44") (term "0,2,1,0,1"))
                                                                              (rule "translateJavaSubInt" (formula "45") (term "2,0,1,0,1,1"))
                                                                              (rule "translateJavaAddInt" (formula "41") (term "0,2,1,0,1"))
                                                                              (rule "translateJavaSubInt" (formula "50") (term "2,0,1,0,1,2,0"))
                                                                              (rule "translateJavaSubInt" (formula "50") (term "2,0,1,0,1,3,0"))
                                                                              (rule "translateJavaAddInt" (formula "50") (term "0,2,1,3,0"))
                                                                              (rule "translateJavaSubInt" (formula "37") (term "2,0,1,0,1,2,0"))
                                                                              (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,1,0,0"))
                                                                              (rule "translateJavaAddInt" (formula "36") (term "0,2,1,1,1"))
                                                                              (rule "eqSymm" (formula "34") (term "0,1,0"))
                                                                              (rule "polySimp_homoEq" (formula "23") (term "0"))
                                                                              (rule "polySimp_elimSub" (formula "44") (term "2,0,1,0,2,0"))
                                                                              (rule "mul_literals" (formula "44") (term "1,2,0,1,0,2,0"))
                                                                              (rule "polySimp_elimSub" (formula "43") (term "2,0,1,0,2,0"))
                                                                              (rule "mul_literals" (formula "43") (term "1,2,0,1,0,2,0"))
                                                                              (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,2,0"))
                                                                              (rule "mul_literals" (formula "41") (term "1,2,0,1,0,2,0"))
                                                                              (rule "polySimp_elimSub" (formula "50") (term "2,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "50") (term "1,2,0,1,0,0"))
                                                                              (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,2,0"))
                                                                              (rule "mul_literals" (formula "40") (term "1,2,0,1,0,2,0"))
                                                                              (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "37") (term "1,2,0,1,0,0"))
                                                                              (rule "polySimp_elimSub" (formula "36") (term "2,0,1,0,2,0"))
                                                                              (rule "mul_literals" (formula "36") (term "1,2,0,1,0,2,0"))
                                                                              (rule "polySimp_homoEq" (formula "45"))
                                                                              (rule "polySimp_elimSub" (formula "50") (term "2,0,1,0,1,2,0"))
                                                                              (rule "mul_literals" (formula "50") (term "1,2,0,1,0,1,2,0"))
                                                                              (rule "polySimp_elimSub" (formula "50") (term "2,0,1,0,1,3,0"))
                                                                              (rule "mul_literals" (formula "50") (term "1,2,0,1,0,1,3,0"))
                                                                              (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,1,2,0"))
                                                                              (rule "mul_literals" (formula "37") (term "1,2,0,1,0,1,2,0"))
                                                                              (rule "polySimp_elimSub" (formula "36") (term "2,0,1,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "36") (term "1,2,0,1,0,1,0,0"))
                                                                              (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "45") (term "1,2,0,1,0,1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                                                              (rule "polySimp_addComm0" (formula "22") (term "0,2,1,3,0"))
                                                                              (rule "polySimp_addComm0" (formula "44") (term "0,2,1,0,1"))
                                                                              (rule "polySimp_addComm0" (formula "41") (term "0,2,1,0,1"))
                                                                              (rule "polySimp_addComm0" (formula "50") (term "0,2,1,3,0"))
                                                                              (rule "polySimp_addComm0" (formula "36") (term "0,2,1,1,1"))
                                                                              (rule "polySimp_addComm1" (formula "44") (term "2,0,1,0,2,0"))
                                                                              (rule "polySimp_addComm1" (formula "43") (term "2,0,1,0,2,0"))
                                                                              (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,2,0"))
                                                                              (rule "polySimp_addComm1" (formula "50") (term "2,0,1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,2,0"))
                                                                              (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "36") (term "2,0,1,0,2,0"))
                                                                              (rule "polySimp_addComm1" (formula "50") (term "2,0,1,0,1,2,0"))
                                                                              (rule "polySimp_addComm1" (formula "50") (term "2,0,1,0,1,3,0"))
                                                                              (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0,1,2,0"))
                                                                              (rule "polySimp_addComm1" (formula "36") (term "2,0,1,0,1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "45") (term "2,0,1,0,1,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,0,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "43") (term "0,2,0,1,0,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "50") (term "0,2,0,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                                                              (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,2,0"))
                                                                              (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "45") (term "0,1,0"))
                                                                              (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "36") (term "0,2,0,1,0,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "50") (term "0,2,0,1,0,1,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "50") (term "0,2,0,1,0,1,3,0"))
                                                                              (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0,1,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "36") (term "0,2,0,1,0,1,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0,1,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                              (rule "inEqSimp_gtToGeq" (formula "34") (term "0,1,1"))
                                                                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,1"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "16"))
                                                                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1"))
                                                                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,1"))
                                                                              (rule "polySimp_addComm1" (formula "45") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "34") (term "0,0,1,1"))
                                                                              (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                                                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                              (rule "inEqSimp_commuteGeq" (formula "34") (term "0,0,1,1,1"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,1,0,1"))
                                                                              (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "23") (term "0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "45") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "45") (term "1,0,0,0"))
                                                                              (rule "times_zero_1" (formula "45") (term "0,0,0"))
                                                                              (rule "add_zero_left" (formula "45") (term "0,0"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "1"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "14"))
                                                                              (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                                              (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                              (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                                              (rule "replace_known_left" (formula "34") (term "0,1,1") (ifseqformula "1"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                              (rule "jmod_axiom" (formula "23") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1"))
                                                                              (rule "jmod_axiom" (formula "3") (term "0"))
                                                                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                              (rule "polySimp_homoEq" (formula "3"))
                                                                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                              (rule "polySimp_sepNegMonomial" (formula "23") (term "0"))
                                                                              (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                                                                              (rule "polySimp_elimOne" (formula "23") (term "0,0"))
                                                                              (rule "polySimp_sepPosMonomial" (formula "45"))
                                                                              (rule "polySimp_mulLiterals" (formula "45") (term "1"))
                                                                              (rule "polySimp_elimOne" (formula "45") (term "1"))
                                                                              (rule "polySimp_sepNegMonomial" (formula "23") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "23") (term "0,1"))
                                                                              (rule "polySimp_sepPosMonomial" (formula "3"))
                                                                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                              (rule "mul_literals" (formula "3") (term "0,1"))
                                                                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                                                              (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1"))
                                                                              (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "34") (term "0,0,0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                                              (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                                              (rule "inEqSimp_contradEq3" (formula "34") (term "0,1,0") (ifseqformula "1"))
                                                                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "34") (term "1,1,0,0,0,1,0"))
                                                                              (rule "times_zero_1" (formula "34") (term "1,0,0,0,1,0"))
                                                                              (rule "add_zero_right" (formula "34") (term "0,0,0,1,0"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "34") (term "0,0,1") (ifseqformula "1"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0,0,1"))
                                                                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,1"))
                                                                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,1"))
                                                                              (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,1"))
                                                                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,1"))
                                                                              (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,1"))
                                                                              (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,1"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0,1"))
                                                                              (rule "add_literals" (formula "34") (term "1,1,0,0,0,0,1"))
                                                                              (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,1"))
                                                                              (rule "add_zero_right" (formula "34") (term "0,0,0,0,1"))
                                                                              (rule "leq_literals" (formula "34") (term "0,0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "inEqSimp_subsumption1" (formula "34") (term "0,0") (ifseqformula "2"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0"))
                                                                              (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "34") (term "0,0,0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0"))
                                                                              (rule "add_literals" (formula "34") (term "1,1,0,0,0,0"))
                                                                              (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                                                                              (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "pullOutSelect" (formula "50") (term "1,2,0") (inst "selectSK=arr_0"))
                                                                              (rule "applyEq" (formula "46") (term "0") (ifseqformula "1"))
                                                                              (rule "simplifySelectOfAnon" (formula "1"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "9")))
                                                                              (rule "eqSymm" (formula "46"))
                                                                              (rule "polySimp_addComm0" (formula "51") (term "2,0"))
                                                                              (rule "pullOutSelect" (formula "51") (term "1,3,0") (inst "selectSK=arr_1"))
                                                                              (rule "simplifySelectOfAnon" (formula "1"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "10")))
                                                                              (rule "polySimp_addComm0" (formula "52") (term "3,0"))
                                                                              (rule "pullOutSelect" (formula "39") (term "1,2,0") (inst "selectSK=arr_2"))
                                                                              (rule "applyEq" (formula "38") (term "1,0,0") (ifseqformula "39"))
                                                                              (rule "simplifySelectOfAnon" (formula "39"))
                                                                               (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "51")) (ifInst ""  (formula "10")))
                                                                              (rule "polySimp_addComm0" (formula "40") (term "2,0"))
                                                                              (rule "polySimp_addComm0" (formula "38") (term "0,0"))
                                                                              (rule "newSym_eq" (formula "5") (inst "newSymDef=add(Z(neglit(1(#))), mul(b_0, Z(0(#))))") (inst "l=l_0"))
                                                                              (rule "times_zero_1" (formula "5") (term "1,1,1"))
                                                                              (rule "add_zero_right" (formula "5") (term "1,1"))
                                                                              (rule "polySimp_addComm0" (formula "5") (term "1"))
                                                                              (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "5"))
                                                                              (rule "polySimp_mulComm0" (formula "6") (term "0"))
                                                                              (rule "polySimp_rightDist" (formula "6") (term "0"))
                                                                              (rule "mul_literals" (formula "6") (term "0,0"))
                                                                              (rule "polySimp_homoEq" (formula "6"))
                                                                              (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                                              (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                              (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                              (rule "polySimp_sepPosMonomial" (formula "6"))
                                                                              (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                              (rule "mul_literals" (formula "6") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                              (rule "applyEqRigid" (formula "1") (term "1,0,2,1,0") (ifseqformula "6"))
                                                                              (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0"))
                                                                              (rule "add_literals" (formula "1") (term "0,0,2,1,0"))
                                                                              (rule "add_zero_left" (formula "1") (term "0,2,1,0"))
                                                                              (rule "applyEq" (formula "37") (term "0,2,1,0,0,1") (ifseqformula "6"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,1"))
                                                                              (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "6"))
                                                                              (rule "applyEq" (formula "1") (term "1,0,2,2,0") (ifseqformula "6"))
                                                                              (rule "polySimp_addAssoc" (formula "1") (term "0,2,2,0"))
                                                                              (rule "add_literals" (formula "1") (term "0,0,2,2,0"))
                                                                              (rule "add_zero_left" (formula "1") (term "0,2,2,0"))
                                                                              (rule "applyEq" (formula "2") (term "0,2,2,0") (ifseqformula "6"))
                                                                              (rule "applyEq" (formula "37") (term "0,2,1,1,1") (ifseqformula "6"))
                                                                              (rule "inEqSimp_commuteGeq" (formula "37") (term "1,1"))
                                                                              (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "6"))
                                                                              (rule "applyEqRigid" (formula "25") (term "0,2,1,2,0") (ifseqformula "6"))
                                                                              (rule "applyEqRigid" (formula "49") (term "0,2,0") (ifseqformula "6"))
                                                                              (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "6"))
                                                                              (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                                              (rule "add_literals" (formula "4") (term "0,1"))
                                                                              (rule "applyEq" (formula "37") (term "1,0,2,0,1,0,1") (ifseqformula "6"))
                                                                              (rule "polySimp_addAssoc" (formula "37") (term "0,2,0,1,0,1"))
                                                                              (rule "add_literals" (formula "37") (term "0,0,2,0,1,0,1"))
                                                                              (rule "add_zero_left" (formula "37") (term "0,2,0,1,0,1"))
                                                                              (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "6"))
                                                                              (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                                              (rule "add_literals" (formula "3") (term "0,1"))
                                                                              (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "6"))
                                                                              (rule "applyEqRigid" (formula "37") (term "0,0") (ifseqformula "6"))
                                                                              (rule "applyEq" (formula "1") (term "1,0,1,0,0") (ifseqformula "6"))
                                                                              (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                                                                              (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                                                              (rule "add_zero_left" (formula "1") (term "0,1,0,0"))
                                                                              (rule "applyEq" (formula "25") (term "1,0,2,1,3,0") (ifseqformula "6"))
                                                                              (rule "polySimp_addAssoc" (formula "25") (term "0,2,1,3,0"))
                                                                              (rule "add_literals" (formula "25") (term "0,0,2,1,3,0"))
                                                                              (rule "add_zero_left" (formula "25") (term "0,2,1,3,0"))
                                                                              (rule "applyEq" (formula "37") (term "1,0,2,1,1,1") (ifseqformula "6"))
                                                                              (rule "polySimp_addAssoc" (formula "37") (term "0,2,1,1,1"))
                                                                              (rule "add_literals" (formula "37") (term "0,0,2,1,1,1"))
                                                                              (rule "add_zero_left" (formula "37") (term "0,2,1,1,1"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0"))
                                                                              (rule "mul_literals" (formula "37") (term "1,0"))
                                                                              (rule "elimGcdGeq" (formula "37") (term "0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                                                                              (rule "sub_literals" (formula "37") (term "0,0,0,0,0,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                                                                              (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                                                              (rule "mul_literals" (formula "37") (term "0,0,0,0,1,0,0"))
                                                                              (rule "polySimp_addLiterals" (formula "37") (term "0,0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                                                              (rule "add_literals" (formula "37") (term "0,0,0,0,0,0"))
                                                                              (rule "add_zero_left" (formula "37") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,1,0,0"))
                                                                              (rule "add_literals" (formula "37") (term "1,1,0,1,0,0"))
                                                                              (rule "times_zero_1" (formula "37") (term "1,0,1,0,0"))
                                                                              (rule "add_zero_right" (formula "37") (term "0,1,0,0"))
                                                                              (rule "leq_literals" (formula "37") (term "1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "37"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "37") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "37") (term "1,0,0,0"))
                                                                              (rule "times_zero_1" (formula "37") (term "0,0,0"))
                                                                              (rule "qeq_literals" (formula "37") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "37"))
                                                                              (rule "elementOfUnion" (formula "40") (term "0,0"))
                                                                              (rule "disjointAllFields" (formula "40") (term "1,0,0") (ifseqformula "29"))
                                                                               (builtin "One Step Simplification" (formula "40"))
                                                                              (rule "elementOfArrayRangeConcrete" (formula "40") (term "0,0"))
                                                                              (rule "eqSymm" (formula "40") (term "0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "40") (term "0,0,0,0") (ifseqformula "50"))
                                                                               (builtin "One Step Simplification" (formula "40"))
                                                                              (rule "applyEqReverse" (formula "41") (term "0,2,0") (ifseqformula "40"))
                                                                              (rule "applyEqReverse" (formula "39") (term "0,0,0") (ifseqformula "40"))
                                                                              (rule "hideAuxiliaryEq" (formula "40"))
                                                                              (rule "polySimp_addComm0" (formula "40") (term "2,0"))
                                                                              (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                                                                              (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                              (rule "disjointAllFields" (formula "2") (term "1,0,0") (ifseqformula "29"))
                                                                               (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                                              (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "49"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                                                                              (rule "closeFalse" (formula "2"))
                                                                           )
                                                                        )
                                                                        (branch "Case 2"
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "translateJavaAddInt" (formula "22") (term "2,0"))
                                                                           (rule "translateJavaAddInt" (formula "22") (term "3,0"))
                                                                           (rule "translateJavaAddInt" (formula "45") (term "0,2,1,0"))
                                                                           (rule "translateJavaSubInt" (formula "50") (term "2,0,1,0,0"))
                                                                           (rule "translateJavaAddInt" (formula "45") (term "1"))
                                                                           (rule "translateJavaAddInt" (formula "50") (term "2,0"))
                                                                           (rule "translateJavaAddInt" (formula "50") (term "3,0"))
                                                                           (rule "translateJavaSubInt" (formula "44") (term "2,0,1,0,2,0"))
                                                                           (rule "translateJavaAddInt" (formula "44") (term "0,1"))
                                                                           (rule "translateJavaMod" (formula "3") (term "0"))
                                                                           (rule "translateJavaSubInt" (formula "43") (term "2,0,1,0,2,0"))
                                                                           (rule "translateJavaAddInt" (formula "43") (term "1,1"))
                                                                           (rule "translateJavaSubInt" (formula "41") (term "2,0,1,0,2,0"))
                                                                           (rule "translateJavaAddInt" (formula "41") (term "0,1"))
                                                                           (rule "translateJavaSubInt" (formula "40") (term "2,0,1,0,2,0"))
                                                                           (rule "translateJavaAddInt" (formula "40") (term "1,1"))
                                                                           (rule "translateJavaSubInt" (formula "37") (term "2,0,1,0,0"))
                                                                           (rule "translateJavaAddInt" (formula "37") (term "2,0"))
                                                                           (rule "translateJavaAddInt" (formula "36") (term "0,0"))
                                                                           (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,2,0"))
                                                                           (rule "translateJavaAddInt" (formula "36") (term "0,1"))
                                                                           (rule "translateJavaAddInt" (formula "36") (term "1,1"))
                                                                           (rule "translateJavaAddInt" (formula "22") (term "0,2,1,3,0"))
                                                                           (rule "translateJavaAddInt" (formula "45") (term "0"))
                                                                           (rule "translateJavaAddInt" (formula "45") (term "0,2,1,1"))
                                                                           (rule "translateJavaSubInt" (formula "45") (term "2,0,1,0,1,1"))
                                                                           (rule "translateJavaSubInt" (formula "50") (term "2,0,1,0,1,2,0"))
                                                                           (rule "translateJavaSubInt" (formula "50") (term "2,0,1,0,1,3,0"))
                                                                           (rule "translateJavaAddInt" (formula "50") (term "0,2,1,3,0"))
                                                                           (rule "translateJavaAddInt" (formula "44") (term "0,2,1,0,1"))
                                                                           (rule "translateJavaAddInt" (formula "41") (term "0,2,1,0,1"))
                                                                           (rule "translateJavaSubInt" (formula "37") (term "2,0,1,0,1,2,0"))
                                                                           (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,1,0,0"))
                                                                           (rule "translateJavaAddInt" (formula "36") (term "0,2,1,1,1"))
                                                                           (rule "eqSymm" (formula "34") (term "0,1,0"))
                                                                           (rule "polySimp_homoEq" (formula "23") (term "0"))
                                                                           (rule "polySimp_elimSub" (formula "50") (term "2,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "50") (term "1,2,0,1,0,0"))
                                                                           (rule "polySimp_elimSub" (formula "44") (term "2,0,1,0,2,0"))
                                                                           (rule "mul_literals" (formula "44") (term "1,2,0,1,0,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "43") (term "2,0,1,0,2,0"))
                                                                           (rule "mul_literals" (formula "43") (term "1,2,0,1,0,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,2,0"))
                                                                           (rule "mul_literals" (formula "41") (term "1,2,0,1,0,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "40") (term "2,0,1,0,2,0"))
                                                                           (rule "mul_literals" (formula "40") (term "1,2,0,1,0,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "37") (term "1,2,0,1,0,0"))
                                                                           (rule "polySimp_elimSub" (formula "36") (term "2,0,1,0,2,0"))
                                                                           (rule "mul_literals" (formula "36") (term "1,2,0,1,0,2,0"))
                                                                           (rule "polySimp_homoEq" (formula "45"))
                                                                           (rule "polySimp_elimSub" (formula "50") (term "2,0,1,0,1,2,0"))
                                                                           (rule "mul_literals" (formula "50") (term "1,2,0,1,0,1,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "50") (term "2,0,1,0,1,3,0"))
                                                                           (rule "mul_literals" (formula "50") (term "1,2,0,1,0,1,3,0"))
                                                                           (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,1,2,0"))
                                                                           (rule "mul_literals" (formula "37") (term "1,2,0,1,0,1,2,0"))
                                                                           (rule "polySimp_elimSub" (formula "36") (term "2,0,1,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "36") (term "1,2,0,1,0,1,0,0"))
                                                                           (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "45") (term "1,2,0,1,0,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                                                           (rule "polySimp_addComm0" (formula "22") (term "0,2,1,3,0"))
                                                                           (rule "polySimp_addComm0" (formula "50") (term "0,2,1,3,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "0,2,1,0,1"))
                                                                           (rule "polySimp_addComm0" (formula "41") (term "0,2,1,0,1"))
                                                                           (rule "polySimp_addComm0" (formula "36") (term "0,2,1,1,1"))
                                                                           (rule "polySimp_addComm1" (formula "50") (term "2,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "43") (term "2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "40") (term "2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "36") (term "2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "45") (term "0,2,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "50") (term "2,0,1,0,1,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "50") (term "2,0,1,0,1,3,0"))
                                                                           (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0,1,2,0"))
                                                                           (rule "polySimp_addComm1" (formula "36") (term "2,0,1,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "45") (term "2,0,1,0,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "45") (term "0,2,1,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "50") (term "0,2,0,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "43") (term "0,2,0,1,0,2,0"))
                                                                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "36") (term "0,2,0,1,0,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "50") (term "0,2,0,1,0,1,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "50") (term "0,2,0,1,0,1,3,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "16"))
                                                                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,1"))
                                                                           (rule "inEqSimp_gtToGeq" (formula "34") (term "0,1,1"))
                                                                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,1"))
                                                                           (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0,1,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "36") (term "0,2,0,1,0,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "45") (term "0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "34") (term "0,0,1,1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "45") (term "0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,1,0,1"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "34") (term "0,0,1,1,1"))
                                                                           (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "23") (term "0,0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "1"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "14"))
                                                                           (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "45") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "45") (term "1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "45") (term "0,0,0"))
                                                                           (rule "add_zero_left" (formula "45") (term "0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                                           (rule "replace_known_left" (formula "34") (term "0,1,1") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                           (rule "jmod_axiom" (formula "23") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1"))
                                                                           (rule "jmod_axiom" (formula "3") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_homoEq" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "23") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                                                                           (rule "polySimp_elimOne" (formula "23") (term "0,0"))
                                                                           (rule "polySimp_sepPosMonomial" (formula "45"))
                                                                           (rule "polySimp_mulLiterals" (formula "45") (term "1"))
                                                                           (rule "polySimp_elimOne" (formula "45") (term "1"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "23") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "0,1"))
                                                                           (rule "polySimp_sepPosMonomial" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1"))
                                                                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                                                           (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "34") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1"))
                                                                           (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                                           (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                                           (rule "inEqSimp_contradEq3" (formula "34") (term "0,1,0") (ifseqformula "1"))
                                                                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "34") (term "1,1,0,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "34") (term "1,0,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "34") (term "0,0,0,1,0"))
                                                                           (rule "qeq_literals" (formula "34") (term "0,0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "34") (term "0,0,1") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0,0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,1"))
                                                                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,1"))
                                                                           (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,1"))
                                                                           (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0,1"))
                                                                           (rule "add_literals" (formula "34") (term "1,1,0,0,0,0,1"))
                                                                           (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,1"))
                                                                           (rule "add_zero_right" (formula "34") (term "0,0,0,0,1"))
                                                                           (rule "leq_literals" (formula "34") (term "0,0,0,1"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "inEqSimp_subsumption1" (formula "34") (term "0,0") (ifseqformula "2"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "34") (term "0,0,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "34") (term "1,1,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                                                                           (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "pullOutSelect" (formula "50") (term "1,2,0") (inst "selectSK=arr_0"))
                                                                           (rule "simplifySelectOfAnon" (formula "1"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "9")))
                                                                           (rule "polySimp_addComm0" (formula "51") (term "2,0"))
                                                                           (rule "pullOutSelect" (formula "51") (term "1,3,0") (inst "selectSK=arr_1"))
                                                                           (rule "applyEq" (formula "47") (term "0") (ifseqformula "1"))
                                                                           (rule "simplifySelectOfAnon" (formula "1"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "10")))
                                                                           (rule "eqSymm" (formula "47"))
                                                                           (rule "polySimp_addComm0" (formula "52") (term "3,0"))
                                                                           (rule "pullOutSelect" (formula "39") (term "1,2,0") (inst "selectSK=arr_2"))
                                                                           (rule "applyEq" (formula "38") (term "1,0,0") (ifseqformula "39"))
                                                                           (rule "simplifySelectOfAnon" (formula "39"))
                                                                            (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "51")) (ifInst ""  (formula "10")))
                                                                           (rule "polySimp_addComm0" (formula "40") (term "2,0"))
                                                                           (rule "polySimp_addComm0" (formula "38") (term "0,0"))
                                                                           (rule "newSym_eq" (formula "5") (inst "newSymDef=add(Z(neglit(1(#))), mul(b_0, Z(0(#))))") (inst "l=l_0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,1,1"))
                                                                           (rule "add_zero_right" (formula "5") (term "1,1"))
                                                                           (rule "polySimp_addComm0" (formula "5") (term "1"))
                                                                           (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "0"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "0"))
                                                                           (rule "mul_literals" (formula "6") (term "0,0"))
                                                                           (rule "polySimp_homoEq" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                           (rule "polySimp_sepPosMonomial" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "applyEq" (formula "25") (term "1,0,2,1,3,0") (ifseqformula "6"))
                                                                           (rule "polySimp_addAssoc" (formula "25") (term "0,2,1,3,0"))
                                                                           (rule "add_literals" (formula "25") (term "0,0,2,1,3,0"))
                                                                           (rule "add_zero_left" (formula "25") (term "0,2,1,3,0"))
                                                                           (rule "applyEqRigid" (formula "25") (term "0,2,1,2,0") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "1") (term "1,0,1,0,0") (ifseqformula "6"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                                                           (rule "add_zero_left" (formula "1") (term "0,1,0,0"))
                                                                           (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "1") (term "1,0,2,2,0") (ifseqformula "6"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,2,2,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,2,2,0"))
                                                                           (rule "add_zero_left" (formula "1") (term "0,2,2,0"))
                                                                           (rule "applyEqRigid" (formula "37") (term "1,0,2,0,1,0,1") (ifseqformula "6"))
                                                                           (rule "polySimp_addAssoc" (formula "37") (term "0,2,0,1,0,1"))
                                                                           (rule "add_literals" (formula "37") (term "0,0,2,0,1,0,1"))
                                                                           (rule "add_zero_left" (formula "37") (term "0,2,0,1,0,1"))
                                                                           (rule "applyEq" (formula "49") (term "1,0,2,0") (ifseqformula "6"))
                                                                           (rule "polySimp_addAssoc" (formula "49") (term "0,2,0"))
                                                                           (rule "add_literals" (formula "49") (term "0,0,2,0"))
                                                                           (rule "add_zero_left" (formula "49") (term "0,2,0"))
                                                                           (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "2") (term "0,2,2,0") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "6"))
                                                                           (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                                           (rule "add_literals" (formula "4") (term "0,1"))
                                                                           (rule "applyEq" (formula "37") (term "0,2,1,0,0,1") (ifseqformula "6"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,1"))
                                                                           (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "6"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                                           (rule "add_literals" (formula "3") (term "0,1"))
                                                                           (rule "applyEq" (formula "37") (term "1,0,2,0,1,1") (ifseqformula "6"))
                                                                           (rule "polySimp_addAssoc" (formula "37") (term "0,2,0,1,1"))
                                                                           (rule "add_literals" (formula "37") (term "0,0,2,0,1,1"))
                                                                           (rule "add_zero_left" (formula "37") (term "0,2,0,1,1"))
                                                                           (rule "applyEq" (formula "37") (term "0,2,1,1,1") (ifseqformula "6"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "37") (term "1,1"))
                                                                           (rule "applyEqRigid" (formula "1") (term "1,0,2,1,0") (ifseqformula "6"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,2,1,0"))
                                                                           (rule "add_zero_left" (formula "1") (term "0,2,1,0"))
                                                                           (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "6"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0"))
                                                                           (rule "mul_literals" (formula "37") (term "1,0"))
                                                                           (rule "elimGcdGeq" (formula "37") (term "0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                                                                           (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0,1,0,0"))
                                                                           (rule "sub_literals" (formula "37") (term "0,0,0,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "37") (term "0,0,0,0,1,0,0"))
                                                                           (rule "polySimp_addLiterals" (formula "37") (term "0,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                                                           (rule "add_literals" (formula "37") (term "0,0,0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "37") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,1,0,0"))
                                                                           (rule "add_literals" (formula "37") (term "1,1,0,1,0,0"))
                                                                           (rule "times_zero_1" (formula "37") (term "1,0,1,0,0"))
                                                                           (rule "add_zero_right" (formula "37") (term "0,1,0,0"))
                                                                           (rule "leq_literals" (formula "37") (term "1,0,0"))
                                                                            (builtin "One Step Simplification" (formula "37"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "37") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "37") (term "1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "37") (term "0,0,0"))
                                                                           (rule "qeq_literals" (formula "37") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "37"))
                                                                           (rule "elementOfUnion" (formula "40") (term "0,0"))
                                                                           (rule "disjointAllFields" (formula "40") (term "1,0,0") (ifseqformula "29"))
                                                                            (builtin "One Step Simplification" (formula "40"))
                                                                           (rule "elementOfArrayRangeConcrete" (formula "40") (term "0,0"))
                                                                           (rule "eqSymm" (formula "40") (term "0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "40") (term "0,0,0,0") (ifseqformula "50"))
                                                                            (builtin "One Step Simplification" (formula "40"))
                                                                           (rule "applyEqReverse" (formula "41") (term "0,2,0") (ifseqformula "40"))
                                                                           (rule "applyEqReverse" (formula "39") (term "0,0,0") (ifseqformula "40"))
                                                                           (rule "hideAuxiliaryEq" (formula "40"))
                                                                           (rule "polySimp_addComm0" (formula "40") (term "2,0"))
                                                                           (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                                                                           (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                           (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "29"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                           (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "49"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "Case 2"
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "translateJavaSubInt" (formula "50") (term "2,0,1,0,0"))
                                                                     (rule "translateJavaAddInt" (formula "50") (term "2,0"))
                                                                     (rule "translateJavaAddInt" (formula "22") (term "2,0"))
                                                                     (rule "translateJavaAddInt" (formula "22") (term "3,0"))
                                                                     (rule "translateJavaAddInt" (formula "50") (term "3,0"))
                                                                     (rule "translateJavaAddInt" (formula "45") (term "1,2,0,0,0"))
                                                                     (rule "translateJavaSubInt" (formula "45") (term "2,2,0,0,0"))
                                                                     (rule "translateJavaSubInt" (formula "45") (term "2,0,1,0,0,1,0,0"))
                                                                     (rule "translateJavaSubInt" (formula "44") (term "2,0,1,0,2,0"))
                                                                     (rule "translateJavaMod" (formula "3") (term "0"))
                                                                     (rule "translateJavaAddInt" (formula "44") (term "0,1"))
                                                                     (rule "translateJavaSubInt" (formula "43") (term "2,0,1,0,2,0"))
                                                                     (rule "translateJavaAddInt" (formula "43") (term "1,1"))
                                                                     (rule "translateJavaSubInt" (formula "41") (term "2,0,1,0,2,0"))
                                                                     (rule "translateJavaAddInt" (formula "41") (term "0,1"))
                                                                     (rule "translateJavaSubInt" (formula "40") (term "2,0,1,0,2,0"))
                                                                     (rule "translateJavaAddInt" (formula "40") (term "1,1"))
                                                                     (rule "translateJavaSubInt" (formula "37") (term "2,0,1,0,0"))
                                                                     (rule "translateJavaAddInt" (formula "37") (term "2,0"))
                                                                     (rule "translateJavaAddInt" (formula "36") (term "0,0"))
                                                                     (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,2,0"))
                                                                     (rule "translateJavaAddInt" (formula "36") (term "0,1"))
                                                                     (rule "translateJavaAddInt" (formula "36") (term "1,1"))
                                                                     (rule "translateJavaSubInt" (formula "50") (term "2,0,1,0,1,2,0"))
                                                                     (rule "translateJavaAddInt" (formula "22") (term "0,2,1,3,0"))
                                                                     (rule "translateJavaAddInt" (formula "50") (term "0,2,1,3,0"))
                                                                     (rule "translateJavaSubInt" (formula "50") (term "2,0,1,0,1,3,0"))
                                                                     (rule "translateJavaSubInt" (formula "45") (term "2,0,1,0,1,1,2,0,0,0"))
                                                                     (rule "translateJavaSubInt" (formula "45") (term "2,0,1,0,1,0,2,2,0,0,0"))
                                                                     (rule "translateJavaAddInt" (formula "45") (term "0,2,1,0,2,2,0,0,0"))
                                                                     (rule "translateJavaAddInt" (formula "44") (term "0,2,1,0,1"))
                                                                     (rule "translateJavaAddInt" (formula "41") (term "0,2,1,0,1"))
                                                                     (rule "translateJavaSubInt" (formula "37") (term "2,0,1,0,1,2,0"))
                                                                     (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,1,0,0"))
                                                                     (rule "translateJavaAddInt" (formula "36") (term "0,2,1,1,1"))
                                                                     (rule "translateJavaAddInt" (formula "45") (term "0,2,2,0,0,0"))
                                                                     (rule "allRight" (formula "45") (inst "sk=_ov_0"))
                                                                     (rule "allRight" (formula "45") (inst "sk=_fv_0"))
                                                                     (rule "impRight" (formula "45"))
                                                                     (rule "eqSymm" (formula "35") (term "0,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "24") (term "0"))
                                                                     (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "51") (term "1,2,0,1,0,0"))
                                                                     (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "45") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "44") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "44") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "42") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "42") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "41") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "41") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "38") (term "2,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "38") (term "1,2,0,1,0,0"))
                                                                     (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,2,0"))
                                                                     (rule "mul_literals" (formula "37") (term "1,2,0,1,0,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,1,2,0"))
                                                                     (rule "mul_literals" (formula "51") (term "1,2,0,1,0,1,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "51") (term "2,0,1,0,1,3,0"))
                                                                     (rule "mul_literals" (formula "51") (term "1,2,0,1,0,1,3,0"))
                                                                     (rule "polySimp_elimSub" (formula "38") (term "2,0,1,0,1,2,0"))
                                                                     (rule "mul_literals" (formula "38") (term "1,2,0,1,0,1,2,0"))
                                                                     (rule "polySimp_elimSub" (formula "37") (term "2,0,1,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "37") (term "1,2,0,1,0,1,0,0"))
                                                                     (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,1,1,2"))
                                                                     (rule "mul_literals" (formula "1") (term "1,2,0,1,0,1,1,2"))
                                                                     (rule "polySimp_elimSub" (formula "46") (term "2,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "46") (term "1,2,0,1,0,0"))
                                                                     (rule "polySimp_elimSub" (formula "1") (term "2,2"))
                                                                     (rule "mul_literals" (formula "1") (term "1,2,2"))
                                                                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                                     (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,1,0,2,2"))
                                                                     (rule "mul_literals" (formula "1") (term "1,2,0,1,0,1,0,2,2"))
                                                                     (rule "polySimp_addComm0" (formula "23") (term "0,2,1,3,0"))
                                                                     (rule "polySimp_addComm0" (formula "51") (term "0,2,1,3,0"))
                                                                     (rule "polySimp_addComm0" (formula "45") (term "0,2,1,0,1"))
                                                                     (rule "polySimp_addComm0" (formula "42") (term "0,2,1,0,1"))
                                                                     (rule "polySimp_addComm0" (formula "37") (term "0,2,1,1,1"))
                                                                     (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "45") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "44") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "42") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "41") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "38") (term "2,0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,1,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "51") (term "2,0,1,0,1,3,0"))
                                                                     (rule "polySimp_addComm1" (formula "38") (term "2,0,1,0,1,2,0"))
                                                                     (rule "polySimp_addComm1" (formula "37") (term "2,0,1,0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,1,1,2"))
                                                                     (rule "polySimp_addComm1" (formula "46") (term "2,0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0,2,1,0,2,2"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "2,0,1,0,1,0,2,2"))
                                                                     (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "17"))
                                                                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0,2,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,1"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "35") (term "0,1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,1"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "38") (term "0,2,0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,1,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0,1,3,0"))
                                                                     (rule "polySimp_addComm0" (formula "38") (term "0,2,0,1,0,1,2,0"))
                                                                     (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,1,1,2"))
                                                                     (rule "polySimp_addComm0" (formula "46") (term "0,2,0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0,1,0,2,2"))
                                                                     (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "35") (term "0,0,1,1"))
                                                                     (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "2,2"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "35") (term "0,0,1,1,1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,1,0,1"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0,2,2"))
                                                                     (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "24") (term "0,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "15"))
                                                                     (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                     (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                                     (rule "replace_known_left" (formula "35") (term "0,1,1") (ifseqformula "2"))
                                                                      (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                                     (rule "jmod_axiom" (formula "24") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1"))
                                                                     (rule "jmod_axiom" (formula "4") (term "0"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                     (rule "polySimp_homoEq" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "24") (term "0"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "0,0"))
                                                                     (rule "polySimp_elimOne" (formula "24") (term "0,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "24") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "0,1"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                     (rule "mul_literals" (formula "4") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                                                     (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "0,0,0,1"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                                     (rule "inEqSimp_contradEq3" (formula "35") (term "0,1,0") (ifseqformula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,1,0"))
                                                                     (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "35") (term "0,0,0,1,0"))
                                                                     (rule "qeq_literals" (formula "35") (term "0,0,1,0"))
                                                                      (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "35") (term "0,0,1") (ifseqformula "2"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0,0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,1"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,1"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0,1"))
                                                                     (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,1"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,1"))
                                                                     (rule "add_zero_right" (formula "35") (term "0,0,0,0,1"))
                                                                     (rule "leq_literals" (formula "35") (term "0,0,0,1"))
                                                                      (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "inEqSimp_subsumption1" (formula "35") (term "0,0") (ifseqformula "3"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "35") (term "1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "35") (term "0,0,0,0"))
                                                                     (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "elementOfArrayRange" (formula "1") (inst "iv=iv"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "exLeft" (formula "2") (inst "sk=iv_0"))
                                                                     (rule "andLeft" (formula "2"))
                                                                     (rule "andLeft" (formula "2"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                                     (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "1"))
                                                                     (rule "applyEqRigid" (formula "49") (term "2,0") (ifseqformula "2"))
                                                                     (rule "applyEqRigid" (formula "49") (term "2,1") (ifseqformula "2"))
                                                                     (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "49") (term "1") (ifseqformula "9") (ifseqformula "53"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                     (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                     (rule "pullOutSelect" (formula "54") (term "1,2,0") (inst "selectSK=arr_0"))
                                                                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "13")))
                                                                     (rule "polySimp_addComm0" (formula "55") (term "2,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_mulAssoc" (formula "4") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "0,1"))
                                                                     (rule "pullOutSelect" (formula "55") (term "1,3,0") (inst "selectSK=arr_1"))
                                                                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "14")))
                                                                     (rule "polySimp_addComm0" (formula "56") (term "3,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                     (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                                     (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "6") (term "1,0,1"))
                                                                     (rule "pullOutSelect" (formula "43") (term "1,2,0") (inst "selectSK=arr_2"))
                                                                     (rule "applyEq" (formula "42") (term "1,0,0") (ifseqformula "43"))
                                                                     (rule "simplifySelectOfAnon" (formula "43"))
                                                                      (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "55")) (ifInst ""  (formula "14")))
                                                                     (rule "polySimp_addComm0" (formula "44") (term "2,0"))
                                                                     (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                                     (rule "newSym_eq" (formula "9") (inst "newSymDef=add(Z(neglit(1(#))), mul(b_0, Z(0(#))))") (inst "l=l_0"))
                                                                     (rule "times_zero_1" (formula "9") (term "1,1,1"))
                                                                     (rule "add_zero_right" (formula "9") (term "1,1"))
                                                                     (rule "polySimp_addComm0" (formula "9") (term "1"))
                                                                     (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "9"))
                                                                     (rule "polySimp_mulComm0" (formula "10") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "0"))
                                                                     (rule "mul_literals" (formula "10") (term "0,0"))
                                                                     (rule "polySimp_homoEq" (formula "10"))
                                                                     (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                                                     (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                     (rule "add_literals" (formula "10") (term "0,0,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "10"))
                                                                     (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                                     (rule "mul_literals" (formula "10") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                                     (rule "applyEqRigid" (formula "1") (term "1,0,1,0,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0,1,0,0"))
                                                                     (rule "applyEqRigid" (formula "41") (term "0,0") (ifseqformula "10"))
                                                                     (rule "applyEqRigid" (formula "7") (term "1,1") (ifseqformula "10"))
                                                                     (rule "polySimp_addAssoc" (formula "7") (term "1"))
                                                                     (rule "add_literals" (formula "7") (term "0,1"))
                                                                     (rule "applyEq" (formula "41") (term "1,0,2,0,1,0,1") (ifseqformula "10"))
                                                                     (rule "polySimp_addAssoc" (formula "41") (term "0,2,0,1,0,1"))
                                                                     (rule "add_literals" (formula "41") (term "0,0,2,0,1,0,1"))
                                                                     (rule "add_zero_left" (formula "41") (term "0,2,0,1,0,1"))
                                                                     (rule "applyEq" (formula "41") (term "1,0,2,0,1,1") (ifseqformula "10"))
                                                                     (rule "polySimp_addAssoc" (formula "41") (term "0,2,0,1,1"))
                                                                     (rule "add_literals" (formula "41") (term "0,0,2,0,1,1"))
                                                                     (rule "add_zero_left" (formula "41") (term "0,2,0,1,1"))
                                                                     (rule "applyEq" (formula "29") (term "0,2,1,2,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "1") (term "1,0,2,2,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,2,2,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,2,2,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0,2,2,0"))
                                                                     (rule "applyEqRigid" (formula "8") (term "1,1") (ifseqformula "10"))
                                                                     (rule "polySimp_addAssoc" (formula "8") (term "1"))
                                                                     (rule "add_literals" (formula "8") (term "0,1"))
                                                                     (rule "applyEq" (formula "29") (term "1,0,2,1,3,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addAssoc" (formula "29") (term "0,2,1,3,0"))
                                                                     (rule "add_literals" (formula "29") (term "0,0,2,1,3,0"))
                                                                     (rule "add_zero_left" (formula "29") (term "0,2,1,3,0"))
                                                                     (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "2") (term "0,2,2,0") (ifseqformula "10"))
                                                                     (rule "applyEqRigid" (formula "2") (term "0,2,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "1") (term "1,0,2,1,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,2,1,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0,2,1,0"))
                                                                     (rule "applyEqRigid" (formula "41") (term "0,2,1,1,1") (ifseqformula "10"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "41") (term "1,1"))
                                                                     (rule "applyEq" (formula "41") (term "0,2,1,0,0,1") (ifseqformula "10"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,1"))
                                                                     (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "10"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0"))
                                                                     (rule "mul_literals" (formula "41") (term "1,0"))
                                                                     (rule "elimGcdGeq" (formula "41") (term "0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                                                                     (rule "sub_literals" (formula "41") (term "0,0,0,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "41") (term "0,0,0,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                                                                     (rule "polySimp_addLiterals" (formula "41") (term "0,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                                                                     (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,1,0,0"))
                                                                     (rule "add_literals" (formula "41") (term "1,1,0,1,0,0"))
                                                                     (rule "times_zero_1" (formula "41") (term "1,0,1,0,0"))
                                                                     (rule "add_zero_right" (formula "41") (term "0,1,0,0"))
                                                                     (rule "leq_literals" (formula "41") (term "1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "41"))
                                                                     (rule "polySimp_pullOutFactor0" (formula "41") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "41") (term "1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "41") (term "0,0,0"))
                                                                     (rule "qeq_literals" (formula "41") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "41"))
                                                                     (rule "elementOfUnion" (formula "44") (term "0,0"))
                                                                     (rule "disjointAllFields" (formula "44") (term "1,0,0") (ifseqformula "33"))
                                                                      (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "44") (term "0,0"))
                                                                     (rule "eqSymm" (formula "44") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "44") (term "0,0,0,0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "applyEqReverse" (formula "45") (term "0,2,0") (ifseqformula "44"))
                                                                     (rule "applyEqReverse" (formula "43") (term "0,0,0") (ifseqformula "44"))
                                                                     (rule "hideAuxiliaryEq" (formula "44"))
                                                                     (rule "polySimp_addComm0" (formula "44") (term "2,0"))
                                                                     (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                     (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "33"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "53"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "57") (term "0,3,0") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "6") (term "1,0,1") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "polySimp_addComm0" (formula "56") (term "3,0"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                                     (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "39"))
                                                                     (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "38") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                                     (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                     (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=arr_3"))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "13")))
                                                                     (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "12") (ifseqformula "57"))
                                                                     (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "46") (ifseqformula "57"))
                                                                     (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                     (rule "disjointAllFields" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                                     (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "5") (term "0,1") (ifseqformula "2"))
                                                                     (rule "applyEqReverse" (formula "58") (term "0,2,0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "polySimp_addComm0" (formula "4") (term "1"))
                                                                     (rule "polySimp_addComm0" (formula "57") (term "2,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                     (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "31"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "6"))
                                                                     (rule "times_zero_1" (formula "21") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "21") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                                     (rule "mul_literals" (formula "21") (term "1"))
                                                                     (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                                                                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,1,0"))
                                                                     (rule "leq_literals" (formula "21") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                                     (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                     (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "21") (term "0,0"))
                                                                     (rule "leq_literals" (formula "21") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "21"))
                                                                      (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "andLeft" (formula "42"))
                                                                     (rule "andLeft" (formula "42"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "39"))
                                                                     (rule "mul_literals" (formula "38") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "38") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                                     (rule "polySimp_mulLiterals" (formula "38") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "38") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "43"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "45"))
                                                                     (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "43") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "44") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                                     (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "1") (term "1,0,0") (ifseqformula "44"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                                     (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0,1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                                     (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                                                     (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "58"))
                                                                     (rule "closeTrue" (formula "58"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                          (builtin "One Step Simplification" (formula "44"))
                                                          (builtin "Use Dependency Contract" (formula "44") (ifInst ""  (formula "22")) (contract "de.wiesler.Storage[java.lang.Object::<inv>()].JML accessible clause.0") (userinteraction))
                                                         (rule "wellFormedAnon" (formula "40") (term "1,1,0,0,0"))
                                                         (rule "translateJavaAddInt" (formula "31") (term "0,0"))
                                                         (rule "translateJavaSubInt" (formula "45") (term "2,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "38") (term "1,1"))
                                                         (rule "translateJavaSubInt" (formula "31") (term "2,0,1,0,2,0"))
                                                         (rule "translateJavaAddInt" (formula "36") (term "0,2,1,0,1"))
                                                         (rule "translateJavaSubInt" (formula "40") (term "2,0,0,1,0"))
                                                         (rule "translateJavaSubInt" (formula "40") (term "2,0,1,0,0,1"))
                                                         (rule "translateJavaAddInt" (formula "31") (term "0,1"))
                                                         (rule "translateJavaAddInt" (formula "31") (term "1,1"))
                                                         (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "32") (term "2,0"))
                                                         (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,2,0"))
                                                         (rule "translateJavaAddInt" (formula "35") (term "1,1"))
                                                         (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,2,0"))
                                                         (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,2,0"))
                                                         (rule "translateJavaSubInt" (formula "39") (term "2,0,1,0,2,0"))
                                                         (rule "translateJavaAddInt" (formula "39") (term "0,1"))
                                                         (rule "translateJavaSubInt" (formula "31") (term "2,0,1,0,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "36") (term "0,1"))
                                                         (rule "translateJavaAddInt" (formula "31") (term "0,2,1,1,1"))
                                                         (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,1,2,0"))
                                                         (rule "translateJavaAddInt" (formula "39") (term "0,2,1,0,1"))
                                                         (rule "replace_known_left" (formula "40") (term "1,1") (ifseqformula "22"))
                                                          (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "42")) (ifInst ""  (formula "3")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "33")) (ifInst ""  (formula "22")) (ifInst ""  (formula "45")))
                                                         (rule "notLeft" (formula "40"))
                                                         (rule "polySimp_homoEq" (formula "18") (term "0,1,1"))
                                                         (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,2,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "31") (term "2,0,1,0,2,0"))
                                                         (rule "mul_literals" (formula "31") (term "1,2,0,1,0,2,0"))
                                                         (rule "polySimp_elimSub" (formula "32") (term "2,0,1,0,0"))
                                                         (rule "mul_literals" (formula "32") (term "1,2,0,1,0,0"))
                                                         (rule "polySimp_elimSub" (formula "35") (term "2,0,1,0,2,0"))
                                                         (rule "mul_literals" (formula "35") (term "1,2,0,1,0,2,0"))
                                                         (rule "polySimp_elimSub" (formula "36") (term "2,0,1,0,2,0"))
                                                         (rule "mul_literals" (formula "36") (term "1,2,0,1,0,2,0"))
                                                         (rule "polySimp_elimSub" (formula "38") (term "2,0,1,0,2,0"))
                                                         (rule "mul_literals" (formula "38") (term "1,2,0,1,0,2,0"))
                                                         (rule "polySimp_elimSub" (formula "39") (term "2,0,1,0,2,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,2,0,1,0,2,0"))
                                                         (rule "polySimp_elimSub" (formula "31") (term "2,0,1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "1,2,0,1,0,1,0,0"))
                                                         (rule "polySimp_elimSub" (formula "32") (term "2,0,1,0,1,2,0"))
                                                         (rule "mul_literals" (formula "32") (term "1,2,0,1,0,1,2,0"))
                                                         (rule "polySimp_elimSub" (formula "40") (term "2,0,0"))
                                                         (rule "mul_literals" (formula "40") (term "1,2,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
                                                         (rule "polySimp_addComm0" (formula "36") (term "0,2,1,0,1"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "0,2,1,1,1"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "0,2,1,0,1"))
                                                         (rule "polySimp_addComm1" (formula "45") (term "2,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "31") (term "2,0,1,0,2,0"))
                                                         (rule "polySimp_addComm1" (formula "32") (term "2,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "35") (term "2,0,1,0,2,0"))
                                                         (rule "polySimp_addComm1" (formula "36") (term "2,0,1,0,2,0"))
                                                         (rule "polySimp_addComm1" (formula "38") (term "2,0,1,0,2,0"))
                                                         (rule "polySimp_addComm1" (formula "39") (term "2,0,1,0,2,0"))
                                                         (rule "polySimp_addComm1" (formula "31") (term "2,0,1,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "32") (term "2,0,1,0,1,2,0"))
                                                         (rule "polySimp_addComm1" (formula "40") (term "2,0,0"))
                                                         (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "0,2,0,1,0,2,0"))
                                                         (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "35") (term "0,2,0,1,0,2,0"))
                                                         (rule "polySimp_addComm0" (formula "36") (term "0,2,0,1,0,2,0"))
                                                         (rule "polySimp_addComm0" (formula "38") (term "0,2,0,1,0,2,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,1"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,0,0,1,1"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "0,2,0,1,0,2,0"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "0,2,0,1,0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,0,1,2,0"))
                                                         (rule "polySimp_addComm0" (formula "40") (term "0,2,0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "29") (term "0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "12"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1"))
                                                         (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,1"))
                                                         (rule "disjointDefinition" (formula "40"))
                                                         (rule "inEqSimp_homoInEq0" (formula "10"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                         (rule "jmod_axiom" (formula "18") (term "0,1,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,1,1"))
                                                         (rule "polySimp_sepNegMonomial" (formula "18") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1"))
                                                         (rule "polySimp_sepNegMonomial" (formula "18") (term "1,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "0,1,1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,1,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                         (rule "distributeIntersection_2" (formula "40") (term "0"))
                                                         (rule "unionEqualsEmpty" (formula "40"))
                                                         (rule "disjointArrayRangeAllFields2" (formula "40") (term "0"))
                                                         (rule "eqSymm" (formula "40") (term "0,0,0"))
                                                         (rule "sortsDisjointModuloNull" (formula "40") (term "0,0,0"))
                                                         (rule "replace_known_right" (formula "40") (term "1,0,0,0") (ifseqformula "44"))
                                                          (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "42")))
                                                         (rule "pullOutSelect" (formula "31") (term "1,0,0") (inst "selectSK=arr_0"))
                                                         (rule "applyEq" (formula "33") (term "1,2,0") (ifseqformula "31"))
                                                         (rule "simplifySelectOfAnon" (formula "31"))
                                                          (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "44")) (ifInst ""  (formula "4")))
                                                         (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "33") (term "2,0"))
                                                         (rule "elementOfUnion" (formula "31") (term "0,0"))
                                                         (rule "disjointAllFields" (formula "31") (term "1,0,0") (ifseqformula "21"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "31") (term "0,0"))
                                                         (rule "eqSymm" (formula "31") (term "0,0,0,0"))
                                                         (rule "replace_known_right" (formula "31") (term "0,0,0,0") (ifseqformula "42"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "31"))
                                                         (rule "applyEqReverse" (formula "33") (term "0,2,0") (ifseqformula "31"))
                                                         (rule "hideAuxiliaryEq" (formula "31"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "32") (term "2,0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "27") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                                         (rule "times_zero_1" (formula "26") (term "0,0"))
                                                         (rule "add_zero_left" (formula "26") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "26") (term "1"))
                                                         (rule "commuteUnion" (formula "46") (term "1,0"))
                                                         (rule "commuteUnion" (formula "32") (term "1,0,2,0"))
                                                         (rule "commuteUnion" (formula "33") (term "1,0,0"))
                                                         (rule "commuteUnion" (formula "36") (term "1,0,2,0"))
                                                         (rule "commuteUnion" (formula "37") (term "1,0,2,0"))
                                                         (rule "commuteUnion" (formula "39") (term "1,0,2,0"))
                                                         (rule "commuteUnion" (formula "40") (term "1,0,2,0"))
                                                         (rule "commuteIntersection" (formula "41") (term "0"))
                                                         (rule "nnf_imp2or" (formula "30") (term "0"))
                                                         (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "nnf_imp2or" (formula "30") (term "0,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "30") (term "0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "30") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "30") (term "1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "30") (term "0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,0,1,1,0"))
                                                         (rule "add_zero_left" (formula "30") (term "0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "30") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "22"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "translateJavaMulInt" (formula "22") (term "1,1,0,0,0,0,1,0,0"))
                                                         (rule "translateJavaMulInt" (formula "22") (term "1,1,0,0,0,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "1,1,0,0,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "1,1,0,0,0,0,0,1,0,0"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "andLeft" (formula "23"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "notLeft" (formula "23"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "andLeft" (formula "28"))
                                                         (rule "notLeft" (formula "23"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "andLeft" (formula "29"))
                                                         (rule "notLeft" (formula "23"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "andLeft" (formula "30"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "notLeft" (formula "24"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "notLeft" (formula "24"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "andLeft" (formula "32"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "notLeft" (formula "24"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "notLeft" (formula "22"))
                                                         (rule "notLeft" (formula "22"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "disjointDefinition" (formula "58"))
                                                          (builtin "One Step Simplification" (formula "58"))
                                                         (rule "notLeft" (formula "58"))
                                                         (rule "disjointDefinition" (formula "57"))
                                                          (builtin "One Step Simplification" (formula "57"))
                                                         (rule "notLeft" (formula "57"))
                                                         (rule "disjointDefinition" (formula "56"))
                                                          (builtin "One Step Simplification" (formula "56"))
                                                         (rule "notLeft" (formula "56"))
                                                         (rule "eqSymm" (formula "74"))
                                                         (rule "disjointDefinition" (formula "55"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "notLeft" (formula "55"))
                                                         (rule "eqSymm" (formula "73"))
                                                         (rule "disjointDefinition" (formula "54"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "notLeft" (formula "54"))
                                                         (rule "eqSymm" (formula "72"))
                                                         (rule "disjointDefinition" (formula "53"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "notLeft" (formula "53"))
                                                         (rule "eqSymm" (formula "71"))
                                                         (rule "disjointDefinition" (formula "52"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "notLeft" (formula "52"))
                                                         (rule "eqSymm" (formula "70"))
                                                         (rule "disjointDefinition" (formula "51"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "notLeft" (formula "51"))
                                                         (rule "eqSymm" (formula "69"))
                                                         (rule "disjointDefinition" (formula "50"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "notLeft" (formula "50"))
                                                         (rule "eqSymm" (formula "68"))
                                                         (rule "disjointDefinition" (formula "49"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "notLeft" (formula "49"))
                                                         (rule "eqSymm" (formula "67"))
                                                         (rule "disjointDefinition" (formula "48"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "notLeft" (formula "48"))
                                                         (rule "eqSymm" (formula "66"))
                                                         (rule "disjointDefinition" (formula "47"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "notLeft" (formula "47"))
                                                         (rule "eqSymm" (formula "65"))
                                                         (rule "disjointDefinition" (formula "46"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "notLeft" (formula "46"))
                                                         (rule "eqSymm" (formula "64"))
                                                         (rule "disjointDefinition" (formula "45"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "notLeft" (formula "45"))
                                                         (rule "eqSymm" (formula "63"))
                                                         (rule "disjointDefinition" (formula "44"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "notLeft" (formula "44"))
                                                         (rule "eqSymm" (formula "62"))
                                                         (rule "disjointDefinition" (formula "43"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "notLeft" (formula "43"))
                                                         (rule "disjointDefinition" (formula "42"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "notLeft" (formula "42"))
                                                         (rule "eqSymm" (formula "60"))
                                                         (rule "disjointDefinition" (formula "41"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "notLeft" (formula "41"))
                                                         (rule "eqSymm" (formula "59"))
                                                         (rule "disjointDefinition" (formula "40"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "notLeft" (formula "40"))
                                                         (rule "disjointDefinition" (formula "39"))
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "notLeft" (formula "39"))
                                                         (rule "disjointDefinition" (formula "38"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "notLeft" (formula "38"))
                                                         (rule "disjointDefinition" (formula "37"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "notLeft" (formula "37"))
                                                         (rule "disjointDefinition" (formula "36"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "notLeft" (formula "36"))
                                                         (rule "disjointDefinition" (formula "35"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "notLeft" (formula "35"))
                                                         (rule "disjointDefinition" (formula "34"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "notLeft" (formula "34"))
                                                         (rule "disjointDefinition" (formula "33"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "notLeft" (formula "33"))
                                                         (rule "disjointDefinition" (formula "31"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "notLeft" (formula "31"))
                                                         (rule "disjointDefinition" (formula "31"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "notLeft" (formula "31"))
                                                         (rule "applyEq" (formula "47") (term "0,1,0,2,0") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "48") (term "0,1,0,2,0") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,2,0") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "40") (term "0,1,0,2,0") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,2,0") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "90") (term "0,1,0") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "85") (term "1,0") (ifseqformula "30"))
                                                         (rule "distributeIntersection" (formula "21") (term "0"))
                                                         (rule "distributeIntersection" (formula "20") (term "0"))
                                                         (rule "distributeIntersection" (formula "85") (term "0"))
                                                         (rule "distributeIntersection" (formula "21") (term "1,0"))
                                                         (rule "distributeIntersection" (formula "21") (term "0,0"))
                                                         (rule "distributeIntersection" (formula "20") (term "1,0"))
                                                         (rule "distributeIntersection" (formula "20") (term "0,0"))
                                                         (rule "distributeIntersection" (formula "85") (term "0,0"))
                                                         (rule "distributeIntersection" (formula "85") (term "1,0"))
                                                         (rule "distributeIntersection" (formula "21") (term "1,1,0"))
                                                         (rule "distributeIntersection" (formula "21") (term "0,1,0"))
                                                         (rule "distributeIntersection" (formula "21") (term "1,0,0"))
                                                         (rule "distributeIntersection" (formula "21") (term "0,0,0"))
                                                         (rule "distributeIntersection" (formula "20") (term "1,1,0"))
                                                         (rule "distributeIntersection" (formula "20") (term "0,1,0"))
                                                         (rule "distributeIntersection" (formula "20") (term "0,0,0"))
                                                         (rule "distributeIntersection" (formula "20") (term "1,0,0"))
                                                         (rule "distributeIntersection" (formula "85") (term "0,0,0"))
                                                         (rule "distributeIntersection" (formula "85") (term "1,0,0"))
                                                         (rule "distributeIntersection" (formula "85") (term "0,1,0"))
                                                         (rule "distributeIntersection" (formula "85") (term "1,1,0"))
                                                         (rule "unionEqualsEmpty" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "unionEqualsEmpty" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "unionEqualsEmpty" (formula "87"))
                                                         (rule "unionEqualsEmpty" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "unionEqualsEmpty" (formula "24"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "unionEqualsEmpty" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "unionEqualsEmpty" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "unionEqualsEmpty" (formula "91") (term "0"))
                                                         (rule "unionEqualsEmpty" (formula "91") (term "1"))
                                                         (rule "unionEqualsEmpty" (formula "24"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "notLeft" (formula "25"))
                                                         (rule "notLeft" (formula "24"))
                                                         (rule "eqSymm" (formula "55"))
                                                         (rule "eqSymm" (formula "54"))
                                                         (rule "unionEqualsEmpty" (formula "24"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "notLeft" (formula "25"))
                                                         (rule "notLeft" (formula "24"))
                                                         (rule "eqSymm" (formula "54"))
                                                         (rule "eqSymm" (formula "53"))
                                                         (rule "unionEqualsEmpty" (formula "25"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "notLeft" (formula "25"))
                                                         (rule "notLeft" (formula "25"))
                                                         (rule "eqSymm" (formula "53"))
                                                         (rule "eqSymm" (formula "52"))
                                                         (rule "unionEqualsEmpty" (formula "24"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "notLeft" (formula "25"))
                                                         (rule "notLeft" (formula "24"))
                                                         (rule "eqSymm" (formula "52"))
                                                         (rule "eqSymm" (formula "51"))
                                                         (rule "unionEqualsEmpty" (formula "21"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "notLeft" (formula "22"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "eqSymm" (formula "51"))
                                                         (rule "eqSymm" (formula "50"))
                                                         (rule "unionEqualsEmpty" (formula "20"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "notLeft" (formula "20"))
                                                         (rule "notLeft" (formula "20"))
                                                         (rule "eqSymm" (formula "50"))
                                                         (rule "eqSymm" (formula "49"))
                                                         (rule "unionEqualsEmpty" (formula "21"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "notLeft" (formula "22"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "eqSymm" (formula "49"))
                                                         (rule "eqSymm" (formula "48"))
                                                         (rule "unionEqualsEmpty" (formula "20"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "notLeft" (formula "20"))
                                                         (rule "eqSymm" (formula "48"))
                                                         (rule "eqSymm" (formula "47"))
                                                         (rule "unionEqualsEmpty" (formula "99") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "99"))
                                                         (rule "eqSymm" (formula "99") (term "0,1,0,0"))
                                                         (rule "eqSymm" (formula "99") (term "0,0,0,0"))
                                                         (rule "sortsDisjointModuloNull" (formula "99") (term "0,1,0,0"))
                                                         (rule "replace_known_right" (formula "99") (term "0,0,1,0,0") (ifseqformula "91"))
                                                          (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "101")))
                                                         (rule "sortsDisjointModuloNull" (formula "99") (term "0,0,0"))
                                                         (rule "replace_known_right" (formula "99") (term "0,0,0,0") (ifseqformula "92"))
                                                          (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "101")))
                                                         (rule "unionEqualsEmpty" (formula "99") (term "0"))
                                                          (builtin "One Step Simplification" (formula "99"))
                                                         (rule "eqSymm" (formula "99") (term "0,1,0"))
                                                         (rule "eqSymm" (formula "99") (term "0,0,0"))
                                                         (rule "sortsDisjointModuloNull" (formula "99") (term "0,1,0"))
                                                         (rule "replace_known_right" (formula "99") (term "0,0,1,0") (ifseqformula "94"))
                                                          (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "101")))
                                                         (rule "sortsDisjointModuloNull" (formula "99") (term "0,0"))
                                                         (rule "replace_known_right" (formula "99") (term "0,0,0") (ifseqformula "93"))
                                                          (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "101")))
                                                         (rule "unionEqualsEmpty" (formula "99") (term "0"))
                                                          (builtin "One Step Simplification" (formula "99"))
                                                         (rule "eqSymm" (formula "99") (term "0,1,0"))
                                                         (rule "eqSymm" (formula "99") (term "0,0,0"))
                                                         (rule "sortsDisjointModuloNull" (formula "99") (term "0,1,0"))
                                                         (rule "replace_known_right" (formula "99") (term "0,0,1,0") (ifseqformula "96"))
                                                          (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "101")))
                                                         (rule "sortsDisjointModuloNull" (formula "99") (term "0,0"))
                                                         (rule "replace_known_right" (formula "99") (term "0,0,0") (ifseqformula "95"))
                                                          (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "101")))
                                                         (rule "unionEqualsEmpty" (formula "99"))
                                                          (builtin "One Step Simplification" (formula "99"))
                                                         (rule "eqSymm" (formula "99") (term "0,1"))
                                                         (rule "eqSymm" (formula "99") (term "0,0"))
                                                         (rule "sortsDisjointModuloNull" (formula "99") (term "0,1"))
                                                         (rule "replace_known_right" (formula "99") (term "0,0,1") (ifseqformula "98"))
                                                          (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "101")))
                                                         (rule "notRight" (formula "99"))
                                                         (rule "sortsDisjointModuloNull" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "close" (formula "99") (ifseqformula "1"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "closeTrue" (formula "44"))
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "translateJavaAddInt" (formula "39") (term "0,1"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,0,1,0,2,0"))
                                       (rule "translateJavaAddInt" (formula "38") (term "1,1"))
                                       (rule "translateJavaSubInt" (formula "38") (term "2,0,1,0,2,0"))
                                       (rule "translateJavaAddInt" (formula "36") (term "0,1"))
                                       (rule "translateJavaSubInt" (formula "36") (term "2,0,1,0,2,0"))
                                       (rule "translateJavaAddInt" (formula "35") (term "1,1"))
                                       (rule "translateJavaSubInt" (formula "35") (term "2,0,1,0,2,0"))
                                       (rule "translateJavaAddInt" (formula "32") (term "2,0"))
                                       (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,0"))
                                       (rule "translateJavaAddInt" (formula "31") (term "1,1"))
                                       (rule "translateJavaAddInt" (formula "31") (term "0,1"))
                                       (rule "translateJavaSubInt" (formula "31") (term "2,0,1,0,2,0"))
                                       (rule "translateJavaAddInt" (formula "31") (term "0,0"))
                                       (rule "translateJavaSubInt" (formula "44") (term "2,0,1,0,1,1,0,0"))
                                       (rule "translateJavaAddInt" (formula "39") (term "0,2,1,0,1"))
                                       (rule "translateJavaAddInt" (formula "36") (term "0,2,1,0,1"))
                                       (rule "translateJavaSubInt" (formula "32") (term "2,0,1,0,1,2,0"))
                                       (rule "translateJavaAddInt" (formula "31") (term "0,2,1,1,1"))
                                       (rule "translateJavaSubInt" (formula "31") (term "2,0,1,0,1,0,0"))
                                       (rule "allRight" (formula "44") (inst "sk=f_0"))
                                       (rule "allRight" (formula "44") (inst "sk=o_0"))
                                       (rule "orRight" (formula "44"))
                                       (rule "orRight" (formula "44"))
                                       (rule "orRight" (formula "44"))
                                       (rule "eqSymm" (formula "47"))
                                       (rule "eqSymm" (formula "44") (term "0,0,0,1"))
                                       (rule "polySimp_homoEq" (formula "18") (term "0,1,1"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,0,1,0,2,0"))
                                       (rule "mul_literals" (formula "39") (term "1,2,0,1,0,2,0"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,0,1,0,2,0"))
                                       (rule "mul_literals" (formula "38") (term "1,2,0,1,0,2,0"))
                                       (rule "polySimp_elimSub" (formula "36") (term "2,0,1,0,2,0"))
                                       (rule "mul_literals" (formula "36") (term "1,2,0,1,0,2,0"))
                                       (rule "polySimp_elimSub" (formula "35") (term "2,0,1,0,2,0"))
                                       (rule "mul_literals" (formula "35") (term "1,2,0,1,0,2,0"))
                                       (rule "polySimp_elimSub" (formula "32") (term "2,0,1,0,0"))
                                       (rule "mul_literals" (formula "32") (term "1,2,0,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "31") (term "2,0,1,0,2,0"))
                                       (rule "mul_literals" (formula "31") (term "1,2,0,1,0,2,0"))
                                       (rule "polySimp_elimSub" (formula "32") (term "2,0,1,0,1,2,0"))
                                       (rule "mul_literals" (formula "32") (term "1,2,0,1,0,1,2,0"))
                                       (rule "polySimp_elimSub" (formula "31") (term "2,0,1,0,1,0,0"))
                                       (rule "mul_literals" (formula "31") (term "1,2,0,1,0,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "47") (term "2,0,1,0,0"))
                                       (rule "mul_literals" (formula "47") (term "1,2,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "0,2,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "36") (term "0,2,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "31") (term "0,2,1,1,1"))
                                       (rule "polySimp_addComm1" (formula "39") (term "2,0,1,0,2,0"))
                                       (rule "polySimp_addComm1" (formula "38") (term "2,0,1,0,2,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "2,0,1,0,2,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "2,0,1,0,2,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "2,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "2,0,1,0,2,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "2,0,1,0,1,2,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "2,0,1,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "47") (term "2,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "39") (term "0,2,0,1,0,2,0"))
                                       (rule "polySimp_addComm0" (formula "38") (term "0,2,0,1,0,2,0"))
                                       (rule "polySimp_addComm0" (formula "36") (term "0,2,0,1,0,2,0"))
                                       (rule "polySimp_addComm0" (formula "35") (term "0,2,0,1,0,2,0"))
                                       (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "31") (term "0,2,0,1,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,1"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,0,1,2,0"))
                                       (rule "polySimp_addComm0" (formula "31") (term "0,2,0,1,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "29") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "10"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                       (rule "jmod_axiom" (formula "18") (term "0,1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,1,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "18") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "18") (term "1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,1,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,1,1,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "0"))
                                       (rule "pullOutSelect" (formula "32") (term "1,2,0") (inst "selectSK=arr_0"))
                                       (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "32"))
                                       (rule "simplifySelectOfAnon" (formula "32"))
                                        (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "43")) (ifInst ""  (formula "4")))
                                       (rule "polySimp_addComm0" (formula "33") (term "2,0"))
                                       (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                                       (rule "elementOfUnion" (formula "32") (term "0,0"))
                                       (rule "disjointAllFields" (formula "32") (term "1,0,0") (ifseqformula "21"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "elementOfArrayRangeConcrete" (formula "32") (term "0,0"))
                                       (rule "eqSymm" (formula "32") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "32") (term "0,0,0,0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "applyEqReverse" (formula "31") (term "0,0,0") (ifseqformula "32"))
                                       (rule "applyEqReverse" (formula "33") (term "0,2,0") (ifseqformula "32"))
                                       (rule "hideAuxiliaryEq" (formula "32"))
                                       (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "32") (term "2,0"))
                                       (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=f_0_0"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                       (rule "eqSymm" (formula "48"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "46"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                       (rule "times_zero_1" (formula "27") (term "0,0"))
                                       (rule "add_zero_left" (formula "27") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1"))
                                       (rule "commuteUnion" (formula "41") (term "1,0,2,0"))
                                       (rule "commuteUnion" (formula "40") (term "1,0,2,0"))
                                       (rule "commuteUnion" (formula "38") (term "1,0,2,0"))
                                       (rule "commuteUnion" (formula "37") (term "1,0,2,0"))
                                       (rule "commuteUnion" (formula "34") (term "1,0,0"))
                                       (rule "commuteUnion" (formula "33") (term "1,0,2,0"))
                                       (rule "nnf_imp2or" (formula "31") (term "0"))
                                       (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "nnf_imp2or" (formula "31") (term "1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "31") (term "0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "31") (term "0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,0,1,1,0"))
                                       (rule "nnf_imp2or" (formula "31") (term "0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "31") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "31") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "31") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,0"))
                                       (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "14") (term "0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "translateJavaAddInt" (formula "14") (term "0,1,0,0"))
                                       (rule "translateJavaAddInt" (formula "14") (term "3,0,1,0"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "polySimp_addComm0" (formula "16") (term "3,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "14"))
                                       (rule "inEqSimp_commuteLeq" (formula "15"))
                                       (rule "Definition_axiom_for_bucketStartsOrdering_in_de_wiesler_Functions" (formula "28") (term "0") (inst "b=b"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "translateJavaAddInt" (formula "28") (term "0,2,0,1,1,1,1,0,1"))
                                       (rule "translateJavaAddInt" (formula "28") (term "0,2,0,0,0,1,1,1,0,1"))
                                       (rule "translateJavaAddInt" (formula "28") (term "0,2,1,1,0,0"))
                                       (rule "translateJavaAddInt" (formula "28") (term "0,2,0,1,1,0,1,0,1"))
                                       (rule "translateJavaAddInt" (formula "28") (term "0,2,1,1,0,1,0,1,0,1"))
                                       (rule "translateJavaAddInt" (formula "28") (term "0,2,1,1,0,1,1,1,0,1"))
                                       (rule "translateJavaAddInt" (formula "28") (term "0,2,0,1,0"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "polySimp_addComm0" (formula "31") (term "0,2,0,0,0,1,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "31") (term "0,2,1,1,0,1,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "31") (term "0,2,1,1,0,1,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "31") (term "0,2,0,1,1,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "31") (term "0,2,0,1,1,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "30") (term "0,2,0"))
                                       (rule "polySimp_addComm0" (formula "29") (term "0,2,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "31") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "28"))
                                       (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,1,1,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,1,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,1,1,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "29"))
                                       (rule "inEqSimp_commuteLeq" (formula "28"))
                                       (rule "applyEq" (formula "28") (term "0") (ifseqformula "18"))
                                       (rule "inEqSimp_commuteGeq" (formula "28"))
                                       (rule "applyEq" (formula "28") (term "1,1,1,1,1,0") (ifseqformula "18"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,1,1,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1,0"))
                                       (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "20") (term "0") (inst "b=b"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "translateJavaAddInt" (formula "20") (term "0,2,5,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "0,2,5,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                       (rule "Definition_axiom_for_smallBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "21") (term "0") (inst "b=b"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "translateJavaAddInt" (formula "21") (term "0,2,5,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,2,5,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                       (rule "Definition_axiom_for_equalityBucketsInRange_in_de_wiesler_Sorter" (formula "22") (term "0,0,1") (inst "b=b"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "translateJavaAddInt" (formula "22") (term "2,0,1,0,0,1"))
                                       (rule "translateJavaMod" (formula "22") (term "0,1,0,0,0,1"))
                                       (rule "translateJavaAddInt" (formula "22") (term "0,2,1,3,0,1,0,0,1"))
                                       (rule "translateJavaAddInt" (formula "22") (term "3,0,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0,2,1,3,0,1,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0,0,1"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0,0,1"))
                                       (rule "jmod_axiom" (formula "22") (term "0,1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,0,1"))
                                       (rule "polySimp_homoEq" (formula "22") (term "1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,1,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,0,0,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "22") (term "1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0,1"))
                                       (rule "Definition_axiom_for_notAllValuesInOneBucket_in_de_wiesler_Sorter" (formula "23") (term "0") (inst "b=b"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "translateJavaSubInt" (formula "23") (term "0,1,0"))
                                       (rule "translateJavaAddInt" (formula "23") (term "0,2,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "23") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "23") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "23") (term "0,2,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "0,0,1,1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,0,0,1,1,0"))
                                       (rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "19") (term "0") (inst "b=b"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "translateJavaAddInt" (formula "19") (term "3,0,1,0"))
                                       (rule "translateJavaAddInt" (formula "19") (term "2,0,1,0"))
                                       (rule "translateJavaAddInt" (formula "19") (term "0,2,1,3,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,2,1,3,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                       (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "26"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "translateJavaMulInt" (formula "26") (term "1,1,0,0,0,0,1,0,0"))
                                       (rule "translateJavaMulInt" (formula "26") (term "1,1,0,0,0,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "1,1,0,0,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "1,1,0,0,0,0,0,1,0,0"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "29"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "notLeft" (formula "28"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "andLeft" (formula "32"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "notLeft" (formula "28"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "andLeft" (formula "33"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "notLeft" (formula "28"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "andLeft" (formula "34"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "notLeft" (formula "28"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "notLeft" (formula "27"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "notLeft" (formula "27"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "andLeft" (formula "37"))
                                       (rule "notLeft" (formula "27"))
                                       (rule "notLeft" (formula "26"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "disjointDefinition" (formula "62"))
                                        (builtin "One Step Simplification" (formula "62"))
                                       (rule "notLeft" (formula "62"))
                                       (rule "disjointDefinition" (formula "61"))
                                        (builtin "One Step Simplification" (formula "61"))
                                       (rule "notLeft" (formula "61"))
                                       (rule "disjointDefinition" (formula "60"))
                                        (builtin "One Step Simplification" (formula "60"))
                                       (rule "notLeft" (formula "60"))
                                       (rule "eqSymm" (formula "78"))
                                       (rule "disjointDefinition" (formula "59"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "notLeft" (formula "59"))
                                       (rule "eqSymm" (formula "77"))
                                       (rule "disjointDefinition" (formula "58"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "notLeft" (formula "58"))
                                       (rule "eqSymm" (formula "76"))
                                       (rule "disjointDefinition" (formula "57"))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "notLeft" (formula "57"))
                                       (rule "eqSymm" (formula "75"))
                                       (rule "disjointDefinition" (formula "56"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "notLeft" (formula "56"))
                                       (rule "eqSymm" (formula "74"))
                                       (rule "disjointDefinition" (formula "55"))
                                        (builtin "One Step Simplification" (formula "55"))
                                       (rule "notLeft" (formula "55"))
                                       (rule "eqSymm" (formula "73"))
                                       (rule "disjointDefinition" (formula "54"))
                                        (builtin "One Step Simplification" (formula "54"))
                                       (rule "notLeft" (formula "54"))
                                       (rule "eqSymm" (formula "72"))
                                       (rule "disjointDefinition" (formula "53"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "notLeft" (formula "53"))
                                       (rule "eqSymm" (formula "71"))
                                       (rule "disjointDefinition" (formula "52"))
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "notLeft" (formula "52"))
                                       (rule "eqSymm" (formula "70"))
                                       (rule "disjointDefinition" (formula "51"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "notLeft" (formula "51"))
                                       (rule "eqSymm" (formula "69"))
                                       (rule "disjointDefinition" (formula "50"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "notLeft" (formula "50"))
                                       (rule "eqSymm" (formula "68"))
                                       (rule "disjointDefinition" (formula "49"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "notLeft" (formula "49"))
                                       (rule "eqSymm" (formula "67"))
                                       (rule "disjointDefinition" (formula "48"))
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "notLeft" (formula "48"))
                                       (rule "eqSymm" (formula "66"))
                                       (rule "disjointDefinition" (formula "47"))
                                        (builtin "One Step Simplification" (formula "47"))
                                       (rule "notLeft" (formula "47"))
                                       (rule "disjointDefinition" (formula "46"))
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "notLeft" (formula "46"))
                                       (rule "eqSymm" (formula "64"))
                                       (rule "disjointDefinition" (formula "45"))
                                        (builtin "One Step Simplification" (formula "45"))
                                       (rule "notLeft" (formula "45"))
                                       (rule "eqSymm" (formula "63"))
                                       (rule "disjointDefinition" (formula "44"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "notLeft" (formula "44"))
                                       (rule "disjointDefinition" (formula "43"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "notLeft" (formula "43"))
                                       (rule "disjointDefinition" (formula "42"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "notLeft" (formula "42"))
                                       (rule "disjointDefinition" (formula "41"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "notLeft" (formula "41"))
                                       (rule "disjointDefinition" (formula "40"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "notLeft" (formula "40"))
                                       (rule "disjointDefinition" (formula "39"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "notLeft" (formula "39"))
                                       (rule "disjointDefinition" (formula "38"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "notLeft" (formula "38"))
                                       (rule "disjointDefinition" (formula "37"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "notLeft" (formula "37"))
                                       (rule "disjointDefinition" (formula "36"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "notLeft" (formula "36"))
                                       (rule "disjointDefinition" (formula "35"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "notLeft" (formula "35"))
                                       (rule "applyEq" (formula "52") (term "0,1,0,2,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "49") (term "0,1,0,2,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "48") (term "0,1,0,2,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "44") (term "0,1,0,2,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "94") (term "2") (ifseqformula "34"))
                                       (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "45") (term "0,1,0,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "51") (term "0,1,0,2,0") (ifseqformula "34"))
                                       (rule "elementOfUnion" (formula "94"))
                                       (rule "orRight" (formula "94"))
                                       (rule "distributeIntersection" (formula "25") (term "0"))
                                       (rule "distributeIntersection" (formula "24") (term "0"))
                                       (rule "elementOfUnion" (formula "95"))
                                       (rule "orRight" (formula "95"))
                                       (rule "elementOfUnion" (formula "94"))
                                       (rule "orRight" (formula "94"))
                                       (rule "distributeIntersection" (formula "25") (term "1,0"))
                                       (rule "distributeIntersection" (formula "25") (term "0,0"))
                                       (rule "unionEqualsEmpty" (formula "24"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "elementOfUnion" (formula "98"))
                                        (builtin "One Step Simplification" (formula "98"))
                                       (rule "orRight" (formula "98"))
                                       (rule "elementOfUnion" (formula "97"))
                                        (builtin "One Step Simplification" (formula "97"))
                                       (rule "orRight" (formula "97"))
                                       (rule "elementOfUnion" (formula "95"))
                                        (builtin "One Step Simplification" (formula "95"))
                                       (rule "orRight" (formula "95"))
                                       (rule "elementOfUnion" (formula "97"))
                                        (builtin "One Step Simplification" (formula "97"))
                                       (rule "orRight" (formula "97"))
                                       (rule "distributeIntersection" (formula "26") (term "0,1,0"))
                                       (rule "distributeIntersection" (formula "26") (term "1,1,0"))
                                       (rule "distributeIntersection" (formula "26") (term "0,0,0"))
                                       (rule "distributeIntersection" (formula "26") (term "1,0,0"))
                                       (rule "distributeIntersection" (formula "25") (term "0"))
                                       (rule "distributeIntersection" (formula "24") (term "0"))
                                       (rule "unionEqualsEmpty" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "distributeIntersection" (formula "25") (term "0,0"))
                                       (rule "distributeIntersection" (formula "25") (term "1,0"))
                                       (rule "distributeIntersection" (formula "24") (term "1,0"))
                                       (rule "distributeIntersection" (formula "24") (term "0,0"))
                                       (rule "unionEqualsEmpty" (formula "27"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "unionEqualsEmpty" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "unionEqualsEmpty" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "unionEqualsEmpty" (formula "24"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "unionEqualsEmpty" (formula "30"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "andLeft" (formula "30"))
                                       (rule "notLeft" (formula "30"))
                                       (rule "notLeft" (formula "30"))
                                       (rule "eqSymm" (formula "59"))
                                       (rule "eqSymm" (formula "58"))
                                       (rule "unionEqualsEmpty" (formula "30"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "andLeft" (formula "30"))
                                       (rule "notLeft" (formula "31"))
                                       (rule "notLeft" (formula "30"))
                                       (rule "eqSymm" (formula "58"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "unionEqualsEmpty" (formula "29"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "andLeft" (formula "29"))
                                       (rule "notLeft" (formula "30"))
                                       (rule "notLeft" (formula "29"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "eqSymm" (formula "56"))
                                       (rule "unionEqualsEmpty" (formula "28"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "notLeft" (formula "28"))
                                       (rule "notLeft" (formula "28"))
                                       (rule "eqSymm" (formula "56"))
                                       (rule "eqSymm" (formula "55"))
                                       (rule "unionEqualsEmpty" (formula "26"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "notLeft" (formula "27"))
                                       (rule "notLeft" (formula "26"))
                                       (rule "eqSymm" (formula "55"))
                                       (rule "eqSymm" (formula "54"))
                                       (rule "unionEqualsEmpty" (formula "26"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "notLeft" (formula "27"))
                                       (rule "notLeft" (formula "26"))
                                       (rule "eqSymm" (formula "54"))
                                       (rule "eqSymm" (formula "53"))
                                       (rule "unionEqualsEmpty" (formula "25"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "notLeft" (formula "25"))
                                       (rule "notLeft" (formula "25"))
                                       (rule "eqSymm" (formula "53"))
                                       (rule "eqSymm" (formula "52"))
                                       (rule "unionEqualsEmpty" (formula "24"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "notLeft" (formula "24"))
                                       (rule "notLeft" (formula "24"))
                                       (rule "eqSymm" (formula "52"))
                                       (rule "eqSymm" (formula "51"))
                                       (rule "commuteUnion_2" (formula "32") (term "0,1"))
                                       (rule "commuteUnion" (formula "32") (term "1,1,1"))
                                       (rule "commuteUnion" (formula "50") (term "0,0,0,1,0,2,0"))
                                       (rule "commuteUnion" (formula "50") (term "1,1,0,1,0,2,0"))
                                       (rule "commuteUnion" (formula "47") (term "0,0,0,1,0,2,0"))
                                       (rule "commuteUnion" (formula "47") (term "1,1,0,1,0,2,0"))
                                       (rule "commuteUnion_2" (formula "46") (term "0,0,1,0,2,0"))
                                       (rule "commuteUnion" (formula "46") (term "1,1,0,1,0,2,0"))
                                       (rule "commuteUnion" (formula "42") (term "0,0,1,0,2,0"))
                                       (rule "commuteUnion" (formula "42") (term "1,1,0,1,0,2,0"))
                                       (rule "commuteUnion" (formula "43") (term "0,0,1,0,0"))
                                       (rule "commuteUnion" (formula "43") (term "1,1,0,1,0,0"))
                                       (rule "commuteUnion" (formula "49") (term "0,0,1,0,2,0"))
                                       (rule "commuteUnion" (formula "49") (term "1,1,0,1,0,2,0"))
                                       (rule "nnf_imp2or" (formula "34") (term "0"))
                                       (rule "nnf_imp2or" (formula "20") (term "0"))
                                       (rule "nnf_imp2or" (formula "21") (term "0"))
                                       (rule "commuteUnion" (formula "32") (term "0,0,1"))
                                       (rule "commuteUnion" (formula "50") (term "0,0,1,0,2,0"))
                                       (rule "commuteUnion" (formula "47") (term "0,0,1,0,2,0"))
                                       (rule "commuteUnion" (formula "46") (term "0,0,0,1,0,2,0"))
                                       (rule "commuteUnion" (formula "42") (term "1,0,0,1,0,2,0"))
                                       (rule "commuteUnion" (formula "43") (term "1,0,0,1,0,0"))
                                       (rule "commuteUnion" (formula "49") (term "1,0,0,1,0,2,0"))
                                       (rule "nnf_imp2or" (formula "22") (term "0,0,1"))
                                       (rule "commuteUnion_2" (formula "32") (term "0,1"))
                                       (rule "commuteUnion_2" (formula "46") (term "0,0,1,0,2,0"))
                                       (rule "commuteUnion_2" (formula "32") (term "1"))
                                       (rule "commuteUnion_2" (formula "46") (term "0,1,0,2,0"))
                                       (rule "nnf_imp2or" (formula "23") (term "0"))
                                       (rule "nnf_imp2or" (formula "19") (term "0"))
                                       (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "16") (term "0") (inst "j=j") (inst "i=i"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,1,0"))
                                       (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,0"))
                                       (rule "commute_or" (formula "40") (term "0,0,0"))
                                       (rule "cnf_rightDist" (formula "40") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "40") (term "0,1,0"))
                                       (rule "commute_or" (formula "22") (term "1,1"))
                                       (rule "arrayLengthIsAShort" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                                       (rule "cut_direct" (formula "116") (term "0,0"))
                                       (branch "CUT: o_0 = null TRUE"
                                           (builtin "One Step Simplification" (formula "117"))
                                          (rule "false_right" (formula "117"))
                                          (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "107"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "117")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_0 = null FALSE"
                                           (builtin "One Step Simplification" (formula "117"))
                                          (rule "notRight" (formula "117"))
                                          (rule "cut_direct" (formula "108") (term "0"))
                                          (branch "CUT: o_0 = values TRUE"
                                              (builtin "One Step Simplification" (formula "109"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "114") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "114"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "116") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "114") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "114"))
                                             (rule "applyEq" (formula "113") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "113"))
                                             (rule "applyEq" (formula "113") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "113"))
                                             (rule "applyEq" (formula "109") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "109"))
                                             (rule "applyEq" (formula "110") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "110"))
                                             (rule "applyEq" (formula "111") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "110") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "110"))
                                             (rule "applyEq" (formula "109") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "109"))
                                             (rule "nnf_ex2all" (formula "108"))
                                             (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                             (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                             (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "18") (term "0"))
                                             (rule "nnf_notAnd" (formula "24") (term "0,0,0,1"))
                                             (rule "nnf_notAnd" (formula "1") (term "0"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                             (rule "nnf_imp2or" (formula "36") (term "1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "36") (term "0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "36") (term "0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "36") (term "0,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "36") (term "0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "36") (term "0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,0,0,1,0"))
                                             (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0"))
                                             (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0"))
                                             (rule "mul_literals" (formula "36") (term "1,0,0,0,0"))
                                             (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                             (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "19") (term "0,1,0"))
                                             (rule "nnf_notAnd" (formula "25") (term "0,0,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,0,0,1"))
                                             (rule "add_zero_left" (formula "25") (term "0,0,0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0,1"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0,1"))
                                             (rule "cut_direct" (formula "25") (term "0"))
                                             (branch "CUT: equal_buckets = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "Definition_axiom_for_isBucketPartitioned_in_de_wiesler_Sorter" (formula "23") (term "0,1,0") (inst "j=j") (inst "i=i"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "translateJavaAddInt" (formula "23") (term "0,0,0,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "23") (term "0,0,0,0,1,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "23") (term "1,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0,1,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,0,1,1,0,0,1,0"))
                                                (rule "Definition_axiom_for_smallBucketIsSorted_in_de_wiesler_Sorter" (formula "24") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "nnf_notAnd" (formula "19") (term "0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0"))
                                                (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "47") (term "0"))
                                                (rule "wellFormedAnon" (formula "47") (term "1,0"))
                                                (rule "replace_known_right" (formula "47") (term "0,0,0") (ifseqformula "111"))
                                                 (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "4")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")))
                                                (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "48") (term "0") (inst "i=i"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "translateJavaSubInt" (formula "48") (term "1,1,0,0"))
                                                (rule "translateJavaAddInt" (formula "48") (term "0,2,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "48") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "48") (term "1,1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,2,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "48") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,1,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "0,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "48") (term "0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "48") (term "1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "48") (term "0,0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,0,1,1,0,0"))
                                                (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "22") (term "0,1,0") (inst "i=i"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "translateJavaSubInt" (formula "22") (term "1,1,0,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "22") (term "0,2,1,1,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "22") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "22") (term "0,2,1,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "22") (term "0,1,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,0,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,0,1,1,0,0,1,0"))
                                                (rule "nnf_imp2or" (formula "23") (term "0,1,0"))
                                                (rule "commute_or_2" (formula "44") (term "0,0"))
                                                (rule "arrayLengthNotNegative" (formula "35") (term "0"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                (rule "qeq_literals" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "arrayLengthIsAShort" (formula "35") (term "0"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "nnf_imp2or" (formula "48") (term "0"))
                                                (rule "arrayLengthNotNegative" (formula "34") (term "0"))
                                                (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                (rule "qeq_literals" (formula "34"))
                                                (rule "true_left" (formula "34"))
                                                (rule "arrayLengthIsAShort" (formula "34") (term "0"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "true_left" (formula "34"))
                                                (rule "arrayLengthIsAShort" (formula "33") (term "0"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "true_left" (formula "33"))
                                                (rule "arrayLengthNotNegative" (formula "33") (term "0"))
                                                (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                                                (rule "qeq_literals" (formula "33"))
                                                (rule "true_left" (formula "33"))
                                                (rule "arrayLengthNotNegative" (formula "32") (term "0"))
                                                (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
                                                (rule "qeq_literals" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "arrayLengthIsAShort" (formula "32") (term "0"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "arrayLengthIsAShort" (formula "31") (term "0"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "arrayLengthNotNegative" (formula "31") (term "0"))
                                                (rule "applyEq" (formula "31") (term "0") (ifseqformula "32"))
                                                (rule "qeq_literals" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "arrayLengthNotNegative" (formula "30") (term "0"))
                                                (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                                                (rule "qeq_literals" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "arrayLengthIsAShort" (formula "30") (term "0"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "arrayLengthIsAShort" (formula "28") (term "0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "arrayLengthNotNegative" (formula "29") (term "0"))
                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                                                (rule "qeq_literals" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "arrayLengthNotNegative" (formula "28") (term "0"))
                                                (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                                (rule "qeq_literals" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "arrayLengthIsAShort" (formula "29") (term "0"))
                                                 (builtin "One Step Simplification" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "commute_or" (formula "44") (term "1,1,1,0"))
                                                (rule "commute_or" (formula "44") (term "1,0,1,0"))
                                                (rule "nnf_imp2or" (formula "22") (term "0,1,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "0,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "48") (term "0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "0,1,1,0,0"))
                                                (rule "mul_literals" (formula "48") (term "0,0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,0,1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "48") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,0,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "23") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,0,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "23") (term "0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "23") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0,1,1,0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,0,1,0,0,0,1,0"))
                                                (rule "associativeLawUnion" (formula "36") (term "0,1"))
                                                (rule "nnf_imp2or" (formula "23") (term "0,1,0,1,0"))
                                                (rule "cnf_rightDist" (formula "44") (term "0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "44") (term "0,0,1,0"))
                                                (rule "associativeLawUnion" (formula "55") (term "0,1,0,2,0"))
                                                (rule "nnf_notAnd" (formula "22") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,0,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,0,1,1,0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,0,1,0,0,0,1,0"))
                                                (rule "associativeLawUnion" (formula "52") (term "0,1,0,2,0"))
                                                (rule "associativeLawUnion" (formula "46") (term "0,1,0,2,0"))
                                                (rule "associativeLawUnion" (formula "54") (term "0,1,0,2,0"))
                                                (rule "commute_or_2" (formula "38") (term "0,0"))
                                                (rule "associativeLawUnion" (formula "51") (term "0,0,1,0,2,0"))
                                                (rule "Definition_axiom_for_isEqualityBucket_in_de_wiesler_Sorter" (formula "25") (term "0,1,0") (inst "i=i"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "translateJavaSubInt" (formula "25") (term "1,1,0,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "25") (term "0,2,1,1,0,1,0"))
                                                (rule "eqSymm" (formula "25") (term "1,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "25") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "25") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,2,0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,1,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,0,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "0,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,0,1,1,0,0,1,0"))
                                                (rule "cnf_rightDist" (formula "38") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "38") (term "0,1,0"))
                                                (rule "nnf_notAnd" (formula "23") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,0,1,0,0,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,0,1,0,0,0,1,0,1,0"))
                                                (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "47") (term "0") (inst "j=j") (inst "i=i"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "47") (term "1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "47") (term "0,0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,0,1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "47") (term "0,0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,0,1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "25") (term "0,1,0"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch " exists int iv; ( arr(iv) = f_0 & iv >= begin + bucket_starts[bucket] & iv <= -1 + begin + bucket_starts[1 + bucket]) & !f_0 = java.lang.Object::<created> TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "116") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "eqSymm" (formula "3"))
                                                   (rule "eqSymm" (formula "115"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "applyEqRigid" (formula "115") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectArrayType" (formula "115") (term "0") (ifseqformula "51") (ifseqformula "114"))
                                                   (rule "eqSymm" (formula "115"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEq" (formula "58") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "false_right" (formula "58"))
                                                   (rule "applyEqRigid" (formula "114") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectArrayType" (formula "114") (term "0") (ifseqformula "6") (ifseqformula "113"))
                                                   (rule "eqSymm" (formula "114"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "4"))
                                                   (rule "times_zero_1" (formula "42") (term "0,0"))
                                                   (rule "add_zero_left" (formula "42") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "42") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "46"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "5"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                   (rule "mul_literals" (formula "43") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "43"))
                                                   (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                                   (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "13") (term "0,0"))
                                                   (rule "qeq_literals" (formula "13") (term "0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "nnf_imp2or" (formula "51") (term "0"))
                                                   (rule "commute_or" (formula "21") (term "0,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "27") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,0,1,0,0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "0,1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,0,1,1,0,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "51") (term "0,0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "51") (term "1,0,1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "0,1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "51") (term "0,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "51") (term "0,0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "51") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "51") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "0,0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "51") (term "0,1,1,0,0"))
                                                   (rule "nnf_imp2or" (formula "51") (term "0,1,0"))
                                                   (rule "jdiv_axiom" (formula "28") (term "0,0,0"))
                                                   (rule "eqSymm" (formula "28"))
                                                   (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "16"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "eqSymm" (formula "28"))
                                                   (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                                   (rule "nnf_notAnd" (formula "52") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "52") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "52") (term "0,1,0,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "52") (term "0,0,1,0,0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "52") (term "0,0,0,0,1,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "52") (term "0,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "52") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "0,0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "52") (term "0,1,1,0,0,1,0"))
                                                   (rule "cnf_rightDist" (formula "49") (term "0"))
                                                   (rule "associativeLawUnion" (formula "53") (term "0,1,0,1,1,0"))
                                                   (rule "associativeLawUnion" (formula "53") (term "0,1,0,0,1,0"))
                                                   (rule "cut_direct" (formula "29") (term "1"))
                                                   (branch "CUT: num_buckets = 1 + bucket TRUE"
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "applyEq" (formula "21") (term "1,1,1,0,0") (ifseqformula "29"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "21") (term "0,1,1,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0") (ifseqformula "29"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                      (rule "add_literals" (formula "18") (term "0,0"))
                                                      (rule "applyEq" (formula "21") (term "1,1,0,0,0,1,0") (ifseqformula "29"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "1,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "21") (term "0,1,0,0,0,1,0"))
                                                      (rule "applyEq" (formula "27") (term "1,1,1,0,0,0") (ifseqformula "29"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "1,1,0,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,1,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "27") (term "1,1,0,0,0"))
                                                      (rule "applyEq" (formula "23") (term "0,2,0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "49") (term "1,1,0,0,0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "29"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "1"))
                                                      (rule "add_literals" (formula "20") (term "0,1"))
                                                      (rule "applyEq" (formula "30") (term "1,1,0,0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "41") (term "1,1,0,0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "25") (term "1,1,0,0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "17") (term "0") (ifseqformula "29"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17"))
                                                      (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                                      (rule "add_literals" (formula "17") (term "1,0"))
                                                      (rule "times_zero_1" (formula "17") (term "0"))
                                                      (rule "leq_literals" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEq" (formula "48") (term "1,1,1,1,0") (ifseqformula "28"))
                                                      (rule "applyEq" (formula "59") (term "1,2,1,1,0,2,0") (ifseqformula "22"))
                                                      (rule "polySimp_addAssoc" (formula "59") (term "2,1,1,0,2,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,2,1,1,0,2,0"))
                                                      (rule "add_literals" (formula "59") (term "1,1,0,2,1,1,0,2,0"))
                                                      (rule "times_zero_1" (formula "59") (term "1,0,2,1,1,0,2,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,2,1,1,0,2,0"))
                                                      (rule "applyEq" (formula "48") (term "1,1,0,0,0,1,0") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "22"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0"))
                                                      (rule "applyEq" (formula "52") (term "1,2,1,1,0,1,1,0") (ifseqformula "22"))
                                                      (rule "polySimp_addAssoc" (formula "52") (term "2,1,1,0,1,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,2,1,1,0,1,1,0"))
                                                      (rule "add_literals" (formula "52") (term "1,1,0,2,1,1,0,1,1,0"))
                                                      (rule "times_zero_1" (formula "52") (term "1,0,2,1,1,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "0,2,1,1,0,1,1,0"))
                                                      (rule "applyEq" (formula "40") (term "1,0,1,0,1,1,0") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "51") (term "1,1,1,0,0,1,0") (ifseqformula "22"))
                                                      (rule "polySimp_addAssoc" (formula "51") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "51") (term "0,1,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "51") (term "1,0,1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "51") (term "0,1,1,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "51") (term "1,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "47") (term "0") (ifseqformula "22"))
                                                      (rule "inEqSimp_homoInEq0" (formula "47"))
                                                      (rule "polySimp_pullOutFactor1" (formula "47") (term "0"))
                                                      (rule "add_literals" (formula "47") (term "1,0"))
                                                      (rule "times_zero_1" (formula "47") (term "0"))
                                                      (rule "qeq_literals" (formula "47"))
                                                      (rule "true_left" (formula "47"))
                                                      (rule "applyEq" (formula "55") (term "1,0,0") (ifseqformula "22"))
                                                      (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "55") (term "0,0,0"))
                                                      (rule "add_literals" (formula "55") (term "1,0,0,0"))
                                                      (rule "times_zero_1" (formula "55") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "55") (term "0,0"))
                                                      (rule "seqDef_lower_equals_upper" (formula "55") (term "0"))
                                                      (rule "eqSymm" (formula "55"))
                                                      (rule "eqSeqEmpty" (formula "55"))
                                                      (rule "lenOfSeqDef" (formula "55") (term "0"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "polySimp_elimSub" (formula "55") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "55") (term "1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "55") (term "0,1"))
                                                      (rule "polySimp_addComm0" (formula "55") (term "0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "55") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,0,0,0"))
                                                      (rule "applyEq" (formula "57") (term "1,2,1,1,0,2,0") (ifseqformula "22"))
                                                      (rule "polySimp_addAssoc" (formula "57") (term "2,1,1,0,2,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,2,1,1,0,2,0"))
                                                      (rule "add_literals" (formula "57") (term "1,1,0,2,1,1,0,2,0"))
                                                      (rule "times_zero_1" (formula "57") (term "1,0,2,1,1,0,2,0"))
                                                      (rule "add_zero_right" (formula "57") (term "0,2,1,1,0,2,0"))
                                                      (rule "applyEq" (formula "49") (term "1,1,1") (ifseqformula "22"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "1,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "49") (term "0,1,1"))
                                                      (rule "add_literals" (formula "49") (term "1,0,1,1"))
                                                      (rule "times_zero_1" (formula "49") (term "0,1,1"))
                                                      (rule "add_zero_left" (formula "49") (term "1,1"))
                                                      (rule "applyEq" (formula "50") (term "1,1,1,0,0") (ifseqformula "22"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "1,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "50") (term "0,1,1,0,0"))
                                                      (rule "add_literals" (formula "50") (term "1,0,1,1,0,0"))
                                                      (rule "times_zero_1" (formula "50") (term "0,1,1,0,0"))
                                                      (rule "add_zero_left" (formula "50") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "50") (term "1,2,1,1,0,0,1,0,1,0") (ifseqformula "22"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "2,1,1,0,0,1,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,2,1,1,0,0,1,0,1,0"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,2,1,1,0,0,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,2,1,1,0,0,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "50") (term "0,2,1,1,0,0,1,0,1,0"))
                                                      (rule "applyEq" (formula "51") (term "1,2,1,1,0,0,1,0") (ifseqformula "22"))
                                                      (rule "polySimp_addAssoc" (formula "51") (term "2,1,1,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,2,1,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "51") (term "1,1,0,2,1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "51") (term "1,0,2,1,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "51") (term "0,2,1,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "58") (term "1,0,1") (ifseqformula "22"))
                                                      (rule "polySimp_addAssoc" (formula "58") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "58") (term "0,0,1"))
                                                      (rule "add_literals" (formula "58") (term "1,0,0,1"))
                                                      (rule "times_zero_1" (formula "58") (term "0,0,1"))
                                                      (rule "add_zero_left" (formula "58") (term "0,1"))
                                                      (rule "seqDef_lower_equals_upper" (formula "58") (term "1"))
                                                      (rule "seqPermEmpty2" (formula "58"))
                                                      (rule "eqSymm" (formula "58"))
                                                      (rule "eqSeqEmpty" (formula "58"))
                                                      (rule "lenOfSeqDef" (formula "58") (term "0"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "polySimp_elimSub" (formula "58") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "58") (term "1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "58") (term "0,1"))
                                                      (rule "polySimp_addComm0" (formula "58") (term "0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "58") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "58") (term "0,0,0,0"))
                                                      (rule "applyEq" (formula "51") (term "1,1,1,0,0") (ifseqformula "22"))
                                                      (rule "polySimp_addAssoc" (formula "51") (term "1,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,1,1,0,0"))
                                                      (rule "add_literals" (formula "51") (term "1,1,0,1,1,0,0"))
                                                      (rule "times_zero_1" (formula "51") (term "1,0,1,1,0,0"))
                                                      (rule "add_zero_right" (formula "51") (term "0,1,1,0,0"))
                                                      (rule "applyEq" (formula "54") (term "1,2,1,1,0,2,0") (ifseqformula "22"))
                                                      (rule "polySimp_addAssoc" (formula "54") (term "2,1,1,0,2,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,2,1,1,0,2,0"))
                                                      (rule "add_literals" (formula "54") (term "1,1,0,2,1,1,0,2,0"))
                                                      (rule "times_zero_1" (formula "54") (term "1,0,2,1,1,0,2,0"))
                                                      (rule "add_literals" (formula "54") (term "0,2,1,1,0,2,0"))
                                                      (rule "applyEq" (formula "49") (term "1,2,1,1,0,2,0") (ifseqformula "22"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "2,1,1,0,2,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,2,1,1,0,2,0"))
                                                      (rule "add_literals" (formula "49") (term "1,1,0,2,1,1,0,2,0"))
                                                      (rule "times_zero_1" (formula "49") (term "1,0,2,1,1,0,2,0"))
                                                      (rule "add_zero_right" (formula "49") (term "0,2,1,1,0,2,0"))
                                                      (rule "applyEq" (formula "46") (term "0") (ifseqformula "22"))
                                                      (rule "inEqSimp_commuteGeq" (formula "46"))
                                                      (rule "applyEq" (formula "49") (term "1,2,1,1,0,1,1,0,1,0") (ifseqformula "22"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "2,1,1,0,1,1,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,2,1,1,0,1,1,0,1,0"))
                                                      (rule "add_literals" (formula "49") (term "1,1,0,2,1,1,0,1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "49") (term "1,0,2,1,1,0,1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "49") (term "0,2,1,1,0,1,1,0,1,0"))
                                                      (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "22"))
                                                      (rule "polySimp_addAssoc" (formula "48") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "48") (term "0,1,0"))
                                                      (rule "add_literals" (formula "48") (term "1,0,1,0"))
                                                      (rule "times_zero_1" (formula "48") (term "0,1,0"))
                                                      (rule "add_zero_left" (formula "48") (term "1,0"))
                                                      (rule "applyEq" (formula "54") (term "1,0,0,0") (ifseqformula "22"))
                                                      (rule "polySimp_addAssoc" (formula "54") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "54") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "54") (term "0,0,0"))
                                                      (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "54") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0"))
                                                      (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "54") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "54") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "true_left" (formula "54"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                      (rule "mul_literals" (formula "6") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
                                                      (rule "leq_literals" (formula "15") (term "0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "24") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,1,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "24") (term "1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "true_left" (formula "24"))
                                                      (rule "inEqSimp_or_weaken3" (formula "43") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "inEqSimp_or_weaken3" (formula "37") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_or_weaken3" (formula "43") (term "1,1,0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "associativeLawUnion" (formula "35") (term "0,1"))
                                                      (rule "commute_or" (formula "1") (term "0,0"))
                                                      (rule "commute_or" (formula "22") (term "0,0,1,0,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferencedFinal" (formula "34") (term "0,0") (ifseqformula "6") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "105"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "associativeLawUnion" (formula "46") (term "0,1,0,2,0"))
                                                      (rule "onlyCreatedObjectsAreReferencedFinal" (formula "33") (term "0,0") (ifseqformula "6") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "105"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "associativeLawUnion" (formula "54") (term "0,1,0,2,0"))
                                                      (rule "onlyCreatedObjectsAreReferencedFinal" (formula "32") (term "0,0") (ifseqformula "6") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "105"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "onlyCreatedObjectsAreReferencedFinal" (formula "31") (term "0,0") (ifseqformula "6") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "105"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "onlyCreatedObjectsAreReferencedFinal" (formula "30") (term "0,0") (ifseqformula "6") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "105"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "associativeLawUnion" (formula "55") (term "0,0,1,0,2,0"))
                                                      (rule "all_pull_out3" (formula "21") (term "0"))
                                                      (rule "onlyCreatedObjectsAreReferencedFinal" (formula "29") (term "0,0") (ifseqformula "6") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "105"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "onlyCreatedObjectsAreReferencedFinal" (formula "28") (term "0,0") (ifseqformula "6") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "105"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "onlyCreatedObjectsAreReferencedFinal" (formula "27") (term "0,0") (ifseqformula "6") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "105"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "commute_or" (formula "54") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "54") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "51"))
                                                      (rule "andLeft" (formula "51"))
                                                      (rule "commute_or" (formula "56") (term "0,0"))
                                                      (rule "associativeLawUnion" (formula "56") (term "0,1,0,1,1,0"))
                                                      (rule "associativeLawUnion" (formula "56") (term "0,1,0,0,1,0"))
                                                      (rule "div_axiom" (formula "24") (term "1") (inst "quotient=quotient_0"))
                                                      (rule "mul_literals" (formula "24") (term "1,1,1,1,1"))
                                                      (rule "equal_literals" (formula "24") (term "0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "qeq_literals" (formula "24") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "1"))
                                                      (rule "add_literals" (formula "26") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "25"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                      (rule "applyEq" (formula "27") (term "1") (ifseqformula "24"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                      (rule "mul_literals" (formula "26") (term "0,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "26"))
                                                      (rule "mul_literals" (formula "15") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                      (rule "add_literals" (formula "15") (term "0,0"))
                                                      (rule "add_zero_left" (formula "15") (term "0"))
                                                      (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "15") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0"))
                                                      (rule "leq_literals" (formula "15") (term "0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "associativeLawUnion" (formula "59") (term "0,1,0,0,1,0,1,0"))
                                                      (rule "associativeLawUnion" (formula "59") (term "0,1,0,1,1,0,1,0"))
                                                      (rule "commute_or_2" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "52"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "5"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "CUT: num_buckets = 1 + bucket FALSE"
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "61"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "1"))
                                                      (rule "add_literals" (formula "17") (term "0,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "61") (ifseqformula "17"))
                                                      (rule "polySimp_rightDist" (formula "61") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "61") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "61") (term "0,0,0"))
                                                      (rule "add_literals" (formula "61") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0"))
                                                      (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "61") (term "0,0"))
                                                      (rule "leq_literals" (formula "61") (term "0"))
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "false_right" (formula "61"))
                                                      (rule "newSym_eq" (formula "29") (inst "newSymDef=mul(bucket, Z(0(#)))") (inst "l=l_0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,1"))
                                                      (rule "add_zero_right" (formula "29") (term "1"))
                                                      (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "29"))
                                                      (rule "eqSymm" (formula "30"))
                                                      (rule "applyEq" (formula "53") (term "0,2,1,1,1,1,0,0,1,0,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "58") (term "1,0,2,1,0,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "50") (term "0,2,1,0,1,0,1,0,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "48") (term "0,2,1") (ifseqformula "30"))
                                                      (rule "inEqSimp_commuteGeq" (formula "48"))
                                                      (rule "applyEq" (formula "52") (term "1,0,2,1,2,1,1,0,2,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "54") (term "0,2,1,1,1,1,0,1,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "49") (term "1,0,2,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "53") (term "1,0,2,1,2,1,1,0,0,1,0,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "50") (term "1,0,1,1,0,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "54") (term "0,2,1,1,1,1,0,0,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "52") (term "1,0,2,1,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "61") (term "1,0,2,1,0,1") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "53") (term "0,2,1,1,1,1,0,1,1,0,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "50") (term "1,0,2,1,1,0,0,0,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "53") (term "1,0,2,1,1,1,0,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "60") (term "0,2,1,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "61") (term "0,2,1,1,1,1,0,2,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "42") (term "1,0,2,1,0,1,0,1,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "54") (term "0,2,1,1,0,0,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "57") (term "1,0,2,1,2,1,1,0,2,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "54") (term "1,0,2,1,2,1,1,0,0,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "52") (term "1,0,2,1,1,1") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "58") (term "0,2,1,1,1,1,0,2,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "53") (term "1,0,2,1,1,1,0,0,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "61") (term "1,0,2,1,0,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "42") (term "0,2,1,0,1,0,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "52") (term "0,2,1,0,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "60") (term "0,2,1,1,1,1,0,2,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "50") (term "1,1,1,0,1,0,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "50") (term "1,1,1,0,0,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "27") (term "1,0,0,0,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "52") (term "0,2,1,0,1") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "54") (term "1,0,2,1,2,1,1,0,1,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "52") (term "0,2,1,1,1,1,0,2,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "57") (term "0,2,1,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "42") (term "1,1,1,1,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "50") (term "1,0,0,0,0,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "47") (term "0,2,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "16") (term "0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "60") (term "1,0,2,1,2,1,1,0,2,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "46") (term "0,2,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "42") (term "1,0,0,1,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "54") (term "1,0,2,1,1,1,0,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "61") (term "1,0,2,1,2,1,1,0,2,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "42") (term "1,0,0,0,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "57") (term "0,2,1,1,1,1,0,2,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "50") (term "1,0,0,0,1,0,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "42") (term "1,1,1,0,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "60") (term "0,2,1,1,1") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "58") (term "1,0,2,1,2,1,1,0,2,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "4") (term "0,2,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "50") (term "1,0,1,0,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "6") (term "1,0,2,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "53") (term "0,2,1,1,0,0,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "53") (term "1,0,2,1,2,1,1,0,1,1,0,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "50") (term "1,1,0,0,0,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "58") (term "1,0,2,1,0,1") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "42") (term "1,1,0,0,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "50") (term "1,1,0,1,1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "28") (term "0,1") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "57") (term "0,2,1,1,1") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "48") (term "1,0,2,1") (ifseqformula "30"))
                                                      (rule "inEqSimp_commuteLeq" (formula "48"))
                                                      (rule "applyEq" (formula "28") (term "1") (ifseqformula "29"))
                                                      (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                      (rule "leq_literals" (formula "16") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0,0"))
                                                      (rule "leq_literals" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "polyDiv_pullOut" (formula "29") (term "0") (inst "polyDivCoeff=l_0"))
                                                      (rule "equal_literals" (formula "29") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                                                      (rule "polySimp_homoEq" (formula "29"))
                                                      (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "29") (term "1,0,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "0,0,0,1,0"))
                                                      (rule "div_literals" (formula "29") (term "0,0,1,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                                      (rule "add_literals" (formula "29") (term "1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "48"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "46"))
                                                      (rule "times_zero_1" (formula "45") (term "0,0"))
                                                      (rule "add_zero_left" (formula "45") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "45") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "43"))
                                                      (rule "inEqSimp_homoInEq0" (formula "45") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0"))
                                                      (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "45") (term "0,0"))
                                                      (rule "qeq_literals" (formula "45") (term "0"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "true_left" (formula "45"))
                                                      (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "4"))
                                                      (rule "mul_literals" (formula "45") (term "0,0"))
                                                      (rule "add_zero_left" (formula "45") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "45") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "48"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                      (rule "associativeLawUnion" (formula "39") (term "0,1"))
                                                      (rule "commute_or" (formula "1") (term "0,0"))
                                                      (rule "associativeLawUnion" (formula "60") (term "0,1,0,2,0"))
                                                      (rule "commute_or" (formula "25") (term "0,0,1,0,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferencedFinal" (formula "38") (term "0,0") (ifseqformula "7") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "113"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "associativeLawUnion" (formula "58") (term "0,1,0,2,0"))
                                                      (rule "onlyCreatedObjectsAreReferencedFinal" (formula "37") (term "0,0") (ifseqformula "7") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "113"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "associativeLawUnion" (formula "53") (term "0,1,0,2,0"))
                                                      (rule "associativeLawUnion" (formula "61") (term "0,1,0,2,0"))
                                                      (rule "onlyCreatedObjectsAreReferencedFinal" (formula "36") (term "0,0") (ifseqformula "7") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "113"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "onlyCreatedObjectsAreReferencedFinal" (formula "35") (term "0,0") (ifseqformula "7") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "113"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "onlyCreatedObjectsAreReferencedFinal" (formula "34") (term "0,0") (ifseqformula "7") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "113"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "associativeLawUnion" (formula "61") (term "0,0,1,0,2,0"))
                                                      (rule "onlyCreatedObjectsAreReferencedFinal" (formula "33") (term "0,0") (ifseqformula "7") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "113"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "onlyCreatedObjectsAreReferencedFinal" (formula "32") (term "0,0") (ifseqformula "7") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "113"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "onlyCreatedObjectsAreReferencedFinal" (formula "31") (term "0,0") (ifseqformula "7") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "113"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "distr_forallAnd" (formula "57"))
                                                      (rule "andLeft" (formula "57"))
                                                      (rule "commute_or" (formula "61") (term "0,0,1,0"))
                                                      (rule "all_pull_out3" (formula "21") (term "0"))
                                                      (rule "commute_or" (formula "49") (term "1,1,1,0"))
                                                      (rule "commute_or" (formula "49") (term "1,0,1,0"))
                                                      (rule "allLeft" (formula "30") (inst "t=Z(0(#))"))
                                                      (rule "leq_literals" (formula "30") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "add_zero_right" (formula "30") (term "0,2,0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "30") (term "0"))
                                                      (rule "applyEq" (formula "30") (term "1,1,1") (ifseqformula "22"))
                                                      (rule "add_zero_right" (formula "30") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "18"))
                                                      (rule "qeq_literals" (formula "30") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "commute_or_2" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "53"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "5"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                                (branch " exists int iv; ( arr(iv) = f_0 & iv >= begin + bucket_starts[bucket] & iv <= -1 + begin + bucket_starts[1 + bucket]) & !f_0 = java.lang.Object::<created> FALSE"
                                                   (rule "close" (formula "113") (ifseqformula "3"))
                                                )
                                             )
                                             (branch "CUT: equal_buckets = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "Definition_axiom_for_isBucketPartitioned_in_de_wiesler_Sorter" (formula "23") (term "0,1,0") (inst "j=j") (inst "i=i"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "translateJavaAddInt" (formula "23") (term "1,1,0,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "23") (term "0,0,0,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "23") (term "0,0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0,1,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,0,1,1,0,0,1,0"))
                                                (rule "Definition_axiom_for_smallBucketIsSorted_in_de_wiesler_Sorter" (formula "24") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "nnf_notAnd" (formula "19") (term "0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0"))
                                                (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "44") (term "0"))
                                                (rule "wellFormedAnon" (formula "44") (term "1,0"))
                                                (rule "replace_known_left" (formula "44") (term "0,1") (ifseqformula "45"))
                                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "109")) (ifInst ""  (formula "4")) (ifInst ""  (formula "46")))
                                                (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "45") (term "0") (inst "i=i"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "translateJavaSubInt" (formula "45") (term "1,1,0,0"))
                                                (rule "translateJavaAddInt" (formula "45") (term "0,2,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "45") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "45") (term "1,1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "45") (term "0,2,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "45") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "45") (term "0,1,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "0,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "45") (term "0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "45") (term "0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "45") (term "1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "45") (term "0,0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "1,0,1,1,0,0"))
                                                (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "22") (term "0,1,0") (inst "i=i"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "translateJavaAddInt" (formula "22") (term "0,2,1,1,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "22") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "22") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "22") (term "0,2,1,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "22") (term "0,1,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,0,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,0,1,1,0,0,1,0"))
                                                (rule "nnf_imp2or" (formula "23") (term "0,1,0"))
                                                (rule "commute_or_2" (formula "41") (term "0,0"))
                                                (rule "arrayLengthIsAShort" (formula "32") (term "0"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "arrayLengthNotNegative" (formula "32") (term "0"))
                                                (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
                                                (rule "qeq_literals" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "nnf_imp2or" (formula "45") (term "0"))
                                                (rule "arrayLengthIsAShort" (formula "31") (term "0"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "arrayLengthNotNegative" (formula "31") (term "0"))
                                                (rule "applyEq" (formula "31") (term "0") (ifseqformula "32"))
                                                (rule "qeq_literals" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "arrayLengthIsAShort" (formula "30") (term "0"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "arrayLengthNotNegative" (formula "30") (term "0"))
                                                (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                                                (rule "qeq_literals" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "arrayLengthIsAShort" (formula "29") (term "0"))
                                                 (builtin "One Step Simplification" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "arrayLengthNotNegative" (formula "29") (term "0"))
                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                                                (rule "qeq_literals" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "arrayLengthNotNegative" (formula "28") (term "0"))
                                                (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                                (rule "qeq_literals" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "arrayLengthIsAShort" (formula "28") (term "0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "arrayLengthIsAShort" (formula "27") (term "0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "arrayLengthNotNegative" (formula "27") (term "0"))
                                                (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
                                                (rule "qeq_literals" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                                                (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                                (rule "qeq_literals" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "arrayLengthIsAShort" (formula "26") (term "0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "arrayLengthNotNegative" (formula "26") (term "0"))
                                                (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "arrayLengthIsAShort" (formula "25") (term "0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "commute_or" (formula "41") (term "1,1,1,0"))
                                                (rule "commute_or" (formula "41") (term "1,0,1,0"))
                                                (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "0,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "45") (term "0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "45") (term "0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "0,1,1,0,0"))
                                                (rule "mul_literals" (formula "45") (term "0,0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "1,0,1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "45") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "1,0,1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "22") (term "0,1,0"))
                                                (rule "nnf_notAnd" (formula "23") (term "0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,0,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "23") (term "0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "23") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0,1,1,0,0,1,0"))
                                                (rule "nnf_imp2or" (formula "23") (term "0,1,0,1,0"))
                                                (rule "associativeLawUnion" (formula "33") (term "0,1"))
                                                (rule "cnf_rightDist" (formula "41") (term "0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "41") (term "0,0,1,0"))
                                                (rule "associativeLawUnion" (formula "52") (term "0,1,0,2,0"))
                                                (rule "associativeLawUnion" (formula "49") (term "0,1,0,2,0"))
                                                (rule "associativeLawUnion" (formula "43") (term "0,1,0,2,0"))
                                                (rule "associativeLawUnion" (formula "51") (term "0,1,0,2,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,0"))
                                                (rule "nnf_notAnd" (formula "22") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,0,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,0,1,1,0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,0,1,0,0,0,1,0"))
                                                (rule "associativeLawUnion" (formula "48") (term "0,0,1,0,2,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,1,0"))
                                                (rule "nnf_notAnd" (formula "23") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,0,1,0,0,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,0,1,0,0,0,1,0,1,0"))
                                                (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "44") (term "0"))
                                                (rule "wellFormedAnon" (formula "44") (term "1,0"))
                                                (rule "replace_known_left" (formula "44") (term "0,1") (ifseqformula "45"))
                                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "110")) (ifInst ""  (formula "4")) (ifInst ""  (formula "47")))
                                                (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "45") (term "0") (inst "j=j") (inst "i=i"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "45") (term "1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "45") (term "0,0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "1,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "45") (term "0,0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "1,0,1,1,0,0,1,0"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch " exists int iv; ( arr(iv) = f_0 & iv >= begin + bucket_starts[bucket] & iv <= -1 + begin + bucket_starts[1 + bucket]) & !f_0 = java.lang.Object::<created> TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "115") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "eqSymm" (formula "3"))
                                                   (rule "eqSymm" (formula "114"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "applyEq" (formula "114") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectArrayType" (formula "114") (term "0") (ifseqformula "49") (ifseqformula "113"))
                                                   (rule "eqSymm" (formula "114"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEq" (formula "56") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "false_right" (formula "56"))
                                                   (rule "applyEq" (formula "113") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectArrayType" (formula "113") (term "0") (ifseqformula "6") (ifseqformula "112"))
                                                   (rule "eqSymm" (formula "113"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "4"))
                                                   (rule "times_zero_1" (formula "39") (term "0,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "43"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "5") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "5"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                   (rule "mul_literals" (formula "40") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "40"))
                                                   (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                                   (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0"))
                                                   (rule "qeq_literals" (formula "13") (term "0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "nnf_imp2or" (formula "49") (term "0"))
                                                   (rule "commute_or" (formula "21") (term "0,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "0,1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "49") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "0,0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "0,1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,0,1,0,0,0"))
                                                   (rule "nnf_imp2or" (formula "49") (term "0,1,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "0,1,0,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,0,1,0,0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,0,1,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "49") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "0,0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "0,1,1,0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,0"))
                                                   (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "48") (term "0") (inst "i=i"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "translateJavaAddInt" (formula "48") (term "0,2,1,1,0"))
                                                   (rule "translateJavaSubInt" (formula "48") (term "1,1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "48") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "1,1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "48") (term "0,2,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "48") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "48") (term "0,1,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "0,1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "48") (term "1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,0,1,1,0,0"))
                                                   (rule "nnf_imp2or" (formula "48") (term "0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "0,1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,0,1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,0,1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "45") (term "0"))
                                                   (rule "associativeLawUnion" (formula "49") (term "0,1,0,1,1,0"))
                                                   (rule "associativeLawUnion" (formula "49") (term "0,1,0,0,1,0"))
                                                   (rule "commute_or" (formula "37") (term "1,1,1,0"))
                                                   (rule "commute_or" (formula "37") (term "1,0,1,0"))
                                                   (rule "associativeLawUnion" (formula "35") (term "0,1"))
                                                   (rule "commute_or" (formula "1") (term "0,0"))
                                                   (rule "cnf_rightDist" (formula "37") (term "0,1,1,0"))
                                                   (rule "cnf_rightDist" (formula "37") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "25") (term "0,0,1,0,1,0"))
                                                   (rule "associativeLawUnion" (formula "56") (term "0,1,0,2,0"))
                                                   (rule "associativeLawUnion" (formula "53") (term "0,1,0,2,0"))
                                                   (rule "associativeLawUnion" (formula "47") (term "0,1,0,2,0"))
                                                   (rule "associativeLawUnion" (formula "55") (term "0,1,0,2,0"))
                                                   (rule "onlyCreatedObjectsAreReferencedFinal" (formula "34") (term "0,0") (ifseqformula "7") (ifseqformula "9"))
                                                   (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "110"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "onlyCreatedObjectsAreReferencedFinal" (formula "33") (term "0,0") (ifseqformula "7") (ifseqformula "9"))
                                                   (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "110"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "onlyCreatedObjectsAreReferencedFinal" (formula "32") (term "0,0") (ifseqformula "7") (ifseqformula "9"))
                                                   (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "110"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "distr_forallAnd" (formula "48"))
                                                   (rule "andLeft" (formula "48"))
                                                   (rule "onlyCreatedObjectsAreReferencedFinal" (formula "31") (term "0,0") (ifseqformula "7") (ifseqformula "9"))
                                                   (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "111"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "onlyCreatedObjectsAreReferencedFinal" (formula "30") (term "0,0") (ifseqformula "7") (ifseqformula "9"))
                                                   (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "111"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "associativeLawUnion" (formula "58") (term "0,0,1,0,2,0"))
                                                   (rule "onlyCreatedObjectsAreReferencedFinal" (formula "29") (term "0,0") (ifseqformula "7") (ifseqformula "9"))
                                                   (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "111"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "all_pull_out3" (formula "24") (term "0"))
                                                   (rule "onlyCreatedObjectsAreReferencedFinal" (formula "27") (term "0,0") (ifseqformula "7") (ifseqformula "9"))
                                                   (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "110"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "onlyCreatedObjectsAreReferencedFinal" (formula "29") (term "0,0") (ifseqformula "7") (ifseqformula "9"))
                                                   (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "112"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "commute_or" (formula "57") (term "0,0,1,0"))
                                                   (rule "commute_or_2" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "1") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "48"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_literals" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch " exists int iv; ( arr(iv) = f_0 & iv >= begin + bucket_starts[bucket] & iv <= -1 + begin + bucket_starts[1 + bucket]) & !f_0 = java.lang.Object::<created> FALSE"
                                                   (rule "close" (formula "112") (ifseqformula "3"))
                                                )
                                             )
                                          )
                                          (branch "CUT: o_0 = values FALSE"
                                              (builtin "One Step Simplification" (formula "109"))
                                             (rule "false_right" (formula "109"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "108"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "118")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      )
   )
   (branch "Null Reference (x_arr = null)"
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Index Out of Bounds (x_arr != null, but x_4 Out of Bounds!)"
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
       (builtin "One Step Simplification" (formula "27"))
      (rule "false_right" (formula "27"))
      (rule "polySimp_homoEq" (formula "18") (term "0,1,1"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,1"))
      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,1"))
      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1"))
      (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,1"))
      (rule "inEqSimp_ltToLeq" (formula "12"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "1") (term "0,0,1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "inEqSimp_homoInEq0" (formula "10"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0"))
      (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "jmod_axiom" (formula "18") (term "0,1,1,1"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,1,1"))
      (rule "polySimp_sepNegMonomial" (formula "18") (term "0,1,1"))
      (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,1"))
      (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1"))
      (rule "polySimp_sepNegMonomial" (formula "18") (term "1,1,1"))
      (rule "polySimp_mulLiterals" (formula "18") (term "0,1,1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0"))
      (rule "polySimp_elimOne" (formula "12") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "1,1"))
      (rule "inEqSimp_sepNegMonomial1" (formula "10"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
      (rule "polySimp_elimOne" (formula "10") (term "0"))
      (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "11"))
      (rule "qeq_literals" (formula "1") (term "0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "16") (term "0") (inst "b=b"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "translateJavaAddInt" (formula "16") (term "0,2,5,0,1,0"))
      (rule "polySimp_addComm0" (formula "16") (term "0,2,5,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "16") (term "0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
      (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "13") (term "0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "translateJavaAddInt" (formula "13") (term "0,1,0,0"))
      (rule "translateJavaAddInt" (formula "13") (term "3,0,1,0"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "polySimp_addComm0" (formula "15") (term "3,0"))
      (rule "polySimp_addComm0" (formula "14") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "13"))
      (rule "inEqSimp_commuteLeq" (formula "14"))
      (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
      (rule "polySimp_rightDist" (formula "14") (term "0,0"))
      (rule "mul_literals" (formula "14") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "14") (term "0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
      (rule "add_literals" (formula "14") (term "0,0,0"))
      (rule "add_zero_left" (formula "14") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "14"))
      (rule "polySimp_mulLiterals" (formula "14") (term "0"))
      (rule "polySimp_elimOne" (formula "14") (term "0"))
      (rule "inEqSimp_contradEq3" (formula "22") (term "0,1,1") (ifseqformula "14"))
      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,1"))
      (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,1"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,1"))
      (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,1,1"))
      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,1,1"))
      (rule "add_literals" (formula "22") (term "1,1,0,0,0,1,1"))
      (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,1"))
      (rule "add_zero_right" (formula "22") (term "0,0,0,1,1"))
      (rule "qeq_literals" (formula "22") (term "0,0,1,1"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "12"))
      (rule "andLeft" (formula "14"))
      (rule "inEqSimp_homoInEq1" (formula "14"))
      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
      (rule "add_literals" (formula "14") (term "1,1,0"))
      (rule "times_zero_1" (formula "14") (term "1,0"))
      (rule "add_literals" (formula "14") (term "0"))
      (rule "leq_literals" (formula "14"))
      (rule "closeFalse" (formula "14"))
   )
)
(branch "Null Reference (_bucket_starts = null)"
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
   (rule "closeFalse" (formula "1"))
)
(branch "Index Out of Bounds (_bucket_starts != null, but _bucket Out of Bounds!)"
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
    (builtin "One Step Simplification" (formula "27"))
   (rule "false_right" (formula "27"))
   (rule "polySimp_homoEq" (formula "18") (term "0,1,1"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,1"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,1,1"))
   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1"))
   (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,1"))
   (rule "inEqSimp_ltToLeq" (formula "12"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "12") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
   (rule "add_zero_right" (formula "1") (term "0,0,1"))
   (rule "inEqSimp_homoInEq0" (formula "10"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0"))
   (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
   (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0"))
   (rule "jmod_axiom" (formula "18") (term "0,1,1,1"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,1,1"))
   (rule "polySimp_sepNegMonomial" (formula "18") (term "0,1,1"))
   (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,1"))
   (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1"))
   (rule "polySimp_sepNegMonomial" (formula "18") (term "1,1,1"))
   (rule "polySimp_mulLiterals" (formula "18") (term "0,1,1,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "12"))
   (rule "polySimp_mulLiterals" (formula "12") (term "0"))
   (rule "polySimp_elimOne" (formula "12") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
   (rule "mul_literals" (formula "1") (term "1,1"))
   (rule "inEqSimp_sepNegMonomial1" (formula "10"))
   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
   (rule "polySimp_elimOne" (formula "10") (term "0"))
   (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "11"))
   (rule "qeq_literals" (formula "1") (term "0,1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "13") (term "0"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "translateJavaAddInt" (formula "13") (term "3,0,1,0"))
   (rule "translateJavaAddInt" (formula "13") (term "0,1,0,0"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "polySimp_addComm0" (formula "15") (term "3,0"))
   (rule "polySimp_addComm0" (formula "14") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "13"))
   (rule "inEqSimp_commuteLeq" (formula "14"))
   (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
   (rule "polySimp_rightDist" (formula "14") (term "0,0"))
   (rule "mul_literals" (formula "14") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "14"))
   (rule "polySimp_mulLiterals" (formula "14") (term "0"))
   (rule "polySimp_elimOne" (formula "14") (term "0"))
   (rule "inEqSimp_contradEq3" (formula "22") (term "0,1,1") (ifseqformula "14"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,1"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,1"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,1"))
   (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,1,1"))
   (rule "add_literals" (formula "22") (term "0,0,0,0,0,1,1"))
   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,1,1"))
   (rule "add_literals" (formula "22") (term "1,1,0,0,0,1,1"))
   (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,1"))
   (rule "add_zero_right" (formula "22") (term "0,0,0,1,1"))
   (rule "qeq_literals" (formula "22") (term "0,0,1,1"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "12"))
   (rule "andLeft" (formula "14"))
   (rule "inEqSimp_homoInEq1" (formula "14"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0"))
   (rule "polySimp_addComm1" (formula "14") (term "0,0"))
   (rule "add_literals" (formula "14") (term "0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
   (rule "add_literals" (formula "14") (term "1,1,0"))
   (rule "times_zero_1" (formula "14") (term "1,0"))
   (rule "add_literals" (formula "14") (term "0"))
   (rule "leq_literals" (formula "14"))
   (rule "closeFalse" (formula "14"))
)
)
}
