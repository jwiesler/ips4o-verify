\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Apr 17 12:44:37 CEST 2023
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , finalFields-finalFields\\:immutable
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Mon Apr 17 12:44:37 CEST 2023
contract=de.wiesler.Classifier[de.wiesler.Classifier\\:\\:classify_all([I,int,int,[I)].JML normal_behavior operation contract.0
name=de.wiesler.Classifier[de.wiesler.Classifier\\:\\:classify_all([I,int,int,[I)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "2" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "3" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "4" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "248440")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "expand_inInt" (formula "1") (term "1,0,0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "16"))
(rule "eqSymm" (formula "15"))
(rule "translateJavaSubInt" (formula "15") (term "1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "24"))
 (builtin "One Step Simplification" (formula "4"))
(rule "replace_known_right" (formula "9") (term "0") (ifseqformula "25"))
 (builtin "One Step Simplification" (formula "9"))
(rule "polySimp_elimSub" (formula "15") (term "1"))
(rule "polySimp_addComm0" (formula "15") (term "1"))
(rule "disjointDefinition" (formula "21"))
 (builtin "One Step Simplification" (formula "21"))
(rule "notLeft" (formula "21"))
(rule "disjointDefinition" (formula "20"))
 (builtin "One Step Simplification" (formula "20"))
(rule "notLeft" (formula "20"))
(rule "eqSymm" (formula "21"))
(rule "disjointDefinition" (formula "19"))
 (builtin "One Step Simplification" (formula "19"))
(rule "notLeft" (formula "19"))
(rule "eqSymm" (formula "20"))
(rule "disjointDefinition" (formula "18"))
 (builtin "One Step Simplification" (formula "18"))
(rule "notLeft" (formula "18"))
(rule "eqSymm" (formula "19"))
(rule "disjointDefinition" (formula "16"))
 (builtin "One Step Simplification" (formula "16"))
(rule "notLeft" (formula "16"))
(rule "disjointDefinition" (formula "16"))
 (builtin "One Step Simplification" (formula "16"))
(rule "notLeft" (formula "16"))
(rule "eqSymm" (formula "17"))
(rule "inEqSimp_commuteLeq" (formula "14"))
(rule "inEqSimp_commuteLeq" (formula "13"))
(rule "inEqSimp_commuteLeq" (formula "12"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "assignment" (formula "26") (term "1"))
 (builtin "One Step Simplification" (formula "26"))
(rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_classify_all,savedHeapBefore_classify_all,_beginBefore_classify_all,_endBefore_classify_all,_indicesBefore_classify_all,_valuesBefore_classify_all"))
 (builtin "One Step Simplification" (formula "26"))
(rule "methodCallUnfoldTarget" (formula "26") (term "1") (inst "#v0=t"))
(rule "variableDeclaration" (formula "26") (term "1") (newnames "t"))
(rule "assignment_read_attribute_this_final" (formula "26"))
 (builtin "One Step Simplification" (formula "26"))
 (builtin "Use Operation Contract" (formula "26") (newnames "heapBefore_classify_all_0,exc_25,heapAfter_classify_all,anon_heap_classify_all") (contract "de.wiesler.Tree[de.wiesler.Tree::classify_all([I,int,int,[I)].JML normal_behavior operation contract.0"))
(branch "Post (classify_all)"
    (builtin "One Step Simplification" (formula "28"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "expand_inInt" (formula "18") (term "1,0,0,0,1,0,1"))
   (rule "expand_inInt" (formula "18") (term "1,0,0,0,1,1,0,1"))
   (rule "replace_int_MAX" (formula "18") (term "1,0,1,0,0,0,1,0,1"))
   (rule "replace_int_MIN" (formula "18") (term "0,1,1,0,0,0,1,0,1"))
   (rule "replace_int_MAX" (formula "18") (term "1,0,1,0,0,0,1,1,0,1"))
   (rule "replace_int_MIN" (formula "18") (term "0,1,1,0,0,0,1,1,0,1"))
   (rule "andLeft" (formula "18"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "20"))
   (rule "translateJavaMulInt" (formula "19") (term "1,1,1,0"))
   (rule "eqSymm" (formula "20") (term "1,0"))
   (rule "translateJavaAddInt" (formula "20") (term "0,2,2,0,1,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "19") (term "1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "20") (term "1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0"))
   (rule "applyEq" (formula "20") (term "1,1,0,0,0") (ifseqformula "15"))
   (rule "applyEq" (formula "19") (term "1,1,0,0,0") (ifseqformula "15"))
   (rule "commute_and" (formula "19") (term "1,0"))
   (rule "commute_and" (formula "19") (term "1,0,0"))
   (rule "commute_and" (formula "20") (term "1,0,0"))
   (rule "commute_and" (formula "20") (term "0,0,0"))
   (rule "commute_and" (formula "19") (term "0,0,0"))
   (rule "shift_paren_and" (formula "20") (term "0,0"))
   (rule "commute_and_2" (formula "20") (term "0,0,0"))
   (rule "shift_paren_and" (formula "19") (term "0,0"))
   (rule "commute_and_2" (formula "19") (term "0,0,0"))
   (rule "ifElseUnfold" (formula "33") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "33") (term "1") (newnames "x"))
   (rule "assignment_read_attribute_this_final" (formula "33"))
    (builtin "One Step Simplification" (formula "33"))
   (rule "arrayLengthIsAShort" (formula "15") (term "0"))
   (rule "expand_inShort" (formula "15"))
   (rule "replace_short_MIN" (formula "15") (term "0,1"))
   (rule "replace_short_MAX" (formula "15") (term "1,0"))
   (rule "andLeft" (formula "15"))
   (rule "inEqSimp_commuteLeq" (formula "16"))
   (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
   (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
   (rule "arrayLengthNotNegative" (formula "17") (term "0"))
   (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
   (rule "arrayLengthNotNegative" (formula "14") (term "0"))
   (rule "arrayLengthIsAShort" (formula "15") (term "0"))
   (rule "expand_inShort" (formula "15"))
   (rule "replace_short_MAX" (formula "15") (term "1,0"))
   (rule "replace_short_MIN" (formula "15") (term "0,1"))
   (rule "andLeft" (formula "15"))
   (rule "inEqSimp_commuteLeq" (formula "16"))
   (rule "ifElseSplit" (formula "39"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "40"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "for_to_while" (formula "40") (term "1") (inst "#outerLabel=_label3") (inst "#innerLabel=_label2"))
      (rule "variableDeclarationAssign" (formula "40") (term "1"))
      (rule "variableDeclaration" (formula "40") (term "1") (newnames "i"))
      (rule "assignment" (formula "40") (term "1"))
       (builtin "One Step Simplification" (formula "40"))
      (rule "loopScopeInvDia" (formula "40") (term "1") (newnames "i_0,o,f") (inst "#x=x_1") (inst "#variant=x") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_heap_LOOP=anon_heap_LOOP_0"))
      (branch "Invariant Initially Valid"
         (rule "closeTrue" (formula "40"))
      )
      (branch "Invariant Preserved and Used"
          (builtin "One Step Simplification" (formula "41"))
         (rule "expand_inInt" (formula "41") (term "1,0,0,1,0,0,0"))
         (rule "expand_inInt" (formula "41") (term "1,0,0,1,0,0"))
         (rule "replace_int_MAX" (formula "41") (term "1,0,1,0,0,1,0,0,0"))
         (rule "replace_int_MIN" (formula "41") (term "0,1,1,0,0,1,0,0,0"))
         (rule "replace_int_MAX" (formula "41") (term "1,0,1,0,0,1,0,0"))
         (rule "replace_int_MIN" (formula "41") (term "0,1,1,0,0,1,0,0"))
         (rule "impRight" (formula "41"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "translateJavaSubInt" (formula "47") (term "0,1,1,0,1"))
         (rule "translateJavaSubInt" (formula "47") (term "0,1,1,0"))
         (rule "translateJavaAddInt" (formula "4") (term "0,2,2,0,1,0"))
         (rule "translateJavaAddInt" (formula "3") (term "0,2,2,0,1,0"))
         (rule "polySimp_elimSub" (formula "47") (term "0,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "47") (term "0,1,1,0"))
         (rule "polySimp_addComm0" (formula "47") (term "0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "47") (term "0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "4") (term "1,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "2"))
         (rule "inEqSimp_commuteLeq" (formula "1"))
         (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_1"))
         (rule "applyEq" (formula "4") (term "1,1,0,0,0") (ifseqformula "29"))
         (rule "applyEq" (formula "47") (term "1,0,1,1,0") (ifseqformula "29"))
         (rule "polySimp_addComm0" (formula "47") (term "0,1,1,0"))
         (rule "applyEq" (formula "2") (term "0") (ifseqformula "29"))
         (rule "inEqSimp_commuteGeq" (formula "2"))
         (rule "commute_and" (formula "4") (term "1,0,0"))
         (rule "commute_and" (formula "3") (term "1,0,0"))
         (rule "commute_and" (formula "3") (term "0,0,0"))
         (rule "commute_and" (formula "4") (term "0,0,0"))
         (rule "commute_and_2" (formula "4") (term "0,0"))
         (rule "shift_paren_and" (formula "3") (term "0,0"))
         (rule "commute_and_2" (formula "3") (term "0,0,0"))
         (rule "shift_paren_and" (formula "4") (term "0,0,0"))
         (rule "ifElseUnfold" (formula "47") (term "1") (inst "#boolv=x_2"))
         (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_2"))
         (rule "compound_less_than_comparison_2" (formula "47") (term "1") (inst "#v1=x_4") (inst "#v0=x_3"))
         (rule "variableDeclarationAssign" (formula "47") (term "1"))
         (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_3"))
         (rule "assignment" (formula "47") (term "1"))
          (builtin "One Step Simplification" (formula "47"))
         (rule "variableDeclarationAssign" (formula "47") (term "1"))
         (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_4"))
         (rule "assignment_read_length" (formula "47"))
         (branch "Normal Execution (_indices != null)"
             (builtin "One Step Simplification" (formula "47"))
            (rule "applyEq" (formula "47") (term "0,1,0") (ifseqformula "29"))
            (rule "less_than_comparison_simple" (formula "47") (term "1"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "38") (term "0,0") (ifseqformula "9") (ifseqformula "10"))
            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "43") (term "0") (ifseqformula "10") (ifseqformula "11"))
            (rule "ifElseSplit" (formula "49"))
            (branch "if x_2 true"
                (builtin "One Step Simplification" (formula "50"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "variableDeclarationFinalAssign" (formula "50") (term "1"))
               (rule "variableDeclarationFinal" (formula "50") (term "1") (newnames "value"))
               (rule "eval_order_array_access5" (formula "50") (term "1") (inst "#v1=x_2") (inst "#ar1=x_arr"))
               (rule "variableDeclarationAssign" (formula "50") (term "1"))
               (rule "variableDeclaration" (formula "50") (term "1") (newnames "x_arr"))
               (rule "assignment" (formula "50") (term "1"))
                (builtin "One Step Simplification" (formula "50"))
               (rule "variableDeclarationAssign" (formula "50") (term "1"))
               (rule "variableDeclaration" (formula "50") (term "1") (newnames "x_5"))
               (rule "assignmentAdditionInt" (formula "50") (term "1"))
               (branch "Overflow check"
                   (builtin "One Step Simplification" (formula "50"))
                  (rule "expand_inInt" (formula "50"))
                  (rule "replace_int_MAX" (formula "50") (term "1,0"))
                  (rule "replace_int_MIN" (formula "50") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0"))
                  (rule "polySimp_mulAssoc" (formula "36") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "29"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "30"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0"))
                  (rule "inEqSimp_homoInEq0" (formula "50") (term "0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "50") (term "1"))
                  (rule "mul_literals" (formula "50") (term "1,0,1"))
                  (rule "polySimp_addComm1" (formula "50") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "50") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                  (rule "polySimp_elimOne" (formula "31") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                  (rule "mul_literals" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                  (rule "polySimp_elimOne" (formula "29") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                  (rule "polySimp_elimOne" (formula "30") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "49") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "49") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "49") (term "1,1"))
                  (rule "mul_literals" (formula "49") (term "0,1,1"))
                  (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "24"))
                  (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                  (rule "add_literals" (formula "30") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0"))
                  (rule "qeq_literals" (formula "30") (term "0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "true_left" (formula "30"))
                  (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0"))
                  (rule "add_zero_right" (formula "5") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0"))
                  (rule "qeq_literals" (formula "5") (term "0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "22"))
                  (rule "leq_literals" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "23"))
                  (rule "leq_literals" (formula "25") (term "0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "25") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "25"))
                  (rule "leq_literals" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "4") (term "0,0"))
                  (rule "add_zero_left" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0"))
                  (rule "qeq_literals" (formula "22") (term "0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "26"))
                  (rule "mul_literals" (formula "17") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                  (rule "add_literals" (formula "17") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                  (rule "mul_literals" (formula "17") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "22"))
                  (rule "leq_literals" (formula "17") (term "0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "24"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "4"))
                  (rule "leq_literals" (formula "17") (term "0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "inEqSimp_and_subsumption3" (formula "32") (term "0,0,0"))
                  (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "inEqSimp_and_subsumption3" (formula "7") (term "0,0,0"))
                  (rule "leq_literals" (formula "7") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "inEqSimp_and_subsumption3" (formula "31") (term "0,0,0"))
                  (rule "leq_literals" (formula "31") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "nnf_imp2or" (formula "8") (term "0"))
                  (rule "nnf_imp2or" (formula "32") (term "0"))
                  (rule "nnf_imp2or" (formula "7") (term "0"))
                  (rule "nnf_imp2or" (formula "31") (term "0"))
                  (rule "nnf_notAnd" (formula "8") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "32") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                  (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                  (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "7") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                  (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                  (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "31") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                  (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                  (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                  (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "9"))
                  (rule "notLeft" (formula "9"))
                  (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "36"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "35"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "9") (inst "i_0=i_0") (inst "i=i"))
                  (rule "andLeft" (formula "9"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "expand_inInt" (formula "10") (term "1,0,0"))
                  (rule "expand_inInt" (formula "9") (term "1,0,0,1"))
                  (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0"))
                  (rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0"))
                  (rule "replace_int_MAX" (formula "9") (term "1,0,1,0,0,1"))
                  (rule "replace_int_MIN" (formula "9") (term "0,1,1,0,0,1"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "11"))
                  (rule "notLeft" (formula "9"))
                  (rule "notLeft" (formula "9"))
                  (rule "eqSymm" (formula "17") (term "1,0"))
                  (rule "translateJavaSubInt" (formula "15") (term "3,0"))
                  (rule "translateJavaShiftLeftInt" (formula "11") (term "1"))
                  (rule "translateJavaSubInt" (formula "17") (term "0,2,0,1,0"))
                  (rule "polySimp_elimSub" (formula "15") (term "3,0"))
                  (rule "mul_literals" (formula "15") (term "1,3,0"))
                  (rule "polySimp_elimSub" (formula "17") (term "0,2,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,2,0,1,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "3,0"))
                  (rule "polySimp_addComm0" (formula "17") (term "0,2,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "16") (term "0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "16") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "14"))
                  (rule "inEqSimp_commuteLeq" (formula "12"))
                  (rule "inEqSimp_commuteLeq" (formula "13"))
                  (rule "inEqSimp_commuteLeq" (formula "9"))
                  (rule "applyEq" (formula "13") (term "1") (ifseqformula "11"))
                  (rule "applyEq" (formula "14") (term "1") (ifseqformula "11"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                  (rule "applyEq" (formula "38") (term "1,1,1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "38") (term "0,1,1,0,1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "15") (term "1,3,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "16") (term "0,1,0,0,1,1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,0") (ifseqformula "11"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                  (rule "javaShiftLeftIntDef" (formula "11") (term "1"))
                  (rule "mod_axiom" (formula "11") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1"))
                  (rule "javaShiftLeftIntDef" (formula "13") (term "1"))
                  (rule "mod_axiom" (formula "13") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1"))
                  (rule "javaShiftLeftIntDef" (formula "14") (term "1"))
                  (rule "mod_axiom" (formula "14") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1"))
                  (rule "javaShiftLeftIntDef" (formula "12") (term "0"))
                  (rule "mod_axiom" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                  (rule "javaShiftLeftIntDef" (formula "38") (term "1,1,1,0"))
                  (rule "mod_axiom" (formula "38") (term "1,0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,1,1,0"))
                  (rule "javaShiftLeftIntDef" (formula "38") (term "0,1,1,0,1,0"))
                  (rule "mod_axiom" (formula "38") (term "1,0,0,1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,1,0,1,0"))
                  (rule "javaShiftLeftIntDef" (formula "15") (term "1,3,0"))
                  (rule "mod_axiom" (formula "15") (term "1,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,3,0"))
                  (rule "javaShiftLeftIntDef" (formula "17") (term "1,1,1,0,0,0"))
                  (rule "mod_axiom" (formula "17") (term "1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "javaShiftLeftIntDef" (formula "16") (term "1,1,1,1,0"))
                  (rule "mod_axiom" (formula "16") (term "1,0,1,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,1,1,1,0"))
                  (rule "javaShiftLeftIntDef" (formula "16") (term "1,1,1,0,0,0"))
                  (rule "mod_axiom" (formula "16") (term "1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "shiftLeftDef" (formula "11") (term "0,1"))
                  (rule "eqSymm" (formula "11"))
                  (rule "polySimp_elimNeg" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "11") (term "2,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "11") (term "2,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "11") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0"))
                  (rule "shiftLeftDef" (formula "13") (term "0,1"))
                  (rule "polySimp_elimNeg" (formula "13") (term "1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,0,1"))
                  (rule "shiftLeftPositiveShiftDef" (formula "13") (term "2,0,1"))
                  (rule "polySimp_elimOneLeft0" (formula "13") (term "2,0,1"))
                  (rule "shiftRightPositiveShiftDef" (formula "13") (term "1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteGeq" (formula "13"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "11"))
                  (rule "inEqSimp_commuteLeq" (formula "13"))
                  (rule "shiftLeftDef" (formula "14") (term "0,1"))
                  (rule "polySimp_elimNeg" (formula "14") (term "1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,0,1"))
                  (rule "shiftLeftPositiveShiftDef" (formula "14") (term "2,0,1"))
                  (rule "polySimp_elimOneLeft0" (formula "14") (term "2,0,1"))
                  (rule "shiftRightPositiveShiftDef" (formula "14") (term "1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteGeq" (formula "14"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "11"))
                  (rule "inEqSimp_commuteLeq" (formula "14"))
                  (rule "shiftLeftDef" (formula "12") (term "0,0"))
                  (rule "polySimp_elimNeg" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "12") (term "2,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "12") (term "2,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "12") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                  (rule "shiftLeftDef" (formula "38") (term "0,1,1,1,0"))
                  (rule "polySimp_elimNeg" (formula "38") (term "1,1,0,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,1,0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "0,1,1,0,1,1,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "38") (term "2,0,1,1,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "38") (term "2,0,1,1,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "38") (term "1,0,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,1,1,0"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,1,1,1,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,0,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,1,1,1,0"))
                  (rule "applyEq" (formula "38") (term "1,1,1,0") (ifseqformula "11"))
                  (rule "shiftLeftDef" (formula "38") (term "0,0,1,1,0,1,0"))
                  (rule "polySimp_elimNeg" (formula "38") (term "1,1,0,0,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "0,1,1,0,0,1,1,0,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "38") (term "2,0,0,1,1,0,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "38") (term "2,0,0,1,1,0,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "38") (term "1,0,0,1,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,1,1,0,1,0"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,1,1,0,1,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,0,0,1,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,1,1,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,0,1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0,1,1,0,1,0"))
                  (rule "applyEq" (formula "38") (term "0,1,1,0,1,0") (ifseqformula "11"))
                  (rule "shiftLeftDef" (formula "15") (term "0,1,3,0"))
                  (rule "polySimp_elimNeg" (formula "15") (term "1,1,0,1,3,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1,3,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,1,3,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,0,1,3,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "15") (term "2,0,1,3,0"))
                  (rule "polySimp_elimOneLeft0" (formula "15") (term "2,0,1,3,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "15") (term "1,0,1,3,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1,3,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1,3,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0,1,3,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,3,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1,3,0"))
                  (rule "applyEq" (formula "15") (term "1,3,0") (ifseqformula "11"))
                  (rule "shiftLeftDef" (formula "17") (term "0,1,1,1,0,0,0"))
                  (rule "polySimp_elimNeg" (formula "17") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "0,1,1,0,1,1,1,0,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "17") (term "2,0,1,1,1,0,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "17") (term "2,0,1,1,1,0,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "17") (term "1,0,1,1,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0,0,1,1,1,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0,1,1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,1,1,0,0,0"))
                  (rule "applyEq" (formula "17") (term "1,1,1,0,0,0") (ifseqformula "11"))
                  (rule "shiftLeftDef" (formula "16") (term "0,1,1,1,1,0"))
                  (rule "polySimp_elimNeg" (formula "16") (term "1,1,0,1,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,1,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,1,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,0,1,1,1,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "16") (term "2,0,1,1,1,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "16") (term "2,0,1,1,1,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "16") (term "1,0,1,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,1,1,1,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1,1,1,1,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0,1,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,1,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,1,1,1,0"))
                  (rule "applyEq" (formula "16") (term "1,1,1,1,0") (ifseqformula "11"))
                  (rule "shiftLeftDef" (formula "16") (term "0,1,1,1,0,0,0"))
                  (rule "polySimp_elimNeg" (formula "16") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,0,1,1,1,0,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "16") (term "2,0,1,1,1,0,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "16") (term "2,0,1,1,1,0,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "16") (term "1,0,1,1,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,1,1,0,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1,1,1,0,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0,1,1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,1,1,0,0,0"))
                  (rule "applyEq" (formula "16") (term "1,1,1,0,0,0") (ifseqformula "11"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,0,0"))
                  (rule "expand_moduloInteger" (formula "11") (term "0"))
                  (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0"))
                  (rule "replace_int_MIN" (formula "11") (term "0,0"))
                  (rule "replace_int_RANGE" (formula "11") (term "1,1,0"))
                  (rule "polySimp_homoEq" (formula "11"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                  (rule "nnf_imp2or" (formula "17") (term "0"))
                  (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "41") (inst "i_0=i_0") (inst "i=i_1"))
                   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "44")) (ifInst ""  (formula "43")) (ifInst ""  (formula "10")))
                  (rule "expand_inInt" (formula "41") (term "1,0,0,1"))
                  (rule "expand_inInt" (formula "41") (term "1,0,0,1,0"))
                  (rule "replace_int_MIN" (formula "41") (term "0,1,1,0,0,1"))
                  (rule "replace_int_MAX" (formula "41") (term "1,0,1,0,0,1"))
                  (rule "replace_int_MIN" (formula "41") (term "0,1,1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "41") (term "1,0,1,0,0,1,0"))
                  (rule "andLeft" (formula "41"))
                  (rule "andLeft" (formula "41"))
                  (rule "andLeft" (formula "41"))
                  (rule "andLeft" (formula "41"))
                  (rule "andLeft" (formula "41"))
                  (rule "andLeft" (formula "42"))
                  (rule "andLeft" (formula "41"))
                  (rule "translateJavaSubInt" (formula "48") (term "0,2,1,1,0"))
                  (rule "translateJavaSubInt" (formula "46") (term "3,0"))
                  (rule "translateJavaShiftLeftInt" (formula "42") (term "1"))
                  (rule "eqSymm" (formula "48") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "46") (term "3,0"))
                  (rule "mul_literals" (formula "46") (term "1,3,0"))
                  (rule "polySimp_elimSub" (formula "48") (term "0,2,0,1,0"))
                  (rule "mul_literals" (formula "48") (term "1,0,2,0,1,0"))
                  (rule "polySimp_addComm0" (formula "46") (term "3,0"))
                  (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "47") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "48") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "47") (term "0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "47") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "45"))
                  (rule "inEqSimp_commuteLeq" (formula "43"))
                  (rule "inEqSimp_commuteLeq" (formula "43"))
                  (rule "inEqSimp_commuteLeq" (formula "41"))
                  (rule "applyEq" (formula "38") (term "0,1,1,0,1,0") (ifseqformula "41"))
                  (rule "applyEq" (formula "14") (term "1") (ifseqformula "41"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "41"))
                  (rule "applyEq" (formula "42") (term "1,3,0") (ifseqformula "41"))
                  (rule "applyEq" (formula "16") (term "1,1,1,1,0") (ifseqformula "41"))
                  (rule "applyEq" (formula "15") (term "1,3,0") (ifseqformula "41"))
                  (rule "applyEq" (formula "38") (term "1,1,1,0") (ifseqformula "41"))
                  (rule "applyEq" (formula "16") (term "1,1,1,0,0,0") (ifseqformula "41"))
                  (rule "applyEq" (formula "17") (term "1,1,1,0,0,0,0") (ifseqformula "41"))
                  (rule "applyEq" (formula "13") (term "1") (ifseqformula "41"))
                  (rule "applyEq" (formula "44") (term "0,1,0,0,1,0,0,0") (ifseqformula "41"))
                  (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "41"))
                  (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0,0") (ifseqformula "41"))
                  (rule "applyEq" (formula "43") (term "0,1,0,0,1,1,0") (ifseqformula "41"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,1,0"))
                  (rule "mul_literals" (formula "43") (term "0,1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "43") (term "1,1,1,1,0"))
                  (rule "javaShiftLeftIntDef" (formula "41") (term "1"))
                  (rule "mod_axiom" (formula "41") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1"))
                  (rule "javaShiftLeftIntDef" (formula "38") (term "0,1,1,0,1,0"))
                  (rule "mod_axiom" (formula "38") (term "1,0,0,1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,1,0,1,0"))
                  (rule "javaShiftLeftIntDef" (formula "14") (term "1"))
                  (rule "mod_axiom" (formula "14") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1"))
                  (rule "javaShiftLeftIntDef" (formula "12") (term "0"))
                  (rule "mod_axiom" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                  (rule "javaShiftLeftIntDef" (formula "42") (term "1,3,0"))
                  (rule "mod_axiom" (formula "42") (term "1,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,3,0"))
                  (rule "javaShiftLeftIntDef" (formula "16") (term "1,1,1,1,0"))
                  (rule "mod_axiom" (formula "16") (term "1,0,1,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,1,1,1,0"))
                  (rule "javaShiftLeftIntDef" (formula "15") (term "1,3,0"))
                  (rule "mod_axiom" (formula "15") (term "1,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,3,0"))
                  (rule "javaShiftLeftIntDef" (formula "38") (term "1,1,1,0"))
                  (rule "mod_axiom" (formula "38") (term "1,0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,1,1,0"))
                  (rule "javaShiftLeftIntDef" (formula "16") (term "1,1,1,0,0,0"))
                  (rule "mod_axiom" (formula "16") (term "1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "javaShiftLeftIntDef" (formula "17") (term "1,1,1,0,0,0,0"))
                  (rule "mod_axiom" (formula "17") (term "1,0,1,1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,1,1,0,0,0,0"))
                  (rule "javaShiftLeftIntDef" (formula "13") (term "1"))
                  (rule "mod_axiom" (formula "13") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1"))
                  (rule "javaShiftLeftIntDef" (formula "11") (term "1,1"))
                  (rule "mod_axiom" (formula "11") (term "1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1"))
                  (rule "javaShiftLeftIntDef" (formula "43") (term "1,1,1,0,0,0"))
                  (rule "mod_axiom" (formula "43") (term "1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "shiftLeftDef" (formula "41") (term "0,1"))
                  (rule "eqSymm" (formula "41"))
                  (rule "polySimp_elimNeg" (formula "41") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "41") (term "2,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "41") (term "2,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "41") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                  (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0,0"))
                  (rule "shiftLeftDef" (formula "38") (term "0,0,1,1,0,1,0"))
                  (rule "polySimp_elimNeg" (formula "38") (term "1,1,0,0,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "0,1,1,0,0,1,1,0,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "38") (term "2,0,0,1,1,0,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "38") (term "2,0,0,1,1,0,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "38") (term "1,0,0,1,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,1,1,0,1,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,1,1,0,1,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,0,0,1,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,1,1,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,0,1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0,1,1,0,1,0"))
                  (rule "applyEq" (formula "38") (term "0,1,1,0,1,0") (ifseqformula "41"))
                  (rule "shiftLeftDef" (formula "14") (term "0,1"))
                  (rule "polySimp_elimNeg" (formula "14") (term "1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,0,1"))
                  (rule "shiftLeftPositiveShiftDef" (formula "14") (term "2,0,1"))
                  (rule "polySimp_elimOneLeft0" (formula "14") (term "2,0,1"))
                  (rule "shiftRightPositiveShiftDef" (formula "14") (term "1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1"))
                  (rule "add_zero_right" (formula "14") (term "0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteGeq" (formula "14"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "41"))
                  (rule "inEqSimp_commuteLeq" (formula "14"))
                  (rule "shiftLeftDef" (formula "12") (term "0,0"))
                  (rule "polySimp_elimNeg" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "12") (term "2,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "12") (term "2,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "12") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "41"))
                  (rule "shiftLeftDef" (formula "42") (term "0,1,3,0"))
                  (rule "polySimp_elimNeg" (formula "42") (term "1,1,0,1,3,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,1,3,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,1,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,1,3,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "0,1,1,0,1,3,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "42") (term "2,0,1,3,0"))
                  (rule "polySimp_elimOneLeft0" (formula "42") (term "2,0,1,3,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "42") (term "1,0,1,3,0"))
                  (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,1,3,0"))
                  (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,1,3,0"))
                  (rule "add_literals" (formula "42") (term "0,0,0,0,1,3,0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,1,3,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0,1,3,0"))
                  (rule "applyEq" (formula "42") (term "1,3,0") (ifseqformula "41"))
                  (rule "shiftLeftDef" (formula "16") (term "0,1,1,1,1,0"))
                  (rule "polySimp_elimNeg" (formula "16") (term "1,1,0,1,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,1,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,1,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,0,1,1,1,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "16") (term "2,0,1,1,1,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "16") (term "2,0,1,1,1,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "16") (term "1,0,1,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,1,1,1,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1,1,1,1,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0,1,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,1,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,1,1,1,0"))
                  (rule "applyEq" (formula "16") (term "1,1,1,1,0") (ifseqformula "41"))
                  (rule "shiftLeftDef" (formula "15") (term "0,1,3,0"))
                  (rule "polySimp_elimNeg" (formula "15") (term "1,1,0,1,3,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1,3,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,1,3,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,0,1,3,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "15") (term "2,0,1,3,0"))
                  (rule "polySimp_elimOneLeft0" (formula "15") (term "2,0,1,3,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "15") (term "1,0,1,3,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1,3,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1,3,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0,1,3,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,3,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1,3,0"))
                  (rule "applyEq" (formula "15") (term "1,3,0") (ifseqformula "41"))
                  (rule "shiftLeftDef" (formula "38") (term "0,1,1,1,0"))
                  (rule "polySimp_elimNeg" (formula "38") (term "1,1,0,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,1,0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "0,1,1,0,1,1,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "38") (term "2,0,1,1,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "38") (term "2,0,1,1,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "38") (term "1,0,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,1,1,0"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,1,1,1,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,0,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,1,1,1,0"))
                  (rule "applyEq" (formula "38") (term "1,1,1,0") (ifseqformula "41"))
                  (rule "shiftLeftDef" (formula "16") (term "0,1,1,1,0,0,0"))
                  (rule "polySimp_elimNeg" (formula "16") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,0,1,1,1,0,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "16") (term "2,0,1,1,1,0,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "16") (term "2,0,1,1,1,0,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "16") (term "1,0,1,1,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,1,1,0,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1,1,1,0,0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0,0,0,1,1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,1,1,0,0,0"))
                  (rule "applyEq" (formula "16") (term "1,1,1,0,0,0") (ifseqformula "41"))
                  (rule "shiftLeftDef" (formula "17") (term "0,1,1,1,0,0,0,0"))
                  (rule "polySimp_elimNeg" (formula "17") (term "1,1,0,1,1,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "0,1,1,0,1,1,1,0,0,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "17") (term "2,0,1,1,1,0,0,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "17") (term "2,0,1,1,1,0,0,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "17") (term "1,0,1,1,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1,1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1,1,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,0,0,1,1,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,1,1,0,0,0,0"))
                  (rule "applyEq" (formula "17") (term "1,1,1,0,0,0,0") (ifseqformula "41"))
                  (rule "shiftLeftDef" (formula "13") (term "0,1"))
                  (rule "polySimp_elimNeg" (formula "13") (term "1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,0,1"))
                  (rule "shiftLeftPositiveShiftDef" (formula "13") (term "2,0,1"))
                  (rule "polySimp_elimOneLeft0" (formula "13") (term "2,0,1"))
                  (rule "shiftRightPositiveShiftDef" (formula "13") (term "1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteGeq" (formula "13"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "41"))
                  (rule "inEqSimp_commuteLeq" (formula "13"))
                  (rule "shiftLeftDef" (formula "11") (term "0,1,1"))
                  (rule "polySimp_elimNeg" (formula "11") (term "1,1,0,1,1"))
                  (rule "polySimp_homoEq" (formula "11"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,0,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "11") (term "2,0,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "11") (term "2,0,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "11") (term "1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,1,0"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "11"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                  (rule "mul_literals" (formula "11") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0"))
                  (rule "polySimp_homoEq" (formula "11"))
                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                  (rule "applyEq" (formula "11") (term "0,1,0,0") (ifseqformula "41"))
                  (rule "polySimp_sepPosMonomial" (formula "11"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                  (rule "mul_literals" (formula "11") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                  (rule "shiftLeftDef" (formula "43") (term "0,1,1,1,0,0,0"))
                  (rule "polySimp_elimNeg" (formula "43") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "0,1,1,0,1,1,1,0,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "43") (term "2,0,1,1,1,0,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "43") (term "2,0,1,1,1,0,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "43") (term "1,0,1,1,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,0,0,0,0,1,1,1,0,0,0"))
                  (rule "add_literals" (formula "43") (term "0,0,0,0,1,1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,1,1,1,0,0,0"))
                  (rule "applyEq" (formula "43") (term "1,1,1,0,0,0") (ifseqformula "41"))
                  (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "notLeft" (formula "27"))
                  (rule "notLeft" (formula "27"))
                  (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "39"))
                  (rule "true_left" (formula "39"))
                  (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "34"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "19")))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "translateJavaSubInt" (formula "39") (term "0,2,1"))
                  (rule "translateJavaSubInt" (formula "39") (term "0,2,0"))
                  (rule "eqSymm" (formula "36"))
                  (rule "eqSymm" (formula "39"))
                  (rule "translateJavaMulInt" (formula "36") (term "0"))
                  (rule "polySimp_elimSub" (formula "39") (term "0,2,1"))
                  (rule "mul_literals" (formula "39") (term "1,0,2,1"))
                  (rule "polySimp_elimSub" (formula "39") (term "0,2,0"))
                  (rule "mul_literals" (formula "39") (term "1,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "0"))
                  (rule "polySimp_addComm0" (formula "39") (term "0,2,1"))
                  (rule "polySimp_addComm0" (formula "39") (term "0,2,0"))
                  (rule "inEqSimp_commuteLeq" (formula "34"))
                  (rule "applyEq" (formula "17") (term "1,0,1,0") (ifseqformula "37"))
                  (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "37"))
                  (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "37"))
                  (rule "inEqSimp_commuteGeq" (formula "14"))
                  (rule "applyEq" (formula "50") (term "0") (ifseqformula "37"))
                  (rule "applyEq" (formula "47") (term "1,0,1,0") (ifseqformula "37"))
                  (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "37"))
                  (rule "applyEq" (formula "43") (term "1,1,0,1,0") (ifseqformula "36"))
                  (rule "newSym_eq" (formula "36") (inst "newSymDef=mul(int::final(self,
               de.wiesler.Classifier::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                  (rule "times_zero_1" (formula "36") (term "1,1"))
                  (rule "add_zero_right" (formula "36") (term "1"))
                  (rule "applyEq" (formula "17") (term "1,1,1,0,0,0,0") (ifseqformula "36"))
                  (rule "applyEq" (formula "15") (term "1,3,0") (ifseqformula "36"))
                  (rule "applyEq" (formula "16") (term "1,1,1,1,0") (ifseqformula "36"))
                  (rule "applyEq" (formula "48") (term "1,1,1,0,0,0") (ifseqformula "36"))
                  (rule "applyEq" (formula "47") (term "1,3,0") (ifseqformula "36"))
                  (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "36"))
                  (rule "eqSymm" (formula "37"))
                  (rule "applyEq" (formula "16") (term "1,1,1,0,0,0") (ifseqformula "36"))
                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "36"))
                  (rule "inEqSimp_commuteLeq" (formula "14"))
                  (rule "applyEq" (formula "40") (term "1,0,2,0") (ifseqformula "36"))
                  (rule "eqSymm" (formula "40"))
                  (rule "applyEq" (formula "44") (term "1,1,1,0") (ifseqformula "36"))
                  (rule "applyEq" (formula "39") (term "3,0") (ifseqformula "36"))
                  (rule "applyEq" (formula "13") (term "1") (ifseqformula "36"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "36"))
                  (rule "applyEq" (formula "35") (term "0") (ifseqformula "37"))
                  (rule "applyEq" (formula "44") (term "1,1,0,1,0") (ifseqformula "37"))
                  (rule "applyEq" (formula "40") (term "1,0,2,0") (ifseqformula "36"))
                  (rule "eqSymm" (formula "40"))
                  (rule "applyEq" (formula "34") (term "0") (ifseqformula "37"))
                  (rule "applyEq" (formula "46") (term "1") (ifseqformula "36"))
                  (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "36"))
                  (rule "inEqSimp_subsumption6" (formula "34") (ifseqformula "12"))
                  (rule "greater_literals" (formula "34") (term "0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "mul_literals" (formula "34") (term "1,0"))
                  (rule "leq_literals" (formula "34") (term "0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "true_left" (formula "34"))
                  (rule "elimGcdLeq_antec" (formula "34") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(4(6(#)))"))
                  (rule "leq_literals" (formula "34") (term "0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "neg_literal" (formula "34") (term "0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                  (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "34") (term "0,0,0,0"))
                  (rule "add_literals" (formula "34") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                  (rule "add_literals" (formula "34") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "34") (term "1,0,0"))
                  (rule "add_zero_right" (formula "34") (term "0,0"))
                  (rule "qeq_literals" (formula "34") (term "0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "true_left" (formula "34"))
                  (rule "expand_moduloInteger" (formula "44") (term "0"))
                  (rule "replace_int_HALFRANGE" (formula "44") (term "0,0,1,0"))
                  (rule "replace_int_RANGE" (formula "44") (term "1,1,0"))
                  (rule "replace_int_MIN" (formula "44") (term "0,0"))
                  (rule "polySimp_homoEq" (formula "44"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0"))
                  (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                  (rule "applyEq" (formula "44") (term "0,1,0") (ifseqformula "11"))
                  (rule "polySimp_pullOutFactor1" (formula "44") (term "0"))
                  (rule "add_literals" (formula "44") (term "1,0"))
                  (rule "times_zero_1" (formula "44") (term "0"))
                   (builtin "One Step Simplification" (formula "44"))
                  (rule "true_left" (formula "44"))
                  (rule "nnf_imp2or" (formula "45") (term "0"))
                  (rule "nnf_imp2or" (formula "16") (term "0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0"))
                  (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "1,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "45") (term "0,0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "17") (term "1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "45") (term "1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "45") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "45") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "45") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "45") (term "1,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "45") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "45") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "45") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "45") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "45") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "16") (term "1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,1,0,0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                  (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "39") (inst "i=i_1") (inst "i_0=i_0"))
                   (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "47")) (ifInst ""  (formula "10")))
                  (rule "expand_inInt" (formula "39") (term "1,0,0,1,0"))
                  (rule "expand_inInt" (formula "39") (term "1,0,0,1"))
                  (rule "replace_int_MAX" (formula "39") (term "1,0,1,0,0,1,0"))
                  (rule "replace_int_MIN" (formula "39") (term "0,1,1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "39") (term "1,0,1,0,0,1"))
                  (rule "replace_int_MIN" (formula "39") (term "0,1,1,0,0,1"))
                  (rule "andLeft" (formula "39"))
                  (rule "andLeft" (formula "39"))
                  (rule "andLeft" (formula "39"))
                  (rule "andLeft" (formula "39"))
                  (rule "andLeft" (formula "39"))
                  (rule "andLeft" (formula "40"))
                  (rule "andLeft" (formula "39"))
                  (rule "andLeft" (formula "39"))
                  (rule "notLeft" (formula "39"))
                  (rule "translateJavaSubInt" (formula "46") (term "0,2,1,1,0"))
                  (rule "translateJavaSubInt" (formula "44") (term "3,0"))
                  (rule "translateJavaShiftLeftInt" (formula "40") (term "1"))
                  (rule "eqSymm" (formula "46") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "44") (term "3,0"))
                  (rule "mul_literals" (formula "44") (term "1,3,0"))
                  (rule "polySimp_elimSub" (formula "46") (term "0,2,0,1,0"))
                  (rule "mul_literals" (formula "46") (term "1,0,2,0,1,0"))
                  (rule "polySimp_addComm0" (formula "44") (term "3,0"))
                  (rule "polySimp_addComm0" (formula "46") (term "0,2,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "45") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "46") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "45") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "45") (term "0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "43"))
                  (rule "inEqSimp_commuteLeq" (formula "41"))
                  (rule "inEqSimp_commuteLeq" (formula "42"))
                  (rule "inEqSimp_commuteLeq" (formula "39"))
                  (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "36"))
                  (rule "inEqSimp_commuteGeq" (formula "42"))
                  (rule "applyEq" (formula "41") (term "1") (ifseqformula "34"))
                  (rule "applyEq" (formula "40") (term "0") (ifseqformula "39"))
                  (rule "applyEq" (formula "42") (term "1,3,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "34") (term "0") (ifseqformula "39"))
                  (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "36"))
                  (rule "applyEq" (formula "44") (term "1,0,1,0") (ifseqformula "36"))
                  (rule "applyEq" (formula "52") (term "0") (ifseqformula "36"))
                  (rule "applyEq" (formula "44") (term "0,1,0,0,1,0,0,0") (ifseqformula "39"))
                  (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0,0") (ifseqformula "39"))
                  (rule "applyEq" (formula "43") (term "0,1,0,0,1,1,0") (ifseqformula "39"))
                  (rule "applyEq" (formula "41") (term "0") (ifseqformula "39"))
                  (rule "applyEq" (formula "40") (term "0") (ifseqformula "34"))
                  (rule "applyEq" (formula "39") (term "1") (ifseqformula "34"))
                  (rule "applyEq" (formula "40") (term "0") (ifseqformula "34"))
                  (rule "inEqSimp_commuteLeq" (formula "40"))
                  (rule "applyEq" (formula "41") (term "0,1,0,0,1,1,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "41") (term "0,1,0,0,1,0,0,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "42") (term "0,1,0,0,1,0,0,0") (ifseqformula "34"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,1,1,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,1,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0"))
                  (rule "javaShiftLeftIntDef" (formula "34") (term "0"))
                  (rule "mod_axiom" (formula "34") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                  (rule "shiftLeftDef" (formula "34") (term "0,0"))
                  (rule "polySimp_elimNeg" (formula "34") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "0,1,1,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "34") (term "2,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "34") (term "2,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "34") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                  (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0"))
                  (rule "nnf_imp2or" (formula "41") (term "0"))
                  (rule "nnf_imp2or" (formula "42") (term "0"))
                  (rule "expand_moduloInteger" (formula "34") (term "0"))
                  (rule "replace_int_MIN" (formula "34") (term "0,0"))
                  (rule "replace_int_RANGE" (formula "34") (term "1,1,0"))
                  (rule "replace_int_HALFRANGE" (formula "34") (term "0,0,1,0"))
                  (rule "polySimp_homoEq" (formula "34"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0"))
                  (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                  (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "11"))
                  (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
                  (rule "add_literals" (formula "34") (term "1,0"))
                  (rule "times_zero_1" (formula "34") (term "0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "true_left" (formula "34"))
                  (rule "nnf_notAnd" (formula "40") (term "0,0"))
                  (rule "nnf_notAnd" (formula "41") (term "0,0"))
                  (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "36") (term "0") (inst "i=i_1") (inst "j=j"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "expand_inInt" (formula "36") (term "1,0,0"))
                  (rule "expand_inInt" (formula "36") (term "1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "36") (term "1,0,1,0,0"))
                  (rule "replace_int_MIN" (formula "36") (term "0,1,1,0,0"))
                  (rule "replace_int_MIN" (formula "36") (term "0,1,1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "36") (term "1,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "36") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "36") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0"))
                  (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "17") (term "1,0,2,0,1,0"))
                  (rule "translateJavaSubInt" (formula "17") (term "0,1,1,1,0,2,0,1,0"))
                  (rule "polySimp_elimSub" (formula "17") (term "1,0,0,1,0,2,0,1,0"))
                  (rule "polySimp_elimSub" (formula "17") (term "0,1,1,1,0,2,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,1,1,1,0,2,0,1,0"))
                  (rule "polySimp_elimSub" (formula "17") (term "1,1,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,2,0,1,0"))
                  (rule "polySimp_addComm0" (formula "17") (term "0,1,0,1,0,2,0,1,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "0,1,1,0,2,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,1,0,2,0,1,0"))
                  (rule "polySimp_addComm1" (formula "17") (term "1,1,0,2,0,1,0"))
                  (rule "polySimp_addComm0" (formula "17") (term "0,1,1,0,2,0,1,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,2,0,1,0"))
                  (rule "polySimp_mulComm1" (formula "17") (term "1,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "0,1,1,0,2,0,1,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "0,1,0,2,0,1,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "0,0,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm1" (formula "17") (term "1,0,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,1,0,2,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,2,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,2,0,1,0"))
                  (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "46") (term "0") (inst "i=i_1") (inst "j=j"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "expand_inInt" (formula "46") (term "1,0,0"))
                  (rule "expand_inInt" (formula "46") (term "1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "46") (term "1,0,1,0,0"))
                  (rule "replace_int_MIN" (formula "46") (term "0,1,1,0,0"))
                  (rule "replace_int_MIN" (formula "46") (term "0,1,1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "46") (term "1,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "46") (term "1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "46") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "46") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0"))
                  (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "15") (term "0") (inst "i=i_1") (inst "j=j"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "expand_inInt" (formula "15") (term "1,0,0"))
                  (rule "expand_inInt" (formula "15") (term "1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "15") (term "1,0,1,0,0"))
                  (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0"))
                  (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "15") (term "1,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "40") (term "1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "40") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "40") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "40") (term "1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "40") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "40") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
                  (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "46") (term "1,0,2,0,1,0"))
                  (rule "translateJavaSubInt" (formula "46") (term "0,1,1,1,0,2,0,1,0"))
                  (rule "polySimp_elimSub" (formula "46") (term "1,0,0,1,0,2,0,1,0"))
                  (rule "polySimp_elimSub" (formula "46") (term "1,1,1,0,2,0,1,0"))
                  (rule "polySimp_elimSub" (formula "46") (term "0,1,1,1,0,2,0,1,0"))
                  (rule "mul_literals" (formula "46") (term "1,0,1,1,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,2,0,1,0"))
                  (rule "polySimp_addComm0" (formula "46") (term "0,1,0,1,0,2,0,1,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "0,1,1,0,2,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "0,0,1,1,0,2,0,1,0"))
                  (rule "polySimp_addComm1" (formula "46") (term "1,1,0,2,0,1,0"))
                  (rule "polySimp_addComm0" (formula "46") (term "0,1,1,0,2,0,1,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,2,0,1,0"))
                  (rule "polySimp_mulComm1" (formula "46") (term "1,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "0,1,1,0,2,0,1,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "0,1,0,2,0,1,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "0,0,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm1" (formula "46") (term "1,0,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "0,1,0,1,0,2,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "46") (term "0,2,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "46") (term "0,0,2,0,1,0"))
                  (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "16") (term "0,1,1,0"))
                  (rule "translateJavaSubInt" (formula "16") (term "0,1,1,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "16") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "16") (term "0,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,1,1,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "16") (term "1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "1,0,1,1,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,1,1,0"))
                  (rule "polySimp_mulComm1" (formula "16") (term "1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulComm1" (formula "16") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0,1,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "16") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,0,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,0,1,1,1,0"))
                  (rule "mul_literals" (formula "16") (term "0,0,0,1,1,1,0"))
                  (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "16") (term "0,0,1,0"))
                  (rule "translateJavaSubInt" (formula "16") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "16") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "16") (term "0,1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,1,1,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,0,1,0"))
                  (rule "polySimp_mulComm1" (formula "16") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0,1,0"))
                  (rule "polySimp_mulComm1" (formula "16") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0,0,1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,1,0,1,0"))
                  (rule "mul_literals" (formula "16") (term "0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0,1,0"))
                  (rule "nnf_imp2or" (formula "36") (term "0"))
                  (rule "commute_and" (formula "60"))
                  (rule "commute_or" (formula "7") (term "0,0,0"))
                  (rule "commute_or" (formula "43") (term "0,0,0"))
                  (rule "commute_or" (formula "44") (term "0,0,0"))
                  (rule "commute_and" (formula "43") (term "1,0"))
                  (rule "nnf_imp2or" (formula "45") (term "0"))
                  (rule "commute_or_2" (formula "17") (term "0,0"))
                  (rule "nnf_imp2or" (formula "15") (term "0"))
                  (rule "commute_or" (formula "8") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "46") (term "0,0"))
                  (rule "commute_or_2" (formula "16") (term "0,0"))
                  (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "39") (term "0") (inst "i=i_1") (inst "j=j"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "expand_inInt" (formula "39") (term "1,0,0,1,0"))
                  (rule "expand_inInt" (formula "39") (term "1,0,0"))
                  (rule "replace_int_MIN" (formula "39") (term "0,1,1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "39") (term "1,0,1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "39") (term "1,0,1,0,0"))
                  (rule "replace_int_MIN" (formula "39") (term "0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,0"))
                  (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "40") (term "1,0,2,0,1,0"))
                  (rule "translateJavaSubInt" (formula "40") (term "0,1,1,1,0,2,0,1,0"))
                  (rule "polySimp_elimSub" (formula "40") (term "1,0,0,1,0,2,0,1,0"))
                  (rule "polySimp_elimSub" (formula "40") (term "1,1,1,0,2,0,1,0"))
                  (rule "polySimp_elimSub" (formula "40") (term "0,1,1,1,0,2,0,1,0"))
                  (rule "mul_literals" (formula "40") (term "1,0,1,1,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,2,0,1,0"))
                  (rule "polySimp_addComm0" (formula "40") (term "0,1,0,1,0,2,0,1,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "0,1,1,0,2,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,1,0,2,0,1,0"))
                  (rule "polySimp_addComm1" (formula "40") (term "1,1,0,2,0,1,0"))
                  (rule "polySimp_addComm0" (formula "40") (term "0,1,1,0,2,0,1,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,0,2,0,1,0"))
                  (rule "polySimp_mulComm1" (formula "40") (term "1,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,2,0,1,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "0,1,0,2,0,1,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "0,0,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm1" (formula "40") (term "1,0,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,1,0,2,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,2,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,2,0,1,0"))
                  (rule "div_axiom" (formula "11") (term "0,1,1,2,1,0,0") (inst "quotient=quotient_0"))
                  (rule "mul_literals" (formula "11") (term "1,1,1,1,1"))
                  (rule "qeq_literals" (formula "11") (term "0,1,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "equal_literals" (formula "11") (term "0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "polySimp_addComm1" (formula "13") (term "1"))
                  (rule "add_literals" (formula "13") (term "0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "12"))
                  (rule "inEqSimp_homoInEq1" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                  (rule "applyEq" (formula "14") (term "0,0,0,1,0,0") (ifseqformula "11"))
                  (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,0"))
                  (rule "applyEq" (formula "14") (term "0,1,1,1,1,1,0,0") (ifseqformula "11"))
                  (rule "polySimp_addComm0" (formula "14") (term "1,1,1,1,0,0"))
                  (rule "applyEq" (formula "14") (term "0,1,1,2,1,0,0") (ifseqformula "11"))
                  (rule "polySimp_addComm0" (formula "14") (term "1,2,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1"))
                  (rule "polySimp_rightDist" (formula "13") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                  (rule "mul_literals" (formula "13") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "14") (term "0,1,0,0") (ifseqformula "12"))
                  (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0,1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,0,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,0"))
                  (rule "leq_literals" (formula "14") (term "0,0,1,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "mod_axiom" (formula "14") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                  (rule "polySimp_homoEq" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                  (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "14") (term "0,0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                  (rule "polySimp_rightDist" (formula "14") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "14") (term "0,1"))
                  (rule "newSym_eq" (formula "14") (inst "l=l_1") (inst "newSymDef=add(mul(l_0, Z(0(#))),
    mul(pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                int::final(de.wiesler.Tree::final(self,
                                                  de.wiesler.Classifier::$tree),
                           de.wiesler.Tree::$log_buckets))),
        Z(0(#))))"))
                  (rule "times_zero_1" (formula "14") (term "1,1,1"))
                  (rule "times_zero_1" (formula "14") (term "0,1,1"))
                  (rule "add_zero_left" (formula "14") (term "1,1"))
                  (rule "add_zero_right" (formula "14") (term "1"))
                  (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "14"))
                  (rule "polySimp_homoEq" (formula "15"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                  (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1"))
                  (rule "polySimp_rightDist" (formula "15") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,1"))
                  (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "15"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                  (rule "polyDiv_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=l_1"))
                  (rule "equal_literals" (formula "14") (term "0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                  (rule "polySimp_homoEq" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "14") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,1,1,1,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0,1,1,1,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,1,1,1,0"))
                  (rule "add_literals" (formula "14") (term "0,0,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "polySimp_pullOutFactor1" (formula "14") (term "0,0"))
                  (rule "add_literals" (formula "14") (term "1,0,0"))
                  (rule "times_zero_1" (formula "14") (term "0,0"))
                  (rule "add_zero_left" (formula "14") (term "0"))
                  (rule "polySimp_invertEq" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "times_zero_2" (formula "14") (term "1"))
                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "10"))
                  (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "12") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                  (rule "neg_literal" (formula "12") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0"))
                  (rule "qeq_literals" (formula "12") (term "0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "14"))
                  (rule "mul_literals" (formula "9") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                  (rule "mul_literals" (formula "9") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                  (rule "add_literals" (formula "9") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0"))
                  (rule "leq_literals" (formula "9") (term "0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "13"))
                  (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "9"))
                  (rule "mul_literals" (formula "15") (term "1"))
                  (rule "applyEq" (formula "16") (term "0,1,1") (ifseqformula "9"))
                  (rule "times_zero_2" (formula "16") (term "1,1"))
                  (rule "add_literals" (formula "16") (term "1"))
                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "9"))
                  (rule "leq_literals" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "9"))
                  (rule "qeq_literals" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "applyEqRigid" (formula "16") (term "0,0,1,0") (ifseqformula "9"))
                  (rule "times_zero_2" (formula "16") (term "0,1,0"))
                  (rule "add_zero_left" (formula "16") (term "1,0"))
                  (rule "applyEq" (formula "12") (term "1") (ifseqformula "9"))
                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "10"))
                  (rule "leq_literals" (formula "13") (term "0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "11"))
                  (rule "leq_literals" (formula "13") (term "0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0"))
                  (rule "nnf_notAnd" (formula "48") (term "0,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0"))
                  (rule "nnf_imp2or" (formula "39") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "48") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "42") (term "0"))
                  (rule "arrayLengthNotNegative" (formula "32") (term "0"))
                  (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                  (rule "expand_inShort" (formula "16"))
                  (rule "replace_short_MIN" (formula "16") (term "0,1"))
                  (rule "replace_short_MAX" (formula "16") (term "1,0"))
                  (rule "andLeft" (formula "16"))
                  (rule "inEqSimp_commuteLeq" (formula "17"))
                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "16"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "18") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                  (rule "polySimp_elimOne" (formula "18") (term "0"))
                  (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                  (rule "expand_inShort" (formula "20"))
                  (rule "replace_short_MIN" (formula "20") (term "0,1"))
                  (rule "replace_short_MAX" (formula "20") (term "1,0"))
                  (rule "andLeft" (formula "20"))
                  (rule "inEqSimp_commuteLeq" (formula "21"))
                  (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "20"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "22") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0"))
                  (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                  (rule "leq_literals" (formula "17") (term "0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "arrayLengthIsAShort" (formula "41") (term "0"))
                  (rule "expand_inShort" (formula "41"))
                  (rule "replace_short_MAX" (formula "41") (term "1,0"))
                  (rule "replace_short_MIN" (formula "41") (term "0,1"))
                  (rule "andLeft" (formula "41"))
                  (rule "inEqSimp_commuteLeq" (formula "42"))
                  (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                  (rule "inEqSimp_homoInEq1" (formula "42"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "42") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0"))
                  (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                  (rule "inEqSimp_homoInEq0" (formula "41"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "41") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                  (rule "polySimp_elimOne" (formula "42") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                  (rule "polySimp_elimOne" (formula "41") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "5"))
                  (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                  (rule "add_literals" (formula "41") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "41") (term "1,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0"))
                  (rule "qeq_literals" (formula "41") (term "0"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "true_left" (formula "41"))
                  (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                  (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1"))
                  (rule "polySimp_elimOne" (formula "41") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "5"))
                  (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                  (rule "add_literals" (formula "41") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "41") (term "1,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0"))
                  (rule "qeq_literals" (formula "41") (term "0"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "true_left" (formula "41"))
                  (rule "arrayLengthIsAShort" (formula "36") (term "0"))
                  (rule "expand_inShort" (formula "36"))
                  (rule "replace_short_MAX" (formula "36") (term "1,0"))
                  (rule "replace_short_MIN" (formula "36") (term "0,1"))
                  (rule "andLeft" (formula "36"))
                  (rule "inEqSimp_commuteLeq" (formula "36"))
                  (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "37"))
                  (rule "leq_literals" (formula "36") (term "0"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "true_left" (formula "36"))
                  (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                  (rule "leq_literals" (formula "21") (term "0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "commute_or_2" (formula "48") (term "0,0"))
                  (rule "nnf_notAnd" (formula "47") (term "0,0"))
                  (rule "nnf_notAnd" (formula "44") (term "1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "44") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "44") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "44") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "44") (term "1,1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "44") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "44") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "44") (term "1,0,1,0,0"))
                  (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0"))
                  (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "53") (term "1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "53") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "53") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "53") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "53") (term "1,1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "53") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "53") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "53") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "53") (term "1,0,1,0,0"))
                  (rule "nnf_notAnd" (formula "53") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0,0"))
                  (rule "times_zero_1" (formula "53") (term "1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "53") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "53") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "23") (term "1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "23") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "23") (term "1,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "23") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "23") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "23") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "23") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "23") (term "1,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "47") (term "0,1,0"))
                  (rule "nnf_notAnd" (formula "44") (term "0,0,1,0"))
                  (rule "nnf_notAnd" (formula "53") (term "0,0,1,0"))
                  (rule "nnf_notAnd" (formula "23") (term "0,0,1,0"))
                  (rule "commute_or_2" (formula "7") (term "0,0"))
                  (rule "commute_or_2" (formula "51") (term "0,0"))
                  (rule "commute_or_2" (formula "52") (term "0,0"))
                  (rule "commute_or_2" (formula "8") (term "0,0,0"))
                  (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                  (rule "commute_or" (formula "54") (term "1,0,0,0"))
                  (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                  (rule "nnf_notAnd" (formula "47") (term "1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "47") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "47") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "47") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "47") (term "1,1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "47") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "47") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "47") (term "1,0,1,0,0"))
                  (rule "nnf_notAnd" (formula "47") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,0"))
                  (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "47") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "47") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "47") (term "0,0,1,0"))
                  (rule "nnf_notAnd" (formula "44") (term "0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "44") (term "1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "44") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "44") (term "1,0,0,1,1,0,0,1,0"))
                  (rule "add_literals" (formula "44") (term "0,0,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "44") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "44") (term "0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "44") (term "1,0,0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "44") (term "1,0,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "53") (term "0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "53") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "53") (term "1,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "53") (term "0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "53") (term "1,0,0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "53") (term "0,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "53") (term "1,0,1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "53") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "53") (term "1,0,0,1,1,0,0,1,0"))
                  (rule "add_literals" (formula "53") (term "0,0,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "53") (term "1,1,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "23") (term "1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "23") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "23") (term "1,0,0,1,1,0,0,1,0"))
                  (rule "add_literals" (formula "23") (term "0,0,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "23") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "23") (term "0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "23") (term "1,0,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "23") (term "0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "47") (term "1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "47") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "47") (term "1,0,0,1,1,0,0,1,0"))
                  (rule "add_literals" (formula "47") (term "0,0,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "47") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "47") (term "0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "47") (term "1,0,0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "47") (term "1,0,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "47") (term "0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,0,1,0"))
                  (rule "cut_direct" (formula "68") (term "1"))
                  (branch "CUT: i_0 <= 2147483647 + begin * -1 TRUE"
                      (builtin "One Step Simplification" (formula "69"))
                     (rule "inEqSimp_geqRight" (formula "69"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "7") (term "0,0"))
                     (rule "add_zero_left" (formula "7") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "37") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "37") (term "0"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "closeFalse" (formula "37"))
                  )
                  (branch "CUT: i_0 <= 2147483647 + begin * -1 FALSE"
                      (builtin "One Step Simplification" (formula "69"))
                     (rule "false_right" (formula "69"))
                     (rule "inEqSimp_leqRight" (formula "68"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "40"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Usage"
                   (builtin "One Step Simplification" (formula "50"))
                  (rule "translateJavaAddInt" (formula "50") (term "0,1,0"))
                  (rule "assignment_array2" (formula "50"))
                  (branch "Normal Execution (x_arr != null)"
                      (builtin "One Step Simplification" (formula "50"))
                     (rule "pullOutSelect" (formula "50") (term "0,1,0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "49")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "36"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "49")) (ifInst ""  (formula "16")))
                     (rule "applyEqReverse" (formula "51") (term "0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                      (builtin "Block Contract (Internal)" (formula "50") (newnames "exc_0,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
                     (branch "Validity"
                         (builtin "One Step Simplification" (formula "51"))
                         (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "21")) (ifInst ""  (formula "14")) (ifInst ""  (formula "48")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,1") (ifseqformula "35"))
                        (rule "andLeft" (formula "41"))
                        (rule "eqSymm" (formula "52") (term "0,0,1,0,1"))
                        (rule "replace_known_left" (formula "42") (term "0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "42"))
                        (rule "true_left" (formula "42"))
                        (rule "variableDeclarationAssign" (formula "51") (term "1"))
                        (rule "variableDeclaration" (formula "51") (term "1") (newnames "exc_0_1"))
                        (rule "assignment" (formula "51") (term "1"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "emptyStatement" (formula "51") (term "1"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "emptyStatement" (formula "51") (term "1"))
                        (rule "tryEmpty" (formula "51") (term "1"))
                        (rule "blockEmptyLabel" (formula "51") (term "1"))
                        (rule "blockEmpty" (formula "51") (term "1"))
                        (rule "methodCallEmpty" (formula "51") (term "1"))
                        (rule "emptyModality" (formula "51") (term "1"))
                        (rule "andRight" (formula "51"))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "closeTrue" (formula "51"))
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "closeTrue" (formula "51"))
                        )
                     )
                     (branch "Precondition"
                        (rule "andRight" (formula "50"))
                        (branch "Case 1"
                           (rule "andRight" (formula "50"))
                           (branch "Case 1"
                               (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "21")))
                              (rule "closeTrue" (formula "50"))
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "50"))
                              (rule "wellFormedAnon" (formula "50"))
                              (rule "wellFormedAnonEQ" (formula "50") (term "0") (ifseqformula "35"))
                              (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "10"))
                               (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "12")) (ifInst ""  (formula "34")))
                              (rule "closeTrue" (formula "50"))
                           )
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "50"))
                           (branch "Case 1"
                              (rule "andRight" (formula "50"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "47")))
                                 (rule "closeTrue" (formula "50"))
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "50"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0") (ifseqformula "35"))
                                 (rule "orRight" (formula "50"))
                                 (rule "orRight" (formula "50"))
                                 (rule "close" (formula "50") (ifseqformula "13"))
                              )
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "14")))
                              (rule "closeTrue" (formula "50"))
                           )
                        )
                     )
                     (branch "Usage"
                         (builtin "One Step Simplification" (formula "51"))
                         (builtin "One Step Simplification" (formula "41"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,1,1,0") (ifseqformula "35"))
                        (rule "expand_inInt" (formula "41") (term "1"))
                        (rule "replace_int_MIN" (formula "41") (term "0,1,1"))
                        (rule "replace_int_MAX" (formula "41") (term "1,0,1"))
                        (rule "andLeft" (formula "41"))
                        (rule "andLeft" (formula "41"))
                        (rule "andLeft" (formula "43"))
                        (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "41"))
                         (builtin "One Step Simplification" (formula "42"))
                        (rule "true_left" (formula "42"))
                        (rule "inEqSimp_commuteLeq" (formula "43"))
                        (rule "elim_double_block_2" (formula "53") (term "1"))
                        (rule "ifUnfold" (formula "53") (term "1") (inst "#boolv=x_2"))
                        (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_6"))
                        (rule "inequality_comparison_simple" (formula "53") (term "1"))
                         (builtin "One Step Simplification" (formula "53"))
                        (rule "replace_known_left" (formula "53") (term "0,0,1,0") (ifseqformula "41"))
                         (builtin "One Step Simplification" (formula "53"))
                        (rule "ifSplit" (formula "53"))
                        (branch "if x_6 true"
                            (builtin "One Step Simplification" (formula "54"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_6 false"
                            (builtin "One Step Simplification" (formula "54"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "blockEmpty" (formula "53") (term "1"))
                           (rule "variableDeclarationFinalAssign" (formula "53") (term "1"))
                           (rule "variableDeclarationFinal" (formula "53") (term "1") (newnames "index_1"))
                           (rule "assignment_array2" (formula "53"))
                           (branch "Normal Execution (_indices != null)"
                               (builtin "One Step Simplification" (formula "53"))
                               (builtin "Block Contract (Internal)" (formula "53") (newnames "exc_1,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,o,f"))
                              (branch "Validity"
                                  (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "21")) (ifInst ""  (formula "14")) (ifInst ""  (formula "51")))
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,1") (ifseqformula "35"))
                                 (rule "andLeft" (formula "44"))
                                 (rule "eqSymm" (formula "55") (term "0,0,1,0,1"))
                                 (rule "translateJavaMulInt" (formula "55") (term "1,1,1,0,0,1"))
                                 (rule "replace_known_left" (formula "45") (term "0,0") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "1,1,1,0,0,1"))
                                 (rule "variableDeclarationAssign" (formula "54") (term "1"))
                                 (rule "variableDeclaration" (formula "54") (term "1") (newnames "exc_1_1"))
                                 (rule "assignment" (formula "54") (term "1"))
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "emptyStatement" (formula "54") (term "1"))
                                 (rule "emptyStatement" (formula "54") (term "1"))
                                 (rule "tryEmpty" (formula "54") (term "1"))
                                 (rule "blockEmptyLabel" (formula "54") (term "1"))
                                 (rule "blockEmpty" (formula "54") (term "1"))
                                 (rule "methodCallEmpty" (formula "54") (term "1"))
                                 (rule "emptyModality" (formula "54") (term "1"))
                                 (rule "andRight" (formula "54"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "54"))
                                    (branch "Case 1"
                                        (builtin "One Step Simplification" (formula "54"))
                                       (rule "closeTrue" (formula "54"))
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "54"))
                                       (rule "instAll" (formula "5") (term "0") (ifseqformula "7") (userinteraction))
                                       (rule "impLeft" (formula "5") (userinteraction))
                                       (branch "Case 1"
                                          (rule "replace_known_left" (formula "45") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "inEqSimp_ltToLeq" (formula "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "1"))
                                          (rule "polySimp_mulAssoc" (formula "55") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "36") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "55") (term "0"))
                                          (rule "inEqSimp_homoInEq0" (formula "29"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "30"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "45") (term "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "45") (term "0,1"))
                                          (rule "add_literals" (formula "45") (term "1,0,1"))
                                          (rule "times_zero_1" (formula "45") (term "0,1"))
                                          (rule "leq_literals" (formula "45") (term "1"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                          (rule "mul_literals" (formula "1") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,1"))
                                          (rule "mul_literals" (formula "54") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "25"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "inEqSimp_subsumption1" (formula "43") (term "0") (ifseqformula "4"))
                                          (rule "leq_literals" (formula "43") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "inEqSimp_leqRight" (formula "43"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "24"))
                                          (rule "leq_literals" (formula "18") (term "0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "24"))
                                          (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "29") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0"))
                                          (rule "qeq_literals" (formula "29") (term "0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0"))
                                          (rule "qeq_literals" (formula "6") (term "0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "pullOutSelect" (formula "49") (term "0,0") (inst "selectSK=arr_1"))
                                          (rule "applyEq" (formula "50") (term "0,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "50") (term "0,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "24"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "25") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "25"))
                                          (rule "leq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "26"))
                                          (rule "mul_literals" (formula "16") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                          (rule "add_literals" (formula "16") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                          (rule "mul_literals" (formula "16") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "21"))
                                          (rule "leq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0"))
                                          (rule "qeq_literals" (formula "22") (term "0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "1"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "inEqSimp_homoInEq1" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0"))
                                          (rule "add_literals" (formula "26") (term "0"))
                                          (rule "leq_literals" (formula "26"))
                                          (rule "closeFalse" (formula "26"))
                                       )
                                       (branch "Case 2"
                                           (builtin "Evaluate Query" (formula "5") (term "0") (newnames "value_0,callee,queryResult,res_classify") (userinteraction))
                                          (rule "replaceKnownQuery11000120100100_3" (formula "6") (term "0"))
                                          (rule "replaceKnownSelect_taclet0100100_0" (formula "1") (term "0,1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0100100_2" (formula "1") (term "0,1,0,0"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "eqSymm" (formula "5"))
                                          (rule "eqSymm" (formula "46") (term "0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "56") (term "0"))
                                          (rule "variableDeclaration" (formula "46") (term "1") (newnames "queryResult"))
                                          (rule "pullOutSelect" (formula "56") (term "0,1") (inst "selectSK=arr_1"))
                                          (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "57") (term "0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "57") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "5"))
                                          (rule "inEqSimp_commuteGeq" (formula "56") (term "0"))
                                          (rule "applyEq" (formula "56") (term "0,1") (ifseqformula "5"))
                                          (rule "commute_and" (formula "56"))
                                           (builtin "Use Operation Contract" (formula "46") (newnames "heapBefore_classify,result,exc_2") (contract "de.wiesler.Tree[de.wiesler.Tree::classify(int)].JML normal_behavior operation contract.0"))
                                          (branch "Post (classify)"
                                              (builtin "One Step Simplification" (formula "47"))
                                              (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "10")))
                                             (rule "expand_inInt" (formula "46") (term "0,1,0"))
                                             (rule "replace_int_MAX" (formula "46") (term "1,0,0,1,0"))
                                             (rule "replace_int_MIN" (formula "46") (term "0,1,0,1,0"))
                                             (rule "andLeft" (formula "46"))
                                             (rule "andLeft" (formula "46"))
                                             (rule "andLeft" (formula "46"))
                                             (rule "andLeft" (formula "46"))
                                             (rule "andLeft" (formula "48"))
                                             (rule "andLeft" (formula "49"))
                                             (rule "andLeft" (formula "48"))
                                             (rule "andLeft" (formula "51"))
                                             (rule "translateJavaSubInt" (formula "50") (term "3,0"))
                                             (rule "translateJavaMulInt" (formula "49") (term "1"))
                                             (rule "eqSymm" (formula "51"))
                                             (rule "polySimp_elimSub" (formula "50") (term "3,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "47"))
                                             (rule "assignment" (formula "54") (term "1"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "methodCallEmpty" (formula "54") (term "1"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "emptyModality" (formula "54") (term "1"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "notRight" (formula "54"))
                                             (rule "eqSymm" (formula "1"))
                                             (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "64") (term "0"))
                                             (rule "polySimp_mulAssoc" (formula "64") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "64") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "50"))
                                             (rule "polySimp_mulAssoc" (formula "50") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "50") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "38") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "31"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "32"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                             (rule "applyEq" (formula "47") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "49") (term "1") (ifseqformula "1"))
                                             (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "49"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "inEqSimp_leqRight" (formula "64"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "applyEq" (formula "52") (term "0,3,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "51") (term "1,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "53") (term "1") (ifseqformula "2"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "39") (term "0,0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                             (rule "mul_literals" (formula "3") (term "0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "28"))
                                             (rule "leq_literals" (formula "30") (term "0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0"))
                                             (rule "qeq_literals" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0"))
                                             (rule "qeq_literals" (formula "31") (term "0"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "inEqSimp_contradInEq4" (formula "1") (ifseqformula "47"))
                                             (rule "greater_literals" (formula "1") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "greater_literals" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_literals" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Exceptional Post (classify)"
                                              (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "10")))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,0") (ifseqformula "36"))
                                             (rule "andLeft" (formula "46"))
                                             (rule "andLeft" (formula "46"))
                                             (rule "notLeft" (formula "46"))
                                             (rule "close" (formula "48") (ifseqformula "47"))
                                          )
                                          (branch "Pre (classify)"
                                              (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "10")) (ifInst ""  (formula "45")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,0") (ifseqformula "36"))
                                             (rule "expand_inInt" (formula "46") (term "1"))
                                             (rule "replace_int_MIN" (formula "46") (term "0,1,1"))
                                             (rule "replace_int_MAX" (formula "46") (term "1,0,1"))
                                             (rule "replace_known_left" (formula "46") (term "0,1") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "56") (term "0"))
                                             (rule "polySimp_mulAssoc" (formula "56") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "56") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "37") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "46") (term "1"))
                                             (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "orRight" (formula "46"))
                                             (rule "orRight" (formula "46"))
                                             (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "31"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                             (rule "applyEq" (formula "37") (term "0,0,1,0,0,0,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "58") (term "0,0,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "8") (term "1,0,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "58") (term "0,0,1,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "37") (term "0,1,1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "40") (term "1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "39") (term "1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "10") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                             (rule "mul_literals" (formula "1") (term "0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "24"))
                                             (rule "leq_literals" (formula "18") (term "0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "25"))
                                             (rule "leq_literals" (formula "27") (term "0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "24"))
                                             (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "29") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0"))
                                             (rule "qeq_literals" (formula "29") (term "0"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0"))
                                             (rule "qeq_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "27"))
                                             (rule "mul_literals" (formula "18") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                             (rule "add_literals" (formula "18") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                             (rule "mul_literals" (formula "18") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "23"))
                                             (rule "leq_literals" (formula "18") (term "0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "25"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "26") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "26"))
                                             (rule "leq_literals" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                             (rule "times_zero_1" (formula "4") (term "0,0"))
                                             (rule "add_zero_left" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1"))
                                             (rule "mul_literals" (formula "4") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0"))
                                             (rule "qeq_literals" (formula "23") (term "0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "25"))
                                             (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                             (rule "mul_literals" (formula "4") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "18") (term "0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "inEqSimp_and_subsumption3" (formula "33") (term "0,0,0"))
                                             (rule "leq_literals" (formula "33") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_and_subsumption3" (formula "8") (term "0,0,0"))
                                             (rule "leq_literals" (formula "8") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_and_subsumption3" (formula "32") (term "0,0,0"))
                                             (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "nnf_imp2or" (formula "9") (term "0"))
                                             (rule "nnf_imp2or" (formula "33") (term "0"))
                                             (rule "nnf_imp2or" (formula "8") (term "0"))
                                             (rule "nnf_imp2or" (formula "32") (term "0"))
                                             (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "21"))
                                             (rule "andLeft" (formula "21"))
                                             (rule "notLeft" (formula "21"))
                                             (rule "close" (formula "41") (ifseqformula "3"))
                                          )
                                          (branch "Null reference (callee = null)"
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "notRight" (formula "46"))
                                             (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "37") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0"))
                                             (rule "polySimp_mulAssoc" (formula "55") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "31"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                             (rule "applyEq" (formula "55") (term "0,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "37") (term "0,0,1,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "40") (term "1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "10") (term "1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "37") (term "0,1,1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "55") (term "0,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "39") (term "1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "8") (term "1,0,1,0") (ifseqformula "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                             (rule "mul_literals" (formula "2") (term "0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "54") (term "0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "24"))
                                             (rule "leq_literals" (formula "18") (term "0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "24"))
                                             (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0"))
                                             (rule "qeq_literals" (formula "30") (term "0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "25"))
                                             (rule "leq_literals" (formula "27") (term "0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0"))
                                             (rule "qeq_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "25"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "26") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "26"))
                                             (rule "leq_literals" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "27"))
                                             (rule "mul_literals" (formula "17") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                             (rule "add_literals" (formula "17") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                             (rule "mul_literals" (formula "17") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "22"))
                                             (rule "leq_literals" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "4") (term "0,0"))
                                             (rule "add_zero_left" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1"))
                                             (rule "mul_literals" (formula "4") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0"))
                                             (rule "qeq_literals" (formula "23") (term "0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "25"))
                                             (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                             (rule "mul_literals" (formula "4") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "18") (term "0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "inEqSimp_and_subsumption3" (formula "32") (term "0,0,0"))
                                             (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "inEqSimp_and_subsumption3" (formula "8") (term "0,0,0"))
                                             (rule "leq_literals" (formula "8") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_and_subsumption3" (formula "33") (term "0,0,0"))
                                             (rule "leq_literals" (formula "33") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "nnf_imp2or" (formula "9") (term "0"))
                                             (rule "nnf_imp2or" (formula "32") (term "0"))
                                             (rule "nnf_imp2or" (formula "8") (term "0"))
                                             (rule "nnf_imp2or" (formula "33") (term "0"))
                                             (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                             (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                             (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                             (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                             (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "notLeft" (formula "10"))
                                             (rule "close" (formula "41") (ifseqformula "1"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "closeTrue" (formula "54"))
                                 )
                              )
                              (branch "Precondition"
                                 (rule "andRight" (formula "53"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "53"))
                                    (branch "Case 1"
                                        (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "21")))
                                       (rule "closeTrue" (formula "53"))
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "wellFormedAnon" (formula "53"))
                                       (rule "wellFormedAnonEQ" (formula "53") (term "0") (ifseqformula "35"))
                                       (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "10"))
                                        (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "12")) (ifInst ""  (formula "34")))
                                       (rule "closeTrue" (formula "53"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "53"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "53"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "50")))
                                          (rule "closeTrue" (formula "53"))
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0") (ifseqformula "35"))
                                          (rule "orRight" (formula "53"))
                                          (rule "orRight" (formula "53"))
                                          (rule "close" (formula "53") (ifseqformula "13"))
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "14")))
                                       (rule "closeTrue" (formula "53"))
                                    )
                                 )
                              )
                              (branch "Usage"
                                  (builtin "One Step Simplification" (formula "44"))
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,1,1") (ifseqformula "35"))
                                 (rule "andLeft" (formula "44"))
                                 (rule "andLeft" (formula "44"))
                                 (rule "andLeft" (formula "45"))
                                 (rule "translateJavaMulInt" (formula "46") (term "1"))
                                 (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "44"))
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "true_left" (formula "47"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                 (rule "pullOutSelect" (formula "56") (term "0,1,0") (inst "selectSK=arr_1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "57") (term "0,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "elim_double_block_2" (formula "56") (term "1"))
                                 (rule "ifUnfold" (formula "56") (term "1") (inst "#boolv=x_2"))
                                 (rule "variableDeclaration" (formula "56") (term "1") (newnames "x_7"))
                                 (rule "inequality_comparison_simple" (formula "56") (term "1"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "replace_known_left" (formula "56") (term "0,0,1,0") (ifseqformula "44"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                                 (rule "arrayLengthIsAShort" (formula "32") (term "0"))
                                 (rule "expand_inShort" (formula "32"))
                                 (rule "replace_short_MAX" (formula "32") (term "1,0"))
                                 (rule "replace_short_MIN" (formula "32") (term "0,1"))
                                 (rule "andLeft" (formula "32"))
                                 (rule "inEqSimp_commuteLeq" (formula "33"))
                                 (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                                 (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
                                 (rule "arrayLengthIsAShort" (formula "27") (term "0"))
                                 (rule "expand_inShort" (formula "27"))
                                 (rule "replace_short_MAX" (formula "27") (term "1,0"))
                                 (rule "replace_short_MIN" (formula "27") (term "0,1"))
                                 (rule "andLeft" (formula "27"))
                                 (rule "inEqSimp_commuteLeq" (formula "27"))
                                 (rule "arrayLengthNotNegative" (formula "32") (term "0"))
                                 (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
                                 (rule "ifSplit" (formula "56"))
                                 (branch "if x_7 true"
                                     (builtin "One Step Simplification" (formula "57"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "if x_7 false"
                                     (builtin "One Step Simplification" (formula "57"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "blockEmpty" (formula "56") (term "1"))
                                     (builtin "Block Contract (Internal)" (formula "56") (newnames "exc_2,heap_Before_BLOCK_1,savedHeap_Before_BLOCK_1,o,f"))
                                    (branch "Validity"
                                        (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "21")) (ifInst ""  (formula "14")) (ifInst ""  (formula "54")))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "replaceKnownSelect_taclet20120100100_3" (formula "46") (term "0"))
                                       (rule "replaceKnownSelect_taclet20120100100_3" (formula "45") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet20120100100_4" (formula "46") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet20120100100_4" (formula "45") (term "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,1") (ifseqformula "35"))
                                       (rule "andLeft" (formula "47"))
                                       (rule "eqSymm" (formula "58") (term "0,0,1,0,1"))
                                       (rule "replace_known_left" (formula "48") (term "0,0") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "true_left" (formula "48"))
                                       (rule "inEqSimp_commuteLeq" (formula "45"))
                                       (rule "variableDeclarationAssign" (formula "57") (term "1"))
                                       (rule "variableDeclaration" (formula "57") (term "1") (newnames "exc_2_1"))
                                       (rule "assignment" (formula "57") (term "1"))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "emptyStatement" (formula "57") (term "1"))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "emptyStatement" (formula "57") (term "1"))
                                       (rule "tryEmpty" (formula "57") (term "1"))
                                       (rule "blockEmptyLabel" (formula "57") (term "1"))
                                       (rule "blockEmpty" (formula "57") (term "1"))
                                       (rule "methodCallEmpty" (formula "57") (term "1"))
                                       (rule "emptyModality" (formula "57") (term "1"))
                                       (rule "andRight" (formula "57"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "closeTrue" (formula "57"))
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "closeTrue" (formula "57"))
                                       )
                                    )
                                    (branch "Precondition"
                                       (rule "andRight" (formula "56"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "56"))
                                          (branch "Case 1"
                                              (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "21")))
                                             (rule "closeTrue" (formula "56"))
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "56"))
                                             (rule "wellFormedAnon" (formula "56"))
                                             (rule "replaceKnownSelect_taclet20120100100_3" (formula "45") (term "1"))
                                             (rule "replaceKnownSelect_taclet20120100100_3" (formula "46") (term "0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet20120100100_4" (formula "45") (term "1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet20120100100_4" (formula "46") (term "0"))
                                             (rule "wellFormedAnonEQ" (formula "56") (term "0") (ifseqformula "35"))
                                             (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "10"))
                                              (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "12")) (ifInst ""  (formula "34")))
                                             (rule "closeTrue" (formula "56"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "56"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "56"))
                                             (branch "Case 1"
                                                 (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "53")))
                                                (rule "closeTrue" (formula "56"))
                                             )
                                             (branch "Case 2"
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "replaceKnownSelect_taclet20120100100_3" (formula "45") (term "1"))
                                                (rule "replaceKnownSelect_taclet20120100100_3" (formula "46") (term "0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet20120100100_4" (formula "45") (term "1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet20120100100_4" (formula "46") (term "0"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0") (ifseqformula "35"))
                                                (rule "orRight" (formula "56"))
                                                (rule "orRight" (formula "56"))
                                                (rule "close" (formula "56") (ifseqformula "13"))
                                             )
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "14")))
                                             (rule "closeTrue" (formula "56"))
                                          )
                                       )
                                    )
                                    (branch "Usage"
                                        (builtin "One Step Simplification" (formula "47"))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "replaceKnownSelect_taclet20120100100_3" (formula "46") (term "0"))
                                       (rule "replaceKnownSelect_taclet20120100100_3" (formula "45") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet20120100100_4" (formula "46") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet20120100100_4" (formula "45") (term "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,1,1,0") (ifseqformula "35"))
                                       (rule "andLeft" (formula "47"))
                                       (rule "andLeft" (formula "47"))
                                       (rule "andLeft" (formula "49"))
                                       (rule "translateJavaSubInt" (formula "49") (term "1"))
                                       (rule "translateJavaSubInt" (formula "50") (term "0"))
                                       (rule "translateJavaDivInt" (formula "49") (term "1,1"))
                                       (rule "translateJavaDivInt" (formula "50") (term "1,0"))
                                       (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "true_left" (formula "48"))
                                       (rule "polySimp_elimSub" (formula "48") (term "1"))
                                       (rule "polySimp_elimSub" (formula "49") (term "0"))
                                       (rule "polySimp_addComm0" (formula "48") (term "1"))
                                       (rule "polySimp_addComm0" (formula "49") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "45"))
                                       (rule "elim_double_block_2" (formula "59") (term "1"))
                                       (rule "ifUnfold" (formula "59") (term "1") (inst "#boolv=x_2"))
                                       (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_8"))
                                       (rule "inequality_comparison_simple" (formula "59") (term "1"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "replace_known_left" (formula "59") (term "0,0,1,0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "ifSplit" (formula "59"))
                                       (branch "if x_8 true"
                                           (builtin "One Step Simplification" (formula "60"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "if x_8 false"
                                           (builtin "One Step Simplification" (formula "60"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "blockEmpty" (formula "59") (term "1"))
                                          (rule "variableDeclarationFinalAssign" (formula "59") (term "1"))
                                          (rule "variableDeclarationFinal" (formula "59") (term "1") (newnames "bucket"))
                                          (rule "compound_subtraction_2" (formula "59") (term "1") (inst "#v1=x_3") (inst "#v0=x_2"))
                                          (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                          (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_9"))
                                          (rule "assignment" (formula "59") (term "1"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                          (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_10"))
                                          (rule "compound_division_1" (formula "59") (term "1") (inst "#v=x_11"))
                                          (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                          (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_11"))
                                          (rule "assignment_read_attribute_this_final" (formula "59"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "assignmentDivisionInt" (formula "59"))
                                          (branch "Case 1"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "translateJavaDivInt" (formula "59") (term "0,1,0"))
                                             (rule "assignmentSubtractionInt" (formula "59") (term "1"))
                                             (branch "Overflow check"
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "expand_inInt" (formula "59"))
                                                (rule "replace_int_MAX" (formula "59") (term "1,0"))
                                                (rule "replace_int_MIN" (formula "59") (term "0,1"))
                                                (rule "polySimp_elimSub" (formula "59") (term "0,0"))
                                                (rule "polySimp_elimSub" (formula "59") (term "1,1"))
                                                (rule "polySimp_addComm0" (formula "59") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "59") (term "1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "36") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "49"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "46"))
                                                (rule "polySimp_mulAssoc" (formula "46") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "30"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "29"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "48"))
                                                (rule "times_zero_2" (formula "48") (term "1,0"))
                                                (rule "add_zero_right" (formula "48") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "59") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "59") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "59") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "59") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "59") (term "0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "59") (term "1"))
                                                (rule "mul_literals" (formula "59") (term "1,0,1"))
                                                (rule "polySimp_addComm1" (formula "59") (term "0,1"))
                                                (rule "polySimp_addComm0" (formula "59") (term "0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "45"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1"))
                                                (rule "mul_literals" (formula "45") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "48") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1"))
                                                (rule "mul_literals" (formula "48") (term "0,0,1"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "58") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "58") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "58") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "58") (term "1,1"))
                                                (rule "mul_literals" (formula "58") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "58") (term "1,1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "58") (term "1") (ifseqformula "47"))
                                                (rule "inEqSimp_homoInEq0" (formula "58") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "58") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "58") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "58") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,1"))
                                                (rule "add_literals" (formula "58") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "58") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "58") (term "0,0,1"))
                                                (rule "qeq_literals" (formula "58") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "inEqSimp_leqRight" (formula "58"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "25"))
                                                (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0"))
                                                (rule "qeq_literals" (formula "31") (term "0"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "6") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0"))
                                                (rule "qeq_literals" (formula "6") (term "0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "23"))
                                                (rule "leq_literals" (formula "17") (term "0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "24"))
                                                (rule "leq_literals" (formula "26") (term "0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "44") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                (rule "add_literals" (formula "44") (term "0,0"))
                                                (rule "qeq_literals" (formula "44") (term "0"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "true_left" (formula "44"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "42"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "45"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "18"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "24") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "26"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "27") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "27"))
                                                (rule "leq_literals" (formula "18") (term "0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "44"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0"))
                                                (rule "add_literals" (formula "43") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "43") (term "1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                (rule "mul_literals" (formula "43") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                                                (rule "times_zero_1" (formula "6") (term "0,0"))
                                                (rule "add_zero_left" (formula "6") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                (rule "mul_literals" (formula "6") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0"))
                                                (rule "qeq_literals" (formula "24") (term "0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "47"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "29"))
                                                (rule "mul_literals" (formula "20") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                (rule "add_literals" (formula "20") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                (rule "mul_literals" (formula "20") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "25"))
                                                (rule "leq_literals" (formula "20") (term "0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "27"))
                                                (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                (rule "add_literals" (formula "7") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "20") (term "0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "inEqSimp_exactShadow1" (formula "1") (ifseqformula "43"))
                                                (rule "greater_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "44"))
                                                (rule "mul_literals" (formula "45") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
                                                (rule "add_literals" (formula "45") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1"))
                                                (rule "mul_literals" (formula "45") (term "0,1"))
                                                (rule "inEqSimp_and_subsumption3" (formula "11") (term "0,0,0"))
                                                (rule "leq_literals" (formula "11") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                                                (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
                                                (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "nnf_imp2or" (formula "12") (term "0"))
                                                (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "14") (inst "i_0=i_0") (inst "i=i"))
                                                (rule "andLeft" (formula "14"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "expand_inInt" (formula "15") (term "1,0,0"))
                                                (rule "expand_inInt" (formula "14") (term "1,0,0,1"))
                                                (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0"))
                                                (rule "replace_int_MAX" (formula "15") (term "1,0,1,0,0"))
                                                (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0,1"))
                                                (rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0,1"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "16"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "16"))
                                                (rule "notLeft" (formula "14"))
                                                (rule "notLeft" (formula "14"))
                                                (rule "translateJavaSubInt" (formula "22") (term "0,2,1,1,0"))
                                                (rule "translateJavaSubInt" (formula "20") (term "3,0"))
                                                (rule "translateJavaShiftLeftInt" (formula "16") (term "1"))
                                                (rule "eqSymm" (formula "22") (term "1,0"))
                                                (rule "polySimp_elimSub" (formula "20") (term "3,0"))
                                                (rule "mul_literals" (formula "20") (term "1,3,0"))
                                                (rule "polySimp_elimSub" (formula "22") (term "0,2,0,1,0"))
                                                (rule "mul_literals" (formula "22") (term "1,0,2,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "20") (term "3,0"))
                                                (rule "polySimp_addComm0" (formula "22") (term "0,2,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "1,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "21") (term "0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "21") (term "1,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19"))
                                                (rule "inEqSimp_commuteLeq" (formula "18"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "inEqSimp_commuteLeq" (formula "14"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                                                (rule "applyEq" (formula "20") (term "1,3,0") (ifseqformula "16"))
                                                (rule "applyEq" (formula "19") (term "1") (ifseqformula "16"))
                                                (rule "applyEq" (formula "18") (term "1") (ifseqformula "16"))
                                                (rule "applyEq" (formula "43") (term "0,1,1,0,1,0") (ifseqformula "16"))
                                                (rule "applyEq" (formula "54") (term "0") (ifseqformula "16"))
                                                (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "16"))
                                                (rule "applyEq" (formula "55") (term "1") (ifseqformula "16"))
                                                (rule "applyEq" (formula "43") (term "1,1,1,0") (ifseqformula "16"))
                                                (rule "applyEq" (formula "56") (term "0,1,1") (ifseqformula "16"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "16"))
                                                (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,0") (ifseqformula "16"))
                                                (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0") (ifseqformula "16"))
                                                (rule "applyEq" (formula "21") (term "0,1,0,0,1,1,0") (ifseqformula "16"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1,1,1,0"))
                                                (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "17"))
                                                (rule "leq_literals" (formula "54") (term "0"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "true_left" (formula "54"))
                                                (rule "javaShiftLeftIntDef" (formula "16") (term "1"))
                                                (rule "mod_axiom" (formula "16") (term "1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1"))
                                                (rule "javaShiftLeftIntDef" (formula "17") (term "0"))
                                                (rule "mod_axiom" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                                (rule "javaShiftLeftIntDef" (formula "20") (term "1,3,0"))
                                                (rule "mod_axiom" (formula "20") (term "1,0,1,3,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,3,0"))
                                                (rule "javaShiftLeftIntDef" (formula "19") (term "1"))
                                                (rule "mod_axiom" (formula "19") (term "1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1"))
                                                (rule "javaShiftLeftIntDef" (formula "18") (term "1"))
                                                (rule "mod_axiom" (formula "18") (term "1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1"))
                                                (rule "javaShiftLeftIntDef" (formula "43") (term "0,1,1,0,1,0"))
                                                (rule "mod_axiom" (formula "43") (term "1,0,0,1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,1,0,1,0"))
                                                (rule "javaShiftLeftIntDef" (formula "2") (term "0,0"))
                                                (rule "mod_axiom" (formula "2") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                                (rule "javaShiftLeftIntDef" (formula "54") (term "1"))
                                                (rule "mod_axiom" (formula "54") (term "1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,1"))
                                                (rule "javaShiftLeftIntDef" (formula "43") (term "1,1,1,0"))
                                                (rule "mod_axiom" (formula "43") (term "1,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,1,1,0"))
                                                (rule "javaShiftLeftIntDef" (formula "55") (term "0,1,1"))
                                                (rule "mod_axiom" (formula "55") (term "1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,1,1"))
                                                (rule "javaShiftLeftIntDef" (formula "52") (term "0"))
                                                (rule "mod_axiom" (formula "52") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                                                (rule "javaShiftLeftIntDef" (formula "21") (term "1,1,1,0,0,0"))
                                                (rule "mod_axiom" (formula "21") (term "1,0,1,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,1,1,0,0,0"))
                                                (rule "javaShiftLeftIntDef" (formula "22") (term "1,1,1,0,0,0"))
                                                (rule "mod_axiom" (formula "22") (term "1,0,1,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,1,1,0,0,0"))
                                                (rule "javaShiftLeftIntDef" (formula "21") (term "1,1,1,1,0"))
                                                (rule "mod_axiom" (formula "21") (term "1,0,1,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,1,1,1,0"))
                                                (rule "shiftLeftDef" (formula "16") (term "0,1"))
                                                (rule "eqSymm" (formula "16"))
                                                (rule "polySimp_elimNeg" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,0,0"))
                                                (rule "shiftLeftPositiveShiftDef" (formula "16") (term "2,0,0"))
                                                (rule "polySimp_elimOneLeft0" (formula "16") (term "2,0,0"))
                                                (rule "shiftRightPositiveShiftDef" (formula "16") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                                                (rule "shiftLeftDef" (formula "17") (term "0,0"))
                                                (rule "polySimp_elimNeg" (formula "17") (term "1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "0,1,1,0,0"))
                                                (rule "shiftLeftPositiveShiftDef" (formula "17") (term "2,0,0"))
                                                (rule "polySimp_elimOneLeft0" (formula "17") (term "2,0,0"))
                                                (rule "shiftRightPositiveShiftDef" (formula "17") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                                                (rule "shiftLeftDef" (formula "20") (term "0,1,3,0"))
                                                (rule "polySimp_elimNeg" (formula "20") (term "1,1,0,1,3,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,1,3,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,1,0,1,3,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,1,3,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,0,1,3,0"))
                                                (rule "shiftLeftPositiveShiftDef" (formula "20") (term "2,0,1,3,0"))
                                                (rule "polySimp_elimOneLeft0" (formula "20") (term "2,0,1,3,0"))
                                                (rule "shiftRightPositiveShiftDef" (formula "20") (term "1,0,1,3,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,3,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,1,3,0"))
                                                (rule "add_zero_right" (formula "20") (term "0,0,0,0,1,3,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,3,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,3,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,3,0"))
                                                (rule "applyEq" (formula "20") (term "1,3,0") (ifseqformula "16"))
                                                (rule "shiftLeftDef" (formula "19") (term "0,1"))
                                                (rule "polySimp_elimNeg" (formula "19") (term "1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,0,1"))
                                                (rule "shiftLeftPositiveShiftDef" (formula "19") (term "2,0,1"))
                                                (rule "polySimp_elimOneLeft0" (formula "19") (term "2,0,1"))
                                                (rule "shiftRightPositiveShiftDef" (formula "19") (term "1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "19"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "16"))
                                                (rule "inEqSimp_commuteLeq" (formula "19"))
                                                (rule "shiftLeftDef" (formula "18") (term "0,1"))
                                                (rule "polySimp_elimNeg" (formula "18") (term "1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,0,1"))
                                                (rule "shiftLeftPositiveShiftDef" (formula "18") (term "2,0,1"))
                                                (rule "polySimp_elimOneLeft0" (formula "18") (term "2,0,1"))
                                                (rule "shiftRightPositiveShiftDef" (formula "18") (term "1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,1"))
                                                (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "18"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
                                                (rule "applyEq" (formula "18") (term "0") (ifseqformula "16"))
                                                (rule "inEqSimp_commuteLeq" (formula "18"))
                                                (rule "shiftLeftDef" (formula "43") (term "0,0,1,1,0,1,0"))
                                                (rule "polySimp_elimNeg" (formula "43") (term "1,1,0,0,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "0,1,1,0,0,1,1,0,1,0"))
                                                (rule "shiftLeftPositiveShiftDef" (formula "43") (term "2,0,0,1,1,0,1,0"))
                                                (rule "polySimp_elimOneLeft0" (formula "43") (term "2,0,0,1,1,0,1,0"))
                                                (rule "shiftRightPositiveShiftDef" (formula "43") (term "1,0,0,1,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,1,1,0,1,0"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0,1,1,0,1,0"))
                                                (rule "add_literals" (formula "43") (term "0,0,0,0,0,1,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,1,1,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,0,1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,0,1,1,0,1,0"))
                                                (rule "applyEq" (formula "43") (term "0,1,1,0,1,0") (ifseqformula "16"))
                                                (rule "shiftLeftDef" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_elimNeg" (formula "2") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,1,1,0,0,0"))
                                                (rule "shiftLeftPositiveShiftDef" (formula "2") (term "2,0,0,0"))
                                                (rule "polySimp_elimOneLeft0" (formula "2") (term "2,0,0,0"))
                                                (rule "shiftRightPositiveShiftDef" (formula "2") (term "1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,0"))
                                                (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "16"))
                                                (rule "shiftLeftDef" (formula "54") (term "0,1"))
                                                (rule "polySimp_elimNeg" (formula "54") (term "1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "54") (term "1,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "0,1,1,0,1"))
                                                (rule "shiftLeftPositiveShiftDef" (formula "54") (term "2,0,1"))
                                                (rule "polySimp_elimOneLeft0" (formula "54") (term "2,0,1"))
                                                (rule "shiftRightPositiveShiftDef" (formula "54") (term "1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,1"))
                                                (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,1"))
                                                (rule "add_zero_right" (formula "54") (term "0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "54"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0,0"))
                                                (rule "applyEq" (formula "54") (term "0") (ifseqformula "16"))
                                                (rule "inEqSimp_commuteLeq" (formula "54"))
                                                (rule "shiftLeftDef" (formula "43") (term "0,1,1,1,0"))
                                                (rule "polySimp_elimNeg" (formula "43") (term "1,1,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "43") (term "1,1,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "0,1,1,0,1,1,1,0"))
                                                (rule "shiftLeftPositiveShiftDef" (formula "43") (term "2,0,1,1,1,0"))
                                                (rule "polySimp_elimOneLeft0" (formula "43") (term "2,0,1,1,1,0"))
                                                (rule "shiftRightPositiveShiftDef" (formula "43") (term "1,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,1,1,1,0"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,1,1,1,0"))
                                                (rule "add_literals" (formula "43") (term "0,0,0,0,1,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,1,1,1,0"))
                                                (rule "applyEq" (formula "43") (term "1,1,1,0") (ifseqformula "16"))
                                                (rule "shiftLeftDef" (formula "55") (term "0,0,1,1"))
                                                (rule "polySimp_elimNeg" (formula "55") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "0,1,1,0,0,1,1"))
                                                (rule "shiftLeftPositiveShiftDef" (formula "55") (term "2,0,0,1,1"))
                                                (rule "polySimp_elimOneLeft0" (formula "55") (term "2,0,0,1,1"))
                                                (rule "shiftRightPositiveShiftDef" (formula "55") (term "1,0,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "55") (term "1,0,0,0,0,0,1,1"))
                                                (rule "add_zero_right" (formula "55") (term "0,0,0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,1,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "55"))
                                                (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1"))
                                                (rule "polySimp_rightDist" (formula "55") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                                                (rule "mul_literals" (formula "55") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "55") (term "1,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0,0,0"))
                                                (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "16"))
                                                (rule "inEqSimp_homoInEq1" (formula "55"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "55"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1"))
                                                (rule "polySimp_rightDist" (formula "55") (term "1"))
                                                (rule "mul_literals" (formula "55") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                                                (rule "shiftLeftDef" (formula "52") (term "0,0"))
                                                (rule "polySimp_elimNeg" (formula "52") (term "1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "52") (term "0,1,1,0,0"))
                                                (rule "shiftLeftPositiveShiftDef" (formula "52") (term "2,0,0"))
                                                (rule "polySimp_elimOneLeft0" (formula "52") (term "2,0,0"))
                                                (rule "shiftRightPositiveShiftDef" (formula "52") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "52") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "52") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "52") (term "0,0,0,0"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "16"))
                                                (rule "shiftLeftDef" (formula "21") (term "0,1,1,1,0,0,0"))
                                                (rule "polySimp_elimNeg" (formula "21") (term "1,1,0,1,1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,1,1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,1,0,1,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,1,1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,0,1,1,1,0,0,0"))
                                                (rule "shiftLeftPositiveShiftDef" (formula "21") (term "2,0,1,1,1,0,0,0"))
                                                (rule "polySimp_elimOneLeft0" (formula "21") (term "2,0,1,1,1,0,0,0"))
                                                (rule "shiftRightPositiveShiftDef" (formula "21") (term "1,0,1,1,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,1,1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0,0,1,1,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,1,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,1,1,1,0,0,0"))
                                                (rule "applyEq" (formula "21") (term "1,1,1,0,0,0") (ifseqformula "16"))
                                                (rule "shiftLeftDef" (formula "22") (term "0,1,1,1,0,0,0"))
                                                (rule "polySimp_elimNeg" (formula "22") (term "1,1,0,1,1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,0,1,1,1,0,0,0"))
                                                (rule "shiftLeftPositiveShiftDef" (formula "22") (term "2,0,1,1,1,0,0,0"))
                                                (rule "polySimp_elimOneLeft0" (formula "22") (term "2,0,1,1,1,0,0,0"))
                                                (rule "shiftRightPositiveShiftDef" (formula "22") (term "1,0,1,1,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,1,1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,0,1,1,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,1,1,0,0,0"))
                                                (rule "applyEq" (formula "22") (term "1,1,1,0,0,0") (ifseqformula "16"))
                                                (rule "shiftLeftDef" (formula "21") (term "0,1,1,1,1,0"))
                                                (rule "polySimp_elimNeg" (formula "21") (term "1,1,0,1,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,1,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,1,0,1,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,1,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,0,1,1,1,1,0"))
                                                (rule "shiftLeftPositiveShiftDef" (formula "21") (term "2,0,1,1,1,1,0"))
                                                (rule "polySimp_elimOneLeft0" (formula "21") (term "2,0,1,1,1,1,0"))
                                                (rule "shiftRightPositiveShiftDef" (formula "21") (term "1,0,1,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,1,1,1,1,0"))
                                                (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,1,1,1,1,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0,0,1,1,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,1,1,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,1,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,1,1,1,1,0"))
                                                (rule "applyEq" (formula "21") (term "1,1,1,1,0") (ifseqformula "16"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "55"))
                                                (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                (rule "mul_literals" (formula "4") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "52"))
                                                (rule "mul_literals" (formula "17") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                (rule "mul_literals" (formula "17") (term "0,1"))
                                                (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "17"))
                                                (rule "inEqSimp_homoInEq0" (formula "54") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "54") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "54") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                                                (rule "add_literals" (formula "54") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "54") (term "0,0"))
                                                (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "54") (term "0,0"))
                                                (rule "qeq_literals" (formula "54") (term "0"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "true_left" (formula "54"))
                                                (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "55"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "54") (term "0"))
                                                (rule "polySimp_addComm0" (formula "54") (term "0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "54") (term "0"))
                                                (rule "add_literals" (formula "54") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "54") (term "1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "54"))
                                                (rule "mul_literals" (formula "54") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "18"))
                                                (rule "leq_literals" (formula "54") (term "0"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "true_left" (formula "54"))
                                                (rule "inEqSimp_exactShadow1" (formula "2") (ifseqformula "53"))
                                                (rule "greater_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "57"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "54") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                                (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                (rule "polySimp_elimOne" (formula "54") (term "0"))
                                                (rule "nnf_imp2or" (formula "11") (term "0"))
                                                (rule "nnf_imp2or" (formula "45") (term "0"))
                                                (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                (rule "expand_moduloInteger" (formula "16") (term "0"))
                                                (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0"))
                                                (rule "replace_int_RANGE" (formula "16") (term "1,1,0"))
                                                (rule "replace_int_MIN" (formula "16") (term "0,0"))
                                                (rule "polySimp_homoEq" (formula "16"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "46"))
                                                (rule "true_left" (formula "46"))
                                                (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "33"))
                                                (rule "andLeft" (formula "33"))
                                                (rule "notLeft" (formula "33"))
                                                (rule "notLeft" (formula "33"))
                                                (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "57"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "notLeft" (formula "13"))
                                                (rule "notLeft" (formula "13"))
                                                (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "39"))
                                                 (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "24")))
                                                (rule "andLeft" (formula "39"))
                                                (rule "andLeft" (formula "39"))
                                                (rule "andLeft" (formula "39"))
                                                (rule "andLeft" (formula "39"))
                                                (rule "andLeft" (formula "39"))
                                                (rule "andLeft" (formula "39"))
                                                (rule "eqSymm" (formula "44"))
                                                (rule "eqSymm" (formula "41"))
                                                (rule "translateJavaSubInt" (formula "44") (term "0,2,0"))
                                                (rule "translateJavaSubInt" (formula "44") (term "0,2,1"))
                                                (rule "translateJavaMulInt" (formula "41") (term "0"))
                                                (rule "polySimp_elimSub" (formula "44") (term "0,2,0"))
                                                (rule "mul_literals" (formula "44") (term "1,0,2,0"))
                                                (rule "eqSymm" (formula "44"))
                                                (rule "polySimp_elimSub" (formula "44") (term "0,2,0"))
                                                (rule "mul_literals" (formula "44") (term "1,0,2,0"))
                                                (rule "eqSymm" (formula "44"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "0"))
                                                (rule "polySimp_addComm0" (formula "44") (term "0,2,0"))
                                                (rule "eqSymm" (formula "44"))
                                                (rule "polySimp_addComm0" (formula "44") (term "0,2,0"))
                                                (rule "eqSymm" (formula "44"))
                                                (rule "inEqSimp_commuteLeq" (formula "39"))
                                                (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "42"))
                                                (rule "inEqSimp_commuteGeq" (formula "19"))
                                                (rule "applyEq" (formula "64") (term "0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "48") (term "1,1,0,1,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "58") (term "1,1") (ifseqformula "41"))
                                                (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "22") (term "1,0,1,0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "41"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "newSym_eq" (formula "41") (inst "newSymDef=mul(int::final(self,
               de.wiesler.Classifier::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                                (rule "times_zero_1" (formula "41") (term "1,1"))
                                                (rule "add_zero_right" (formula "41") (term "1"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "22") (term "1,1,1,0,0,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "49") (term "1,1,1,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "21") (term "1,1,1,1,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "44") (term "3,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "57") (term "0") (ifseqformula "41"))
                                                (rule "inEqSimp_homoInEq0" (formula "57"))
                                                (rule "polySimp_addComm1" (formula "57") (term "0"))
                                                (rule "polySimp_addComm1" (formula "57") (term "0,0"))
                                                (rule "applyEq" (formula "21") (term "1,1,1,0,0,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "20") (term "1,3,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "45") (term "1,0,2,0") (ifseqformula "41"))
                                                (rule "eqSymm" (formula "45"))
                                                (rule "applyEq" (formula "58") (term "1") (ifseqformula "41"))
                                                (rule "applyEq" (formula "18") (term "1") (ifseqformula "41"))
                                                (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "41"))
                                                (rule "eqSymm" (formula "42"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "41"))
                                                (rule "inEqSimp_commuteLeq" (formula "19"))
                                                (rule "applyEq" (formula "1") (term "0,0,1,1") (ifseqformula "42"))
                                                (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "42"))
                                                (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "42"))
                                                (rule "applyEq" (formula "16") (term "0,0,1,1") (ifseqformula "42"))
                                                (rule "applyEq" (formula "39") (term "0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "40") (term "0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "59") (term "1,1") (ifseqformula "42"))
                                                (rule "applyEq" (formula "49") (term "1,1,0,1,0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "45") (term "1,0,2,0") (ifseqformula "41"))
                                                (rule "eqSymm" (formula "45"))
                                                (rule "applyEq" (formula "61") (term "0,1,0,1") (ifseqformula "42"))
                                                (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "41"))
                                                (rule "applyEq" (formula "57") (term "0,1,0,0") (ifseqformula "42"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1"))
                                                (rule "polySimp_rightDist" (formula "57") (term "1"))
                                                (rule "polySimp_rightDist" (formula "57") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1"))
                                                (rule "mul_literals" (formula "57") (term "0,0,1"))
                                                (rule "polySimp_elimOne" (formula "57") (term "1,0,1"))
                                                (rule "inEqSimp_subsumption6" (formula "39") (ifseqformula "17"))
                                                (rule "greater_literals" (formula "39") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "mul_literals" (formula "39") (term "1,0"))
                                                (rule "leq_literals" (formula "39") (term "0"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "elimGcdLeq_antec" (formula "39") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(4(6(#)))"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "39") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "neg_literal" (formula "39") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "39") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                                (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0"))
                                                (rule "qeq_literals" (formula "39") (term "0"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "inEqSimp_exactShadow3" (formula "57") (ifseqformula "58"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                (rule "polySimp_addComm0" (formula "57") (term "0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "57") (term "0"))
                                                (rule "add_literals" (formula "57") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "57") (term "1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                (rule "mul_literals" (formula "57") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "57") (ifseqformula "17"))
                                                (rule "leq_literals" (formula "57") (term "0"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "true_left" (formula "39"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "59"))
                                                (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                (rule "mul_literals" (formula "4") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "57"))
                                                (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "59"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "56") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "56") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "56"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1"))
                                                (rule "polySimp_rightDist" (formula "56") (term "1"))
                                                (rule "polySimp_rightDist" (formula "56") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "56") (term "1,0,1"))
                                                (rule "mul_literals" (formula "56") (term "0,0,1"))
                                                (rule "polySimp_elimOne" (formula "56") (term "1,0,1"))
                                                (rule "nnf_imp2or" (formula "21") (term "0"))
                                                (rule "nnf_imp2or" (formula "47") (term "0"))
                                                (rule "nnf_imp2or" (formula "22") (term "0"))
                                                (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                                                (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                                (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                                (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
                                                (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
                                                (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                                (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "48") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "48") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "21") (term "1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "21") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "21") (term "1,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "21") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "21") (term "1,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "21") (term "1,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "21") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,0"))
                                                (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "47") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "47") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "47") (term "0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "47") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "47") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "1,1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "22") (term "1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "22") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "22") (term "1,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "22") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "22") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "22") (term "1,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "22") (term "1,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,0"))
                                                (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                                (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "20") (term "0") (inst "i=i_1") (inst "j=j"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "expand_inInt" (formula "20") (term "1,0,0"))
                                                (rule "expand_inInt" (formula "20") (term "1,0,0,1,0"))
                                                (rule "replace_int_MAX" (formula "20") (term "1,0,1,0,0"))
                                                (rule "replace_int_MIN" (formula "20") (term "0,1,1,0,0"))
                                                (rule "replace_int_MIN" (formula "20") (term "0,1,1,0,0,1,0"))
                                                (rule "replace_int_MAX" (formula "20") (term "1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "20") (term "1,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "20") (term "1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,1,0"))
                                                (rule "nnf_imp2or" (formula "20") (term "0"))
                                                (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "44") (inst "i=i_1") (inst "i_0=i_0"))
                                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "62")) (ifInst ""  (formula "14")))
                                                (rule "expand_inInt" (formula "44") (term "1,0,0,1"))
                                                (rule "expand_inInt" (formula "44") (term "1,0,0,1,0"))
                                                (rule "replace_int_MAX" (formula "44") (term "1,0,1,0,0,1"))
                                                (rule "replace_int_MIN" (formula "44") (term "0,1,1,0,0,1"))
                                                (rule "replace_int_MIN" (formula "44") (term "0,1,1,0,0,1,0"))
                                                (rule "replace_int_MAX" (formula "44") (term "1,0,1,0,0,1,0"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "notLeft" (formula "44"))
                                                (rule "eqSymm" (formula "51") (term "1,0"))
                                                (rule "translateJavaSubInt" (formula "49") (term "3,0"))
                                                (rule "translateJavaShiftLeftInt" (formula "45") (term "1"))
                                                (rule "translateJavaSubInt" (formula "51") (term "0,2,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "49") (term "3,0"))
                                                (rule "mul_literals" (formula "49") (term "1,3,0"))
                                                (rule "polySimp_elimSub" (formula "51") (term "0,2,0,1,0"))
                                                (rule "mul_literals" (formula "51") (term "1,0,2,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "49") (term "3,0"))
                                                (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "50") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "51") (term "1,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "50") (term "1,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "50") (term "0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "48"))
                                                (rule "inEqSimp_commuteLeq" (formula "47"))
                                                (rule "inEqSimp_commuteLeq" (formula "46"))
                                                (rule "inEqSimp_commuteLeq" (formula "44"))
                                                (rule "applyEq" (formula "45") (term "0") (ifseqformula "44"))
                                                (rule "applyEq" (formula "47") (term "1") (ifseqformula "39"))
                                                (rule "applyEq" (formula "66") (term "0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "46") (term "1") (ifseqformula "39"))
                                                (rule "applyEq" (formula "47") (term "1,3,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "39"))
                                                (rule "eqSymm" (formula "44"))
                                                (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "48") (term "1,0,1,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "47") (term "0,1,0,0,1,0,0,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "47") (term "0,1,0,0,1,1,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "48") (term "0,1,0,0,1,0,0,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "45") (term "0") (ifseqformula "44"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,1,0"))
                                                (rule "mul_literals" (formula "46") (term "0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,1,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "47") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,0"))
                                                (rule "javaShiftLeftIntDef" (formula "44") (term "0"))
                                                (rule "mod_axiom" (formula "44") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                                                (rule "shiftLeftDef" (formula "44") (term "0,0"))
                                                (rule "polySimp_elimNeg" (formula "44") (term "1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "0,1,1,0,0"))
                                                (rule "shiftLeftPositiveShiftDef" (formula "44") (term "2,0,0"))
                                                (rule "polySimp_elimOneLeft0" (formula "44") (term "2,0,0"))
                                                (rule "shiftRightPositiveShiftDef" (formula "44") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "44") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0,0"))
                                                (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "42") (term "0"))
                                                (rule "replace_known_left" (formula "42") (term "1,0") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "64")) (ifInst ""  (formula "43")))
                                                (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "43") (term "0") (inst "i=i_1") (inst "j=j"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "expand_inInt" (formula "43") (term "1,0,0"))
                                                (rule "expand_inInt" (formula "43") (term "1,0,0,1,0"))
                                                (rule "replace_int_MAX" (formula "43") (term "1,0,1,0,0"))
                                                (rule "replace_int_MIN" (formula "43") (term "0,1,1,0,0"))
                                                (rule "replace_int_MIN" (formula "43") (term "0,1,1,0,0,1,0"))
                                                (rule "replace_int_MAX" (formula "43") (term "1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "43") (term "1,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "43") (term "1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,1,0"))
                                                (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "53") (inst "i=i_1") (inst "i_0=i_0"))
                                                 (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "66")) (ifInst ""  (formula "14")))
                                                (rule "expand_inInt" (formula "53") (term "1,0,0,1,0"))
                                                (rule "expand_inInt" (formula "53") (term "1,0,0,1"))
                                                (rule "replace_int_MAX" (formula "53") (term "1,0,1,0,0,1,0"))
                                                (rule "replace_int_MIN" (formula "53") (term "0,1,1,0,0,1,0"))
                                                (rule "replace_int_MAX" (formula "53") (term "1,0,1,0,0,1"))
                                                (rule "replace_int_MIN" (formula "53") (term "0,1,1,0,0,1"))
                                                (rule "andLeft" (formula "53"))
                                                (rule "andLeft" (formula "53"))
                                                (rule "andLeft" (formula "53"))
                                                (rule "andLeft" (formula "53"))
                                                (rule "andLeft" (formula "53"))
                                                (rule "andLeft" (formula "54"))
                                                (rule "andLeft" (formula "53"))
                                                (rule "andLeft" (formula "53"))
                                                (rule "notLeft" (formula "53"))
                                                (rule "translateJavaSubInt" (formula "60") (term "0,2,1,1,0"))
                                                (rule "translateJavaSubInt" (formula "58") (term "3,0"))
                                                (rule "translateJavaShiftLeftInt" (formula "54") (term "1"))
                                                (rule "eqSymm" (formula "60") (term "1,0"))
                                                (rule "polySimp_elimSub" (formula "58") (term "3,0"))
                                                (rule "mul_literals" (formula "58") (term "1,3,0"))
                                                (rule "polySimp_elimSub" (formula "60") (term "0,2,0,1,0"))
                                                (rule "mul_literals" (formula "60") (term "1,0,2,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "58") (term "3,0"))
                                                (rule "polySimp_addComm0" (formula "60") (term "0,2,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "59") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "60") (term "1,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "59") (term "0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "59") (term "1,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "57"))
                                                (rule "inEqSimp_commuteLeq" (formula "56"))
                                                (rule "inEqSimp_commuteLeq" (formula "55"))
                                                (rule "inEqSimp_commuteLeq" (formula "53"))
                                                (rule "applyEq" (formula "55") (term "1") (ifseqformula "39"))
                                                (rule "applyEq" (formula "56") (term "1,3,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "53") (term "0") (ifseqformula "39"))
                                                (rule "eqSymm" (formula "53"))
                                                (rule "applyEq" (formula "54") (term "0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "54") (term "1") (ifseqformula "39"))
                                                (rule "applyEq" (formula "57") (term "1,0,1,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "67") (term "0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "55") (term "0,1,0,0,1,0,0,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "56") (term "0,1,0,0,1,0,0,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "55") (term "0,1,0,0,1,1,0") (ifseqformula "39"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "55") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "55") (term "0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "55") (term "1,1,1,1,0"))
                                                (rule "javaShiftLeftIntDef" (formula "53") (term "0"))
                                                (rule "mod_axiom" (formula "53") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                                                (rule "shiftLeftDef" (formula "53") (term "0,0"))
                                                (rule "polySimp_elimNeg" (formula "53") (term "1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "0,1,1,0,0"))
                                                (rule "shiftLeftPositiveShiftDef" (formula "53") (term "2,0,0"))
                                                (rule "polySimp_elimOneLeft0" (formula "53") (term "2,0,0"))
                                                (rule "shiftRightPositiveShiftDef" (formula "53") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "53") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "53") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "53") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                (rule "nnf_imp2or" (formula "20") (term "0,1,0"))
                                                (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "21") (term "0,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "21") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "21") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "21") (term "0,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "21") (term "1,0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "21") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "21") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm1" (formula "21") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm1" (formula "21") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "0,1,0,1,0"))
                                                (rule "mul_literals" (formula "21") (term "0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,0,1,0,1,0"))
                                                (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "21") (term "0,1,1,0"))
                                                (rule "translateJavaSubInt" (formula "21") (term "0,1,1,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "21") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "21") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "21") (term "0,1,1,0,1,1,0"))
                                                (rule "mul_literals" (formula "21") (term "1,0,1,1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "21") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "0,1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "1,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "21") (term "0,1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm1" (formula "21") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm1" (formula "21") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "21") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "0,1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "21") (term "0,0,0,1,1,1,0"))
                                                (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "22") (term "1,0,2,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "22") (term "0,1,1,1,0,2,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,0,0,1,0,2,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,1,1,0,2,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "22") (term "0,1,1,1,0,2,0,1,0"))
                                                (rule "mul_literals" (formula "22") (term "1,0,1,1,1,0,2,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,2,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "22") (term "0,1,0,1,0,2,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "0,1,1,0,2,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,0,2,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,1,0,2,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "1,1,0,2,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "22") (term "0,1,1,0,2,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,2,0,1,0"))
                                                (rule "polySimp_mulComm1" (formula "22") (term "1,1,0,2,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,0,2,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "0,1,0,2,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0,0,1,0,2,0,1,0"))
                                                (rule "polySimp_mulComm1" (formula "22") (term "1,0,1,0,2,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,1,0,2,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,2,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,2,0,1,0"))
                                                (rule "nnf_imp2or" (formula "47") (term "0"))
                                                (rule "nnf_imp2or" (formula "48") (term "0"))
                                                (rule "expand_moduloInteger" (formula "45") (term "0"))
                                                (rule "replace_int_RANGE" (formula "45") (term "1,1,0"))
                                                (rule "replace_int_HALFRANGE" (formula "45") (term "0,0,1,0"))
                                                (rule "replace_int_MIN" (formula "45") (term "0,0"))
                                                (rule "polySimp_homoEq" (formula "45"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                                (rule "mul_literals" (formula "45") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                                                (rule "applyEq" (formula "45") (term "0,1,0") (ifseqformula "15"))
                                                (rule "polySimp_pullOutFactor1" (formula "45") (term "0"))
                                                (rule "add_literals" (formula "45") (term "1,0"))
                                                (rule "times_zero_1" (formula "45") (term "0"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "true_left" (formula "45"))
                                                (rule "nnf_imp2or" (formula "43") (term "0"))
                                                (rule "commute_and" (formula "50") (term "1,0"))
                                                (rule "commute_or" (formula "11") (term "0,0,0"))
                                                (rule "commute_or" (formula "51") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "21") (term "0,0"))
                                                (rule "nnf_imp2or" (formula "53") (term "0"))
                                                (rule "commute_or" (formula "50") (term "0,0,0"))
                                                (rule "nnf_notAnd" (formula "20") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "20") (term "1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "20") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "20") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0"))
                                                (rule "nnf_notAnd" (formula "20") (term "0,0,1,0"))
                                                (rule "jdiv_axiom" (formula "1") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "18"))
                                                (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEqRigid" (formula "60") (term "0,1,1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "17") (term "0,1,1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "64") (term "1,0,1") (ifseqformula "1"))
                                                (rule "polyDiv_pullOut" (formula "64") (term "1,0,1") (inst "polyDivCoeff=l_0"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,2,1,0,1"))
                                                (rule "equal_literals" (formula "64") (term "0,1,0,1"))
                                                 (builtin "One Step Simplification" (formula "64"))
                                                (rule "polySimp_pullOutFactor0" (formula "64") (term "0,0,1,0,1"))
                                                (rule "add_literals" (formula "64") (term "1,0,0,1,0,1"))
                                                (rule "times_zero_1" (formula "64") (term "0,0,1,0,1"))
                                                (rule "div_literals" (formula "64") (term "0,1,0,1"))
                                                (rule "add_zero_left" (formula "64") (term "1,0,1"))
                                                (rule "polyDiv_pullOut" (formula "3") (term "0") (inst "polyDivCoeff=l_0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0"))
                                                (rule "equal_literals" (formula "3") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "polySimp_pullOutFactor0" (formula "3") (term "0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,0,0"))
                                                (rule "div_literals" (formula "3") (term "0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "3"))
                                                (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "3"))
                                                (rule "leq_literals" (formula "18") (term "0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "polyDiv_pullOut" (formula "17") (term "0,1,1") (inst "polyDivCoeff=l_0"))
                                                (rule "equal_literals" (formula "17") (term "0,0,1,1"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0,0,1,1"))
                                                (rule "add_literals" (formula "17") (term "1,0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "17") (term "0,0,0,1,1"))
                                                (rule "div_literals" (formula "17") (term "0,0,1,1"))
                                                (rule "add_zero_left" (formula "17") (term "0,1,1"))
                                                (rule "polyDiv_pullOut" (formula "5") (term "1,1") (inst "polyDivCoeff=l_0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,2,1,1"))
                                                (rule "equal_literals" (formula "5") (term "0,1,1"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,1,1"))
                                                (rule "add_literals" (formula "5") (term "1,0,0,1,1"))
                                                (rule "times_zero_1" (formula "5") (term "0,0,1,1"))
                                                (rule "div_literals" (formula "5") (term "0,1,1"))
                                                (rule "add_zero_left" (formula "5") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "60") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "60") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                                (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "60") (term "0,0"))
                                                (rule "qeq_literals" (formula "60") (term "0"))
                                                 (builtin "One Step Simplification" (formula "60"))
                                                (rule "true_left" (formula "60"))
                                                (rule "polyDiv_pullOut" (formula "2") (term "0,1,1") (inst "polyDivCoeff=l_0"))
                                                (rule "equal_literals" (formula "2") (term "0,0,1,1"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,0,1,1"))
                                                (rule "add_literals" (formula "2") (term "1,0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "2") (term "0,0,0,1,1"))
                                                (rule "div_literals" (formula "2") (term "0,0,1,1"))
                                                (rule "add_zero_left" (formula "2") (term "0,1,1"))
                                                (rule "polyDiv_pullOut" (formula "59") (term "0,1,1") (inst "polyDivCoeff=l_0"))
                                                (rule "equal_literals" (formula "59") (term "0,0,1,1"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "59") (term "0,0,0,1,1"))
                                                (rule "add_literals" (formula "59") (term "1,0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "59") (term "0,0,0,1,1"))
                                                (rule "div_literals" (formula "59") (term "0,0,1,1"))
                                                (rule "add_zero_left" (formula "59") (term "0,1,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "59") (term "1"))
                                                (rule "add_literals" (formula "59") (term "1,1,1"))
                                                (rule "times_zero_1" (formula "59") (term "1,1"))
                                                (rule "add_zero_right" (formula "59") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "59") (ifseqformula "4"))
                                                (rule "leq_literals" (formula "59") (term "0"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "true_left" (formula "59"))
                                                (rule "polyDiv_pullOut" (formula "1") (term "1") (inst "polyDivCoeff=l_0"))
                                                (rule "equal_literals" (formula "1") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1"))
                                                (rule "add_literals" (formula "1") (term "1,0,0,1"))
                                                (rule "times_zero_1" (formula "1") (term "0,0,1"))
                                                (rule "div_literals" (formula "1") (term "0,1"))
                                                (rule "add_zero_left" (formula "1") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "59"))
                                                (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "mul_literals" (formula "5") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "61"))
                                                (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "mul_literals" (formula "5") (term "1"))
                                                (rule "div_axiom" (formula "16") (term "0,1,1,1,1,1,0,0") (inst "quotient=quotient_0"))
                                                (rule "equal_literals" (formula "16") (term "0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "qeq_literals" (formula "16") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "mul_literals" (formula "16") (term "1,1,1"))
                                                (rule "andLeft" (formula "16"))
                                                (rule "andLeft" (formula "16"))
                                                (rule "polySimp_addComm1" (formula "18") (term "1"))
                                                (rule "add_literals" (formula "18") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "inEqSimp_homoInEq1" (formula "18"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                (rule "applyEq" (formula "19") (term "0,0,0,1,0,0") (ifseqformula "16"))
                                                (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "19") (term "0,1,1,1,1,1,0,0") (ifseqformula "16"))
                                                (rule "polySimp_addComm0" (formula "19") (term "1,1,1,1,0,0"))
                                                (rule "applyEq" (formula "19") (term "0,1,1,2,1,0,0") (ifseqformula "16"))
                                                (rule "polySimp_addComm0" (formula "19") (term "1,2,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                (rule "mul_literals" (formula "18") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (term "0,1,0,0") (ifseqformula "17"))
                                                (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "19") (term "1,1,0,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,0"))
                                                (rule "leq_literals" (formula "19") (term "0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "mod_axiom" (formula "19") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "19"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "19") (term "0,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "19"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "0,1"))
                                                (rule "newSym_eq" (formula "19") (inst "l=l_1") (inst "newSymDef=add(mul(l_0, Z(0(#))),
    mul(pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                int::final(de.wiesler.Tree::final(self,
                                                  de.wiesler.Classifier::$tree),
                           de.wiesler.Tree::$log_buckets))),
        Z(0(#))))"))
                                                (rule "times_zero_1" (formula "19") (term "1,1,1"))
                                                (rule "times_zero_1" (formula "19") (term "0,1,1"))
                                                (rule "add_zero_left" (formula "19") (term "1,1"))
                                                (rule "add_zero_right" (formula "19") (term "1"))
                                                (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "19"))
                                                (rule "polySimp_homoEq" (formula "20"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "20"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0,1"))
                                                (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "20"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                (rule "polyDiv_pullOut" (formula "19") (term "0") (inst "polyDivCoeff=l_1"))
                                                (rule "equal_literals" (formula "19") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                                (rule "polySimp_homoEq" (formula "19"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0,1,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,1,1,1,0"))
                                                (rule "add_literals" (formula "19") (term "1,1,0,0,1,1,1,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0,1,1,1,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0"))
                                                (rule "add_literals" (formula "19") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "19") (term "0,0"))
                                                (rule "add_zero_left" (formula "19") (term "0"))
                                                (rule "polySimp_invertEq" (formula "19"))
                                                (rule "times_zero_2" (formula "19") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "18"))
                                                (rule "mul_literals" (formula "14") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                (rule "add_literals" (formula "14") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                (rule "mul_literals" (formula "14") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "14") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0"))
                                                (rule "leq_literals" (formula "14") (term "0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "16"))
                                                (rule "polySimp_mulAssoc" (formula "18") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "18") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                                (rule "leq_literals" (formula "18") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                                (rule "neg_literal" (formula "18") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                                (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0"))
                                                (rule "qeq_literals" (formula "18") (term "0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "18"))
                                                (rule "applyEqRigid" (formula "20") (term "0,1") (ifseqformula "14"))
                                                (rule "mul_literals" (formula "20") (term "1"))
                                                (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "14"))
                                                (rule "qeq_literals" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "applyEqRigid" (formula "20") (term "0,1,1") (ifseqformula "14"))
                                                (rule "times_zero_2" (formula "20") (term "1,1"))
                                                (rule "add_zero_right" (formula "20") (term "1"))
                                                (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "applyEq" (formula "21") (term "0,0,1,0") (ifseqformula "14"))
                                                (rule "times_zero_2" (formula "21") (term "0,1,0"))
                                                (rule "add_zero_left" (formula "21") (term "1,0"))
                                                (rule "applyEq" (formula "17") (term "1") (ifseqformula "14"))
                                                (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "18") (term "0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "18") (term "0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "commute_or" (formula "13") (term "0,0,0,0"))
                                                (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "48") (term "0") (inst "i=i_1") (inst "j=j"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "expand_inInt" (formula "48") (term "1,0,0"))
                                                (rule "expand_inInt" (formula "48") (term "1,0,0,1,0"))
                                                (rule "replace_int_MAX" (formula "48") (term "1,0,1,0,0"))
                                                (rule "replace_int_MIN" (formula "48") (term "0,1,1,0,0"))
                                                (rule "replace_int_MIN" (formula "48") (term "0,1,1,0,0,1,0"))
                                                (rule "replace_int_MAX" (formula "48") (term "1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "48") (term "1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "48") (term "1,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "48") (term "1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,0,1,0"))
                                                (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                                (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                                (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "45") (term "0"))
                                                (rule "replace_known_left" (formula "45") (term "0,1") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "66")) (ifInst ""  (formula "28")))
                                                (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "46") (term "0") (inst "i=i_1"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "expand_inInt" (formula "46") (term "1,0,0"))
                                                (rule "replace_int_MIN" (formula "46") (term "0,1,1,0,0"))
                                                (rule "replace_int_MAX" (formula "46") (term "1,0,1,0,0"))
                                                (rule "translateJavaSubInt" (formula "46") (term "1,1,0,0,0"))
                                                (rule "translateJavaAddInt" (formula "46") (term "0,2,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "46") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "46") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "46") (term "0,2,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "46") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "46") (term "1,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "46") (term "1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                                (rule "nnf_notAnd" (formula "57") (term "0,0"))
                                                (rule "nnf_imp2or" (formula "47") (term "0,1,0"))
                                                (rule "arrayLengthIsAShort" (formula "39") (term "0"))
                                                (rule "expand_inShort" (formula "39"))
                                                (rule "replace_short_MIN" (formula "39") (term "0,1"))
                                                (rule "replace_short_MAX" (formula "39") (term "1,0"))
                                                (rule "andLeft" (formula "39"))
                                                (rule "inEqSimp_commuteLeq" (formula "39"))
                                                (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "36"))
                                                (rule "leq_literals" (formula "39") (term "0"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                                                (rule "expand_inShort" (formula "22"))
                                                (rule "replace_short_MIN" (formula "22") (term "0,1"))
                                                (rule "replace_short_MAX" (formula "22") (term "1,0"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "inEqSimp_commuteLeq" (formula "23"))
                                                (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "4"))
                                                (rule "leq_literals" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "22"))
                                                (rule "qeq_literals" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "closeFalse" (formula "4"))
                                             )
                                             (branch "Usage"
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "translateJavaSubInt" (formula "59") (term "0,1,0"))
                                                (rule "polySimp_elimSub" (formula "59") (term "0,1,0"))
                                                (rule "polySimp_addComm0" (formula "59") (term "0,1,0"))
                                                (rule "variableDeclarationFinalAssign" (formula "59") (term "1"))
                                                (rule "variableDeclarationFinal" (formula "59") (term "1") (newnames "equal_to_splitter"))
                                                (rule "compound_assignment_2" (formula "59") (term "1") (inst "#v=x_2"))
                                                (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                                (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_12"))
                                                (rule "methodCallWithAssignmentUnfoldArguments" (formula "59") (term "1"))
                                                (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                                (rule "variableDeclaration" (formula "59") (term "1") (newnames "var"))
                                                (rule "assignment" (formula "59") (term "1"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                                (rule "variableDeclaration" (formula "59") (term "1") (newnames "var_1"))
                                                (rule "eval_order_array_access4" (formula "59") (term "1") (inst "#v0=x_arr"))
                                                (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                                (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_arr_1"))
                                                (rule "assignment_read_attribute_this_final" (formula "59"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "assignment_array2" (formula "59"))
                                                (branch "Normal Execution (x_arr_1 != null)"
                                                    (builtin "One Step Simplification" (formula "59"))
                                                   (rule "pullOutSelect" (formula "59") (term "0,1,0") (inst "selectSK=arr_2"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                   (rule "arrayLengthNotNegative" (formula "28") (term "0"))
                                                   (rule "arrayLengthIsAShort" (formula "29") (term "0"))
                                                   (rule "expand_inShort" (formula "29"))
                                                   (rule "replace_short_MIN" (formula "29") (term "0,1"))
                                                   (rule "replace_short_MAX" (formula "29") (term "1,0"))
                                                   (rule "andLeft" (formula "29"))
                                                   (rule "inEqSimp_commuteLeq" (formula "29"))
                                                   (rule "arrayLengthIsAShort" (formula "34") (term "0"))
                                                   (rule "expand_inShort" (formula "34"))
                                                   (rule "replace_short_MIN" (formula "34") (term "0,1"))
                                                   (rule "replace_short_MAX" (formula "34") (term "1,0"))
                                                   (rule "andLeft" (formula "34"))
                                                   (rule "inEqSimp_commuteLeq" (formula "35"))
                                                   (rule "applyEq" (formula "34") (term "0") (ifseqformula "36"))
                                                   (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                   (rule "arrayLengthNotNegative" (formula "34") (term "0"))
                                                   (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                   (rule "arrayLengthIsAShort" (formula "51") (term "1"))
                                                   (rule "expand_inShort" (formula "51"))
                                                   (rule "replace_short_MIN" (formula "51") (term "0,1"))
                                                   (rule "replace_short_MAX" (formula "51") (term "1,0"))
                                                   (rule "andLeft" (formula "51"))
                                                   (rule "inEqSimp_commuteLeq" (formula "52"))
                                                   (rule "arrayLengthNotNegative" (formula "53") (term "1"))
                                                    (builtin "Use Dependency Contract" (formula "10") (ifInst ""  (formula "64") (term "0,1,0,0,1")) (ifInst ""  (formula "37")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                    (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "62")) (ifInst ""  (formula "15")) (ifInst ""  (formula "14")) (ifInst ""  (formula "24")) (ifInst ""  (formula "10")) (ifInst ""  (formula "24")))
                                                   (rule "true_left" (formula "55"))
                                                   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "64") (term "1") (inst "#v0=x_13"))
                                                   (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_13"))
                                                   (rule "variableDeclarationAssign" (formula "64") (term "1"))
                                                   (rule "variableDeclaration" (formula "64") (term "1") (newnames "a"))
                                                   (rule "assignment" (formula "64") (term "1"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "variableDeclarationAssign" (formula "64") (term "1"))
                                                   (rule "variableDeclaration" (formula "64") (term "1") (newnames "b"))
                                                   (rule "assignment" (formula "64") (term "1"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "methodBodyExpand" (formula "64") (term "1") (newnames "heapBefore_cmp,savedHeapBefore_cmp"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "returnUnfold" (formula "64") (term "1") (inst "#v0=x_14"))
                                                   (rule "variableDeclarationAssign" (formula "64") (term "1"))
                                                   (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_14"))
                                                   (rule "less_than_comparison_simple" (formula "64") (term "1"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "methodCallReturn" (formula "64") (term "1"))
                                                   (rule "assignment" (formula "64") (term "1"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "methodCallEmpty" (formula "64") (term "1"))
                                                   (rule "blockEmpty" (formula "64") (term "1"))
                                                   (rule "assignment" (formula "64") (term "1"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "blockEmpty" (formula "64") (term "1"))
                                                   (rule "compound_assignment_1_new" (formula "64") (term "1"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "eval_order_array_access3" (formula "64") (term "1") (inst "#v1=x_3") (inst "#v2=x_2") (inst "#v0=x_arr"))
                                                   (rule "variableDeclarationAssign" (formula "64") (term "1"))
                                                   (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_arr_2"))
                                                   (rule "assignment" (formula "64") (term "1"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "variableDeclarationAssign" (formula "64") (term "1"))
                                                   (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_15"))
                                                   (rule "assignment" (formula "64") (term "1"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "variableDeclarationAssign" (formula "64") (term "1"))
                                                   (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_16"))
                                                   (rule "compound_subtraction_2" (formula "64") (term "1") (inst "#v1=x_18") (inst "#v0=x_17"))
                                                   (rule "variableDeclarationAssign" (formula "64") (term "1"))
                                                   (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_17"))
                                                   (rule "compound_addition_2" (formula "64") (term "1") (inst "#v1=x_20") (inst "#v0=x_19"))
                                                   (rule "variableDeclarationAssign" (formula "64") (term "1"))
                                                   (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_19"))
                                                   (rule "assignmentMultiplicationInt" (formula "64") (term "1"))
                                                   (branch "Overflow check"
                                                       (builtin "One Step Simplification" (formula "64") (userinteraction))
                                                      (rule "expand_inInt" (formula "64") (userinteraction))
                                                      (rule "andRight" (formula "64") (userinteraction))
                                                      (branch "Case 1"
                                                         (rule "replace_int_MAX" (formula "64") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "64") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "64"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "55"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "49"))
                                                         (rule "polySimp_mulAssoc" (formula "49") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "4"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "39") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "32"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "33"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "51"))
                                                         (rule "times_zero_2" (formula "51") (term "1,0"))
                                                         (rule "add_zero_right" (formula "51") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "0,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "54"))
                                                         (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "54") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "54") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "54") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "54") (term "0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "54") (term "1,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                         (rule "mul_literals" (formula "48") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                         (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                         (rule "polySimp_mulLiterals" (formula "50") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "50") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "28"))
                                                         (rule "leq_literals" (formula "30") (term "0"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "26"))
                                                         (rule "leq_literals" (formula "20") (term "0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "51"))
                                                         (rule "leq_literals" (formula "50") (term "0"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "true_left" (formula "50"))
                                                         (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "26"))
                                                         (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                         (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "31") (term "0,0"))
                                                         (rule "qeq_literals" (formula "31") (term "0"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "true_left" (formula "31"))
                                                         (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "8") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "8") (term "0,0"))
                                                         (rule "qeq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=int::select(anon_heap_LOOP_0<<anonHeapFunction>>,
            indices,
            arr(i_0))") (inst "elimGcd=Z(2(#))"))
                                                         (rule "leq_literals" (formula "1") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "leq_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "44"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "43") (term "0"))
                                                         (rule "add_literals" (formula "43") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                         (rule "mul_literals" (formula "43") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "19"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "27"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "28") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "28"))
                                                         (rule "leq_literals" (formula "19") (term "0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "50"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "46"))
                                                         (rule "mul_literals" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(3(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=int::final(de.wiesler.Tree::final(self,
                                  de.wiesler.Classifier::$tree),
           de.wiesler.Tree::$num_buckets)") (inst "elimGcd=Z(2(#))"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                         (rule "leq_literals" (formula "1") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "leq_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "44") (term "0"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "51"))
                                                         (rule "mul_literals" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "47"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "49") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                                         (rule "mul_literals" (formula "49") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "53"))
                                                         (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "50") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "50") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "50") (term "0,0"))
                                                         (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "50") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                         (rule "mul_literals" (formula "50") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "50"))
                                                         (rule "leq_literals" (formula "53") (term "0"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "true_left" (formula "53"))
                                                         (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "31"))
                                                         (rule "mul_literals" (formula "21") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                         (rule "add_literals" (formula "21") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                         (rule "mul_literals" (formula "21") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "26"))
                                                         (rule "leq_literals" (formula "21") (term "0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "6"))
                                                         (rule "times_zero_1" (formula "9") (term "0,0"))
                                                         (rule "add_zero_left" (formula "9") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                         (rule "mul_literals" (formula "9") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "9"))
                                                         (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "27") (term "0,0"))
                                                         (rule "qeq_literals" (formula "27") (term "0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "45"))
                                                         (rule "mul_literals" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "29"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                         (rule "add_literals" (formula "9") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "9"))
                                                         (rule "leq_literals" (formula "22") (term "0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "52"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "mul_literals" (formula "2") (term "1"))
                                                         (rule "inEqSimp_exactShadow1" (formula "50") (ifseqformula "46"))
                                                         (rule "greater_literals" (formula "50") (term "0"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                                                         (rule "mul_literals" (formula "50") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "50") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "50") (term "0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "50") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "50") (term "0,0,0"))
                                                         (rule "add_literals" (formula "50") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,0"))
                                                         (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "50") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                         (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "50") (term "1"))
                                                         (rule "mul_literals" (formula "50") (term "0,1"))
                                                         (rule "inEqSimp_exactShadow1" (formula "50") (ifseqformula "54"))
                                                         (rule "mul_literals" (formula "50") (term "1,0,1"))
                                                         (rule "greater_literals" (formula "50") (term "0"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                                                         (rule "mul_literals" (formula "50") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "50") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "50") (term "0"))
                                                         (rule "add_literals" (formula "50") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                         (rule "mul_literals" (formula "50") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "2"))
                                                         (rule "leq_literals" (formula "50") (term "0"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "true_left" (formula "50"))
                                                         (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "inEqSimp_and_subsumption3" (formula "13") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "13") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "nnf_imp2or" (formula "14") (term "0"))
                                                         (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "39"))
                                                         (rule "true_left" (formula "39"))
                                                         (rule "nnf_imp2or" (formula "38") (term "0"))
                                                         (rule "nnf_imp2or" (formula "37") (term "0"))
                                                         (rule "nnf_imp2or" (formula "13") (term "0"))
                                                         (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                                         (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "14") (term "0,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0,0,0"))
                                                         (rule "add_literals" (formula "14") (term "0,0,1,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "1,1,0,0,0,0"))
                                                         (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "34"))
                                                          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "18")))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "translateJavaSubInt" (formula "39") (term "0,2,0"))
                                                         (rule "translateJavaSubInt" (formula "39") (term "0,2,1"))
                                                         (rule "translateJavaMulInt" (formula "36") (term "1"))
                                                         (rule "eqSymm" (formula "39"))
                                                         (rule "polySimp_elimSub" (formula "39") (term "0,2,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,0,2,0"))
                                                         (rule "eqSymm" (formula "39"))
                                                         (rule "polySimp_elimSub" (formula "39") (term "0,2,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,0,2,0"))
                                                         (rule "eqSymm" (formula "39"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                                         (rule "eqSymm" (formula "36"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "0,2,0"))
                                                         (rule "eqSymm" (formula "39"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "0,2,0"))
                                                         (rule "eqSymm" (formula "39"))
                                                         (rule "inEqSimp_commuteLeq" (formula "34"))
                                                         (rule "applyEq" (formula "53") (term "1,1") (ifseqformula "36"))
                                                         (rule "applyEq" (formula "56") (term "0") (ifseqformula "36"))
                                                         (rule "inEqSimp_homoInEq1" (formula "56"))
                                                         (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                         (rule "applyEq" (formula "43") (term "1,1,0,1,0") (ifseqformula "36"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "56"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "56") (term "1,1"))
                                                         (rule "mul_literals" (formula "56") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "56") (term "1,1"))
                                                         (rule "newSym_eq" (formula "36") (inst "newSymDef=mul(int::final(self,
               de.wiesler.Classifier::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                                         (rule "times_zero_1" (formula "36") (term "1,1"))
                                                         (rule "add_zero_right" (formula "36") (term "1"))
                                                         (rule "applyEq" (formula "39") (term "3,0") (ifseqformula "36"))
                                                         (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "36"))
                                                         (rule "eqSymm" (formula "37"))
                                                         (rule "applyEq" (formula "44") (term "1,1,1,0") (ifseqformula "36"))
                                                         (rule "applyEq" (formula "40") (term "1,0,2,0") (ifseqformula "36"))
                                                         (rule "eqSymm" (formula "40"))
                                                         (rule "applyEq" (formula "52") (term "0") (ifseqformula "36"))
                                                         (rule "inEqSimp_homoInEq0" (formula "52"))
                                                         (rule "polySimp_addComm1" (formula "52") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "52") (term "0,0"))
                                                         (rule "applyEq" (formula "53") (term "1") (ifseqformula "36"))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "36"))
                                                         (rule "applyEq" (formula "3") (term "0,0,1,1") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "56") (term "0,0,1,1") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "44") (term "1,1,0,1,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "59") (term "0,1") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "34") (term "0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "35") (term "0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "57") (term "1,1") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "54") (term "1,1") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "5") (term "0,0,0,0,2,1,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "5") (term "0,0,0,0,2,2,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "6") (term "0,0,0,0,2,1,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "61") (term "0,1,0,1") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "40") (term "1,0,2,0") (ifseqformula "36"))
                                                         (rule "eqSymm" (formula "40"))
                                                         (rule "applyEq" (formula "52") (term "0,1,0,0") (ifseqformula "37"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "52") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "52") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "52") (term "0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "52") (term "1,0,1"))
                                                         (rule "inEqSimp_contradInEq5" (formula "35") (ifseqformula "1"))
                                                         (rule "mul_literals" (formula "35") (term "1,1,0"))
                                                         (rule "greater_literals" (formula "35") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "qeq_literals" (formula "35") (term "0"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "closeFalse" (formula "35"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "replace_int_MIN" (formula "64") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "64") (term "1"))
                                                         (rule "inEqSimp_leqRight" (formula "64"))
                                                         (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "39") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "49"))
                                                         (rule "polySimp_mulAssoc" (formula "49") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "55"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "4"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "51"))
                                                         (rule "times_zero_2" (formula "51") (term "1,0"))
                                                         (rule "add_zero_right" (formula "51") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "33"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "32"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                         (rule "mul_literals" (formula "48") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "54"))
                                                         (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "54") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "54") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "54") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "54") (term "0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "54") (term "1,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                         (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "0,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                         (rule "polySimp_mulLiterals" (formula "50") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "50") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "27"))
                                                         (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "33") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                         (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "33") (term "0,0"))
                                                         (rule "qeq_literals" (formula "33") (term "0"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "8") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "8") (term "0,0"))
                                                         (rule "qeq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "27"))
                                                         (rule "leq_literals" (formula "29") (term "0"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "inEqSimp_subsumption1" (formula "49") (ifseqformula "50"))
                                                         (rule "leq_literals" (formula "49") (term "0"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "true_left" (formula "49"))
                                                         (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "25"))
                                                         (rule "leq_literals" (formula "19") (term "0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(neglit(5(2(8(1(4(7(3(7(0(1(#))))))))))))") (inst "elimGcdLeftDiv=int::select(anon_heap_LOOP_0<<anonHeapFunction>>,
            indices,
            arr(i_0))") (inst "elimGcd=Z(2(#))"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                                         (rule "neg_literal" (formula "1") (term "0,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                         (rule "leq_literals" (formula "1") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "49"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "43") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "45"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "44") (term "0"))
                                                         (rule "add_literals" (formula "44") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                         (rule "mul_literals" (formula "44") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "46"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                         (rule "mul_literals" (formula "48") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "27"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "28") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "28"))
                                                         (rule "leq_literals" (formula "19") (term "0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "29"))
                                                         (rule "mul_literals" (formula "19") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                         (rule "add_literals" (formula "19") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                         (rule "mul_literals" (formula "19") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "24"))
                                                         (rule "leq_literals" (formula "19") (term "0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "45") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (ifseqformula "44"))
                                                         (rule "qeq_literals" (formula "45") (term "0"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "closeFalse" (formula "45"))
                                                      )
                                                   )
                                                   (branch "Usage"
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "translateJavaMulInt" (formula "64") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "64") (term "0,1,0"))
                                                      (rule "variableDeclarationAssign" (formula "64") (term "1"))
                                                      (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_20"))
                                                      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "64") (term "1") (inst "#v0=x_21"))
                                                      (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_21"))
                                                      (rule "variableDeclarationAssign" (formula "64") (term "1"))
                                                      (rule "variableDeclaration" (formula "64") (term "1") (newnames "b_1"))
                                                      (rule "assignment" (formula "64") (term "1"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "methodBodyExpand" (formula "64") (term "1") (newnames "heapBefore_toInt,savedHeapBefore_toInt"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "returnUnfold" (formula "64") (term "1") (inst "#v0=x_22"))
                                                      (rule "variableDeclarationAssign" (formula "64") (term "1"))
                                                      (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_22"))
                                                      (rule "condition_simple" (formula "64") (term "1"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "ifthenelse_negated" (formula "64") (term "0,1,0"))
                                                      (rule "methodCallReturn" (formula "64") (term "1"))
                                                      (rule "assignment" (formula "64") (term "1"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "methodCallEmpty" (formula "64") (term "1"))
                                                      (rule "blockEmpty" (formula "64") (term "1"))
                                                      (rule "assignment" (formula "64") (term "1"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "assignmentAdditionInt" (formula "64") (term "1"))
                                                      (branch "Overflow check"
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "expand_inInt" (formula "64") (userinteraction))
                                                         (rule "andRight" (formula "64") (userinteraction))
                                                         (branch "Case 1"
                                                            (rule "replace_int_MAX" (formula "64") (term "1"))
                                                            (rule "inEqSimp_leqRight" (formula "64"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "55"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "49"))
                                                            (rule "polySimp_mulAssoc" (formula "49") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "39") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "4"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "51"))
                                                            (rule "times_zero_2" (formula "51") (term "1,0"))
                                                            (rule "add_zero_right" (formula "51") (term "0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "33"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "32"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "54"))
                                                            (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "54") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "54") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "54") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "54") (term "0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "54") (term "1,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                            (rule "mul_literals" (formula "48") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "39") (term "0,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "39") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                            (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "53"))
                                                            (rule "leq_literals" (formula "52") (term "0"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "true_left" (formula "52"))
                                                            (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "27"))
                                                            (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "33") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                            (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "33") (term "0,0"))
                                                            (rule "qeq_literals" (formula "33") (term "0"))
                                                             (builtin "One Step Simplification" (formula "33"))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "26"))
                                                            (rule "leq_literals" (formula "20") (term "0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "true_left" (formula "20"))
                                                            (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "27"))
                                                            (rule "leq_literals" (formula "29") (term "0"))
                                                             (builtin "One Step Simplification" (formula "29"))
                                                            (rule "true_left" (formula "29"))
                                                            (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "8") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "8") (term "0,0"))
                                                            (rule "qeq_literals" (formula "8") (term "0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "29"))
                                                            (rule "mul_literals" (formula "20") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                            (rule "add_literals" (formula "20") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                            (rule "mul_literals" (formula "20") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "25"))
                                                            (rule "leq_literals" (formula "20") (term "0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "true_left" (formula "20"))
                                                            (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "49"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "43") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "45"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "44") (term "0"))
                                                            (rule "add_literals" (formula "44") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                            (rule "mul_literals" (formula "44") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                                                            (rule "times_zero_1" (formula "7") (term "0,0"))
                                                            (rule "add_zero_left" (formula "7") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                            (rule "mul_literals" (formula "7") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "26") (term "0,0"))
                                                            (rule "qeq_literals" (formula "26") (term "0"))
                                                             (builtin "One Step Simplification" (formula "26"))
                                                            (rule "true_left" (formula "26"))
                                                            (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "27"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "28") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "28"))
                                                            (rule "leq_literals" (formula "20") (term "0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "true_left" (formula "20"))
                                                            (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "46"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                            (rule "mul_literals" (formula "48") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "52"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "49") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "49") (term "0,0"))
                                                            (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "49") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                            (rule "mul_literals" (formula "49") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "49"))
                                                            (rule "leq_literals" (formula "52") (term "0"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "true_left" (formula "52"))
                                                            (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "43"))
                                                            (rule "mul_literals" (formula "44") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1"))
                                                            (rule "mul_literals" (formula "44") (term "0,1"))
                                                            (rule "inEqSimp_exactShadow1" (formula "49") (ifseqformula "43"))
                                                            (rule "greater_literals" (formula "49") (term "0"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "49") (term "0,0,0"))
                                                            (rule "add_literals" (formula "49") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
                                                            (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                            (rule "mul_literals" (formula "49") (term "0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "27"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                            (rule "add_literals" (formula "7") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "7"))
                                                            (rule "leq_literals" (formula "20") (term "0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "true_left" (formula "20"))
                                                            (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "53"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "0,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                            (rule "add_literals" (formula "44") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                            (rule "mul_literals" (formula "44") (term "1"))
                                                            (rule "inEqSimp_exactShadow1" (formula "50") (ifseqformula "54"))
                                                            (rule "mul_literals" (formula "50") (term "1,0,1"))
                                                            (rule "greater_literals" (formula "50") (term "0"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "50") (term "0"))
                                                            (rule "add_literals" (formula "50") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                            (rule "mul_literals" (formula "50") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "44"))
                                                            (rule "leq_literals" (formula "50") (term "0"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "true_left" (formula "50"))
                                                            (rule "inEqSimp_and_subsumption3" (formula "34") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "nnf_imp2or" (formula "11") (term "0"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "23"))
                                                            (rule "andLeft" (formula "23"))
                                                            (rule "notLeft" (formula "23"))
                                                            (rule "notLeft" (formula "23"))
                                                            (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "55"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "55"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "55"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "1") (term "1,1,0,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "applyEqReverse" (formula "1") (term "1,1,0,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "54"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "notLeft" (formula "10"))
                                                            (rule "notLeft" (formula "10"))
                                                            (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "27"))
                                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "12")))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "translateJavaSubInt" (formula "32") (term "0,2,1"))
                                                            (rule "translateJavaSubInt" (formula "32") (term "0,2,0"))
                                                            (rule "translateJavaMulInt" (formula "29") (term "1"))
                                                            (rule "eqSymm" (formula "32"))
                                                            (rule "polySimp_elimSub" (formula "32") (term "0,2,0"))
                                                            (rule "mul_literals" (formula "32") (term "1,0,2,0"))
                                                            (rule "eqSymm" (formula "32"))
                                                            (rule "polySimp_elimSub" (formula "32") (term "0,2,0"))
                                                            (rule "mul_literals" (formula "32") (term "1,0,2,0"))
                                                            (rule "eqSymm" (formula "32"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                            (rule "eqSymm" (formula "29"))
                                                            (rule "polySimp_addComm0" (formula "32") (term "0,2,0"))
                                                            (rule "eqSymm" (formula "32"))
                                                            (rule "polySimp_addComm0" (formula "32") (term "0,2,0"))
                                                            (rule "eqSymm" (formula "32"))
                                                            (rule "inEqSimp_commuteLeq" (formula "27"))
                                                            (rule "applyEq" (formula "36") (term "1,1,0,1,0") (ifseqformula "29"))
                                                            (rule "applyEq" (formula "53") (term "0") (ifseqformula "29"))
                                                            (rule "inEqSimp_homoInEq1" (formula "53"))
                                                            (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                            (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "29"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "53"))
                                                            (rule "polySimp_mulComm0" (formula "53") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "53") (term "1"))
                                                            (rule "mul_literals" (formula "53") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "53") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "53") (term "1,1"))
                                                            (rule "newSym_eq" (formula "29") (inst "l=l_0") (inst "newSymDef=mul(int::final(self,
               de.wiesler.Classifier::$num_buckets),
    Z(0(#)))"))
                                                            (rule "times_zero_1" (formula "29") (term "1,1"))
                                                            (rule "add_zero_right" (formula "29") (term "1"))
                                                            (rule "applyEq" (formula "32") (term "3,0") (ifseqformula "29"))
                                                            (rule "applyEq" (formula "33") (term "1,0,2,0") (ifseqformula "29"))
                                                            (rule "eqSymm" (formula "33"))
                                                            (rule "applyEq" (formula "46") (term "0") (ifseqformula "29"))
                                                            (rule "inEqSimp_homoInEq0" (formula "46"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                            (rule "applyEq" (formula "50") (term "1") (ifseqformula "29"))
                                                            (rule "applyEq" (formula "37") (term "1,1,1,0") (ifseqformula "29"))
                                                            (rule "applyEq" (formula "49") (term "0") (ifseqformula "29"))
                                                            (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "29"))
                                                            (rule "eqSymm" (formula "30"))
                                                            (rule "applyEq" (formula "48") (term "0,0,1,1") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "51") (term "1,1") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "53") (term "0,0,1,1") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "30"))
                                                            (rule "inEqSimp_homoInEq0" (formula "54"))
                                                            (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                            (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "37") (term "1,1,0,1,0") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "27") (term "0") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "33") (term "1,0,2,0") (ifseqformula "29"))
                                                            (rule "eqSymm" (formula "33"))
                                                            (rule "applyEq" (formula "56") (term "0,1") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "1") (term "0,0,0,0,2,0,0,0") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "46") (term "0,1,0,0") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "58") (term "0,1,0,1") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "30"))
                                                            (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "0,1"))
                                                            (rule "mul_literals" (formula "46") (term "0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "1,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                                            (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "54") (term "0"))
                                                            (rule "inEqSimp_subsumption6" (formula "27") (ifseqformula "49"))
                                                            (rule "mul_literals" (formula "27") (term "1,1,0"))
                                                            (rule "greater_literals" (formula "27") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "leq_literals" (formula "27") (term "0"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "true_left" (formula "27"))
                                                            (rule "elimGcdLeq_antec" (formula "27") (inst "elimGcdRightDiv=Z(4(6(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                            (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "27") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "neg_literal" (formula "27") (term "0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                                                            (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "27") (term "0,0"))
                                                            (rule "qeq_literals" (formula "27") (term "0"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "inEqSimp_exactShadow1" (formula "52") (ifseqformula "56"))
                                                            (rule "greater_literals" (formula "52") (term "0"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "mul_literals" (formula "52") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "52") (term "0,0"))
                                                            (rule "mul_literals" (formula "52") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "52") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "52") (term "0"))
                                                            (rule "add_literals" (formula "52") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                            (rule "mul_literals" (formula "52") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "46"))
                                                            (rule "leq_literals" (formula "52") (term "0"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "true_left" (formula "27"))
                                                            (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "55"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1"))
                                                            (rule "mul_literals" (formula "44") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "56"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "0,0"))
                                                            (rule "mul_literals" (formula "47") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "47") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                            (rule "add_literals" (formula "47") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                                            (rule "mul_literals" (formula "47") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "57"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "55") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "55") (term "0,0"))
                                                            (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "55") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                                                            (rule "mul_literals" (formula "55") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "50"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "49") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "49") (term "0"))
                                                            (rule "add_literals" (formula "49") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                            (rule "mul_literals" (formula "49") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "57"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "49") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "49") (term "0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "1,0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "50"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "55") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "55"))
                                                            (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "55") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "53"))
                                                            (rule "mul_literals" (formula "46") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                            (rule "add_literals" (formula "46") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                            (rule "mul_literals" (formula "46") (term "1"))
                                                            (rule "inEqSimp_subsumption6" (formula "46") (ifseqformula "49"))
                                                            (rule "mul_literals" (formula "46") (term "1,1,0"))
                                                            (rule "greater_literals" (formula "46") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "46"))
                                                            (rule "leq_literals" (formula "46") (term "0"))
                                                             (builtin "One Step Simplification" (formula "46"))
                                                            (rule "true_left" (formula "46"))
                                                            (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "53"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "0,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "44") (term "0"))
                                                            (rule "add_literals" (formula "44") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                            (rule "mul_literals" (formula "44") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "49"))
                                                            (rule "leq_literals" (formula "44") (term "0"))
                                                             (builtin "One Step Simplification" (formula "44"))
                                                            (rule "true_left" (formula "44"))
                                                            (rule "nnf_imp2or" (formula "8") (term "0"))
                                                            (rule "nnf_imp2or" (formula "36") (term "0"))
                                                            (rule "nnf_imp2or" (formula "35") (term "0"))
                                                            (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "35") (term "1,0,1,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "1,1,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0,0,0"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "10") (inst "i=i_1") (inst "i_0=i_0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "expand_inInt" (formula "10") (term "1,0,0,1,0"))
                                                            (rule "expand_inInt" (formula "10") (term "1,0,0,1"))
                                                            (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1"))
                                                            (rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "notLeft" (formula "11"))
                                                            (rule "notLeft" (formula "10"))
                                                            (rule "translateJavaSubInt" (formula "18") (term "0,2,1,1,0"))
                                                            (rule "translateJavaSubInt" (formula "16") (term "3,0"))
                                                            (rule "translateJavaShiftLeftInt" (formula "12") (term "1"))
                                                            (rule "eqSymm" (formula "18") (term "1,0"))
                                                            (rule "polySimp_elimSub" (formula "16") (term "3,0"))
                                                            (rule "mul_literals" (formula "16") (term "1,3,0"))
                                                            (rule "polySimp_elimSub" (formula "18") (term "0,2,0,1,0"))
                                                            (rule "mul_literals" (formula "18") (term "1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "16") (term "3,0"))
                                                            (rule "polySimp_addComm0" (formula "18") (term "0,2,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "17") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "17") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "15"))
                                                            (rule "inEqSimp_commuteLeq" (formula "14"))
                                                            (rule "inEqSimp_commuteLeq" (formula "13"))
                                                            (rule "inEqSimp_commuteLeq" (formula "10"))
                                                            (rule "applyEq" (formula "14") (term "1") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
                                                            (rule "applyEq" (formula "16") (term "1,3,0") (ifseqformula "12"))
                                                            (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "37"))
                                                            (rule "inEqSimp_commuteGeq" (formula "15"))
                                                            (rule "applyEq" (formula "18") (term "1,0,1,0") (ifseqformula "37"))
                                                            (rule "applyEq" (formula "66") (term "0") (ifseqformula "37"))
                                                            (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                                            (rule "applyEq" (formula "12") (term "0") (ifseqformula "35"))
                                                            (rule "eqSymm" (formula "12"))
                                                            (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "37"))
                                                            (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "17") (term "0,1,0,0,1,1,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "16") (term "1,3,0") (ifseqformula "12"))
                                                            (rule "applyEq" (formula "15") (term "0") (ifseqformula "12"))
                                                            (rule "inEqSimp_commuteLeq" (formula "15"))
                                                            (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "1,1,1,1,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "56") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "56") (term "0"))
                                                             (builtin "One Step Simplification" (formula "56"))
                                                            (rule "true_left" (formula "56"))
                                                            (rule "javaShiftLeftIntDef" (formula "12") (term "0"))
                                                            (rule "mod_axiom" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                                            (rule "shiftLeftDef" (formula "12") (term "0,0"))
                                                            (rule "polySimp_elimNeg" (formula "12") (term "1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,0,0"))
                                                            (rule "shiftLeftPositiveShiftDef" (formula "12") (term "2,0,0"))
                                                            (rule "polySimp_elimOneLeft0" (formula "12") (term "2,0,0"))
                                                            (rule "shiftRightPositiveShiftDef" (formula "12") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "63"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "47") (inst "i=i_1") (inst "i_0=i_0"))
                                                             (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "66")) (ifInst ""  (formula "11")))
                                                            (rule "expand_inInt" (formula "47") (term "1,0,0,1"))
                                                            (rule "expand_inInt" (formula "47") (term "1,0,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "47") (term "0,1,1,0,0,1"))
                                                            (rule "replace_int_MAX" (formula "47") (term "1,0,1,0,0,1"))
                                                            (rule "replace_int_MIN" (formula "47") (term "0,1,1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "47") (term "1,0,1,0,0,1,0"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "andLeft" (formula "49"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "notLeft" (formula "47"))
                                                            (rule "eqSymm" (formula "54") (term "1,0"))
                                                            (rule "translateJavaSubInt" (formula "52") (term "3,0"))
                                                            (rule "translateJavaShiftLeftInt" (formula "48") (term "1"))
                                                            (rule "translateJavaSubInt" (formula "54") (term "0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "52") (term "3,0"))
                                                            (rule "mul_literals" (formula "52") (term "1,3,0"))
                                                            (rule "polySimp_elimSub" (formula "54") (term "0,2,0,1,0"))
                                                            (rule "mul_literals" (formula "54") (term "1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "52") (term "3,0"))
                                                            (rule "polySimp_addComm0" (formula "54") (term "0,2,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "53") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "54") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "53") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "53") (term "0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "51"))
                                                            (rule "inEqSimp_commuteLeq" (formula "49"))
                                                            (rule "inEqSimp_commuteLeq" (formula "50"))
                                                            (rule "inEqSimp_commuteLeq" (formula "47"))
                                                            (rule "applyEq" (formula "48") (term "0") (ifseqformula "47"))
                                                            (rule "applyEq" (formula "53") (term "1,0,1,0") (ifseqformula "38"))
                                                            (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "38"))
                                                            (rule "applyEq" (formula "49") (term "1") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "49") (term "1") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "50") (term "1,3,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "38"))
                                                            (rule "applyEq" (formula "47") (term "0") (ifseqformula "36"))
                                                            (rule "eqSymm" (formula "47"))
                                                            (rule "applyEq" (formula "70") (term "0") (ifseqformula "38"))
                                                            (rule "applyEq" (formula "50") (term "0,1,0,0,1,1,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "51") (term "0,1,0,0,1,0,0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "50") (term "0,1,0,0,1,0,0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "48") (term "0") (ifseqformula "47"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,1,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0"))
                                                            (rule "javaShiftLeftIntDef" (formula "47") (term "0"))
                                                            (rule "mod_axiom" (formula "47") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0"))
                                                            (rule "shiftLeftDef" (formula "47") (term "0,0"))
                                                            (rule "polySimp_elimNeg" (formula "47") (term "1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "0,1,1,0,0"))
                                                            (rule "shiftLeftPositiveShiftDef" (formula "47") (term "2,0,0"))
                                                            (rule "polySimp_elimOneLeft0" (formula "47") (term "2,0,0"))
                                                            (rule "shiftRightPositiveShiftDef" (formula "47") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "47") (term "0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0,0"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "41") (inst "i=i_1") (inst "i_0=i_0"))
                                                             (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "67")) (ifInst ""  (formula "11")))
                                                            (rule "expand_inInt" (formula "41") (term "1,0,0,1,0"))
                                                            (rule "expand_inInt" (formula "41") (term "1,0,0,1"))
                                                            (rule "replace_int_MAX" (formula "41") (term "1,0,1,0,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "41") (term "0,1,1,0,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "41") (term "0,1,1,0,0,1"))
                                                            (rule "replace_int_MAX" (formula "41") (term "1,0,1,0,0,1"))
                                                            (rule "andLeft" (formula "41"))
                                                            (rule "andLeft" (formula "41"))
                                                            (rule "andLeft" (formula "41"))
                                                            (rule "andLeft" (formula "41"))
                                                            (rule "andLeft" (formula "41"))
                                                            (rule "andLeft" (formula "42"))
                                                            (rule "andLeft" (formula "41"))
                                                            (rule "andLeft" (formula "41"))
                                                            (rule "notLeft" (formula "41"))
                                                            (rule "translateJavaSubInt" (formula "48") (term "0,2,1,1,0"))
                                                            (rule "translateJavaSubInt" (formula "46") (term "3,0"))
                                                            (rule "translateJavaShiftLeftInt" (formula "42") (term "1"))
                                                            (rule "eqSymm" (formula "48") (term "1,0"))
                                                            (rule "polySimp_elimSub" (formula "46") (term "3,0"))
                                                            (rule "mul_literals" (formula "46") (term "1,3,0"))
                                                            (rule "polySimp_elimSub" (formula "48") (term "0,2,0,1,0"))
                                                            (rule "mul_literals" (formula "48") (term "1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "3,0"))
                                                            (rule "polySimp_addComm0" (formula "48") (term "0,2,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "47") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "48") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "47") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "47") (term "0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "45"))
                                                            (rule "inEqSimp_commuteLeq" (formula "44"))
                                                            (rule "inEqSimp_commuteLeq" (formula "43"))
                                                            (rule "inEqSimp_commuteLeq" (formula "41"))
                                                            (rule "applyEq" (formula "36") (term "0") (ifseqformula "41"))
                                                            (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "38"))
                                                            (rule "inEqSimp_commuteGeq" (formula "44"))
                                                            (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "38"))
                                                            (rule "applyEq" (formula "45") (term "1,3,0") (ifseqformula "41"))
                                                            (rule "applyEq" (formula "43") (term "1") (ifseqformula "41"))
                                                            (rule "applyEq" (formula "47") (term "1,0,1,0") (ifseqformula "38"))
                                                            (rule "applyEq" (formula "42") (term "0") (ifseqformula "41"))
                                                            (rule "applyEq" (formula "47") (term "0,1,0,0,1,0,0,0") (ifseqformula "41"))
                                                            (rule "applyEq" (formula "46") (term "0,1,0,0,1,1,0") (ifseqformula "41"))
                                                            (rule "applyEq" (formula "46") (term "0,1,0,0,1,0,0,0") (ifseqformula "41"))
                                                            (rule "applyEq" (formula "43") (term "1") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "44") (term "1,3,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "43") (term "0") (ifseqformula "41"))
                                                            (rule "applyEq" (formula "42") (term "0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "41") (term "1") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "42") (term "0") (ifseqformula "36"))
                                                            (rule "inEqSimp_commuteLeq" (formula "42"))
                                                            (rule "applyEq" (formula "44") (term "0,1,0,0,1,0,0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "70") (term "0") (ifseqformula "38"))
                                                            (rule "applyEq" (formula "43") (term "0,1,0,0,1,1,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0,0") (ifseqformula "36"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "43") (term "0,1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "1,1,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                                                            (rule "javaShiftLeftIntDef" (formula "36") (term "0"))
                                                            (rule "mod_axiom" (formula "36") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                                                            (rule "shiftLeftDef" (formula "36") (term "0,0"))
                                                            (rule "polySimp_elimNeg" (formula "36") (term "1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "0,1,1,0,0"))
                                                            (rule "shiftLeftPositiveShiftDef" (formula "36") (term "2,0,0"))
                                                            (rule "polySimp_elimOneLeft0" (formula "36") (term "2,0,0"))
                                                            (rule "shiftRightPositiveShiftDef" (formula "36") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,0"))
                                                            (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "47"))
                                                            (rule "true_left" (formula "47"))
                                                            (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "38") (term "0") (inst "i=i_1") (inst "j=j"))
                                                             (builtin "One Step Simplification" (formula "38"))
                                                            (rule "expand_inInt" (formula "38") (term "1,0,0"))
                                                            (rule "expand_inInt" (formula "38") (term "1,0,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "38") (term "0,1,1,0,0"))
                                                            (rule "replace_int_MAX" (formula "38") (term "1,0,1,0,0"))
                                                            (rule "replace_int_MAX" (formula "38") (term "1,0,1,0,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "38") (term "0,1,1,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "38") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "38") (term "1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "nnf_imp2or" (formula "19") (term "0"))
                                                            (rule "nnf_imp2or" (formula "18") (term "0"))
                                                            (rule "expand_moduloInteger" (formula "12") (term "0"))
                                                            (rule "replace_int_MIN" (formula "12") (term "0,0"))
                                                            (rule "replace_int_RANGE" (formula "12") (term "1,1,0"))
                                                            (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0"))
                                                            (rule "polySimp_homoEq" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "12"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                            (rule "nnf_imp2or" (formula "48") (term "0"))
                                                            (rule "commute_and" (formula "45") (term "1,0"))
                                                            (rule "commute_or" (formula "8") (term "0,0,0"))
                                                            (rule "commute_or" (formula "46") (term "0,0,0"))
                                                            (rule "nnf_imp2or" (formula "42") (term "0"))
                                                            (rule "commute_or" (formula "45") (term "0,0,0"))
                                                            (rule "jdiv_axiom" (formula "57") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "57") (term "0,0,2,1"))
                                                            (rule "eqSymm" (formula "57"))
                                                            (rule "inEqSimp_subsumption6" (formula "57") (term "0,0") (ifseqformula "13"))
                                                            (rule "mul_literals" (formula "57") (term "1,1,0,0,0"))
                                                            (rule "greater_literals" (formula "57") (term "0,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "57"))
                                                            (rule "leq_literals" (formula "57") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "57"))
                                                            (rule "eqSymm" (formula "57"))
                                                            (rule "applyEq" (formula "56") (term "0") (ifseqformula "57"))
                                                            (rule "applyEq" (formula "55") (term "0,1,1") (ifseqformula "57"))
                                                            (rule "applyEq" (formula "58") (term "0,1,1") (ifseqformula "57"))
                                                            (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "57"))
                                                            (rule "applyEq" (formula "62") (term "0,1,1") (ifseqformula "57"))
                                                            (rule "applyEq" (formula "63") (term "0") (ifseqformula "57"))
                                                            (rule "applyEqRigid" (formula "65") (term "1") (ifseqformula "57"))
                                                            (rule "applyEq" (formula "67") (term "1,0,1") (ifseqformula "57"))
                                                            (rule "applyEqRigid" (formula "1") (term "0,0,0,2,0,0,0") (ifseqformula "57"))
                                                            (rule "polyDiv_pullOut" (formula "1") (term "0,0,0,2,0,0,0") (inst "polyDivCoeff=l_0"))
                                                            (rule "equal_literals" (formula "1") (term "0,0,0,0,2,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0,2,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,0,0,2,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,0,0,0,0,0,2,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "0,0,0,0,0,2,0,0,0"))
                                                            (rule "div_literals" (formula "1") (term "0,0,0,0,2,0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0,0,2,0,0,0"))
                                                            (rule "polyDiv_pullOut" (formula "67") (term "1,0,1") (inst "polyDivCoeff=l_0"))
                                                            (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,2,1,0,1"))
                                                            (rule "equal_literals" (formula "67") (term "0,1,0,1"))
                                                             (builtin "One Step Simplification" (formula "67"))
                                                            (rule "polySimp_pullOutFactor0" (formula "67") (term "0,0,1,0,1"))
                                                            (rule "add_literals" (formula "67") (term "1,0,0,1,0,1"))
                                                            (rule "times_zero_1" (formula "67") (term "0,0,1,0,1"))
                                                            (rule "div_literals" (formula "67") (term "0,1,0,1"))
                                                            (rule "add_zero_left" (formula "67") (term "1,0,1"))
                                                            (rule "polyDiv_pullOut" (formula "65") (term "1") (inst "polyDivCoeff=l_0"))
                                                            (rule "equal_literals" (formula "65") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "65"))
                                                            (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,1"))
                                                            (rule "polySimp_pullOutFactor0" (formula "65") (term "0,0,1"))
                                                            (rule "add_literals" (formula "65") (term "1,0,0,1"))
                                                            (rule "times_zero_1" (formula "65") (term "0,0,1"))
                                                            (rule "div_literals" (formula "65") (term "0,1"))
                                                            (rule "add_zero_left" (formula "65") (term "1"))
                                                            (rule "polyDiv_pullOut" (formula "63") (term "0") (inst "polyDivCoeff=l_0"))
                                                            (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,2,0"))
                                                            (rule "equal_literals" (formula "63") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "63"))
                                                            (rule "polySimp_pullOutFactor0" (formula "63") (term "0,0,0"))
                                                            (rule "add_literals" (formula "63") (term "1,0,0,0"))
                                                            (rule "times_zero_1" (formula "63") (term "0,0,0"))
                                                            (rule "div_literals" (formula "63") (term "0,0"))
                                                            (rule "add_zero_left" (formula "63") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "63"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "63") (term "0"))
                                                            (rule "add_literals" (formula "63") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "63") (term "1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                                                            (rule "mul_literals" (formula "63") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "63") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "63") (term "0"))
                                                             (builtin "One Step Simplification" (formula "63"))
                                                            (rule "true_left" (formula "63"))
                                                            (rule "polyDiv_pullOut" (formula "62") (term "0,1,1") (inst "polyDivCoeff=l_0"))
                                                            (rule "equal_literals" (formula "62") (term "0,0,1,1"))
                                                             (builtin "One Step Simplification" (formula "62"))
                                                            (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,1,1"))
                                                            (rule "polySimp_pullOutFactor0" (formula "62") (term "0,0,0,1,1"))
                                                            (rule "add_literals" (formula "62") (term "1,0,0,0,1,1"))
                                                            (rule "times_zero_1" (formula "62") (term "0,0,0,1,1"))
                                                            (rule "div_literals" (formula "62") (term "0,0,1,1"))
                                                            (rule "add_zero_left" (formula "62") (term "0,1,1"))
                                                            (rule "polyDiv_pullOut" (formula "54") (term "0") (inst "polyDivCoeff=l_0"))
                                                            (rule "equal_literals" (formula "54") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0" (formula "54") (term "0,0,0"))
                                                            (rule "add_literals" (formula "54") (term "1,0,0,0"))
                                                            (rule "times_zero_1" (formula "54") (term "0,0,0"))
                                                            (rule "div_literals" (formula "54") (term "0,0"))
                                                            (rule "add_zero_left" (formula "54") (term "0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "54"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "54") (term "0"))
                                                            (rule "add_literals" (formula "54") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "54") (term "1,0"))
                                                            (rule "add_zero_right" (formula "54") (term "0"))
                                                            (rule "leq_literals" (formula "54"))
                                                            (rule "true_left" (formula "54"))
                                                            (rule "polyDiv_pullOut" (formula "57") (term "0,1,1") (inst "polyDivCoeff=l_0"))
                                                            (rule "equal_literals" (formula "57") (term "0,0,1,1"))
                                                             (builtin "One Step Simplification" (formula "57"))
                                                            (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0,1,1"))
                                                            (rule "polySimp_pullOutFactor0" (formula "57") (term "0,0,0,1,1"))
                                                            (rule "add_literals" (formula "57") (term "1,0,0,0,1,1"))
                                                            (rule "times_zero_1" (formula "57") (term "0,0,0,1,1"))
                                                            (rule "div_literals" (formula "57") (term "0,0,1,1"))
                                                            (rule "add_zero_left" (formula "57") (term "0,1,1"))
                                                            (rule "polyDiv_pullOut" (formula "54") (term "0,1,1") (inst "polyDivCoeff=l_0"))
                                                            (rule "equal_literals" (formula "54") (term "0,0,1,1"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0,1,1"))
                                                            (rule "polySimp_pullOutFactor0" (formula "54") (term "0,0,0,1,1"))
                                                            (rule "add_literals" (formula "54") (term "1,0,0,0,1,1"))
                                                            (rule "times_zero_1" (formula "54") (term "0,0,0,1,1"))
                                                            (rule "div_literals" (formula "54") (term "0,0,1,1"))
                                                            (rule "add_zero_left" (formula "54") (term "0,1,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "54") (term "1"))
                                                            (rule "add_literals" (formula "54") (term "1,1,1"))
                                                            (rule "times_zero_1" (formula "54") (term "1,1"))
                                                            (rule "add_zero_right" (formula "54") (term "1"))
                                                            (rule "polyDiv_pullOut" (formula "54") (term "0") (inst "polyDivCoeff=l_0"))
                                                            (rule "equal_literals" (formula "54") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0" (formula "54") (term "0,0,0"))
                                                            (rule "add_literals" (formula "54") (term "1,0,0,0"))
                                                            (rule "times_zero_1" (formula "54") (term "0,0,0"))
                                                            (rule "div_literals" (formula "54") (term "0,0"))
                                                            (rule "add_zero_left" (formula "54") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "54") (term "0"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "true_left" (formula "54"))
                                                            (rule "polyDiv_pullOut" (formula "54") (term "1") (inst "polyDivCoeff=l_0"))
                                                            (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,2,1"))
                                                            (rule "equal_literals" (formula "54") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "polySimp_pullOutFactor0" (formula "54") (term "0,0,1"))
                                                            (rule "add_literals" (formula "54") (term "1,0,0,1"))
                                                            (rule "times_zero_1" (formula "54") (term "0,0,1"))
                                                            (rule "div_literals" (formula "54") (term "0,1"))
                                                            (rule "add_zero_left" (formula "54") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "61"))
                                                            (rule "polySimp_rightDist" (formula "55") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "55") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "55") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                            (rule "add_literals" (formula "55") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                                                            (rule "mul_literals" (formula "55") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "55") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "55") (term "0"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "true_left" (formula "55"))
                                                            (rule "inEqSimp_exactShadow1" (formula "59") (ifseqformula "61"))
                                                            (rule "greater_literals" (formula "59") (term "0"))
                                                             (builtin "One Step Simplification" (formula "59"))
                                                            (rule "mul_literals" (formula "59") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "59") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "59") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "59") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "59") (term "0"))
                                                            (rule "add_literals" (formula "59") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "59"))
                                                            (rule "mul_literals" (formula "59") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "59") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "59") (term "0"))
                                                             (builtin "One Step Simplification" (formula "59"))
                                                            (rule "true_left" (formula "59"))
                                                            (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "62"))
                                                            (rule "polySimp_mulComm0" (formula "56") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "56") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "56") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "56") (term "0,0"))
                                                            (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "56") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "56") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "56"))
                                                            (rule "mul_literals" (formula "56") (term "1"))
                                                            (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "17") (term "0"))
                                                            (rule "wellFormedAnon" (formula "17") (term "1,0"))
                                                            (rule "wellFormedAnonEQ" (formula "17") (term "0,1,0") (ifseqformula "45"))
                                                            (rule "replace_known_left" (formula "17") (term "0,1") (ifseqformula "18"))
                                                             (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "65")) (ifInst ""  (formula "23")) (ifInst ""  (formula "44")) (ifInst ""  (formula "21")))
                                                            (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "18") (term "0") (inst "i=i_1") (inst "j=j"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "expand_inInt" (formula "18") (term "1,0,0"))
                                                            (rule "expand_inInt" (formula "18") (term "1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "18") (term "1,0,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "18") (term "0,1,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "18") (term "0,1,1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "18") (term "1,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,1,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "9") (term "0,0,0,0"))
                                                            (rule "nnf_imp2or" (formula "39") (term "0"))
                                                            (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                            (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                            (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                                            (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                                            (rule "arrayLengthNotNegative" (formula "34") (term "0"))
                                                            (rule "arrayLengthNotNegative" (formula "61") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "61") (ifseqformula "62"))
                                                            (rule "leq_literals" (formula "61") (term "0"))
                                                             (builtin "One Step Simplification" (formula "61"))
                                                            (rule "true_left" (formula "61"))
                                                            (rule "arrayLengthIsAShort" (formula "61") (term "0"))
                                                            (rule "expand_inShort" (formula "61"))
                                                            (rule "replace_short_MIN" (formula "61") (term "0,1"))
                                                            (rule "replace_short_MAX" (formula "61") (term "1,0"))
                                                            (rule "andLeft" (formula "61"))
                                                            (rule "inEqSimp_commuteLeq" (formula "61"))
                                                            (rule "inEqSimp_subsumption1" (formula "61") (ifseqformula "62"))
                                                            (rule "leq_literals" (formula "61") (term "0"))
                                                             (builtin "One Step Simplification" (formula "61"))
                                                            (rule "true_left" (formula "61"))
                                                            (rule "arrayLengthIsAShort" (formula "34") (term "0"))
                                                            (rule "expand_inShort" (formula "34"))
                                                            (rule "replace_short_MIN" (formula "34") (term "0,1"))
                                                            (rule "replace_short_MAX" (formula "34") (term "1,0"))
                                                            (rule "andLeft" (formula "34"))
                                                            (rule "inEqSimp_commuteLeq" (formula "34"))
                                                            (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "31"))
                                                            (rule "leq_literals" (formula "34") (term "0"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "true_left" (formula "34"))
                                                            (rule "arrayLengthNotNegative" (formula "36") (term "0"))
                                                            (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq0" (formula "36") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "36") (term "0,0"))
                                                            (rule "qeq_literals" (formula "36") (term "0"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "true_left" (formula "36"))
                                                            (rule "arrayLengthIsAShort" (formula "36") (term "0"))
                                                            (rule "expand_inShort" (formula "36"))
                                                            (rule "replace_short_MIN" (formula "36") (term "0,1"))
                                                            (rule "replace_short_MAX" (formula "36") (term "1,0"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "inEqSimp_commuteLeq" (formula "37"))
                                                            (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
                                                            (rule "inEqSimp_homoInEq1" (formula "37"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                            (rule "applyEq" (formula "36") (term "0") (ifseqformula "38"))
                                                            (rule "inEqSimp_homoInEq0" (formula "36"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "37"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq0" (formula "36") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "36") (term "0,0"))
                                                            (rule "qeq_literals" (formula "36") (term "0"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "true_left" (formula "36"))
                                                            (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "48") (term "0"))
                                                            (rule "wellFormedAnonEQ" (formula "48") (term "1,0") (ifseqformula "45"))
                                                            (rule "replace_known_right" (formula "48") (term "0,0,0") (ifseqformula "66"))
                                                             (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "23")) (ifInst ""  (formula "44")) (ifInst ""  (formula "49")))
                                                            (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "49") (term "0") (inst "i=i_1") (inst "j=j"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "expand_inInt" (formula "49") (term "1,0,0"))
                                                            (rule "expand_inInt" (formula "49") (term "1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "49") (term "1,0,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "49") (term "0,1,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "49") (term "0,1,1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "49") (term "1,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0,1,0"))
                                                            (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "49") (term "1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "49") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "49") (term "1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "42") (term "0"))
                                                            (rule "replace_known_left" (formula "42") (term "1,0") (ifseqformula "23"))
                                                             (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "67")) (ifInst ""  (formula "43")))
                                                            (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "43") (term "0") (inst "i=i_1") (inst "j=j"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "expand_inInt" (formula "43") (term "1,0,0"))
                                                            (rule "expand_inInt" (formula "43") (term "1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "43") (term "1,0,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "43") (term "0,1,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "43") (term "0,1,1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "43") (term "1,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0,1,0"))
                                                            (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "43") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "43") (term "1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "nnf_imp2or" (formula "18") (term "0"))
                                                            (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "20") (term "1,0,2,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "20") (term "0,1,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "20") (term "1,0,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "20") (term "0,1,1,1,0,2,0,1,0"))
                                                            (rule "mul_literals" (formula "20") (term "1,0,1,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "20") (term "1,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "20") (term "0,1,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "20") (term "1,1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "20") (term "0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "20") (term "1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "0,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "20") (term "0,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "20") (term "1,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "0,2,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "0,0,2,0,1,0"))
                                                            (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "19") (term "0,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "19") (term "0,1,1,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "19") (term "1,0,0,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "19") (term "0,1,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,0,1,1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "19") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "19") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,0,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "19") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "19") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,1,0"))
                                                            (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "19") (term "0,1,1,0"))
                                                            (rule "translateJavaSubInt" (formula "19") (term "0,1,1,0,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "19") (term "1,0,0,0,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "19") (term "0,1,1,0,1,1,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,0,1,1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "19") (term "0,1,0,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "1,0,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "19") (term "0,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,1,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "19") (term "1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "19") (term "1,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,1,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "19") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "1,0,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,0,1,1,1,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,0,0,1,1,1,0"))
                                                            (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                                            (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "51") (term "1,0,2,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "51") (term "0,1,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "51") (term "1,0,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "51") (term "0,1,1,1,0,2,0,1,0"))
                                                            (rule "mul_literals" (formula "51") (term "1,0,1,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "51") (term "1,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "51") (term "0,1,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "0,0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "51") (term "1,1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "51") (term "0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "51") (term "1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "0,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "51") (term "0,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "51") (term "1,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "0,1,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0,2,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0,0,2,0,1,0"))
                                                            (rule "nnf_imp2or" (formula "39") (term "0,1,0"))
                                                            (rule "nnf_notAnd" (formula "20") (term "1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "20") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "1,0,0,1,1,0,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "20") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "1,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "1,0,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "20") (term "0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "19") (term "1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "19") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,0,1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "19") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,0,0,1,1,0,0"))
                                                            (rule "add_literals" (formula "19") (term "0,0,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "19") (term "0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                            (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "44") (term "1,0,2,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "44") (term "0,1,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "44") (term "1,0,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "44") (term "1,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "44") (term "0,1,1,1,0,2,0,1,0"))
                                                            (rule "mul_literals" (formula "44") (term "1,0,1,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0,1,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "1,1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "44") (term "1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "0,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "0,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "44") (term "1,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,2,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,0,2,0,1,0"))
                                                            (rule "nnf_notAnd" (formula "51") (term "1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "51") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "51") (term "1,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "51") (term "0,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "51") (term "1,0,1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "51") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "51") (term "1,0,0,1,1,0,0"))
                                                            (rule "add_literals" (formula "51") (term "0,0,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "51") (term "1,1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "51") (term "0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0"))
                                                            (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "44") (term "1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "44") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "1,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "1,0,1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "44") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "1,0,0,1,1,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "1,1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "8") (term "0,0"))
                                                            (rule "commute_or_2" (formula "48") (term "0,0"))
                                                            (rule "arrayLengthNotNegative" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "48") (term "0,0"))
                                                            (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                                                            (rule "expand_inShort" (formula "15"))
                                                            (rule "replace_short_MIN" (formula "15") (term "0,1"))
                                                            (rule "replace_short_MAX" (formula "15") (term "1,0"))
                                                            (rule "andLeft" (formula "15"))
                                                            (rule "inEqSimp_commuteLeq" (formula "16"))
                                                            (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                                                            (rule "leq_literals" (formula "16") (term "0"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "15"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "16") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                            (rule "nnf_imp2or" (formula "52") (term "0"))
                                                            (rule "nnf_imp2or" (formula "45") (term "0"))
                                                            (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                            (rule "nnf_imp2or" (formula "20") (term "0,1,0"))
                                                            (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "19") (term "0") (inst "i=i_1"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "expand_inInt" (formula "19") (term "1,0,0"))
                                                            (rule "replace_int_MAX" (formula "19") (term "1,0,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "19") (term "0,1,1,0,0"))
                                                            (rule "translateJavaSubInt" (formula "19") (term "1,1,0,0,0"))
                                                            (rule "translateJavaAddInt" (formula "19") (term "0,2,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "19") (term "0,2,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "1,1,0,0,0"))
                                                            (rule "add_literals" (formula "19") (term "0,1,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "19") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                                                            (rule "div_axiom" (formula "12") (term "0,1,1,1,1,1,0,0") (inst "quotient=quotient_0"))
                                                            (rule "mul_literals" (formula "12") (term "1,1,1,1,1"))
                                                            (rule "equal_literals" (formula "12") (term "0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "qeq_literals" (formula "12") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "1"))
                                                            (rule "add_literals" (formula "14") (term "0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "13"))
                                                            (rule "inEqSimp_homoInEq1" (formula "14"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                            (rule "applyEq" (formula "15") (term "0,1,1,1,1,1,0,0") (ifseqformula "12"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "1,1,1,1,0,0"))
                                                            (rule "applyEq" (formula "15") (term "0,1,1,2,1,0,0") (ifseqformula "12"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "1,2,1,0,0"))
                                                            (rule "applyEq" (formula "15") (term "0,0,0,1,0,0") (ifseqformula "12"))
                                                            (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                            (rule "mul_literals" (formula "14") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "15") (term "0,1,0,0") (ifseqformula "13"))
                                                            (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "15") (term "1,1,0,0,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,0"))
                                                            (rule "leq_literals" (formula "15") (term "0,0,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "mod_axiom" (formula "15") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                                            (rule "polySimp_homoEq" (formula "15"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                            (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "15") (term "0,0,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "15"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "0,1"))
                                                            (rule "newSym_eq" (formula "15") (inst "l=l_1") (inst "newSymDef=add(mul(l_0, Z(0(#))),
    mul(pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                int::final(de.wiesler.Tree::final(self,
                                                  de.wiesler.Classifier::$tree),
                           de.wiesler.Tree::$log_buckets))),
        Z(0(#))))"))
                                                            (rule "times_zero_1" (formula "15") (term "1,1,1"))
                                                            (rule "times_zero_1" (formula "15") (term "0,1,1"))
                                                            (rule "add_zero_left" (formula "15") (term "1,1"))
                                                            (rule "add_zero_right" (formula "15") (term "1"))
                                                            (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "15"))
                                                            (rule "polySimp_homoEq" (formula "16"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "16"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
                                                            (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "16"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                            (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=l_1"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0"))
                                                            (rule "equal_literals" (formula "15") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "polySimp_homoEq" (formula "15"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,1,1,1,0"))
                                                            (rule "add_literals" (formula "15") (term "1,1,0,0,1,1,1,0"))
                                                            (rule "times_zero_1" (formula "15") (term "1,0,0,1,1,1,0"))
                                                            (rule "add_zero_right" (formula "15") (term "0,0,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0"))
                                                            (rule "add_literals" (formula "15") (term "1,0,0"))
                                                            (rule "times_zero_1" (formula "15") (term "0,0"))
                                                            (rule "add_zero_left" (formula "15") (term "0"))
                                                            (rule "polySimp_invertEq" (formula "15"))
                                                            (rule "mul_literals" (formula "15") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "14"))
                                                            (rule "mul_literals" (formula "10") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                            (rule "add_literals" (formula "10") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                            (rule "mul_literals" (formula "10") (term "1"))
                                                            (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                                            (rule "leq_literals" (formula "10") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                            (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "10") (term "0,0"))
                                                            (rule "leq_literals" (formula "10") (term "0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "12"))
                                                            (rule "polySimp_mulAssoc" (formula "14") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                            (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
                                                            (rule "neg_literal" (formula "14") (term "0,0,0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "14") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "14") (term "0,0"))
                                                            (rule "qeq_literals" (formula "14") (term "0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "14"))
                                                            (rule "applyEq" (formula "17") (term "0,1,1") (ifseqformula "10"))
                                                            (rule "mul_literals" (formula "17") (term "1,1"))
                                                            (rule "add_zero_right" (formula "17") (term "1"))
                                                            (rule "applyEq" (formula "15") (term "0") (ifseqformula "10"))
                                                            (rule "leq_literals" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "11"))
                                                            (rule "true_left" (formula "11"))
                                                            (rule "applyEqRigid" (formula "14") (term "0,1") (ifseqformula "10"))
                                                            (rule "mul_literals" (formula "14") (term "1"))
                                                            (rule "applyEqRigid" (formula "13") (term "1") (ifseqformula "10"))
                                                            (rule "applyEqRigid" (formula "17") (term "0,0,1,0") (ifseqformula "10"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                            (rule "add_zero_left" (formula "17") (term "1,0"))
                                                            (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "12"))
                                                            (rule "leq_literals" (formula "15") (term "0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "11"))
                                                            (rule "leq_literals" (formula "14") (term "0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "nnf_notAnd" (formula "44") (term "1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "44") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "1,0,0,1,1,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "44") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "1,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "1,0,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "1,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                            (rule "nnf_notAnd" (formula "44") (term "0,0,1,0"))
                                                            (rule "ifthenelse_split" (formula "1") (term "0"))
                                                            (branch " self.sorted_splitters[ l_0 * -1 + indices[i_0]@anon_heap_LOOP_0<<anonHeapFunction>>] >= 1 + values[begin + i_0] TRUE"
                                                               (rule "inEqSimp_homoInEq1" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=int::select(anon_heap_LOOP_0<<anonHeapFunction>>,
            indices,
            arr(i_0))") (inst "elimGcd=Z(2(#))"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                               (rule "leq_literals" (formula "2") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0"))
                                                               (rule "leq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "71"))
                                                               (rule "mul_literals" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "mul_literals" (formula "2") (term "0,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "65") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq0" (formula "65") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "65") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "65") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "65") (term "0,0,0"))
                                                               (rule "add_literals" (formula "65") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "65") (term "0,0"))
                                                               (rule "add_literals" (formula "65") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "65") (term "1,0,0"))
                                                               (rule "add_literals" (formula "65") (term "0,0"))
                                                               (rule "qeq_literals" (formula "65") (term "0"))
                                                                (builtin "One Step Simplification" (formula "65"))
                                                               (rule "true_left" (formula "65"))
                                                               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "66"))
                                                               (rule "mul_literals" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                               (rule "add_literals" (formula "3") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1"))
                                                               (rule "inEqSimp_contradInEq3" (formula "3") (ifseqformula "23"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                               (rule "greater_literals" (formula "3") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "closeFalse" (formula "3"))
                                                            )
                                                            (branch " self.sorted_splitters[ l_0 * -1 + indices[i_0]@anon_heap_LOOP_0<<anonHeapFunction>>] >= 1 + values[begin + i_0] FALSE"
                                                               (rule "inEqSimp_geqRight" (formula "71"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=int::select(anon_heap_LOOP_0<<anonHeapFunction>>,
            indices,
            arr(i_0))") (inst "elimGcd=Z(2(#))"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "2") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "leq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "66"))
                                                               (rule "mul_literals" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1"))
                                                               (rule "inEqSimp_contradInEq3" (formula "2") (ifseqformula "22"))
                                                               (rule "greater_literals" (formula "2") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "closeFalse" (formula "2"))
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (rule "replace_int_MIN" (formula "64") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "64"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "39") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "55"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "4"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "49"))
                                                            (rule "polySimp_mulAssoc" (formula "49") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "33"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "32"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "51"))
                                                            (rule "times_zero_2" (formula "51") (term "1,0"))
                                                            (rule "add_zero_right" (formula "51") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "54"))
                                                            (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "54") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "54") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "54") (term "0,1"))
                                                            (rule "mul_literals" (formula "54") (term "0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "54") (term "1,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "39") (term "0,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "39") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                            (rule "mul_literals" (formula "48") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                            (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "26"))
                                                            (rule "leq_literals" (formula "20") (term "0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "true_left" (formula "20"))
                                                            (rule "inEqSimp_subsumption1" (formula "51") (ifseqformula "52"))
                                                            (rule "leq_literals" (formula "51") (term "0"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "true_left" (formula "51"))
                                                            (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "27"))
                                                            (rule "leq_literals" (formula "29") (term "0"))
                                                             (builtin "One Step Simplification" (formula "29"))
                                                            (rule "true_left" (formula "29"))
                                                            (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "8") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "8") (term "0,0"))
                                                            (rule "qeq_literals" (formula "8") (term "0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "25"))
                                                            (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                                            (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "30") (term "0,0"))
                                                            (rule "qeq_literals" (formula "30") (term "0"))
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "true_left" (formula "30"))
                                                            (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "19"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "25") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "44"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "43") (term "0"))
                                                            (rule "add_literals" (formula "43") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                            (rule "mul_literals" (formula "43") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "45"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                            (rule "mul_literals" (formula "47") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "51"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "48") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "48") (term "0,0"))
                                                            (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "48") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                            (rule "mul_literals" (formula "48") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "51") (ifseqformula "48"))
                                                            (rule "leq_literals" (formula "51") (term "0"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "true_left" (formula "51"))
                                                            (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "29"))
                                                            (rule "mul_literals" (formula "20") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                            (rule "add_literals" (formula "20") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                            (rule "mul_literals" (formula "20") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "25"))
                                                            (rule "leq_literals" (formula "20") (term "0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "true_left" (formula "20"))
                                                            (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "27"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "28") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "28"))
                                                            (rule "leq_literals" (formula "19") (term "0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "true_left" (formula "19"))
                                                            (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "51"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                                                            (rule "mul_literals" (formula "7") (term "0,0"))
                                                            (rule "add_zero_left" (formula "7") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                            (rule "mul_literals" (formula "7") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                                            (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "25") (term "0,0"))
                                                            (rule "qeq_literals" (formula "25") (term "0"))
                                                             (builtin "One Step Simplification" (formula "25"))
                                                            (rule "true_left" (formula "25"))
                                                            (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "44"))
                                                            (rule "mul_literals" (formula "43") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                                            (rule "add_literals" (formula "43") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                            (rule "mul_literals" (formula "43") (term "0,1"))
                                                            (rule "inEqSimp_exactShadow1" (formula "49") (ifseqformula "45"))
                                                            (rule "greater_literals" (formula "49") (term "0"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "49") (term "0,0,0"))
                                                            (rule "add_literals" (formula "49") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
                                                            (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                            (rule "mul_literals" (formula "49") (term "0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "27"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                            (rule "add_literals" (formula "7") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "7"))
                                                            (rule "leq_literals" (formula "20") (term "0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "true_left" (formula "20"))
                                                            (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "53"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "0,0"))
                                                            (rule "mul_literals" (formula "43") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                            (rule "add_literals" (formula "43") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                            (rule "mul_literals" (formula "43") (term "1"))
                                                            (rule "inEqSimp_exactShadow1" (formula "50") (ifseqformula "54"))
                                                            (rule "greater_literals" (formula "50") (term "0"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "mul_literals" (formula "50") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "50") (term "0"))
                                                            (rule "add_literals" (formula "50") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                            (rule "mul_literals" (formula "50") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "43"))
                                                            (rule "leq_literals" (formula "50") (term "0"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "true_left" (formula "50"))
                                                            (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "inEqSimp_and_subsumption3" (formula "34") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "nnf_imp2or" (formula "11") (term "0"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "12"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "notLeft" (formula "12"))
                                                            (rule "notLeft" (formula "12"))
                                                            (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "55"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "55"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "55"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "applyEqReverse" (formula "1") (term "1,1,0,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "54"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                            (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "33"))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "nnf_imp2or" (formula "31") (term "0"))
                                                            (rule "nnf_imp2or" (formula "32") (term "0"))
                                                            (rule "nnf_imp2or" (formula "8") (term "0"))
                                                            (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "31") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "32") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "31") (term "0,0,1,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "31") (term "1,0,1,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "31") (term "0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "31") (term "1,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0,0"))
                                                            (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "32") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "32") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "32") (term "0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "32") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "32") (term "0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "1,1,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0,0,0"))
                                                            (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "28"))
                                                             (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "12")))
                                                            (rule "andLeft" (formula "28"))
                                                            (rule "andLeft" (formula "28"))
                                                            (rule "andLeft" (formula "28"))
                                                            (rule "andLeft" (formula "28"))
                                                            (rule "andLeft" (formula "28"))
                                                            (rule "andLeft" (formula "28"))
                                                            (rule "eqSymm" (formula "33"))
                                                            (rule "translateJavaMulInt" (formula "30") (term "1"))
                                                            (rule "translateJavaSubInt" (formula "33") (term "0,2,0"))
                                                            (rule "translateJavaSubInt" (formula "33") (term "0,2,1"))
                                                            (rule "polySimp_elimSub" (formula "33") (term "0,2,0"))
                                                            (rule "mul_literals" (formula "33") (term "1,0,2,0"))
                                                            (rule "eqSymm" (formula "33"))
                                                            (rule "polySimp_elimSub" (formula "33") (term "0,2,0"))
                                                            (rule "mul_literals" (formula "33") (term "1,0,2,0"))
                                                            (rule "eqSymm" (formula "33"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                            (rule "eqSymm" (formula "30"))
                                                            (rule "polySimp_addComm0" (formula "33") (term "0,2,0"))
                                                            (rule "eqSymm" (formula "33"))
                                                            (rule "polySimp_addComm0" (formula "33") (term "0,2,0"))
                                                            (rule "eqSymm" (formula "33"))
                                                            (rule "inEqSimp_commuteLeq" (formula "28"))
                                                            (rule "applyEq" (formula "53") (term "0") (ifseqformula "30"))
                                                            (rule "inEqSimp_homoInEq1" (formula "53"))
                                                            (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                            (rule "applyEq" (formula "37") (term "1,1,0,1,0") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "30"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "53"))
                                                            (rule "polySimp_mulComm0" (formula "53") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "53") (term "1"))
                                                            (rule "mul_literals" (formula "53") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "53") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "53") (term "1,1"))
                                                            (rule "newSym_eq" (formula "30") (inst "newSymDef=mul(int::final(self,
               de.wiesler.Classifier::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                                            (rule "times_zero_1" (formula "30") (term "1,1"))
                                                            (rule "add_zero_right" (formula "30") (term "1"))
                                                            (rule "applyEq" (formula "49") (term "0") (ifseqformula "30"))
                                                            (rule "inEqSimp_homoInEq0" (formula "49"))
                                                            (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                                            (rule "applyEq" (formula "48") (term "0") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "38") (term "1,1,1,0") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "30"))
                                                            (rule "eqSymm" (formula "31"))
                                                            (rule "applyEq" (formula "34") (term "1,0,2,0") (ifseqformula "30"))
                                                            (rule "eqSymm" (formula "34"))
                                                            (rule "applyEq" (formula "50") (term "1") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "33") (term "3,0") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "34") (term "1,0,2,0") (ifseqformula "30"))
                                                            (rule "eqSymm" (formula "34"))
                                                            (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "31"))
                                                            (rule "inEqSimp_homoInEq0" (formula "54"))
                                                            (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                            (rule "applyEq" (formula "56") (term "0,1") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "47") (term "0,0,1,1") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "28") (term "0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "53") (term "0,0,1,1") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "38") (term "1,1,0,1,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "51") (term "1,1") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "49") (term "0,1,0,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "58") (term "0,1,0,1") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "1") (term "0,0,0,0,2,0,0,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "31"))
                                                            (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "0,1"))
                                                            (rule "mul_literals" (formula "49") (term "0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "1,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                                            (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "54") (term "0"))
                                                            (rule "inEqSimp_subsumption6" (formula "28") (ifseqformula "48"))
                                                            (rule "greater_literals" (formula "28") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "mul_literals" (formula "28") (term "1,0"))
                                                            (rule "leq_literals" (formula "28") (term "0"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "true_left" (formula "28"))
                                                            (rule "elimGcdLeq_antec" (formula "28") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(4(6(#)))"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,1,0"))
                                                            (rule "neg_literal" (formula "28") (term "0,0,0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "28") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "28") (term "0,0"))
                                                            (rule "qeq_literals" (formula "28") (term "0"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "56"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "0,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                            (rule "add_literals" (formula "46") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                            (rule "mul_literals" (formula "46") (term "1"))
                                                            (rule "inEqSimp_exactShadow1" (formula "52") (ifseqformula "56"))
                                                            (rule "greater_literals" (formula "52") (term "0"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "mul_literals" (formula "52") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "52") (term "0,0"))
                                                            (rule "mul_literals" (formula "52") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "52") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "52") (term "0"))
                                                            (rule "add_literals" (formula "52") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                            (rule "mul_literals" (formula "52") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "45"))
                                                            (rule "leq_literals" (formula "52") (term "0"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "true_left" (formula "28"))
                                                            (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "56"))
                                                            (rule "polySimp_mulComm0" (formula "54") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "54") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "54") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "54") (term "0,0"))
                                                            (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "54") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "54"))
                                                            (rule "mul_literals" (formula "54") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "49"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "48") (term "0"))
                                                            (rule "add_literals" (formula "48") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "48") (term "1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                            (rule "mul_literals" (formula "48") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "55"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "47") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "47") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                                            (rule "add_literals" (formula "47") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                            (rule "mul_literals" (formula "47") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "57"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "49") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "49") (term "0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "1,0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "53"))
                                                            (rule "mul_literals" (formula "44") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                            (rule "add_literals" (formula "44") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                            (rule "mul_literals" (formula "44") (term "1"))
                                                            (rule "inEqSimp_subsumption6" (formula "44") (ifseqformula "47"))
                                                            (rule "mul_literals" (formula "44") (term "1,1,0"))
                                                            (rule "greater_literals" (formula "44") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "44"))
                                                            (rule "leq_literals" (formula "44") (term "0"))
                                                             (builtin "One Step Simplification" (formula "44"))
                                                            (rule "true_left" (formula "44"))
                                                            (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "50"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "55") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "55"))
                                                            (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "55") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "53"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "0,0"))
                                                            (rule "mul_literals" (formula "47") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                                            (rule "add_literals" (formula "47") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "47") (term "0"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "47") (term "1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                                            (rule "mul_literals" (formula "47") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "46"))
                                                            (rule "leq_literals" (formula "47") (term "0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "true_left" (formula "47"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "10") (inst "i=i_1") (inst "i_0=i_0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "expand_inInt" (formula "10") (term "1,0,0,1"))
                                                            (rule "expand_inInt" (formula "10") (term "1,0,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1"))
                                                            (rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1"))
                                                            (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1,0"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "notLeft" (formula "11"))
                                                            (rule "notLeft" (formula "10"))
                                                            (rule "translateJavaSubInt" (formula "18") (term "0,2,1,1,0"))
                                                            (rule "translateJavaSubInt" (formula "16") (term "3,0"))
                                                            (rule "translateJavaShiftLeftInt" (formula "12") (term "1"))
                                                            (rule "eqSymm" (formula "18") (term "1,0"))
                                                            (rule "polySimp_elimSub" (formula "16") (term "3,0"))
                                                            (rule "mul_literals" (formula "16") (term "1,3,0"))
                                                            (rule "polySimp_elimSub" (formula "18") (term "0,2,0,1,0"))
                                                            (rule "mul_literals" (formula "18") (term "1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "16") (term "3,0"))
                                                            (rule "polySimp_addComm0" (formula "18") (term "0,2,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "17") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "17") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "15"))
                                                            (rule "inEqSimp_commuteLeq" (formula "13"))
                                                            (rule "inEqSimp_commuteLeq" (formula "14"))
                                                            (rule "inEqSimp_commuteLeq" (formula "10"))
                                                            (rule "applyEq" (formula "14") (term "1") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "38"))
                                                            (rule "inEqSimp_commuteGeq" (formula "15"))
                                                            (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                                            (rule "applyEq" (formula "66") (term "0") (ifseqformula "38"))
                                                            (rule "applyEq" (formula "16") (term "1,3,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "12") (term "0") (ifseqformula "36"))
                                                            (rule "eqSymm" (formula "12"))
                                                            (rule "applyEq" (formula "18") (term "1,0,1,0") (ifseqformula "38"))
                                                            (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "38"))
                                                            (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "17") (term "0,1,0,0,1,1,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "15") (term "0") (ifseqformula "36"))
                                                            (rule "inEqSimp_commuteLeq" (formula "15"))
                                                            (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "1,1,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "54") (term "0"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "true_left" (formula "54"))
                                                            (rule "javaShiftLeftIntDef" (formula "12") (term "0"))
                                                            (rule "mod_axiom" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                                            (rule "shiftLeftDef" (formula "12") (term "0,0"))
                                                            (rule "polySimp_elimNeg" (formula "12") (term "1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,0,0"))
                                                            (rule "shiftLeftPositiveShiftDef" (formula "12") (term "2,0,0"))
                                                            (rule "polySimp_elimOneLeft0" (formula "12") (term "2,0,0"))
                                                            (rule "shiftRightPositiveShiftDef" (formula "12") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "63"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                            (rule "nnf_imp2or" (formula "19") (term "0"))
                                                            (rule "nnf_imp2or" (formula "18") (term "0"))
                                                            (rule "expand_moduloInteger" (formula "12") (term "0"))
                                                            (rule "replace_int_MIN" (formula "12") (term "0,0"))
                                                            (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0"))
                                                            (rule "replace_int_RANGE" (formula "12") (term "1,1,0"))
                                                            (rule "polySimp_homoEq" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "12"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                            (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                            (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                                            (rule "nnf_notAnd" (formula "19") (term "0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "19") (term "1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "19") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,0,1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "19") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,0,0,1,1,0,0"))
                                                            (rule "add_literals" (formula "19") (term "0,0,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "18") (term "1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "18") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "1,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "1,0,1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "18") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "1,0,0,1,1,0,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "1,1,1,0,0"))
                                                            (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "40") (term "0"))
                                                            (rule "replace_known_left" (formula "40") (term "1,0") (ifseqformula "22"))
                                                             (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "68")) (ifInst ""  (formula "41")))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "43") (inst "i=i_1") (inst "i_0=i_0"))
                                                             (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "67")) (ifInst ""  (formula "11")))
                                                            (rule "expand_inInt" (formula "43") (term "1,0,0,1"))
                                                            (rule "expand_inInt" (formula "43") (term "1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "43") (term "1,0,1,0,0,1"))
                                                            (rule "replace_int_MIN" (formula "43") (term "0,1,1,0,0,1"))
                                                            (rule "replace_int_MIN" (formula "43") (term "0,1,1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "43") (term "1,0,1,0,0,1,0"))
                                                            (rule "andLeft" (formula "43"))
                                                            (rule "andLeft" (formula "43"))
                                                            (rule "andLeft" (formula "43"))
                                                            (rule "andLeft" (formula "43"))
                                                            (rule "andLeft" (formula "43"))
                                                            (rule "andLeft" (formula "43"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "andLeft" (formula "43"))
                                                            (rule "notLeft" (formula "43"))
                                                            (rule "eqSymm" (formula "50") (term "1,0"))
                                                            (rule "translateJavaSubInt" (formula "48") (term "3,0"))
                                                            (rule "translateJavaShiftLeftInt" (formula "44") (term "1"))
                                                            (rule "translateJavaSubInt" (formula "50") (term "0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "48") (term "3,0"))
                                                            (rule "mul_literals" (formula "48") (term "1,3,0"))
                                                            (rule "polySimp_elimSub" (formula "50") (term "0,2,0,1,0"))
                                                            (rule "mul_literals" (formula "50") (term "1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "48") (term "3,0"))
                                                            (rule "polySimp_addComm0" (formula "50") (term "0,2,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "49") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "50") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "49") (term "0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "49") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "47"))
                                                            (rule "inEqSimp_commuteLeq" (formula "45"))
                                                            (rule "inEqSimp_commuteLeq" (formula "46"))
                                                            (rule "inEqSimp_commuteLeq" (formula "43"))
                                                            (rule "applyEq" (formula "44") (term "0") (ifseqformula "37"))
                                                            (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "39"))
                                                            (rule "inEqSimp_commuteGeq" (formula "45"))
                                                            (rule "applyEq" (formula "43") (term "0") (ifseqformula "37"))
                                                            (rule "eqSymm" (formula "43"))
                                                            (rule "applyEq" (formula "46") (term "1,3,0") (ifseqformula "37"))
                                                            (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "39"))
                                                            (rule "applyEq" (formula "44") (term "1") (ifseqformula "37"))
                                                            (rule "applyEq" (formula "47") (term "1,0,1,0") (ifseqformula "39"))
                                                            (rule "applyEq" (formula "71") (term "0") (ifseqformula "39"))
                                                            (rule "applyEq" (formula "46") (term "0,1,0,0,1,0,0,0") (ifseqformula "37"))
                                                            (rule "applyEq" (formula "47") (term "0,1,0,0,1,0,0,0") (ifseqformula "37"))
                                                            (rule "applyEq" (formula "46") (term "0,1,0,0,1,1,0") (ifseqformula "37"))
                                                            (rule "applyEq" (formula "44") (term "0") (ifseqformula "37"))
                                                            (rule "inEqSimp_commuteLeq" (formula "44"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "45") (term "1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,1,0"))
                                                            (rule "mul_literals" (formula "45") (term "0,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "45") (term "1,1,1,1,0"))
                                                            (rule "javaShiftLeftIntDef" (formula "43") (term "0"))
                                                            (rule "mod_axiom" (formula "43") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                                                            (rule "shiftLeftDef" (formula "43") (term "0,0"))
                                                            (rule "polySimp_elimNeg" (formula "43") (term "1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "0,1,1,0,0"))
                                                            (rule "shiftLeftPositiveShiftDef" (formula "43") (term "2,0,0"))
                                                            (rule "polySimp_elimOneLeft0" (formula "43") (term "2,0,0"))
                                                            (rule "shiftRightPositiveShiftDef" (formula "43") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "43") (term "0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,0"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "51") (inst "i=i_1") (inst "i_0=i_0"))
                                                             (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "70")) (ifInst ""  (formula "11")))
                                                            (rule "expand_inInt" (formula "51") (term "1,0,0,1,0"))
                                                            (rule "expand_inInt" (formula "51") (term "1,0,0,1"))
                                                            (rule "replace_int_MAX" (formula "51") (term "1,0,1,0,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "51") (term "0,1,1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "51") (term "1,0,1,0,0,1"))
                                                            (rule "replace_int_MIN" (formula "51") (term "0,1,1,0,0,1"))
                                                            (rule "andLeft" (formula "51"))
                                                            (rule "andLeft" (formula "51"))
                                                            (rule "andLeft" (formula "51"))
                                                            (rule "andLeft" (formula "51"))
                                                            (rule "andLeft" (formula "51"))
                                                            (rule "andLeft" (formula "52"))
                                                            (rule "andLeft" (formula "51"))
                                                            (rule "andLeft" (formula "51"))
                                                            (rule "notLeft" (formula "51"))
                                                            (rule "translateJavaSubInt" (formula "58") (term "0,2,1,1,0"))
                                                            (rule "translateJavaSubInt" (formula "56") (term "3,0"))
                                                            (rule "translateJavaShiftLeftInt" (formula "52") (term "1"))
                                                            (rule "eqSymm" (formula "58") (term "1,0"))
                                                            (rule "polySimp_elimSub" (formula "56") (term "3,0"))
                                                            (rule "mul_literals" (formula "56") (term "1,3,0"))
                                                            (rule "polySimp_elimSub" (formula "58") (term "0,2,0,1,0"))
                                                            (rule "mul_literals" (formula "58") (term "1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "56") (term "3,0"))
                                                            (rule "polySimp_addComm0" (formula "58") (term "0,2,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "57") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "58") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "57") (term "0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "57") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "55"))
                                                            (rule "inEqSimp_commuteLeq" (formula "54"))
                                                            (rule "inEqSimp_commuteLeq" (formula "53"))
                                                            (rule "inEqSimp_commuteLeq" (formula "51"))
                                                            (rule "applyEq" (formula "54") (term "1") (ifseqformula "51"))
                                                            (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "39"))
                                                            (rule "inEqSimp_commuteGeq" (formula "54"))
                                                            (rule "applyEq" (formula "55") (term "1,3,0") (ifseqformula "51"))
                                                            (rule "applyEq" (formula "37") (term "0") (ifseqformula "51"))
                                                            (rule "applyEq" (formula "57") (term "1,0,1,0") (ifseqformula "39"))
                                                            (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "39"))
                                                            (rule "applyEq" (formula "52") (term "0") (ifseqformula "51"))
                                                            (rule "applyEq" (formula "53") (term "1") (ifseqformula "51"))
                                                            (rule "applyEq" (formula "57") (term "0,1,0,0,1,0,0,0") (ifseqformula "51"))
                                                            (rule "applyEq" (formula "56") (term "0,1,0,0,1,0,0,0") (ifseqformula "51"))
                                                            (rule "applyEq" (formula "56") (term "0,1,0,0,1,1,0") (ifseqformula "51"))
                                                            (rule "applyEq" (formula "55") (term "1,3,0") (ifseqformula "37"))
                                                            (rule "applyEq" (formula "54") (term "0") (ifseqformula "37"))
                                                            (rule "inEqSimp_commuteLeq" (formula "54"))
                                                            (rule "applyEq" (formula "52") (term "0") (ifseqformula "37"))
                                                            (rule "applyEq" (formula "52") (term "1") (ifseqformula "37"))
                                                            (rule "applyEq" (formula "51") (term "1") (ifseqformula "37"))
                                                            (rule "applyEq" (formula "73") (term "0") (ifseqformula "39"))
                                                            (rule "applyEq" (formula "54") (term "0,1,0,0,1,0,0,0") (ifseqformula "37"))
                                                            (rule "applyEq" (formula "53") (term "0,1,0,0,1,0,0,0") (ifseqformula "37"))
                                                            (rule "applyEq" (formula "53") (term "0,1,0,0,1,1,0") (ifseqformula "37"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "54") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "53") (term "1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "53") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "53") (term "0,1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "53") (term "1,1,1,1,0"))
                                                            (rule "javaShiftLeftIntDef" (formula "37") (term "0"))
                                                            (rule "mod_axiom" (formula "37") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                                            (rule "shiftLeftDef" (formula "37") (term "0,0"))
                                                            (rule "polySimp_elimNeg" (formula "37") (term "1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "0,1,1,0,0"))
                                                            (rule "shiftLeftPositiveShiftDef" (formula "37") (term "2,0,0"))
                                                            (rule "polySimp_elimOneLeft0" (formula "37") (term "2,0,0"))
                                                            (rule "shiftRightPositiveShiftDef" (formula "37") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0"))
                                                            (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "40") (term "0") (inst "i=i_1") (inst "j=j"))
                                                             (builtin "One Step Simplification" (formula "40"))
                                                            (rule "expand_inInt" (formula "40") (term "1,0,0"))
                                                            (rule "expand_inInt" (formula "40") (term "1,0,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "40") (term "0,1,1,0,0"))
                                                            (rule "replace_int_MAX" (formula "40") (term "1,0,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "40") (term "0,1,1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "40") (term "1,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "40") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "40") (term "1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "29"))
                                                            (rule "andLeft" (formula "29"))
                                                            (rule "notLeft" (formula "29"))
                                                            (rule "notLeft" (formula "29"))
                                                            (rule "commute_or" (formula "48") (term "0,0,0"))
                                                            (rule "commute_or" (formula "8") (term "0,0,0"))
                                                            (rule "commute_or" (formula "47") (term "0,0,0"))
                                                            (rule "commute_and" (formula "47") (term "1,0"))
                                                            (rule "commute_or" (formula "9") (term "0,0,0,0"))
                                                            (rule "nnf_imp2or" (formula "44") (term "0"))
                                                            (rule "nnf_imp2or" (formula "43") (term "0"))
                                                            (rule "expand_moduloInteger" (formula "41") (term "0"))
                                                            (rule "replace_int_HALFRANGE" (formula "41") (term "0,0,1,0"))
                                                            (rule "replace_int_RANGE" (formula "41") (term "1,1,0"))
                                                            (rule "replace_int_MIN" (formula "41") (term "0,0"))
                                                            (rule "polySimp_homoEq" (formula "41"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                                            (rule "mul_literals" (formula "41") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                                            (rule "applyEq" (formula "41") (term "0,1,0") (ifseqformula "12"))
                                                            (rule "polySimp_pullOutFactor1" (formula "41") (term "0"))
                                                            (rule "add_literals" (formula "41") (term "1,0"))
                                                            (rule "times_zero_1" (formula "41") (term "0"))
                                                             (builtin "One Step Simplification" (formula "41"))
                                                            (rule "true_left" (formula "41"))
                                                            (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "17") (term "0"))
                                                            (rule "wellFormedAnon" (formula "17") (term "1,0"))
                                                            (rule "wellFormedAnonEQ" (formula "17") (term "0,1,0") (ifseqformula "46"))
                                                            (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "71"))
                                                             (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "23")) (ifInst ""  (formula "45")) (ifInst ""  (formula "21")) (ifInst ""  (formula "18")))
                                                            (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "18") (term "0") (inst "i=i_1") (inst "j=j"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "expand_inInt" (formula "18") (term "1,0,0"))
                                                            (rule "expand_inInt" (formula "18") (term "1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "18") (term "1,0,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "18") (term "0,1,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "18") (term "0,1,1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "18") (term "1,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,1,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0"))
                                                            (rule "nnf_imp2or" (formula "51") (term "0"))
                                                            (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "20") (term "1,0,2,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "20") (term "0,1,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "20") (term "1,0,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "20") (term "1,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "20") (term "0,1,1,1,0,2,0,1,0"))
                                                            (rule "mul_literals" (formula "20") (term "1,0,1,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "20") (term "0,1,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "20") (term "1,1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "20") (term "0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "20") (term "1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "0,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "20") (term "0,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "20") (term "1,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "0,2,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "0,0,2,0,1,0"))
                                                            (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "19") (term "0,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "19") (term "0,1,1,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "19") (term "1,0,0,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "19") (term "0,1,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,0,1,1,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "19") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "19") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,0,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "19") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "19") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,1,0"))
                                                            (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "19") (term "0,1,1,0"))
                                                            (rule "translateJavaSubInt" (formula "19") (term "0,1,1,0,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "19") (term "1,0,0,0,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "19") (term "0,1,1,0,1,1,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,0,1,1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "19") (term "0,1,0,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "1,0,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "19") (term "0,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,1,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "19") (term "1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "19") (term "1,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,1,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "19") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "1,0,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,0,1,1,1,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,0,0,1,1,1,0"))
                                                            (rule "nnf_imp2or" (formula "40") (term "0"))
                                                            (rule "jdiv_axiom" (formula "60") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "60") (term "0,0,2,1"))
                                                            (rule "eqSymm" (formula "60"))
                                                            (rule "inEqSimp_subsumption6" (formula "60") (term "0,0") (ifseqformula "13"))
                                                            (rule "mul_literals" (formula "60") (term "1,1,0,0,0"))
                                                            (rule "greater_literals" (formula "60") (term "0,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "60"))
                                                            (rule "leq_literals" (formula "60") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "60"))
                                                            (rule "eqSymm" (formula "60"))
                                                            (rule "applyEq" (formula "66") (term "0") (ifseqformula "60"))
                                                            (rule "applyEqRigid" (formula "57") (term "0") (ifseqformula "60"))
                                                            (rule "applyEq" (formula "61") (term "0,1,1") (ifseqformula "60"))
                                                            (rule "applyEqRigid" (formula "58") (term "0,1,1") (ifseqformula "60"))
                                                            (rule "applyEq" (formula "65") (term "0,1,1") (ifseqformula "60"))
                                                            (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "60"))
                                                            (rule "applyEq" (formula "68") (term "1") (ifseqformula "60"))
                                                            (rule "applyEqRigid" (formula "1") (term "0,0,0,2,0,0,0") (ifseqformula "60"))
                                                            (rule "applyEqRigid" (formula "70") (term "1,0,1") (ifseqformula "60"))
                                                            (rule "polyDiv_pullOut" (formula "70") (term "1,0,1") (inst "polyDivCoeff=l_0"))
                                                            (rule "equal_literals" (formula "70") (term "0,1,0,1"))
                                                             (builtin "One Step Simplification" (formula "70"))
                                                            (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,1,0,1"))
                                                            (rule "polySimp_pullOutFactor0" (formula "70") (term "0,0,1,0,1"))
                                                            (rule "add_literals" (formula "70") (term "1,0,0,1,0,1"))
                                                            (rule "times_zero_1" (formula "70") (term "0,0,1,0,1"))
                                                            (rule "div_literals" (formula "70") (term "0,1,0,1"))
                                                            (rule "add_zero_left" (formula "70") (term "1,0,1"))
                                                            (rule "polyDiv_pullOut" (formula "1") (term "0,0,0,2,0,0,0") (inst "polyDivCoeff=l_0"))
                                                            (rule "equal_literals" (formula "1") (term "0,0,0,0,2,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0,2,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,0,0,2,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,0,0,0,0,0,2,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "0,0,0,0,0,2,0,0,0"))
                                                            (rule "div_literals" (formula "1") (term "0,0,0,0,2,0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0,0,2,0,0,0"))
                                                            (rule "polyDiv_pullOut" (formula "68") (term "1") (inst "polyDivCoeff=l_0"))
                                                            (rule "equal_literals" (formula "68") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "68"))
                                                            (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,1"))
                                                            (rule "polySimp_pullOutFactor0" (formula "68") (term "0,0,1"))
                                                            (rule "add_literals" (formula "68") (term "1,0,0,1"))
                                                            (rule "times_zero_1" (formula "68") (term "0,0,1"))
                                                            (rule "div_literals" (formula "68") (term "0,1"))
                                                            (rule "add_zero_left" (formula "68") (term "1"))
                                                            (rule "polyDiv_pullOut" (formula "59") (term "0") (inst "polyDivCoeff=l_0"))
                                                            (rule "equal_literals" (formula "59") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "59"))
                                                            (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0" (formula "59") (term "0,0,0"))
                                                            (rule "add_literals" (formula "59") (term "1,0,0,0"))
                                                            (rule "times_zero_1" (formula "59") (term "0,0,0"))
                                                            (rule "div_literals" (formula "59") (term "0,0"))
                                                            (rule "add_zero_left" (formula "59") (term "0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "59"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "59") (term "0"))
                                                            (rule "add_literals" (formula "59") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "59") (term "1,0"))
                                                            (rule "add_zero_right" (formula "59") (term "0"))
                                                            (rule "leq_literals" (formula "59"))
                                                            (rule "true_left" (formula "59"))
                                                            (rule "polyDiv_pullOut" (formula "64") (term "0,1,1") (inst "polyDivCoeff=l_0"))
                                                            (rule "equal_literals" (formula "64") (term "0,0,1,1"))
                                                             (builtin "One Step Simplification" (formula "64"))
                                                            (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0,1,1"))
                                                            (rule "polySimp_pullOutFactor0" (formula "64") (term "0,0,0,1,1"))
                                                            (rule "add_literals" (formula "64") (term "1,0,0,0,1,1"))
                                                            (rule "times_zero_1" (formula "64") (term "0,0,0,1,1"))
                                                            (rule "div_literals" (formula "64") (term "0,0,1,1"))
                                                            (rule "add_zero_left" (formula "64") (term "0,1,1"))
                                                            (rule "polyDiv_pullOut" (formula "58") (term "0,1,1") (inst "polyDivCoeff=l_0"))
                                                            (rule "equal_literals" (formula "58") (term "0,0,1,1"))
                                                             (builtin "One Step Simplification" (formula "58"))
                                                            (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0,1,1"))
                                                            (rule "polySimp_pullOutFactor0" (formula "58") (term "0,0,0,1,1"))
                                                            (rule "add_literals" (formula "58") (term "1,0,0,0,1,1"))
                                                            (rule "times_zero_1" (formula "58") (term "0,0,0,1,1"))
                                                            (rule "div_literals" (formula "58") (term "0,0,1,1"))
                                                            (rule "add_zero_left" (formula "58") (term "0,1,1"))
                                                            (rule "polyDiv_pullOut" (formula "60") (term "0,1,1") (inst "polyDivCoeff=l_0"))
                                                            (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,2,0,1,1"))
                                                            (rule "equal_literals" (formula "60") (term "0,0,1,1"))
                                                             (builtin "One Step Simplification" (formula "60"))
                                                            (rule "polySimp_pullOutFactor0" (formula "60") (term "0,0,0,1,1"))
                                                            (rule "add_literals" (formula "60") (term "1,0,0,0,1,1"))
                                                            (rule "times_zero_1" (formula "60") (term "0,0,0,1,1"))
                                                            (rule "div_literals" (formula "60") (term "0,0,1,1"))
                                                            (rule "add_zero_left" (formula "60") (term "0,1,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "60") (term "1"))
                                                            (rule "add_literals" (formula "60") (term "1,1,1"))
                                                            (rule "times_zero_1" (formula "60") (term "1,1"))
                                                            (rule "add_zero_right" (formula "60") (term "1"))
                                                            (rule "polyDiv_pullOut" (formula "57") (term "0") (inst "polyDivCoeff=l_0"))
                                                            (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,2,0"))
                                                            (rule "equal_literals" (formula "57") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "57"))
                                                            (rule "polySimp_pullOutFactor0" (formula "57") (term "0,0,0"))
                                                            (rule "add_literals" (formula "57") (term "1,0,0,0"))
                                                            (rule "times_zero_1" (formula "57") (term "0,0,0"))
                                                            (rule "div_literals" (formula "57") (term "0,0"))
                                                            (rule "add_zero_left" (formula "57") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "57") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "57") (term "0"))
                                                             (builtin "One Step Simplification" (formula "57"))
                                                            (rule "true_left" (formula "57"))
                                                            (rule "polyDiv_pullOut" (formula "63") (term "0") (inst "polyDivCoeff=l_0"))
                                                            (rule "equal_literals" (formula "63") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "63"))
                                                            (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0" (formula "63") (term "0,0,0"))
                                                            (rule "add_literals" (formula "63") (term "1,0,0,0"))
                                                            (rule "times_zero_1" (formula "63") (term "0,0,0"))
                                                            (rule "div_literals" (formula "63") (term "0,0"))
                                                            (rule "add_zero_left" (formula "63") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "63"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "63") (term "0"))
                                                            (rule "add_literals" (formula "63") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "63") (term "1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                                                            (rule "mul_literals" (formula "63") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "63") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "63") (term "0"))
                                                             (builtin "One Step Simplification" (formula "63"))
                                                            (rule "true_left" (formula "63"))
                                                            (rule "polyDiv_pullOut" (formula "58") (term "1") (inst "polyDivCoeff=l_0"))
                                                            (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,2,1"))
                                                            (rule "equal_literals" (formula "58") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "58"))
                                                            (rule "polySimp_pullOutFactor0" (formula "58") (term "0,0,1"))
                                                            (rule "add_literals" (formula "58") (term "1,0,0,1"))
                                                            (rule "times_zero_1" (formula "58") (term "0,0,1"))
                                                            (rule "div_literals" (formula "58") (term "0,1"))
                                                            (rule "add_zero_left" (formula "58") (term "1"))
                                                            (rule "inEqSimp_exactShadow1" (formula "62") (ifseqformula "64"))
                                                            (rule "greater_literals" (formula "62") (term "0"))
                                                             (builtin "One Step Simplification" (formula "62"))
                                                            (rule "mul_literals" (formula "62") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "62") (term "0,0"))
                                                            (rule "mul_literals" (formula "62") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "62") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                            (rule "add_literals" (formula "62") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "62"))
                                                            (rule "mul_literals" (formula "62") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "62") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "62") (term "0"))
                                                             (builtin "One Step Simplification" (formula "62"))
                                                            (rule "true_left" (formula "62"))
                                                            (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "65"))
                                                            (rule "polySimp_mulComm0" (formula "59") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "59") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "59") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "59") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "59") (term "0,0"))
                                                            (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "59") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "59"))
                                                            (rule "mul_literals" (formula "59") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "57") (ifseqformula "64"))
                                                            (rule "polySimp_rightDist" (formula "57") (term "0,0"))
                                                            (rule "mul_literals" (formula "57") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "57") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "57") (term "0"))
                                                            (rule "add_literals" (formula "57") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                            (rule "mul_literals" (formula "57") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "57") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "57") (term "0"))
                                                             (builtin "One Step Simplification" (formula "57"))
                                                            (rule "true_left" (formula "57"))
                                                            (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "39") (term "0"))
                                                            (rule "replace_known_left" (formula "39") (term "0,1") (ifseqformula "40"))
                                                             (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "68")) (ifInst ""  (formula "23")))
                                                            (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "40") (term "0") (inst "i=i_1"))
                                                             (builtin "One Step Simplification" (formula "40"))
                                                            (rule "expand_inInt" (formula "40") (term "1,0,0"))
                                                            (rule "replace_int_MAX" (formula "40") (term "1,0,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "40") (term "0,1,1,0,0"))
                                                            (rule "translateJavaSubInt" (formula "40") (term "1,1,0,0,0"))
                                                            (rule "translateJavaAddInt" (formula "40") (term "0,2,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "40") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "40") (term "0,2,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "40") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "40") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                                            (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                                            (rule "commute_or_2" (formula "20") (term "0,0"))
                                                            (rule "commute_or_2" (formula "19") (term "0,0"))
                                                            (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "43") (term "0"))
                                                            (rule "replace_known_left" (formula "43") (term "1,0") (ifseqformula "23"))
                                                             (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "69")) (ifInst ""  (formula "44")))
                                                            (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "44") (term "0") (inst "i=i_1") (inst "j=j"))
                                                             (builtin "One Step Simplification" (formula "44"))
                                                            (rule "expand_inInt" (formula "44") (term "1,0,0"))
                                                            (rule "expand_inInt" (formula "44") (term "1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "44") (term "1,0,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "44") (term "0,1,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "44") (term "0,1,1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "44") (term "1,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "44") (term "1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "44") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "44") (term "1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "nnf_imp2or" (formula "18") (term "0"))
                                                            (rule "nnf_notAnd" (formula "53") (term "0,0"))
                                                            (rule "arrayLengthIsAShort" (formula "32") (term "0"))
                                                            (rule "expand_inShort" (formula "32"))
                                                            (rule "replace_short_MIN" (formula "32") (term "0,1"))
                                                            (rule "replace_short_MAX" (formula "32") (term "1,0"))
                                                            (rule "andLeft" (formula "32"))
                                                            (rule "inEqSimp_commuteLeq" (formula "32"))
                                                            (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "31"))
                                                            (rule "leq_literals" (formula "32") (term "0"))
                                                             (builtin "One Step Simplification" (formula "32"))
                                                            (rule "true_left" (formula "32"))
                                                            (rule "arrayLengthNotNegative" (formula "66") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "66") (ifseqformula "65"))
                                                            (rule "leq_literals" (formula "66") (term "0"))
                                                             (builtin "One Step Simplification" (formula "66"))
                                                            (rule "true_left" (formula "66"))
                                                            (rule "arrayLengthNotNegative" (formula "32") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "65") (term "0"))
                                                            (rule "expand_inShort" (formula "65"))
                                                            (rule "replace_short_MIN" (formula "65") (term "0,1"))
                                                            (rule "replace_short_MAX" (formula "65") (term "1,0"))
                                                            (rule "andLeft" (formula "65"))
                                                            (rule "inEqSimp_commuteLeq" (formula "65"))
                                                            (rule "inEqSimp_subsumption1" (formula "65") (ifseqformula "66"))
                                                            (rule "leq_literals" (formula "65") (term "0"))
                                                             (builtin "One Step Simplification" (formula "65"))
                                                            (rule "true_left" (formula "65"))
                                                            (rule "arrayLengthNotNegative" (formula "36") (term "0"))
                                                            (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq0" (formula "36") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "36") (term "0,0"))
                                                            (rule "qeq_literals" (formula "36") (term "0"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "true_left" (formula "36"))
                                                            (rule "arrayLengthIsAShort" (formula "36") (term "0"))
                                                            (rule "expand_inShort" (formula "36"))
                                                            (rule "replace_short_MIN" (formula "36") (term "0,1"))
                                                            (rule "replace_short_MAX" (formula "36") (term "1,0"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "inEqSimp_commuteLeq" (formula "37"))
                                                            (rule "applyEq" (formula "36") (term "0") (ifseqformula "38"))
                                                            (rule "inEqSimp_homoInEq0" (formula "36"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                            (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
                                                            (rule "inEqSimp_homoInEq1" (formula "37"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq0" (formula "36") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "36") (term "0,0"))
                                                            (rule "qeq_literals" (formula "36") (term "0"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "true_left" (formula "36"))
                                                            (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "52") (term "0"))
                                                            (rule "wellFormedAnonEQ" (formula "52") (term "1,0") (ifseqformula "48"))
                                                            (rule "replace_known_left" (formula "52") (term "0,1") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "70")) (ifInst ""  (formula "23")) (ifInst ""  (formula "47")))
                                                            (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "53") (term "0") (inst "i=i_1") (inst "j=j"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "expand_inInt" (formula "53") (term "1,0,0"))
                                                            (rule "expand_inInt" (formula "53") (term "1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "53") (term "1,0,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "53") (term "0,1,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "53") (term "0,1,1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "53") (term "1,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "53") (term "0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0,0,1,0"))
                                                            (rule "add_literals" (formula "53") (term "0,0,0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "53") (term "1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "53") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "53") (term "1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                                            (rule "nnf_imp2or" (formula "41") (term "0,1,0"))
                                                            (rule "div_axiom" (formula "12") (term "0,1,1,2,1,0,0") (inst "quotient=quotient_0"))
                                                            (rule "qeq_literals" (formula "12") (term "0,1,1"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "equal_literals" (formula "12") (term "0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "mul_literals" (formula "12") (term "1,1,1"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "1"))
                                                            (rule "add_literals" (formula "14") (term "0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "13"))
                                                            (rule "inEqSimp_homoInEq1" (formula "14"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                            (rule "applyEq" (formula "15") (term "0,1,1,2,1,0,0") (ifseqformula "12"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "1,2,1,0,0"))
                                                            (rule "applyEq" (formula "15") (term "0,0,0,1,0,0") (ifseqformula "12"))
                                                            (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0,0"))
                                                            (rule "applyEq" (formula "15") (term "0,1,1,1,1,1,0,0") (ifseqformula "12"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "1,1,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                            (rule "mul_literals" (formula "14") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "15") (term "0,1,0,0") (ifseqformula "13"))
                                                            (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "15") (term "1,1,0,0,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,0"))
                                                            (rule "leq_literals" (formula "15") (term "0,0,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "mod_axiom" (formula "15") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                                            (rule "polySimp_homoEq" (formula "15"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                            (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "15") (term "0,0,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "15"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "0,1"))
                                                            (rule "newSym_eq" (formula "15") (inst "l=l_1") (inst "newSymDef=add(mul(l_0, Z(0(#))),
    mul(pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                int::final(de.wiesler.Tree::final(self,
                                                  de.wiesler.Classifier::$tree),
                           de.wiesler.Tree::$log_buckets))),
        Z(0(#))))"))
                                                            (rule "times_zero_1" (formula "15") (term "1,1,1"))
                                                            (rule "times_zero_1" (formula "15") (term "0,1,1"))
                                                            (rule "add_zero_left" (formula "15") (term "1,1"))
                                                            (rule "add_zero_right" (formula "15") (term "1"))
                                                            (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "15"))
                                                            (rule "polySimp_homoEq" (formula "16"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "16"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
                                                            (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "16"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                            (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=l_1"))
                                                            (rule "equal_literals" (formula "15") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                                            (rule "polySimp_homoEq" (formula "15"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,1,1,1,0"))
                                                            (rule "add_literals" (formula "15") (term "1,1,0,0,1,1,1,0"))
                                                            (rule "times_zero_1" (formula "15") (term "1,0,0,1,1,1,0"))
                                                            (rule "add_zero_right" (formula "15") (term "0,0,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0"))
                                                            (rule "add_literals" (formula "15") (term "1,0,0"))
                                                            (rule "times_zero_1" (formula "15") (term "0,0"))
                                                            (rule "add_zero_left" (formula "15") (term "0"))
                                                            (rule "polySimp_invertEq" (formula "15"))
                                                            (rule "mul_literals" (formula "15") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "11"))
                                                            (rule "polySimp_mulAssoc" (formula "13") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "13") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                            (rule "elimGcdLeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                                            (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                                            (rule "leq_literals" (formula "13") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                                                            (rule "neg_literal" (formula "13") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                                            (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "13") (term "0,0"))
                                                            (rule "qeq_literals" (formula "13") (term "0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "15"))
                                                            (rule "mul_literals" (formula "10") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                            (rule "add_literals" (formula "10") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                            (rule "mul_literals" (formula "10") (term "1"))
                                                            (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "10") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                            (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "10") (term "0,0"))
                                                            (rule "leq_literals" (formula "10") (term "0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "14"))
                                                            (rule "applyEq" (formula "17") (term "0,1,1") (ifseqformula "10"))
                                                            (rule "mul_literals" (formula "17") (term "1,1"))
                                                            (rule "add_zero_right" (formula "17") (term "1"))
                                                            (rule "applyEq" (formula "15") (term "0") (ifseqformula "10"))
                                                            (rule "leq_literals" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "11"))
                                                            (rule "true_left" (formula "11"))
                                                            (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "10"))
                                                            (rule "mul_literals" (formula "14") (term "1"))
                                                            (rule "applyEqRigid" (formula "13") (term "1") (ifseqformula "10"))
                                                            (rule "applyEqRigid" (formula "17") (term "0,0,1,0") (ifseqformula "10"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                            (rule "add_zero_left" (formula "17") (term "1,0"))
                                                            (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "12"))
                                                            (rule "leq_literals" (formula "15") (term "0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "11"))
                                                            (rule "leq_literals" (formula "14") (term "0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                                            (rule "expand_inShort" (formula "17"))
                                                            (rule "replace_short_MIN" (formula "17") (term "0,1"))
                                                            (rule "replace_short_MAX" (formula "17") (term "1,0"))
                                                            (rule "andLeft" (formula "17"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18"))
                                                            (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "17"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "19") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                            (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
                                                            (rule "leq_literals" (formula "18") (term "0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "51") (term "1,0,2,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "51") (term "0,1,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "51") (term "1,0,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "51") (term "1,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "51") (term "0,1,1,1,0,2,0,1,0"))
                                                            (rule "mul_literals" (formula "51") (term "1,0,1,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "51") (term "0,1,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "0,0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "51") (term "1,1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "51") (term "0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "51") (term "1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "0,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "51") (term "0,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "51") (term "1,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "0,1,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0,2,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0,0,2,0,1,0"))
                                                            (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "50") (term "0,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "50") (term "0,1,1,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "50") (term "1,0,0,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "50") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "50") (term "0,1,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "50") (term "1,0,1,1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "50") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "0,0,1,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "50") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "50") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "0,0,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "50") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "50") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "0,0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0,1,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "1,0,1,0,1,0"))
                                                            (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "50") (term "0,1,1,0"))
                                                            (rule "translateJavaSubInt" (formula "50") (term "0,1,1,0,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "50") (term "1,0,0,0,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "50") (term "0,1,1,0,1,1,0"))
                                                            (rule "mul_literals" (formula "50") (term "1,0,1,1,0,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "50") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "0,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "50") (term "0,1,0,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "0,1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "0,0,1,0,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "50") (term "1,0,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "50") (term "0,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "0,1,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "50") (term "1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "0,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "0,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "50") (term "1,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "0,1,0,0,1,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "50") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "0,1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "0,0,1,0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "0,1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "1,0,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "0,0,1,1,1,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,0,0,1,1,1,0"))
                                                            (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "22") (term "0") (inst "i=i_1"))
                                                             (builtin "One Step Simplification" (formula "22"))
                                                            (rule "expand_inInt" (formula "22") (term "1,0,0"))
                                                            (rule "replace_int_MAX" (formula "22") (term "1,0,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "22") (term "0,1,1,0,0"))
                                                            (rule "translateJavaSubInt" (formula "22") (term "1,1,0,0,0"))
                                                            (rule "translateJavaAddInt" (formula "22") (term "0,2,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "22") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "22") (term "0,2,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "22") (term "1,1,0,0,0"))
                                                            (rule "add_literals" (formula "22") (term "0,1,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "22") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "55") (term "0,0"))
                                                            (rule "commute_or_2" (formula "8") (term "0,0"))
                                                            (rule "commute_or_2" (formula "54") (term "0,0"))
                                                            (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "59") (term "1,0,2,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "59") (term "0,1,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "59") (term "1,0,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "59") (term "1,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "59") (term "0,1,1,1,0,2,0,1,0"))
                                                            (rule "mul_literals" (formula "59") (term "1,0,1,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "59") (term "1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "59") (term "0,1,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "59") (term "0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "59") (term "0,0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "59") (term "1,1,0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "59") (term "0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "59") (term "1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "59") (term "1,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "59") (term "0,1,1,0,2,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "59") (term "0,1,0,2,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "59") (term "0,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm1" (formula "59") (term "1,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "59") (term "0,1,0,1,0,2,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "59") (term "0,2,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "59") (term "0,0,2,0,1,0"))
                                                            (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                            (rule "nnf_imp2or" (formula "45") (term "0"))
                                                            (rule "nnf_notAnd" (formula "51") (term "1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "51") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "51") (term "1,0,0,1,1,0,0"))
                                                            (rule "add_literals" (formula "51") (term "0,0,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "51") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "51") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "51") (term "1,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "51") (term "0,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "51") (term "1,0,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "51") (term "0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0"))
                                                            (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "50") (term "1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "50") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "50") (term "1,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "50") (term "0,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "50") (term "1,0,1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "50") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "50") (term "1,0,0,1,1,0,0"))
                                                            (rule "add_literals" (formula "50") (term "0,0,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "50") (term "1,1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "50") (term "0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0"))
                                                            (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                            (rule "nnf_imp2or" (formula "49") (term "0"))
                                                            (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                                            (rule "nnf_imp2or" (formula "23") (term "0,1,0"))
                                                            (rule "nnf_notAnd" (formula "59") (term "0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "59") (term "0,0,0,0"))
                                                            (rule "mul_literals" (formula "59") (term "1,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "59") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "59") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "59") (term "0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "59") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "59") (term "1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "59") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "59") (term "1,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "59") (term "0,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "59") (term "1,0,1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "59") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "59") (term "1,0,0,1,1,0,0"))
                                                            (rule "add_literals" (formula "59") (term "0,0,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "59") (term "1,1,1,0,0"))
                                                            (rule "nnf_imp2or" (formula "58") (term "0"))
                                                            (rule "nnf_notAnd" (formula "46") (term "0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,0"))
                                                            (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0"))
                                                            (rule "mul_literals" (formula "46") (term "1,0,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "46") (term "1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "46") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "46") (term "1,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "46") (term "1,0,1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "46") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "46") (term "1,0,0,1,1,0,0"))
                                                            (rule "add_literals" (formula "46") (term "0,0,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "46") (term "1,1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "46") (term "0,0,1,0"))
                                                            (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "44") (term "0"))
                                                            (rule "replace_known_left" (formula "44") (term "1,0") (ifseqformula "28"))
                                                             (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "76")) (ifInst ""  (formula "45")))
                                                            (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "45") (term "0") (inst "i=i_1") (inst "j=j"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "expand_inInt" (formula "45") (term "1,0,0"))
                                                            (rule "expand_inInt" (formula "45") (term "1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "45") (term "1,0,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "45") (term "0,1,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "45") (term "0,1,1,0,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "45") (term "1,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "45") (term "1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "45") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "45") (term "1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "49") (term "0"))
                                                            (rule "replace_known_right" (formula "49") (term "0,0,0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "28")) (ifInst ""  (formula "50")))
                                                            (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "50") (term "0") (inst "i=i_1"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "expand_inInt" (formula "50") (term "1,0,0"))
                                                            (rule "replace_int_MIN" (formula "50") (term "0,1,1,0,0"))
                                                            (rule "replace_int_MAX" (formula "50") (term "1,0,1,0,0"))
                                                            (rule "translateJavaSubInt" (formula "50") (term "1,1,0,0,0"))
                                                            (rule "translateJavaAddInt" (formula "50") (term "0,2,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "50") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "50") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "50") (term "0,2,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "50") (term "1,1,0,0,0"))
                                                            (rule "add_literals" (formula "50") (term "0,1,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "50") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "50") (term "1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "25") (term "1,0,0,0"))
                                                            (rule "commute_or" (formula "24") (term "1,0,0,0"))
                                                            (rule "ifthenelse_split" (formula "1") (term "0"))
                                                            (branch " self.sorted_splitters[ l_0 * -1 + indices[i_0]@anon_heap_LOOP_0<<anonHeapFunction>>] >= 1 + values[begin + i_0] TRUE"
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(5(2(8(1(4(7(3(7(0(1(#))))))))))))") (inst "elimGcdLeftDiv=int::select(anon_heap_LOOP_0<<anonHeapFunction>>,
            indices,
            arr(i_0))") (inst "elimGcd=Z(2(#))"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                               (rule "leq_literals" (formula "2") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_exactShadow3" (formula "70") (ifseqformula "2"))
                                                               (rule "polySimp_mulComm0" (formula "70") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "70") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "70"))
                                                               (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "70") (term "0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "70"))
                                                               (rule "qeq_literals" (formula "17") (term "0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "closeFalse" (formula "17"))
                                                            )
                                                            (branch " self.sorted_splitters[ l_0 * -1 + indices[i_0]@anon_heap_LOOP_0<<anonHeapFunction>>] >= 1 + values[begin + i_0] FALSE"
                                                               (rule "inEqSimp_geqRight" (formula "76"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(5(2(8(1(4(7(3(7(0(1(#))))))))))))") (inst "elimGcdLeftDiv=int::select(anon_heap_LOOP_0<<anonHeapFunction>>,
            indices,
            arr(i_0))") (inst "elimGcd=Z(2(#))"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                                               (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "2") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_exactShadow3" (formula "70") (ifseqformula "2"))
                                                               (rule "polySimp_mulComm0" (formula "70") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "70") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "70"))
                                                               (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "70") (term "0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "70"))
                                                               (rule "qeq_literals" (formula "17") (term "0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "closeFalse" (formula "17"))
                                                            )
                                                         )
                                                      )
                                                      (branch "Usage"
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "translateJavaAddInt" (formula "64") (term "0,1,0"))
                                                         (rule "variableDeclarationAssign" (formula "64") (term "1"))
                                                         (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_18"))
                                                         (rule "assignment_read_attribute_this_final" (formula "64"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "assignmentSubtractionInt" (formula "64") (term "1"))
                                                         (branch "Overflow check"
                                                             (builtin "One Step Simplification" (formula "64"))
                                                            (rule "expand_inInt" (formula "64") (userinteraction))
                                                            (rule "andRight" (formula "64") (userinteraction))
                                                            (branch "Case 1"
                                                               (rule "replace_int_MAX" (formula "64") (term "1"))
                                                               (rule "polySimp_elimSub" (formula "64") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "64") (term "0,0"))
                                                               (rule "inEqSimp_leqRight" (formula "64"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "4"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "55"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "39") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "49"))
                                                               (rule "polySimp_mulAssoc" (formula "49") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "32"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "51"))
                                                               (rule "times_zero_2" (formula "51") (term "1,0"))
                                                               (rule "add_zero_right" (formula "51") (term "0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "33"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "34") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "0,1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "39") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                               (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0"))
                                                               (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                               (rule "mul_literals" (formula "48") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "54"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "54") (term "0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "1,0,1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                               (rule "polySimp_mulLiterals" (formula "50") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "50") (term "1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                               (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "27"))
                                                               (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "33") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                               (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "33") (term "0,0"))
                                                               (rule "qeq_literals" (formula "33") (term "0"))
                                                                (builtin "One Step Simplification" (formula "33"))
                                                               (rule "true_left" (formula "33"))
                                                               (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "8") (term "0,0"))
                                                               (rule "qeq_literals" (formula "8") (term "0"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "27"))
                                                               (rule "leq_literals" (formula "29") (term "0"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "true_left" (formula "29"))
                                                               (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "25"))
                                                               (rule "leq_literals" (formula "19") (term "0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "49"))
                                                               (rule "leq_literals" (formula "48") (term "0"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "true_left" (formula "48"))
                                                               (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "49"))
                                                               (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "43") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "27"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "28") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "28"))
                                                               (rule "leq_literals" (formula "19") (term "0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "29"))
                                                               (rule "mul_literals" (formula "19") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                               (rule "add_literals" (formula "19") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                               (rule "mul_literals" (formula "19") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "24"))
                                                               (rule "leq_literals" (formula "19") (term "0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "45"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "44") (term "0"))
                                                               (rule "add_literals" (formula "44") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "44") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                               (rule "mul_literals" (formula "44") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                                                               (rule "times_zero_1" (formula "7") (term "0,0"))
                                                               (rule "add_zero_left" (formula "7") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                               (rule "mul_literals" (formula "7") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                                               (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "25") (term "0,0"))
                                                               (rule "qeq_literals" (formula "25") (term "0"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "46"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                               (rule "mul_literals" (formula "48") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "52"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "49") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "49") (term "0,0"))
                                                               (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "49") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                               (rule "mul_literals" (formula "49") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "49"))
                                                               (rule "leq_literals" (formula "52") (term "0"))
                                                                (builtin "One Step Simplification" (formula "52"))
                                                               (rule "true_left" (formula "52"))
                                                               (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "43"))
                                                               (rule "mul_literals" (formula "44") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                                                               (rule "add_literals" (formula "44") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "1"))
                                                               (rule "mul_literals" (formula "44") (term "0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "27"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                               (rule "add_literals" (formula "7") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "7"))
                                                               (rule "leq_literals" (formula "20") (term "0"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "inEqSimp_exactShadow1" (formula "49") (ifseqformula "43"))
                                                               (rule "greater_literals" (formula "49") (term "0"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                                                               (rule "mul_literals" (formula "49") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "49") (term "0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "49") (term "0,0,0"))
                                                               (rule "add_literals" (formula "49") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
                                                               (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "49") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                               (rule "mul_literals" (formula "49") (term "0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "53"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "0,0"))
                                                               (rule "mul_literals" (formula "44") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "44") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                               (rule "add_literals" (formula "44") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                               (rule "mul_literals" (formula "44") (term "1"))
                                                               (rule "inEqSimp_exactShadow1" (formula "50") (ifseqformula "54"))
                                                               (rule "mul_literals" (formula "50") (term "1,0,1"))
                                                               (rule "greater_literals" (formula "50") (term "0"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "50") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "50") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "50") (term "0"))
                                                               (rule "add_literals" (formula "50") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                               (rule "mul_literals" (formula "50") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "44"))
                                                               (rule "leq_literals" (formula "50") (term "0"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "true_left" (formula "50"))
                                                               (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "35"))
                                                               (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "inEqSimp_and_subsumption3" (formula "34") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "nnf_imp2or" (formula "11") (term "0"))
                                                               (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "37") (inst "i_0=i_0") (inst "i=i"))
                                                               (rule "andLeft" (formula "37"))
                                                                (builtin "One Step Simplification" (formula "37"))
                                                               (rule "expand_inInt" (formula "38") (term "1,0,0"))
                                                               (rule "expand_inInt" (formula "37") (term "1,0,0,1"))
                                                               (rule "replace_int_MIN" (formula "38") (term "0,1,1,0,0"))
                                                               (rule "replace_int_MAX" (formula "38") (term "1,0,1,0,0"))
                                                               (rule "replace_int_MAX" (formula "37") (term "1,0,1,0,0,1"))
                                                               (rule "replace_int_MIN" (formula "37") (term "0,1,1,0,0,1"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "notLeft" (formula "37"))
                                                               (rule "notLeft" (formula "37"))
                                                               (rule "translateJavaSubInt" (formula "45") (term "0,2,1,1,0"))
                                                               (rule "translateJavaSubInt" (formula "43") (term "3,0"))
                                                               (rule "translateJavaShiftLeftInt" (formula "39") (term "1"))
                                                               (rule "eqSymm" (formula "45") (term "1,0"))
                                                               (rule "polySimp_elimSub" (formula "43") (term "3,0"))
                                                               (rule "mul_literals" (formula "43") (term "1,3,0"))
                                                               (rule "polySimp_elimSub" (formula "45") (term "0,2,0,1,0"))
                                                               (rule "mul_literals" (formula "45") (term "1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "43") (term "3,0"))
                                                               (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "44") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "45") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "44") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "44") (term "0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "42"))
                                                               (rule "inEqSimp_commuteLeq" (formula "40"))
                                                               (rule "inEqSimp_commuteLeq" (formula "41"))
                                                               (rule "inEqSimp_commuteLeq" (formula "37"))
                                                               (rule "applyEq" (formula "43") (term "1,3,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "54") (term "0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "51") (term "0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "56") (term "0,1,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "34") (term "0,1,1,0,1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "42") (term "1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "40") (term "0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "41") (term "1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "55") (term "1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "34") (term "1,1,1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "44") (term "0,1,0,0,1,1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "44") (term "0,1,0,0,1,0,0,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "45") (term "0,1,0,0,1,0,0,0") (ifseqformula "39"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "1,1,1,0"))
                                                               (rule "mul_literals" (formula "44") (term "0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "44") (term "1,1,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "40"))
                                                               (rule "leq_literals" (formula "54") (term "0"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "true_left" (formula "54"))
                                                               (rule "javaShiftLeftIntDef" (formula "39") (term "1"))
                                                               (rule "mod_axiom" (formula "39") (term "1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "43") (term "1,3,0"))
                                                               (rule "mod_axiom" (formula "43") (term "1,0,1,3,0"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,3,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "51") (term "0"))
                                                               (rule "mod_axiom" (formula "51") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "55") (term "0,1,1"))
                                                               (rule "mod_axiom" (formula "55") (term "1,0,0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,1,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "34") (term "0,1,1,0,1,0"))
                                                               (rule "mod_axiom" (formula "34") (term "1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,1,0,1,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "58") (term "0,0"))
                                                               (rule "mod_axiom" (formula "58") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "42") (term "1"))
                                                               (rule "mod_axiom" (formula "42") (term "1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "40") (term "0"))
                                                               (rule "mod_axiom" (formula "40") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "41") (term "1"))
                                                               (rule "mod_axiom" (formula "41") (term "1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "54") (term "1"))
                                                               (rule "mod_axiom" (formula "54") (term "1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "34") (term "1,1,1,0"))
                                                               (rule "mod_axiom" (formula "34") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,1,1,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "44") (term "1,1,1,1,0"))
                                                               (rule "mod_axiom" (formula "44") (term "1,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,1,1,1,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "44") (term "1,1,1,0,0,0"))
                                                               (rule "mod_axiom" (formula "44") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "45") (term "1,1,1,0,0,0"))
                                                               (rule "mod_axiom" (formula "45") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "shiftLeftDef" (formula "39") (term "0,1"))
                                                               (rule "eqSymm" (formula "39"))
                                                               (rule "polySimp_elimNeg" (formula "39") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "39") (term "2,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "39") (term "2,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "39") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                                               (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,0"))
                                                               (rule "shiftLeftDef" (formula "43") (term "0,1,3,0"))
                                                               (rule "polySimp_elimNeg" (formula "43") (term "1,1,0,1,3,0"))
                                                               (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,1,3,0"))
                                                               (rule "polySimp_rightDist" (formula "43") (term "1,1,0,1,3,0"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,1,3,0"))
                                                               (rule "polySimp_mulComm0" (formula "43") (term "0,1,1,0,1,3,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "43") (term "2,0,1,3,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "43") (term "2,0,1,3,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "43") (term "1,0,1,3,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,1,3,0"))
                                                               (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,1,3,0"))
                                                               (rule "add_zero_right" (formula "43") (term "0,0,0,0,1,3,0"))
                                                               (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,3,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,1,3,0"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,1,3,0"))
                                                               (rule "applyEq" (formula "43") (term "1,3,0") (ifseqformula "39"))
                                                               (rule "shiftLeftDef" (formula "51") (term "0,0"))
                                                               (rule "polySimp_elimNeg" (formula "51") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "0,1,1,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "51") (term "2,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "51") (term "2,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "51") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                               (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "51") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "51") (term "0") (ifseqformula "39"))
                                                               (rule "shiftLeftDef" (formula "55") (term "0,0,1,1"))
                                                               (rule "polySimp_elimNeg" (formula "55") (term "1,1,0,0,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,1,1"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "0,1,1,0,0,1,1"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "55") (term "2,0,0,1,1"))
                                                               (rule "polySimp_elimOneLeft0" (formula "55") (term "2,0,0,1,1"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "55") (term "1,0,0,1,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,1"))
                                                               (rule "times_zero_1" (formula "55") (term "1,0,0,0,0,0,1,1"))
                                                               (rule "add_zero_right" (formula "55") (term "0,0,0,0,0,1,1"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,1,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "55"))
                                                               (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0,0,1,0"))
                                                               (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "39"))
                                                               (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "55"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "55") (term "0"))
                                                               (rule "shiftLeftDef" (formula "34") (term "0,0,1,1,0,1,0"))
                                                               (rule "polySimp_elimNeg" (formula "34") (term "1,1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "0,1,1,0,0,1,1,0,1,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "34") (term "2,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "34") (term "2,0,0,1,1,0,1,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "34") (term "1,0,0,1,1,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0,1,1,0,1,0"))
                                                               (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0,1,1,0,1,0"))
                                                               (rule "add_zero_right" (formula "34") (term "0,0,0,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,1,1,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0,1,1,0,1,0"))
                                                               (rule "applyEq" (formula "34") (term "0,1,1,0,1,0") (ifseqformula "39"))
                                                               (rule "shiftLeftDef" (formula "58") (term "0,0,0"))
                                                               (rule "polySimp_elimNeg" (formula "58") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "58") (term "0,1,1,0,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "58") (term "2,0,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "58") (term "2,0,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "58") (term "1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,0"))
                                                               (rule "times_zero_1" (formula "58") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0,0,0"))
                                                               (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "39"))
                                                               (rule "shiftLeftDef" (formula "42") (term "0,1"))
                                                               (rule "polySimp_elimNeg" (formula "42") (term "1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "42") (term "1,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "0,1,1,0,1"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "42") (term "2,0,1"))
                                                               (rule "polySimp_elimOneLeft0" (formula "42") (term "2,0,1"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "42") (term "1,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,1"))
                                                               (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,1"))
                                                               (rule "add_zero_right" (formula "42") (term "0,0,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "42"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "42") (term "0") (ifseqformula "39"))
                                                               (rule "inEqSimp_commuteLeq" (formula "42"))
                                                               (rule "shiftLeftDef" (formula "40") (term "0,0"))
                                                               (rule "polySimp_elimNeg" (formula "40") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "40") (term "2,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "40") (term "2,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "40") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0"))
                                                               (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "40") (term "0") (ifseqformula "39"))
                                                               (rule "shiftLeftDef" (formula "41") (term "0,1"))
                                                               (rule "polySimp_elimNeg" (formula "41") (term "1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "41") (term "1,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0,1"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "41") (term "2,0,1"))
                                                               (rule "polySimp_elimOneLeft0" (formula "41") (term "2,0,1"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "41") (term "1,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,1"))
                                                               (rule "mul_literals" (formula "41") (term "1,0,0,0,0,1"))
                                                               (rule "add_literals" (formula "41") (term "0,0,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "41"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "41") (term "0") (ifseqformula "39"))
                                                               (rule "inEqSimp_commuteLeq" (formula "41"))
                                                               (rule "shiftLeftDef" (formula "54") (term "0,1"))
                                                               (rule "polySimp_elimNeg" (formula "54") (term "1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "1,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "0,1,1,0,1"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "54") (term "2,0,1"))
                                                               (rule "polySimp_elimOneLeft0" (formula "54") (term "2,0,1"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "54") (term "1,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,1"))
                                                               (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,1"))
                                                               (rule "add_literals" (formula "54") (term "0,0,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "54"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "54") (term "0") (ifseqformula "39"))
                                                               (rule "inEqSimp_commuteLeq" (formula "54"))
                                                               (rule "shiftLeftDef" (formula "34") (term "0,1,1,1,0"))
                                                               (rule "polySimp_elimNeg" (formula "34") (term "1,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "0,1,1,0,1,1,1,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "34") (term "2,0,1,1,1,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "34") (term "2,0,1,1,1,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "34") (term "1,0,1,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,1,1,0"))
                                                               (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,1,1,1,0"))
                                                               (rule "add_literals" (formula "34") (term "0,0,0,0,1,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,1,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1,1,1,0"))
                                                               (rule "applyEq" (formula "34") (term "1,1,1,0") (ifseqformula "39"))
                                                               (rule "shiftLeftDef" (formula "44") (term "0,1,1,1,1,0"))
                                                               (rule "polySimp_elimNeg" (formula "44") (term "1,1,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,1,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "1,1,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "0,1,1,0,1,1,1,1,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "44") (term "2,0,1,1,1,1,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "44") (term "2,0,1,1,1,1,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "44") (term "1,0,1,1,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,1,1,1,1,0"))
                                                               (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,1,1,1,1,0"))
                                                               (rule "add_literals" (formula "44") (term "0,0,0,0,1,1,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,1,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0,1,1,1,1,0"))
                                                               (rule "applyEq" (formula "44") (term "1,1,1,1,0") (ifseqformula "39"))
                                                               (rule "shiftLeftDef" (formula "44") (term "0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimNeg" (formula "44") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "0,1,1,0,1,1,1,0,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "44") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "44") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "44") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "add_literals" (formula "44") (term "0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "applyEq" (formula "44") (term "1,1,1,0,0,0") (ifseqformula "39"))
                                                               (rule "shiftLeftDef" (formula "45") (term "0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimNeg" (formula "45") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "45") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "45") (term "0,1,1,0,1,1,1,0,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "45") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "45") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "45") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "add_literals" (formula "45") (term "0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "applyEq" (formula "45") (term "1,1,1,0,0,0") (ifseqformula "39"))
                                                               (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "55"))
                                                               (rule "polySimp_mulComm0" (formula "60") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "60") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "60"))
                                                               (rule "polySimp_mulComm0" (formula "60") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "60") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "60") (term "1,1"))
                                                               (rule "mul_literals" (formula "60") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "60") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow1" (formula "58") (ifseqformula "51"))
                                                               (rule "greater_literals" (formula "58") (term "0"))
                                                                (builtin "One Step Simplification" (formula "58"))
                                                               (rule "polySimp_rightDist" (formula "58") (term "0,0"))
                                                               (rule "mul_literals" (formula "58") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "58") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "58") (term "0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "58") (term "0,0,0"))
                                                               (rule "add_literals" (formula "58") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,0"))
                                                               (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "58") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                                               (rule "polySimp_mulComm0" (formula "58") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "58") (term "1"))
                                                               (rule "mul_literals" (formula "58") (term "0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "51"))
                                                               (rule "mul_literals" (formula "40") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                                               (rule "add_literals" (formula "40") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                               (rule "mul_literals" (formula "40") (term "0,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "40"))
                                                               (rule "inEqSimp_homoInEq0" (formula "54") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "54") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                                                               (rule "add_literals" (formula "54") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "54") (term "0,0"))
                                                               (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "54") (term "0,0"))
                                                               (rule "qeq_literals" (formula "54") (term "0"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "true_left" (formula "54"))
                                                               (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "55"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "54") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "54") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "54") (term "0"))
                                                               (rule "add_literals" (formula "54") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "54"))
                                                               (rule "mul_literals" (formula "54") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "41"))
                                                               (rule "leq_literals" (formula "54") (term "0"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "true_left" (formula "54"))
                                                               (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "62"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "54") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "61"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "40") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                               (rule "add_literals" (formula "40") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                               (rule "mul_literals" (formula "40") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "40"))
                                                               (rule "leq_literals" (formula "54") (term "0"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "true_left" (formula "54"))
                                                               (rule "nnf_imp2or" (formula "35") (term "0"))
                                                               (rule "nnf_imp2or" (formula "10") (term "0"))
                                                               (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                               (rule "expand_moduloInteger" (formula "39") (term "0"))
                                                               (rule "replace_int_RANGE" (formula "39") (term "1,1,0"))
                                                               (rule "replace_int_HALFRANGE" (formula "39") (term "0,0,1,0"))
                                                               (rule "replace_int_MIN" (formula "39") (term "0,0"))
                                                               (rule "polySimp_homoEq" (formula "39"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                                                               (rule "mul_literals" (formula "39") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "39"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                               (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "23"))
                                                               (rule "andLeft" (formula "23"))
                                                               (rule "notLeft" (formula "24"))
                                                               (rule "notLeft" (formula "23"))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "63"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "63"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "63"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "1") (term "1,1,0,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "4"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "1") (term "1,1,0,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "60"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                               (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "33"))
                                                               (rule "true_left" (formula "33"))
                                                               (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "11") (inst "i_0=i_0") (inst "i=i_1"))
                                                                (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "62")) (ifInst ""  (formula "61")) (ifInst ""  (formula "34")))
                                                               (rule "expand_inInt" (formula "11") (term "1,0,0,1"))
                                                               (rule "expand_inInt" (formula "11") (term "1,0,0,1,0"))
                                                               (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0,1"))
                                                               (rule "replace_int_MAX" (formula "11") (term "1,0,1,0,0,1"))
                                                               (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0,1,0"))
                                                               (rule "replace_int_MAX" (formula "11") (term "1,0,1,0,0,1,0"))
                                                               (rule "andLeft" (formula "11"))
                                                               (rule "andLeft" (formula "11"))
                                                               (rule "andLeft" (formula "11"))
                                                               (rule "andLeft" (formula "11"))
                                                               (rule "andLeft" (formula "11"))
                                                               (rule "andLeft" (formula "12"))
                                                               (rule "andLeft" (formula "11"))
                                                               (rule "translateJavaSubInt" (formula "18") (term "0,2,1,1,0"))
                                                               (rule "translateJavaSubInt" (formula "16") (term "3,0"))
                                                               (rule "translateJavaShiftLeftInt" (formula "12") (term "1"))
                                                               (rule "eqSymm" (formula "18") (term "1,0"))
                                                               (rule "polySimp_elimSub" (formula "16") (term "3,0"))
                                                               (rule "mul_literals" (formula "16") (term "1,3,0"))
                                                               (rule "polySimp_elimSub" (formula "18") (term "0,2,0,1,0"))
                                                               (rule "mul_literals" (formula "18") (term "1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "16") (term "3,0"))
                                                               (rule "polySimp_addComm0" (formula "18") (term "0,2,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "17") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "17") (term "0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "15"))
                                                               (rule "inEqSimp_commuteLeq" (formula "14"))
                                                               (rule "inEqSimp_commuteLeq" (formula "13"))
                                                               (rule "inEqSimp_commuteLeq" (formula "11"))
                                                               (rule "applyEq" (formula "46") (term "1,1,1,0,0,0") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "44") (term "1,3,0") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "12") (term "1,3,0") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "45") (term "1,1,1,1,0") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "54") (term "0,1,1") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "41") (term "0") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "52") (term "0") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "34") (term "0,1,1,0,1,0") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "42") (term "1") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "45") (term "1,1,1,0,0,0") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "53") (term "1") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "43") (term "1") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "34") (term "1,1,1,0") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0,0") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "13") (term "0,1,0,0,1,1,0") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0,0") (ifseqformula "11"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0"))
                                                               (rule "mul_literals" (formula "13") (term "0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "13") (term "1,1,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "11") (term "1"))
                                                               (rule "mod_axiom" (formula "11") (term "1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "45") (term "1,1,1,0,0,0"))
                                                               (rule "mod_axiom" (formula "45") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "43") (term "1,3,0"))
                                                               (rule "mod_axiom" (formula "43") (term "1,0,1,3,0"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,3,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "12") (term "1,3,0"))
                                                               (rule "mod_axiom" (formula "12") (term "1,0,1,3,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,3,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "44") (term "1,1,1,1,0"))
                                                               (rule "mod_axiom" (formula "44") (term "1,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,1,1,1,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "53") (term "0,1,1"))
                                                               (rule "mod_axiom" (formula "53") (term "1,0,0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,1,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "40") (term "0"))
                                                               (rule "mod_axiom" (formula "40") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "51") (term "0"))
                                                               (rule "mod_axiom" (formula "51") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "33") (term "0,1,1,0,1,0"))
                                                               (rule "mod_axiom" (formula "33") (term "1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1,1,0,1,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "41") (term "1"))
                                                               (rule "mod_axiom" (formula "41") (term "1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "56") (term "0,0"))
                                                               (rule "mod_axiom" (formula "56") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "44") (term "1,1,1,0,0,0"))
                                                               (rule "mod_axiom" (formula "44") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "52") (term "1"))
                                                               (rule "mod_axiom" (formula "52") (term "1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "42") (term "1"))
                                                               (rule "mod_axiom" (formula "42") (term "1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "33") (term "1,1,1,0"))
                                                               (rule "mod_axiom" (formula "33") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,1,1,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "37") (term "1,1"))
                                                               (rule "mod_axiom" (formula "37") (term "1,0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,1,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "13") (term "1,1,1,0,0,0"))
                                                               (rule "mod_axiom" (formula "13") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "shiftLeftDef" (formula "11") (term "0,1"))
                                                               (rule "eqSymm" (formula "11"))
                                                               (rule "polySimp_elimNeg" (formula "11") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "11") (term "2,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "11") (term "2,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "11") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0"))
                                                               (rule "shiftLeftDef" (formula "45") (term "0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimNeg" (formula "45") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "45") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "45") (term "0,1,1,0,1,1,1,0,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "45") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "45") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "45") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "45") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "add_zero_right" (formula "45") (term "0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "applyEq" (formula "45") (term "1,1,1,0,0,0") (ifseqformula "11"))
                                                               (rule "shiftLeftDef" (formula "43") (term "0,1,3,0"))
                                                               (rule "polySimp_elimNeg" (formula "43") (term "1,1,0,1,3,0"))
                                                               (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,1,3,0"))
                                                               (rule "polySimp_rightDist" (formula "43") (term "1,1,0,1,3,0"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,1,3,0"))
                                                               (rule "polySimp_mulComm0" (formula "43") (term "0,1,1,0,1,3,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "43") (term "2,0,1,3,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "43") (term "2,0,1,3,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "43") (term "1,0,1,3,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,1,3,0"))
                                                               (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,1,3,0"))
                                                               (rule "add_zero_right" (formula "43") (term "0,0,0,0,1,3,0"))
                                                               (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,3,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,1,3,0"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,1,3,0"))
                                                               (rule "applyEq" (formula "43") (term "1,3,0") (ifseqformula "11"))
                                                               (rule "shiftLeftDef" (formula "12") (term "0,1,3,0"))
                                                               (rule "polySimp_elimNeg" (formula "12") (term "1,1,0,1,3,0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1,3,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,1,0,1,3,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,1,3,0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,0,1,3,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "12") (term "2,0,1,3,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "12") (term "2,0,1,3,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "12") (term "1,0,1,3,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1,3,0"))
                                                               (rule "mul_literals" (formula "12") (term "1,0,0,0,0,1,3,0"))
                                                               (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,3,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,3,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,1,3,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,1,3,0"))
                                                               (rule "applyEq" (formula "12") (term "1,3,0") (ifseqformula "11"))
                                                               (rule "shiftLeftDef" (formula "44") (term "0,1,1,1,1,0"))
                                                               (rule "polySimp_elimNeg" (formula "44") (term "1,1,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,1,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "1,1,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "0,1,1,0,1,1,1,1,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "44") (term "2,0,1,1,1,1,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "44") (term "2,0,1,1,1,1,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "44") (term "1,0,1,1,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,1,1,1,1,0"))
                                                               (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,1,1,1,1,0"))
                                                               (rule "add_zero_right" (formula "44") (term "0,0,0,0,1,1,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,1,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0,1,1,1,1,0"))
                                                               (rule "applyEq" (formula "44") (term "1,1,1,1,0") (ifseqformula "11"))
                                                               (rule "shiftLeftDef" (formula "53") (term "0,0,1,1"))
                                                               (rule "polySimp_elimNeg" (formula "53") (term "1,1,0,0,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,1,1"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "0,1,1,0,0,1,1"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "53") (term "2,0,0,1,1"))
                                                               (rule "polySimp_elimOneLeft0" (formula "53") (term "2,0,0,1,1"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "53") (term "1,0,0,1,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,1"))
                                                               (rule "mul_literals" (formula "53") (term "1,0,0,0,0,0,1,1"))
                                                               (rule "add_zero_right" (formula "53") (term "0,0,0,0,0,1,1"))
                                                               (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,1,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "53"))
                                                               (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "53") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "0,0,0,0,1,0"))
                                                               (rule "applyEq" (formula "53") (term "0,1,0") (ifseqformula "11"))
                                                               (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                               (rule "shiftLeftDef" (formula "40") (term "0,0"))
                                                               (rule "polySimp_elimNeg" (formula "40") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "40") (term "2,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "40") (term "2,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "40") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "40") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "40") (term "0") (ifseqformula "11"))
                                                               (rule "shiftLeftDef" (formula "51") (term "0,0"))
                                                               (rule "polySimp_elimNeg" (formula "51") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "0,1,1,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "51") (term "2,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "51") (term "2,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "51") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "51") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "51") (term "0") (ifseqformula "11"))
                                                               (rule "shiftLeftDef" (formula "33") (term "0,0,1,1,0,1,0"))
                                                               (rule "polySimp_elimNeg" (formula "33") (term "1,1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "0,1,1,0,0,1,1,0,1,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "33") (term "2,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "33") (term "2,0,0,1,1,0,1,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "33") (term "1,0,0,1,1,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0,1,1,0,1,0"))
                                                               (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0,1,1,0,1,0"))
                                                               (rule "add_zero_right" (formula "33") (term "0,0,0,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,1,1,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,0,1,1,0,1,0"))
                                                               (rule "applyEq" (formula "33") (term "0,1,1,0,1,0") (ifseqformula "11"))
                                                               (rule "shiftLeftDef" (formula "41") (term "0,1"))
                                                               (rule "polySimp_elimNeg" (formula "41") (term "1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "41") (term "1,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0,1"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "41") (term "2,0,1"))
                                                               (rule "polySimp_elimOneLeft0" (formula "41") (term "2,0,1"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "41") (term "1,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,1"))
                                                               (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,1"))
                                                               (rule "add_zero_right" (formula "41") (term "0,0,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "41"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "41") (term "0") (ifseqformula "11"))
                                                               (rule "inEqSimp_commuteLeq" (formula "41"))
                                                               (rule "shiftLeftDef" (formula "56") (term "0,0,0"))
                                                               (rule "polySimp_elimNeg" (formula "56") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "0,1,1,0,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "56") (term "2,0,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "56") (term "2,0,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "56") (term "1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,0"))
                                                               (rule "times_zero_1" (formula "56") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "56") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "0,0,0,0,0"))
                                                               (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "11"))
                                                               (rule "shiftLeftDef" (formula "44") (term "0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimNeg" (formula "44") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "0,1,1,0,1,1,1,0,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "44") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "44") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "44") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "44") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "add_zero_right" (formula "44") (term "0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "applyEq" (formula "44") (term "1,1,1,0,0,0") (ifseqformula "11"))
                                                               (rule "shiftLeftDef" (formula "52") (term "0,1"))
                                                               (rule "polySimp_elimNeg" (formula "52") (term "1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "52") (term "1,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "0,1,1,0,1"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "52") (term "2,0,1"))
                                                               (rule "polySimp_elimOneLeft0" (formula "52") (term "2,0,1"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "52") (term "1,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,1"))
                                                               (rule "mul_literals" (formula "52") (term "1,0,0,0,0,1"))
                                                               (rule "add_zero_right" (formula "52") (term "0,0,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "52"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "52") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "52") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "52") (term "0") (ifseqformula "11"))
                                                               (rule "inEqSimp_commuteLeq" (formula "52"))
                                                               (rule "shiftLeftDef" (formula "42") (term "0,1"))
                                                               (rule "polySimp_elimNeg" (formula "42") (term "1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "42") (term "1,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "0,1,1,0,1"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "42") (term "2,0,1"))
                                                               (rule "polySimp_elimOneLeft0" (formula "42") (term "2,0,1"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "42") (term "1,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,1"))
                                                               (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1"))
                                                               (rule "add_zero_right" (formula "42") (term "0,0,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "42"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "42") (term "0") (ifseqformula "11"))
                                                               (rule "inEqSimp_commuteLeq" (formula "42"))
                                                               (rule "shiftLeftDef" (formula "33") (term "0,1,1,1,0"))
                                                               (rule "polySimp_elimNeg" (formula "33") (term "1,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "33") (term "1,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "0,1,1,0,1,1,1,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "33") (term "2,0,1,1,1,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "33") (term "2,0,1,1,1,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "33") (term "1,0,1,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,1,1,1,0"))
                                                               (rule "mul_literals" (formula "33") (term "1,0,0,0,0,1,1,1,0"))
                                                               (rule "add_zero_right" (formula "33") (term "0,0,0,0,1,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,1,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,1,1,1,0"))
                                                               (rule "applyEq" (formula "33") (term "1,1,1,0") (ifseqformula "11"))
                                                               (rule "shiftLeftDef" (formula "37") (term "0,1,1"))
                                                               (rule "polySimp_homoEq" (formula "37"))
                                                               (rule "polySimp_elimNeg" (formula "37") (term "1,1,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "1,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "0,1,1,0,1,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "37") (term "2,0,1,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "37") (term "2,0,1,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "37") (term "1,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0"))
                                                               (rule "mul_literals" (formula "37") (term "1,0,0,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "37") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0"))
                                                               (rule "polySimp_sepPosMonomial" (formula "37"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                                               (rule "mul_literals" (formula "37") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0"))
                                                               (rule "polySimp_homoEq" (formula "37"))
                                                               (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                               (rule "applyEq" (formula "37") (term "0,1,0,0") (ifseqformula "11"))
                                                               (rule "polySimp_sepPosMonomial" (formula "37"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "1"))
                                                               (rule "mul_literals" (formula "37") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                                               (rule "shiftLeftDef" (formula "13") (term "0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimNeg" (formula "13") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,0,1,1,1,0,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "13") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "13") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "13") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "13") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "applyEq" (formula "13") (term "1,1,1,0,0,0") (ifseqformula "11"))
                                                               (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "53"))
                                                               (rule "polySimp_mulComm0" (formula "58") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "58") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                                               (rule "polySimp_mulComm0" (formula "58") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "58") (term "1"))
                                                               (rule "mul_literals" (formula "58") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "58") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "58") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "51"))
                                                               (rule "mul_literals" (formula "40") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                                               (rule "add_literals" (formula "40") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                               (rule "mul_literals" (formula "40") (term "0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "53"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "52") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "52") (term "0"))
                                                               (rule "add_literals" (formula "52") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "52") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                               (rule "mul_literals" (formula "52") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "40"))
                                                               (rule "leq_literals" (formula "52") (term "0"))
                                                                (builtin "One Step Simplification" (formula "52"))
                                                               (rule "true_left" (formula "52"))
                                                               (rule "inEqSimp_exactShadow1" (formula "56") (ifseqformula "51"))
                                                               (rule "greater_literals" (formula "56") (term "0"))
                                                                (builtin "One Step Simplification" (formula "56"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "0,0"))
                                                               (rule "mul_literals" (formula "56") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "56") (term "0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "56") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "56") (term "0,0,0"))
                                                               (rule "add_literals" (formula "56") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "56") (term "0,0"))
                                                               (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "56") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "56"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "1"))
                                                               (rule "mul_literals" (formula "56") (term "0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "60"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "52") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                                               (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                               (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "30"))
                                                                (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "15")))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "translateJavaSubInt" (formula "35") (term "0,2,1"))
                                                               (rule "translateJavaSubInt" (formula "35") (term "0,2,0"))
                                                               (rule "eqSymm" (formula "32"))
                                                               (rule "eqSymm" (formula "35"))
                                                               (rule "translateJavaMulInt" (formula "32") (term "0"))
                                                               (rule "polySimp_elimSub" (formula "35") (term "0,2,0"))
                                                               (rule "mul_literals" (formula "35") (term "1,0,2,0"))
                                                               (rule "eqSymm" (formula "35"))
                                                               (rule "polySimp_elimSub" (formula "35") (term "0,2,0"))
                                                               (rule "mul_literals" (formula "35") (term "1,0,2,0"))
                                                               (rule "eqSymm" (formula "35"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0,2,0"))
                                                               (rule "eqSymm" (formula "35"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0,2,0"))
                                                               (rule "eqSymm" (formula "35"))
                                                               (rule "inEqSimp_commuteLeq" (formula "30"))
                                                               (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "33"))
                                                               (rule "inEqSimp_commuteGeq" (formula "48"))
                                                               (rule "applyEq" (formula "51") (term "1,0,1,0") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "13") (term "1,0,1,0") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "70") (term "0") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "39") (term "1,1,0,1,0") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "59") (term "1,1") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "62") (term "0") (ifseqformula "32"))
                                                               (rule "inEqSimp_homoInEq1" (formula "62"))
                                                               (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                               (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "33"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "62"))
                                                               (rule "polySimp_mulComm0" (formula "62") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "62") (term "1"))
                                                               (rule "mul_literals" (formula "62") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "62") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "62") (term "1,1"))
                                                               (rule "newSym_eq" (formula "32") (inst "newSymDef=mul(int::final(self,
               de.wiesler.Classifier::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                                               (rule "times_zero_1" (formula "32") (term "1,1"))
                                                               (rule "add_zero_right" (formula "32") (term "1"))
                                                               (rule "applyEq" (formula "12") (term "1,3,0") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "50") (term "1,3,0") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "13") (term "1,1,1,0,0,0") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "51") (term "1,1,1,1,0") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "48") (term "1") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "49") (term "0") (ifseqformula "32"))
                                                               (rule "inEqSimp_commuteLeq" (formula "49"))
                                                               (rule "applyEq" (formula "51") (term "1,1,1,0,0,0") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "40") (term "1,1,1,0") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "47") (term "0") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "36") (term "1,0,2,0") (ifseqformula "32"))
                                                               (rule "eqSymm" (formula "36"))
                                                               (rule "applyEq" (formula "52") (term "1,1,1,0,0,0") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "59") (term "1") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "35") (term "3,0") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                                               (rule "eqSymm" (formula "33"))
                                                               (rule "applyEq" (formula "58") (term "0") (ifseqformula "32"))
                                                               (rule "inEqSimp_homoInEq0" (formula "58"))
                                                               (rule "polySimp_addComm1" (formula "58") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "58") (term "0,0"))
                                                               (rule "applyEq" (formula "46") (term "0,0,1,1") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "40") (term "1,1,0,1,0") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "30") (term "0") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "63") (term "1,1") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "60") (term "1,1") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "36") (term "1,0,2,0") (ifseqformula "32"))
                                                               (rule "eqSymm" (formula "36"))
                                                               (rule "applyEq" (formula "63") (term "0,0") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "62") (term "0,0,1,1") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "65") (term "0,1") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "31") (term "0") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "1") (term "1,0,1") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "11") (term "1") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "1") (term "0,0,0,0,2,0,0,0") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "67") (term "0,1,0,1") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "58") (term "0,1,0,0") (ifseqformula "33"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                                               (rule "polySimp_mulComm0" (formula "58") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "58") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "58") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "58") (term "0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "58") (term "1,0,1"))
                                                               (rule "inEqSimp_subsumption6" (formula "30") (ifseqformula "47"))
                                                               (rule "mul_literals" (formula "30") (term "1,1,0"))
                                                               (rule "greater_literals" (formula "30") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "leq_literals" (formula "30") (term "0"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "true_left" (formula "30"))
                                                               (rule "elimGcdLeq_antec" (formula "30") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(4(6(#)))"))
                                                               (rule "leq_literals" (formula "30") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                                                               (rule "neg_literal" (formula "30") (term "0,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "30") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                                                               (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "30") (term "0,0"))
                                                               (rule "qeq_literals" (formula "30") (term "0"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "62"))
                                                               (rule "mul_literals" (formula "44") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                               (rule "add_literals" (formula "44") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                               (rule "mul_literals" (formula "44") (term "1"))
                                                               (rule "inEqSimp_subsumption6" (formula "44") (ifseqformula "47"))
                                                               (rule "greater_literals" (formula "44") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "44"))
                                                               (rule "mul_literals" (formula "44") (term "1,0"))
                                                               (rule "leq_literals" (formula "44") (term "0"))
                                                                (builtin "One Step Simplification" (formula "44"))
                                                               (rule "true_left" (formula "30"))
                                                               (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "64"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "0,0"))
                                                               (rule "mul_literals" (formula "44") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "44") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                               (rule "add_literals" (formula "44") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                               (rule "mul_literals" (formula "44") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "64"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "56") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "56") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "56") (term "0,0"))
                                                               (rule "add_literals" (formula "56") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "56"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "1,1"))
                                                               (rule "mul_literals" (formula "56") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "56") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "59"))
                                                               (rule "polySimp_mulComm0" (formula "58") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "58") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "58") (term "0"))
                                                               (rule "add_literals" (formula "58") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "58") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                                               (rule "mul_literals" (formula "58") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "58") (ifseqformula "45"))
                                                               (rule "leq_literals" (formula "58") (term "0"))
                                                                (builtin "One Step Simplification" (formula "58"))
                                                               (rule "true_left" (formula "58"))
                                                               (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "65"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "47") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "67"))
                                                               (rule "polySimp_mulComm0" (formula "65") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "65") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "65") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "65") (term "0,0"))
                                                               (rule "add_literals" (formula "65") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "65") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "65") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "65"))
                                                               (rule "mul_literals" (formula "65") (term "1"))
                                                               (rule "inEqSimp_exactShadow1" (formula "62") (ifseqformula "66"))
                                                               (rule "mul_literals" (formula "62") (term "1,0,1"))
                                                               (rule "greater_literals" (formula "62") (term "0"))
                                                                (builtin "One Step Simplification" (formula "62"))
                                                               (rule "polySimp_rightDist" (formula "62") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "62") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "62") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                               (rule "add_literals" (formula "62") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "62"))
                                                               (rule "mul_literals" (formula "62") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "62") (ifseqformula "43"))
                                                               (rule "leq_literals" (formula "62") (term "0"))
                                                                (builtin "One Step Simplification" (formula "62"))
                                                               (rule "true_left" (formula "62"))
                                                               (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "67"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "59") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "59") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "59") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "59"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "59") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "59") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "59") (term "0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "59") (term "1,0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "60"))
                                                               (rule "polySimp_mulComm0" (formula "65") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "65") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "65"))
                                                               (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "65") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "57") (ifseqformula "63"))
                                                               (rule "polySimp_rightDist" (formula "57") (term "0,0"))
                                                               (rule "mul_literals" (formula "57") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "57") (term "0,0"))
                                                               (rule "add_literals" (formula "57") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "57") (term "0"))
                                                               (rule "add_literals" (formula "57") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "57") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                               (rule "mul_literals" (formula "57") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "57") (ifseqformula "45"))
                                                               (rule "leq_literals" (formula "57") (term "0"))
                                                                (builtin "One Step Simplification" (formula "57"))
                                                               (rule "true_left" (formula "57"))
                                                               (rule "expand_moduloInteger" (formula "11") (term "0"))
                                                               (rule "replace_int_RANGE" (formula "11") (term "1,1,0"))
                                                               (rule "replace_int_MIN" (formula "11") (term "0,0"))
                                                               (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0"))
                                                               (rule "polySimp_homoEq" (formula "11"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                                               (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "42"))
                                                               (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                                                               (rule "add_literals" (formula "11") (term "1,0"))
                                                               (rule "times_zero_1" (formula "11") (term "0"))
                                                                (builtin "One Step Simplification" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "nnf_imp2or" (formula "12") (term "0"))
                                                               (rule "nnf_imp2or" (formula "50") (term "0"))
                                                               (rule "nnf_imp2or" (formula "49") (term "0"))
                                                               (rule "nnf_imp2or" (formula "37") (term "0"))
                                                               (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                                               (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                                               (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                                               (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                                                               (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                                                               (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
                                                               (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "12") (term "1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "12") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "12") (term "1,0,0,1,1,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "12") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "12") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "12") (term "1,0,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0"))
                                                               (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "50") (term "1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "50") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "50") (term "1,0,0,1,1,0,0"))
                                                               (rule "add_literals" (formula "50") (term "0,0,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "50") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "50") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "50") (term "1,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "50") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "50") (term "1,0,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "50") (term "0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0"))
                                                               (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "49") (term "1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "49") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "49") (term "1,0,0,1,1,0,0"))
                                                               (rule "add_literals" (formula "49") (term "0,0,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "49") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "49") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "49") (term "1,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "49") (term "1,0,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "49") (term "0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0"))
                                                               (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                                               (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,1,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "1,1,0,0,0,0"))
                                                               (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "48") (term "0"))
                                                               (rule "wellFormedAnonEQ" (formula "48") (term "1,0") (ifseqformula "36"))
                                                               (rule "replace_known_right" (formula "48") (term "0,0,0") (ifseqformula "69"))
                                                                (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "15")) (ifInst ""  (formula "35")) (ifInst ""  (formula "49")))
                                                               (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "34") (inst "i=i_1") (inst "i_0=i_0"))
                                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "70")) (ifInst ""  (formula "40")))
                                                               (rule "expand_inInt" (formula "34") (term "1,0,0,1"))
                                                               (rule "expand_inInt" (formula "34") (term "1,0,0,1,0"))
                                                               (rule "replace_int_MAX" (formula "34") (term "1,0,1,0,0,1"))
                                                               (rule "replace_int_MIN" (formula "34") (term "0,1,1,0,0,1"))
                                                               (rule "replace_int_MIN" (formula "34") (term "0,1,1,0,0,1,0"))
                                                               (rule "replace_int_MAX" (formula "34") (term "1,0,1,0,0,1,0"))
                                                               (rule "andLeft" (formula "34"))
                                                               (rule "andLeft" (formula "34"))
                                                               (rule "andLeft" (formula "34"))
                                                               (rule "andLeft" (formula "34"))
                                                               (rule "andLeft" (formula "34"))
                                                               (rule "andLeft" (formula "35"))
                                                               (rule "andLeft" (formula "34"))
                                                               (rule "andLeft" (formula "34"))
                                                               (rule "notLeft" (formula "34"))
                                                               (rule "eqSymm" (formula "41") (term "1,0"))
                                                               (rule "translateJavaSubInt" (formula "39") (term "3,0"))
                                                               (rule "translateJavaShiftLeftInt" (formula "35") (term "1"))
                                                               (rule "translateJavaSubInt" (formula "41") (term "0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "39") (term "3,0"))
                                                               (rule "mul_literals" (formula "39") (term "1,3,0"))
                                                               (rule "polySimp_elimSub" (formula "41") (term "0,2,0,1,0"))
                                                               (rule "mul_literals" (formula "41") (term "1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "39") (term "3,0"))
                                                               (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "40") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "41") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "40") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "40") (term "0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "38"))
                                                               (rule "inEqSimp_commuteLeq" (formula "37"))
                                                               (rule "inEqSimp_commuteLeq" (formula "36"))
                                                               (rule "inEqSimp_commuteLeq" (formula "34"))
                                                               (rule "applyEq" (formula "35") (term "0") (ifseqformula "29"))
                                                               (rule "applyEq" (formula "35") (term "1") (ifseqformula "29"))
                                                               (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "31"))
                                                               (rule "inEqSimp_commuteGeq" (formula "35"))
                                                               (rule "applyEq" (formula "34") (term "0") (ifseqformula "29"))
                                                               (rule "eqSymm" (formula "34"))
                                                               (rule "applyEq" (formula "72") (term "0") (ifseqformula "31"))
                                                               (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "31"))
                                                               (rule "applyEq" (formula "36") (term "1,3,0") (ifseqformula "29"))
                                                               (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "31"))
                                                               (rule "applyEq" (formula "37") (term "0,1,0,0,1,0,0,0") (ifseqformula "29"))
                                                               (rule "applyEq" (formula "38") (term "0,1,0,0,1,0,0,0") (ifseqformula "29"))
                                                               (rule "applyEq" (formula "37") (term "0,1,0,0,1,1,0") (ifseqformula "29"))
                                                               (rule "applyEq" (formula "35") (term "0") (ifseqformula "29"))
                                                               (rule "inEqSimp_commuteLeq" (formula "35"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,1,0"))
                                                               (rule "mul_literals" (formula "36") (term "0,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "1,1,1,1,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "34") (term "0"))
                                                               (rule "mod_axiom" (formula "34") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                                               (rule "shiftLeftDef" (formula "34") (term "0,0"))
                                                               (rule "polySimp_elimNeg" (formula "34") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "0,1,1,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "34") (term "2,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "34") (term "2,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "34") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0"))
                                                               (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "52") (term "0") (inst "i=i_1") (inst "j=j"))
                                                                (builtin "One Step Simplification" (formula "52"))
                                                               (rule "expand_inInt" (formula "52") (term "1,0,0"))
                                                               (rule "expand_inInt" (formula "52") (term "1,0,0,1,0"))
                                                               (rule "replace_int_MAX" (formula "52") (term "1,0,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "52") (term "0,1,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "52") (term "0,1,1,0,0,1,0"))
                                                               (rule "replace_int_MAX" (formula "52") (term "1,0,1,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "52") (term "1,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "52") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "52") (term "1,1,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "52") (term "0,1,1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "52") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,0"))
                                                               (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "11") (term "0"))
                                                               (rule "wellFormedAnon" (formula "11") (term "1,0"))
                                                               (rule "wellFormedAnonEQ" (formula "11") (term "0,1,0") (ifseqformula "40"))
                                                               (rule "replace_known_left" (formula "11") (term "0,1") (ifseqformula "12"))
                                                                (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "73")) (ifInst ""  (formula "16")) (ifInst ""  (formula "39")) (ifInst ""  (formula "14")))
                                                               (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "12") (term "0") (inst "i=i_1") (inst "j=j"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "expand_inInt" (formula "12") (term "1,0,0"))
                                                               (rule "expand_inInt" (formula "12") (term "1,0,0,1,0"))
                                                               (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0"))
                                                               (rule "replace_int_MAX" (formula "12") (term "1,0,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0,1,0"))
                                                               (rule "replace_int_MAX" (formula "12") (term "1,0,1,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "12") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "12") (term "1,1,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "33") (term "0") (inst "i=i_1") (inst "j=j"))
                                                                (builtin "One Step Simplification" (formula "33"))
                                                               (rule "expand_inInt" (formula "33") (term "1,0,0,1,0"))
                                                               (rule "expand_inInt" (formula "33") (term "1,0,0"))
                                                               (rule "replace_int_MAX" (formula "33") (term "1,0,1,0,0,1,0"))
                                                               (rule "replace_int_MIN" (formula "33") (term "0,1,1,0,0,1,0"))
                                                               (rule "replace_int_MIN" (formula "33") (term "0,1,1,0,0"))
                                                               (rule "replace_int_MAX" (formula "33") (term "1,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "33") (term "1,1,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "33") (term "1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0"))
                                                               (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "10"))
                                                               (rule "andLeft" (formula "10"))
                                                               (rule "notLeft" (formula "11"))
                                                               (rule "notLeft" (formula "10"))
                                                               (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "12") (term "1,0,2,0,1,0"))
                                                               (rule "translateJavaSubInt" (formula "12") (term "0,1,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "12") (term "1,0,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "12") (term "1,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "12") (term "0,1,1,1,0,2,0,1,0"))
                                                               (rule "mul_literals" (formula "12") (term "1,0,1,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "12") (term "0,1,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "12") (term "1,1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "12") (term "0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "12") (term "1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "0,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "12") (term "0,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "12") (term "1,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0,2,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0,0,2,0,1,0"))
                                                               (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "54") (term "1,0,2,0,1,0"))
                                                               (rule "translateJavaSubInt" (formula "54") (term "0,1,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "54") (term "1,0,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "54") (term "1,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "54") (term "0,1,1,1,0,2,0,1,0"))
                                                               (rule "mul_literals" (formula "54") (term "1,0,1,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "54") (term "0,1,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "0,0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "54") (term "1,1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "54") (term "0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "54") (term "1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "0,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "0,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "54") (term "1,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "54") (term "0,2,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "54") (term "0,0,2,0,1,0"))
                                                               (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "53") (term "0,1,1,0"))
                                                               (rule "translateJavaSubInt" (formula "53") (term "0,1,1,0,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "53") (term "1,0,0,0,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "53") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "53") (term "0,1,1,0,1,1,0"))
                                                               (rule "mul_literals" (formula "53") (term "1,0,1,1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "53") (term "0,1,0,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "0,0,1,0,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "53") (term "1,0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "53") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "53") (term "1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "0,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "53") (term "0,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "53") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "0,1,0,0,1,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "53") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "0,0,1,0,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "53") (term "0,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "53") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "0,0,1,1,1,0"))
                                                               (rule "mul_literals" (formula "53") (term "0,0,0,1,1,1,0"))
                                                               (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "53") (term "0,0,1,0"))
                                                               (rule "translateJavaSubInt" (formula "53") (term "0,1,1,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "53") (term "1,0,0,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "53") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "53") (term "0,1,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "53") (term "1,0,1,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "53") (term "0,1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "0,0,1,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "53") (term "1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "53") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "0,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "53") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "53") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "53") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "0,0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "0,1,0,1,0"))
                                                               (rule "mul_literals" (formula "53") (term "0,0,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "53") (term "1,0,1,0,1,0"))
                                                               (rule "nnf_imp2or" (formula "37") (term "0"))
                                                               (rule "nnf_imp2or" (formula "36") (term "0"))
                                                               (rule "expand_moduloInteger" (formula "34") (term "0"))
                                                               (rule "replace_int_HALFRANGE" (formula "34") (term "0,0,1,0"))
                                                               (rule "replace_int_MIN" (formula "34") (term "0,0"))
                                                               (rule "replace_int_RANGE" (formula "34") (term "1,1,0"))
                                                               (rule "polySimp_homoEq" (formula "34"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                               (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                               (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "44"))
                                                               (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
                                                               (rule "add_literals" (formula "34") (term "1,0"))
                                                               (rule "times_zero_1" (formula "34") (term "0"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "true_left" (formula "34"))
                                                               (rule "nnf_imp2or" (formula "51") (term "0"))
                                                               (rule "commute_and" (formula "39") (term "1,0"))
                                                               (rule "commute_or" (formula "40") (term "0,0,0"))
                                                               (rule "nnf_imp2or" (formula "11") (term "0"))
                                                               (rule "commute_or" (formula "8") (term "0,0,0"))
                                                               (rule "div_axiom" (formula "43") (term "0,1,1,1,1,1,0,0") (inst "quotient=quotient_0"))
                                                               (rule "equal_literals" (formula "43") (term "0"))
                                                                (builtin "One Step Simplification" (formula "43"))
                                                               (rule "mul_literals" (formula "43") (term "1,1,1,1"))
                                                               (rule "qeq_literals" (formula "43") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "43"))
                                                               (rule "andLeft" (formula "43"))
                                                               (rule "andLeft" (formula "43"))
                                                               (rule "polySimp_addComm1" (formula "45") (term "1"))
                                                               (rule "add_literals" (formula "45") (term "0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "44"))
                                                               (rule "inEqSimp_homoInEq1" (formula "45"))
                                                               (rule "polySimp_mulLiterals" (formula "45") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "45") (term "0"))
                                                               (rule "applyEq" (formula "46") (term "0,0,0,1,0,0") (ifseqformula "43"))
                                                               (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "46") (term "0,0,1,0,0"))
                                                               (rule "applyEq" (formula "46") (term "0,1,1,2,1,0,0") (ifseqformula "43"))
                                                               (rule "polySimp_addComm0" (formula "46") (term "1,2,1,0,0"))
                                                               (rule "applyEq" (formula "46") (term "0,1,1,1,1,1,0,0") (ifseqformula "43"))
                                                               (rule "polySimp_addComm0" (formula "46") (term "1,1,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "45"))
                                                               (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "45") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                                               (rule "mul_literals" (formula "45") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0,0"))
                                                               (rule "mul_literals" (formula "46") (term "0,1,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,1,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "46") (term "0,1,0,0") (ifseqformula "44"))
                                                               (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "46") (term "0,1,0,0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "46") (term "0,0,0,0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "46") (term "1,1,0,0,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "46") (term "1,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
                                                               (rule "leq_literals" (formula "46") (term "0,0,1,0,0"))
                                                                (builtin "One Step Simplification" (formula "46"))
                                                               (rule "mod_axiom" (formula "46") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,0"))
                                                               (rule "polySimp_homoEq" (formula "46"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "46") (term "0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                                                               (rule "add_literals" (formula "46") (term "0,0,0,0"))
                                                               (rule "add_zero_left" (formula "46") (term "0,0,0"))
                                                               (rule "polySimp_sepPosMonomial" (formula "46"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "0,1"))
                                                               (rule "newSym_eq" (formula "46") (inst "l=l_1") (inst "newSymDef=add(mul(l_0, Z(0(#))),
    mul(pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                int::final(de.wiesler.Tree::final(self,
                                                  de.wiesler.Classifier::$tree),
                           de.wiesler.Tree::$log_buckets))),
        Z(0(#))))"))
                                                               (rule "times_zero_1" (formula "46") (term "1,1,1"))
                                                               (rule "times_zero_1" (formula "46") (term "0,1,1"))
                                                               (rule "add_zero_left" (formula "46") (term "1,1"))
                                                               (rule "add_zero_right" (formula "46") (term "1"))
                                                               (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "46"))
                                                               (rule "polySimp_homoEq" (formula "47"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                               (rule "polySimp_sepPosMonomial" (formula "47"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "0,1"))
                                                               (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "47"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                                               (rule "polyDiv_pullOut" (formula "46") (term "0") (inst "polyDivCoeff=l_1"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,2,0"))
                                                               (rule "equal_literals" (formula "46") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "46"))
                                                               (rule "polySimp_homoEq" (formula "46"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "46") (term "1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "46") (term "0,1,1,1,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,1,1,1,0"))
                                                               (rule "add_literals" (formula "46") (term "1,1,0,0,1,1,1,0"))
                                                               (rule "times_zero_1" (formula "46") (term "1,0,0,1,1,1,0"))
                                                               (rule "add_literals" (formula "46") (term "0,0,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "46") (term "0,0"))
                                                               (rule "add_literals" (formula "46") (term "1,0,0"))
                                                               (rule "times_zero_1" (formula "46") (term "0,0"))
                                                               (rule "add_zero_left" (formula "46") (term "0"))
                                                               (rule "polySimp_invertEq" (formula "46"))
                                                               (rule "mul_literals" (formula "46") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "42"))
                                                               (rule "polySimp_mulAssoc" (formula "44") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "44") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0"))
                                                               (rule "neg_literal" (formula "44") (term "0,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "44") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "44"))
                                                               (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "44") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "44") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
                                                               (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "44") (term "0,0"))
                                                               (rule "qeq_literals" (formula "44") (term "0"))
                                                                (builtin "One Step Simplification" (formula "44"))
                                                               (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "46"))
                                                               (rule "mul_literals" (formula "41") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                               (rule "add_literals" (formula "41") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                                               (rule "mul_literals" (formula "41") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "41") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                                               (rule "leq_literals" (formula "41") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "41"))
                                                               (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "41") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                               (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "41") (term "0,0"))
                                                               (rule "leq_literals" (formula "41") (term "0"))
                                                                (builtin "One Step Simplification" (formula "41"))
                                                               (rule "inEqSimp_antiSymm" (formula "41") (ifseqformula "45"))
                                                               (rule "applyEqRigid" (formula "42") (term "0") (ifseqformula "41"))
                                                               (rule "qeq_literals" (formula "42"))
                                                               (rule "true_left" (formula "42"))
                                                               (rule "applyEq" (formula "45") (term "0") (ifseqformula "41"))
                                                               (rule "leq_literals" (formula "45"))
                                                               (rule "true_left" (formula "45"))
                                                               (rule "applyEqRigid" (formula "45") (term "0,1") (ifseqformula "41"))
                                                               (rule "mul_literals" (formula "45") (term "1"))
                                                               (rule "applyEq" (formula "46") (term "0,1,1") (ifseqformula "41"))
                                                               (rule "mul_literals" (formula "46") (term "1,1"))
                                                               (rule "add_literals" (formula "46") (term "1"))
                                                               (rule "applyEqRigid" (formula "48") (term "0,0,1,0") (ifseqformula "41"))
                                                               (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                               (rule "add_zero_left" (formula "48") (term "1,0"))
                                                               (rule "applyEq" (formula "44") (term "1") (ifseqformula "41"))
                                                               (rule "inEqSimp_subsumption0" (formula "46") (ifseqformula "43"))
                                                               (rule "leq_literals" (formula "46") (term "0"))
                                                                (builtin "One Step Simplification" (formula "46"))
                                                               (rule "true_left" (formula "46"))
                                                               (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "42"))
                                                               (rule "leq_literals" (formula "45") (term "0"))
                                                                (builtin "One Step Simplification" (formula "45"))
                                                               (rule "true_left" (formula "45"))
                                                               (rule "jdiv_axiom" (formula "72") (term "1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "72") (term "0,0,2,1"))
                                                               (rule "eqSymm" (formula "72"))
                                                               (rule "inEqSimp_subsumption6" (formula "72") (term "0,0") (ifseqformula "49"))
                                                               (rule "mul_literals" (formula "72") (term "1,1,0,0,0"))
                                                               (rule "greater_literals" (formula "72") (term "0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "72"))
                                                               (rule "leq_literals" (formula "72") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "72"))
                                                               (rule "eqSymm" (formula "72"))
                                                               (rule "applyEqRigid" (formula "70") (term "1") (ifseqformula "72"))
                                                               (rule "applyEq" (formula "68") (term "0") (ifseqformula "72"))
                                                               (rule "applyEqRigid" (formula "62") (term "0") (ifseqformula "72"))
                                                               (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "72"))
                                                               (rule "applyEqRigid" (formula "63") (term "0,1,1") (ifseqformula "72"))
                                                               (rule "applyEq" (formula "48") (term "0,1,1") (ifseqformula "72"))
                                                               (rule "applyEqRigid" (formula "67") (term "0,1,1") (ifseqformula "72"))
                                                               (rule "applyEqRigid" (formula "73") (term "1,0,1") (ifseqformula "72"))
                                                               (rule "applyEq" (formula "1") (term "0,0,0,2,0,0,0") (ifseqformula "72"))
                                                               (rule "polyDiv_pullOut" (formula "1") (term "0,0,0,2,0,0,0") (inst "polyDivCoeff=l_0"))
                                                               (rule "equal_literals" (formula "1") (term "0,0,0,0,2,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0,2,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,0,0,2,0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "1,0,0,0,0,0,2,0,0,0"))
                                                               (rule "times_zero_1" (formula "1") (term "0,0,0,0,0,2,0,0,0"))
                                                               (rule "div_literals" (formula "1") (term "0,0,0,0,2,0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0,0,2,0,0,0"))
                                                               (rule "polyDiv_pullOut" (formula "73") (term "1,0,1") (inst "polyDivCoeff=l_0"))
                                                               (rule "equal_literals" (formula "73") (term "0,1,0,1"))
                                                                (builtin "One Step Simplification" (formula "73"))
                                                               (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,1,0,1"))
                                                               (rule "polySimp_pullOutFactor0" (formula "73") (term "0,0,1,0,1"))
                                                               (rule "add_literals" (formula "73") (term "1,0,0,1,0,1"))
                                                               (rule "times_zero_1" (formula "73") (term "0,0,1,0,1"))
                                                               (rule "div_literals" (formula "73") (term "0,1,0,1"))
                                                               (rule "add_zero_left" (formula "73") (term "1,0,1"))
                                                               (rule "polyDiv_pullOut" (formula "67") (term "0,1,1") (inst "polyDivCoeff=l_0"))
                                                               (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,2,0,1,1"))
                                                               (rule "equal_literals" (formula "67") (term "0,0,1,1"))
                                                                (builtin "One Step Simplification" (formula "67"))
                                                               (rule "polySimp_pullOutFactor0" (formula "67") (term "0,0,0,1,1"))
                                                               (rule "add_literals" (formula "67") (term "1,0,0,0,1,1"))
                                                               (rule "times_zero_1" (formula "67") (term "0,0,0,1,1"))
                                                               (rule "div_literals" (formula "67") (term "0,0,1,1"))
                                                               (rule "add_zero_left" (formula "67") (term "0,1,1"))
                                                               (rule "polyDiv_pullOut" (formula "48") (term "0,1,1") (inst "polyDivCoeff=l_0"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,2,0,1,1"))
                                                               (rule "equal_literals" (formula "48") (term "0,0,1,1"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "polySimp_pullOutFactor0" (formula "48") (term "0,0,0,1,1"))
                                                               (rule "add_literals" (formula "48") (term "1,0,0,0,1,1"))
                                                               (rule "times_zero_1" (formula "48") (term "0,0,0,1,1"))
                                                               (rule "div_literals" (formula "48") (term "0,0,1,1"))
                                                               (rule "add_zero_left" (formula "48") (term "0,1,1"))
                                                               (rule "polyDiv_pullOut" (formula "63") (term "0,1,1") (inst "polyDivCoeff=l_0"))
                                                               (rule "equal_literals" (formula "63") (term "0,0,1,1"))
                                                                (builtin "One Step Simplification" (formula "63"))
                                                               (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0,1,1"))
                                                               (rule "polySimp_pullOutFactor0" (formula "63") (term "0,0,0,1,1"))
                                                               (rule "add_literals" (formula "63") (term "1,0,0,0,1,1"))
                                                               (rule "times_zero_1" (formula "63") (term "0,0,0,1,1"))
                                                               (rule "div_literals" (formula "63") (term "0,0,1,1"))
                                                               (rule "add_zero_left" (formula "63") (term "0,1,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "63") (term "1"))
                                                               (rule "add_literals" (formula "63") (term "1,1,1"))
                                                               (rule "times_zero_1" (formula "63") (term "1,1"))
                                                               (rule "add_literals" (formula "63") (term "1"))
                                                               (rule "polyDiv_pullOut" (formula "47") (term "0") (inst "polyDivCoeff=l_0"))
                                                               (rule "equal_literals" (formula "47") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "47"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0" (formula "47") (term "0,0,0"))
                                                               (rule "add_literals" (formula "47") (term "1,0,0,0"))
                                                               (rule "times_zero_1" (formula "47") (term "0,0,0"))
                                                               (rule "div_literals" (formula "47") (term "0,0"))
                                                               (rule "add_zero_left" (formula "47") (term "0"))
                                                               (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "49"))
                                                               (rule "leq_literals" (formula "47") (term "0"))
                                                                (builtin "One Step Simplification" (formula "47"))
                                                               (rule "true_left" (formula "47"))
                                                               (rule "polyDiv_pullOut" (formula "61") (term "0") (inst "polyDivCoeff=l_0"))
                                                               (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,2,0"))
                                                               (rule "equal_literals" (formula "61") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "61"))
                                                               (rule "polySimp_pullOutFactor0" (formula "61") (term "0,0,0"))
                                                               (rule "add_literals" (formula "61") (term "1,0,0,0"))
                                                               (rule "times_zero_1" (formula "61") (term "0,0,0"))
                                                               (rule "div_literals" (formula "61") (term "0,0"))
                                                               (rule "add_zero_left" (formula "61") (term "0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "61"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "61") (term "0"))
                                                               (rule "add_literals" (formula "61") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "61") (term "1,0"))
                                                               (rule "add_zero_right" (formula "61") (term "0"))
                                                               (rule "leq_literals" (formula "61"))
                                                               (rule "true_left" (formula "61"))
                                                               (rule "polyDiv_pullOut" (formula "65") (term "0") (inst "polyDivCoeff=l_0"))
                                                               (rule "equal_literals" (formula "65") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "65"))
                                                               (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0" (formula "65") (term "0,0,0"))
                                                               (rule "add_literals" (formula "65") (term "1,0,0,0"))
                                                               (rule "times_zero_1" (formula "65") (term "0,0,0"))
                                                               (rule "div_literals" (formula "65") (term "0,0"))
                                                               (rule "add_zero_left" (formula "65") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "65"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "65") (term "0"))
                                                               (rule "add_literals" (formula "65") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "65") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "65"))
                                                               (rule "mul_literals" (formula "65") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "65") (ifseqformula "48"))
                                                               (rule "leq_literals" (formula "65") (term "0"))
                                                                (builtin "One Step Simplification" (formula "65"))
                                                               (rule "true_left" (formula "65"))
                                                               (rule "polyDiv_pullOut" (formula "66") (term "1") (inst "polyDivCoeff=l_0"))
                                                               (rule "equal_literals" (formula "66") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "66"))
                                                               (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,1"))
                                                               (rule "polySimp_pullOutFactor0" (formula "66") (term "0,0,1"))
                                                               (rule "add_literals" (formula "66") (term "1,0,0,1"))
                                                               (rule "times_zero_1" (formula "66") (term "0,0,1"))
                                                               (rule "div_literals" (formula "66") (term "0,1"))
                                                               (rule "add_zero_left" (formula "66") (term "1"))
                                                               (rule "polyDiv_pullOut" (formula "67") (term "1") (inst "polyDivCoeff=l_0"))
                                                               (rule "equal_literals" (formula "67") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "67"))
                                                               (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,1"))
                                                               (rule "polySimp_pullOutFactor0" (formula "67") (term "0,0,1"))
                                                               (rule "add_literals" (formula "67") (term "1,0,0,1"))
                                                               (rule "times_zero_1" (formula "67") (term "0,0,1"))
                                                               (rule "div_literals" (formula "67") (term "0,1"))
                                                               (rule "add_zero_left" (formula "67") (term "1"))
                                                               (rule "inEqSimp_exactShadow1" (formula "64") (ifseqformula "66"))
                                                               (rule "greater_literals" (formula "64") (term "0"))
                                                                (builtin "One Step Simplification" (formula "64"))
                                                               (rule "mul_literals" (formula "64") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "64") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "64") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "64") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                               (rule "add_literals" (formula "64") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "64"))
                                                               (rule "mul_literals" (formula "64") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "64") (ifseqformula "48"))
                                                               (rule "leq_literals" (formula "64") (term "0"))
                                                                (builtin "One Step Simplification" (formula "64"))
                                                               (rule "true_left" (formula "64"))
                                                               (rule "inEqSimp_exactShadow3" (formula "61") (ifseqformula "68"))
                                                               (rule "polySimp_mulComm0" (formula "61") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "61") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "61") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "61") (term "0,0"))
                                                               (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                                               (rule "add_literals" (formula "61") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "61"))
                                                               (rule "mul_literals" (formula "61") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "66"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "0,0"))
                                                               (rule "mul_literals" (formula "47") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "47") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                               (rule "add_literals" (formula "47") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                                               (rule "mul_literals" (formula "47") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "49"))
                                                               (rule "leq_literals" (formula "47") (term "0"))
                                                                (builtin "One Step Simplification" (formula "47"))
                                                               (rule "true_left" (formula "47"))
                                                               (rule "commute_or_2" (formula "12") (term "0,0"))
                                                               (rule "nnf_imp2or" (formula "32") (term "0"))
                                                               (rule "commute_or_2" (formula "55") (term "0,0"))
                                                               (rule "commute_or_2" (formula "54") (term "0,0"))
                                                               (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "52") (term "0"))
                                                               (rule "wellFormedAnonEQ" (formula "52") (term "1,0") (ifseqformula "38"))
                                                               (rule "replace_known_left" (formula "52") (term "0,1") (ifseqformula "53"))
                                                                (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "71")) (ifInst ""  (formula "15")) (ifInst ""  (formula "37")))
                                                               (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "53") (term "0") (inst "i=i_1"))
                                                                (builtin "One Step Simplification" (formula "53"))
                                                               (rule "expand_inInt" (formula "53") (term "1,0,0"))
                                                               (rule "replace_int_MIN" (formula "53") (term "0,1,1,0,0"))
                                                               (rule "replace_int_MAX" (formula "53") (term "1,0,1,0,0"))
                                                               (rule "translateJavaSubInt" (formula "53") (term "1,1,0,0,0"))
                                                               (rule "translateJavaAddInt" (formula "53") (term "0,2,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "53") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "53") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "53") (term "0,2,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "53") (term "1,1,0,0,0"))
                                                               (rule "add_literals" (formula "53") (term "0,1,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "53") (term "0,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "53") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "53") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0"))
                                                               (rule "commute_or" (formula "39") (term "0,0,0"))
                                                               (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                                               (rule "arrayLengthIsAShort" (formula "66") (term "0"))
                                                               (rule "expand_inShort" (formula "66"))
                                                               (rule "replace_short_MIN" (formula "66") (term "0,1"))
                                                               (rule "replace_short_MAX" (formula "66") (term "1,0"))
                                                               (rule "andLeft" (formula "66"))
                                                               (rule "inEqSimp_commuteLeq" (formula "66"))
                                                               (rule "inEqSimp_subsumption1" (formula "66") (ifseqformula "67"))
                                                               (rule "leq_literals" (formula "66") (term "0"))
                                                                (builtin "One Step Simplification" (formula "66"))
                                                               (rule "true_left" (formula "66"))
                                                               (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                                                               (rule "expand_inShort" (formula "24"))
                                                               (rule "replace_short_MIN" (formula "24") (term "0,1"))
                                                               (rule "replace_short_MAX" (formula "24") (term "1,0"))
                                                               (rule "andLeft" (formula "24"))
                                                               (rule "inEqSimp_commuteLeq" (formula "24"))
                                                               (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "23"))
                                                               (rule "leq_literals" (formula "24") (term "0"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "arrayLengthNotNegative" (formula "67") (term "0"))
                                                               (rule "inEqSimp_subsumption1" (formula "67") (ifseqformula "66"))
                                                               (rule "leq_literals" (formula "67") (term "0"))
                                                                (builtin "One Step Simplification" (formula "67"))
                                                               (rule "true_left" (formula "67"))
                                                               (rule "arrayLengthIsAShort" (formula "49") (term "0"))
                                                               (rule "expand_inShort" (formula "49"))
                                                               (rule "replace_short_MAX" (formula "49") (term "1,0"))
                                                               (rule "replace_short_MIN" (formula "49") (term "0,1"))
                                                               (rule "andLeft" (formula "49"))
                                                               (rule "inEqSimp_commuteLeq" (formula "50"))
                                                               (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "49"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "51") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "51"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "51") (term "0"))
                                                               (rule "arrayLengthNotNegative" (formula "51") (term "0"))
                                                               (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "51"))
                                                               (rule "leq_literals" (formula "50") (term "0"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "true_left" (formula "50"))
                                                               (rule "arrayLengthNotNegative" (formula "28") (term "0"))
                                                               (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "28") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                               (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "28") (term "0,0"))
                                                               (rule "qeq_literals" (formula "28") (term "0"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "true_left" (formula "28"))
                                                               (rule "arrayLengthIsAShort" (formula "28") (term "0"))
                                                               (rule "expand_inShort" (formula "28"))
                                                               (rule "replace_short_MIN" (formula "28") (term "0,1"))
                                                               (rule "replace_short_MAX" (formula "28") (term "1,0"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "inEqSimp_commuteLeq" (formula "29"))
                                                               (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                                                               (rule "inEqSimp_homoInEq1" (formula "29"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                               (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
                                                               (rule "inEqSimp_homoInEq0" (formula "28"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                               (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                               (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                               (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "28") (term "0,0"))
                                                               (rule "qeq_literals" (formula "28") (term "0"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "true_left" (formula "28"))
                                                               (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "34") (term "0") (inst "i=i_1") (inst "j=j"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "expand_inInt" (formula "34") (term "1,0,0"))
                                                               (rule "expand_inInt" (formula "34") (term "1,0,0,1,0"))
                                                               (rule "replace_int_MAX" (formula "34") (term "1,0,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "34") (term "0,1,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "34") (term "0,1,1,0,0,1,0"))
                                                               (rule "replace_int_MAX" (formula "34") (term "1,0,1,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "34") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "34") (term "1,1,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "commute_or" (formula "9") (term "0,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                                               (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                                               (rule "nnf_notAnd" (formula "56") (term "0,0"))
                                                               (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                                               (rule "nnf_imp2or" (formula "56") (term "0,1,0"))
                                                               (rule "nnf_imp2or" (formula "11") (term "0,1,0"))
                                                               (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "10") (term "0") (inst "i=i_1"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "expand_inInt" (formula "10") (term "1,0,0"))
                                                               (rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0"))
                                                               (rule "translateJavaSubInt" (formula "10") (term "1,1,0,0,0"))
                                                               (rule "translateJavaAddInt" (formula "10") (term "0,2,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "10") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "10") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "10") (term "0,2,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "10") (term "1,1,0,0,0"))
                                                               (rule "add_literals" (formula "10") (term "0,1,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                                                               (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "36") (term "1,0,2,0,1,0"))
                                                               (rule "translateJavaSubInt" (formula "36") (term "0,1,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "36") (term "1,0,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "36") (term "1,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "36") (term "0,1,1,1,0,2,0,1,0"))
                                                               (rule "mul_literals" (formula "36") (term "1,0,1,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "36") (term "0,1,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "36") (term "1,1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "36") (term "0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "36") (term "1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "0,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "0,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "36") (term "1,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "36") (term "0,2,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "36") (term "0,0,2,0,1,0"))
                                                               (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "35") (term "0,0,1,0"))
                                                               (rule "translateJavaSubInt" (formula "35") (term "0,1,1,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "35") (term "1,0,0,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "35") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "35") (term "0,1,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "35") (term "1,0,1,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0,1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "35") (term "1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "0,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "35") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "35") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "0,1,0,1,0"))
                                                               (rule "mul_literals" (formula "35") (term "0,0,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "1,0,1,0,1,0"))
                                                               (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "35") (term "0,1,1,0"))
                                                               (rule "translateJavaSubInt" (formula "35") (term "0,1,1,0,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "35") (term "1,0,0,0,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "35") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "35") (term "0,1,1,0,1,1,0"))
                                                               (rule "mul_literals" (formula "35") (term "1,0,1,1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0,1,0,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "35") (term "1,0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "35") (term "1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "0,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "0,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "35") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,1,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "35") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "0,0,1,1,1,0"))
                                                               (rule "mul_literals" (formula "35") (term "0,0,0,1,1,1,0"))
                                                               (rule "commute_or_2" (formula "40") (term "0,0"))
                                                               (rule "commute_or_2" (formula "8") (term "0,0"))
                                                               (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                               (rule "nnf_imp2or" (formula "32") (term "0,1,0"))
                                                               (rule "nnf_imp2or" (formula "55") (term "0"))
                                                               (rule "nnf_imp2or" (formula "34") (term "0"))
                                                               (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0"))
                                                               (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "36") (term "0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "36") (term "0,0,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "36") (term "1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "36") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "36") (term "1,0,0,1,1,0,0"))
                                                               (rule "add_literals" (formula "36") (term "0,0,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "36") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "36") (term "1,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "36") (term "1,0,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "35") (term "0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "35") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,0"))
                                                               (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "35") (term "1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "35") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "35") (term "1,0,0,1,1,0,0"))
                                                               (rule "add_literals" (formula "35") (term "0,0,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "35") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "35") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "35") (term "1,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "35") (term "1,0,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "56") (term "0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "56") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "56") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "56") (term "0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "56") (term "1,0,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "56") (term "0,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "56") (term "1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "56") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "56") (term "1,0,0,1,1,0,0"))
                                                               (rule "add_literals" (formula "56") (term "0,0,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "56") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "56") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "56") (term "1,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "56") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "56") (term "1,0,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "1,0,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "11") (term "1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "11") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "1,0,1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "11") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "1,0,0,1,1,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "1,1,1,0,0"))
                                                               (rule "nnf_imp2or" (formula "10") (term "0"))
                                                               (rule "nnf_notAnd" (formula "56") (term "0,0,1,0"))
                                                               (rule "nnf_notAnd" (formula "11") (term "0,0,1,0"))
                                                               (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "54") (term "0"))
                                                               (rule "wellFormedAnonEQ" (formula "54") (term "1,0") (ifseqformula "38"))
                                                               (rule "replace_known_left" (formula "54") (term "1,1,0") (ifseqformula "37"))
                                                                (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "74")) (ifInst ""  (formula "15")) (ifInst ""  (formula "55")))
                                                               (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "55") (term "0") (inst "i=i_1") (inst "j=j"))
                                                                (builtin "One Step Simplification" (formula "55"))
                                                               (rule "expand_inInt" (formula "55") (term "1,0,0,1,0"))
                                                               (rule "expand_inInt" (formula "55") (term "1,0,0"))
                                                               (rule "replace_int_MAX" (formula "55") (term "1,0,1,0,0,1,0"))
                                                               (rule "replace_int_MIN" (formula "55") (term "0,1,1,0,0,1,0"))
                                                               (rule "replace_int_MAX" (formula "55") (term "1,0,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "55") (term "0,1,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "55") (term "0,0,0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "55") (term "0,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "55") (term "1,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "55") (term "1,1,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "55") (term "1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0"))
                                                               (rule "div_axiom" (formula "45") (term "0") (inst "quotient=quotient_1"))
                                                               (rule "qeq_literals" (formula "45") (term "0,1,1"))
                                                                (builtin "One Step Simplification" (formula "45"))
                                                               (rule "equal_literals" (formula "45") (term "0"))
                                                                (builtin "One Step Simplification" (formula "45"))
                                                               (rule "mul_literals" (formula "45") (term "1,1,1"))
                                                               (rule "andLeft" (formula "45"))
                                                               (rule "andLeft" (formula "45"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,1"))
                                                               (rule "add_literals" (formula "47") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "47") (term "1"))
                                                               (rule "add_literals" (formula "47") (term "0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "46"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "47"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                               (rule "applyEqRigid" (formula "45") (term "0") (ifseqformula "48"))
                                                               (rule "eqSymm" (formula "45"))
                                                               (rule "applyEqRigid" (formula "46") (term "0,1,0,0") (ifseqformula "45"))
                                                               (rule "mul_literals" (formula "46") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "46") (term "0,0"))
                                                               (rule "applyEqRigid" (formula "47") (term "0,1,0,0") (ifseqformula "45"))
                                                               (rule "mul_literals" (formula "47") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "47") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                               (rule "mul_literals" (formula "46") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "47"))
                                                               (rule "mul_literals" (formula "47") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "51"))
                                                               (rule "leq_literals" (formula "46") (term "0"))
                                                                (builtin "One Step Simplification" (formula "46"))
                                                               (rule "true_left" (formula "46"))
                                                               (rule "inEqSimp_subsumption0" (formula "46") (ifseqformula "54"))
                                                               (rule "leq_literals" (formula "46") (term "0"))
                                                                (builtin "One Step Simplification" (formula "46"))
                                                               (rule "true_left" (formula "46"))
                                                               (rule "commute_or_2" (formula "39") (term "0,0"))
                                                               (rule "nnf_notAnd" (formula "57") (term "0,0"))
                                                               (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                                               (rule "commute_or" (formula "12") (term "1,0,0,0"))
                                                               (rule "shift_paren_or" (formula "60") (term "0,0,0"))
                                                               (rule "shift_paren_or" (formula "59") (term "0,0,0"))
                                                               (rule "nnf_notAnd" (formula "32") (term "1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "32") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "32") (term "1,0,0,1,1,0,0"))
                                                               (rule "add_literals" (formula "32") (term "0,0,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "32") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "32") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "32") (term "1,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "32") (term "1,0,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0"))
                                                               (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "32") (term "0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "32") (term "1,0,0,0,0"))
                                                               (rule "nnf_imp2or" (formula "34") (term "0,1,0"))
                                                               (rule "nnf_notAnd" (formula "32") (term "0,0,1,0"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch " self.sorted_splitters[ l_0 * -1 + indices[i_0]@anon_heap_LOOP_0<<anonHeapFunction>>] >= 1 + values[begin + i_0] TRUE"
                                                                  (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))), l_0)") (inst "elimGcdLeftDiv=int::select(anon_heap_LOOP_0<<anonHeapFunction>>,
            indices,
            arr(i_0))") (inst "elimGcd=Z(2(#))"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "2") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                  (rule "leq_literals" (formula "2") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "inEqSimp_subsumption1" (formula "67") (ifseqformula "2"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "67") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0"))
                                                                  (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "67") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "67") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "true_left" (formula "67"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "73"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "72") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "72") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "closeFalse" (formula "72"))
                                                               )
                                                               (branch " self.sorted_splitters[ l_0 * -1 + indices[i_0]@anon_heap_LOOP_0<<anonHeapFunction>>] >= 1 + values[begin + i_0] FALSE"
                                                                  (rule "inEqSimp_geqRight" (formula "74"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))), l_0)") (inst "elimGcdLeftDiv=int::select(anon_heap_LOOP_0<<anonHeapFunction>>,
            indices,
            arr(i_0))") (inst "elimGcd=Z(2(#))"))
                                                                  (rule "leq_literals" (formula "2") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                  (rule "leq_literals" (formula "2") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "inEqSimp_subsumption1" (formula "67") (ifseqformula "2"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "67") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0"))
                                                                  (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "67") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "67") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "true_left" (formula "67"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "67"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "51") (ifseqformula "2"))
                                                                  (rule "leq_literals" (formula "51") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "true_left" (formula "51"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "54") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "closeFalse" (formula "54"))
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "replace_int_MIN" (formula "64") (term "0"))
                                                               (rule "polySimp_elimSub" (formula "64") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "64") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "64") (term "0,1"))
                                                               (rule "inEqSimp_leqRight" (formula "64"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "49"))
                                                               (rule "polySimp_mulAssoc" (formula "49") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "4"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "39") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "55"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "51"))
                                                               (rule "times_zero_2" (formula "51") (term "1,0"))
                                                               (rule "add_zero_right" (formula "51") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "32"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "33"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "34") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                               (rule "mul_literals" (formula "48") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0"))
                                                               (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                               (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "0,1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "39") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "54"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "0,1"))
                                                               (rule "mul_literals" (formula "54") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "1,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                               (rule "polySimp_mulLiterals" (formula "50") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "50") (term "1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                               (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "26"))
                                                               (rule "leq_literals" (formula "20") (term "0"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "8") (term "0,0"))
                                                               (rule "qeq_literals" (formula "8") (term "0"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "25"))
                                                               (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "31") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                               (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "31") (term "0,0"))
                                                               (rule "qeq_literals" (formula "31") (term "0"))
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "true_left" (formula "31"))
                                                               (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "26"))
                                                               (rule "leq_literals" (formula "28") (term "0"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "true_left" (formula "28"))
                                                               (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "49"))
                                                               (rule "leq_literals" (formula "48") (term "0"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "true_left" (formula "48"))
                                                               (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "19"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "29"))
                                                               (rule "mul_literals" (formula "20") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                               (rule "add_literals" (formula "20") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                               (rule "mul_literals" (formula "20") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "25"))
                                                               (rule "leq_literals" (formula "20") (term "0"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "49"))
                                                               (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "43") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                                                               (rule "mul_literals" (formula "7") (term "0,0"))
                                                               (rule "add_zero_left" (formula "7") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                               (rule "mul_literals" (formula "7") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                               (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "26") (term "0,0"))
                                                               (rule "qeq_literals" (formula "26") (term "0"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "true_left" (formula "26"))
                                                               (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "45"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "44") (term "0"))
                                                               (rule "add_literals" (formula "44") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "44") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                               (rule "mul_literals" (formula "44") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "27"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "28") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "28"))
                                                               (rule "leq_literals" (formula "20") (term "0"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "46"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                               (rule "mul_literals" (formula "48") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "52"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "49") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "49") (term "0,0"))
                                                               (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "49") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                               (rule "mul_literals" (formula "49") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "49"))
                                                               (rule "leq_literals" (formula "52") (term "0"))
                                                                (builtin "One Step Simplification" (formula "52"))
                                                               (rule "true_left" (formula "52"))
                                                               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "27"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                               (rule "add_literals" (formula "7") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "7"))
                                                               (rule "leq_literals" (formula "20") (term "0"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "43"))
                                                               (rule "mul_literals" (formula "44") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                                                               (rule "add_literals" (formula "44") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "1"))
                                                               (rule "mul_literals" (formula "44") (term "0,1"))
                                                               (rule "inEqSimp_exactShadow1" (formula "49") (ifseqformula "43"))
                                                               (rule "greater_literals" (formula "49") (term "0"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                                                               (rule "mul_literals" (formula "49") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "49") (term "0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "49") (term "0,0,0"))
                                                               (rule "add_literals" (formula "49") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
                                                               (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "49") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                               (rule "mul_literals" (formula "49") (term "0,1"))
                                                               (rule "inEqSimp_exactShadow1" (formula "49") (ifseqformula "53"))
                                                               (rule "mul_literals" (formula "49") (term "1,0,1"))
                                                               (rule "greater_literals" (formula "49") (term "0"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                                                               (rule "mul_literals" (formula "49") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "49") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                               (rule "add_literals" (formula "49") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                               (rule "mul_literals" (formula "49") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "54"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "44") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "44") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                               (rule "add_literals" (formula "44") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                               (rule "mul_literals" (formula "44") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "44"))
                                                               (rule "leq_literals" (formula "50") (term "0"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "true_left" (formula "50"))
                                                               (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "35"))
                                                               (rule "inEqSimp_and_subsumption3" (formula "34") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "nnf_imp2or" (formula "11") (term "0"))
                                                               (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "13") (inst "i_0=i_0") (inst "i=i"))
                                                               (rule "andLeft" (formula "13"))
                                                                (builtin "One Step Simplification" (formula "13"))
                                                               (rule "expand_inInt" (formula "14") (term "1,0,0"))
                                                               (rule "expand_inInt" (formula "13") (term "1,0,0,1"))
                                                               (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0"))
                                                               (rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "13") (term "0,1,1,0,0,1"))
                                                               (rule "replace_int_MAX" (formula "13") (term "1,0,1,0,0,1"))
                                                               (rule "andLeft" (formula "13"))
                                                               (rule "andLeft" (formula "13"))
                                                               (rule "andLeft" (formula "13"))
                                                               (rule "andLeft" (formula "13"))
                                                               (rule "andLeft" (formula "13"))
                                                               (rule "andLeft" (formula "15"))
                                                               (rule "andLeft" (formula "13"))
                                                               (rule "andLeft" (formula "13"))
                                                               (rule "andLeft" (formula "15"))
                                                               (rule "notLeft" (formula "13"))
                                                               (rule "notLeft" (formula "13"))
                                                               (rule "eqSymm" (formula "21") (term "1,0"))
                                                               (rule "translateJavaSubInt" (formula "19") (term "3,0"))
                                                               (rule "translateJavaShiftLeftInt" (formula "15") (term "1"))
                                                               (rule "translateJavaSubInt" (formula "21") (term "0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "19") (term "3,0"))
                                                               (rule "mul_literals" (formula "19") (term "1,3,0"))
                                                               (rule "polySimp_elimSub" (formula "21") (term "0,2,0,1,0"))
                                                               (rule "mul_literals" (formula "21") (term "1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "19") (term "3,0"))
                                                               (rule "polySimp_addComm0" (formula "21") (term "0,2,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "21") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "20") (term "0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "20") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "18"))
                                                               (rule "inEqSimp_commuteLeq" (formula "16"))
                                                               (rule "inEqSimp_commuteLeq" (formula "17"))
                                                               (rule "inEqSimp_commuteLeq" (formula "13"))
                                                               (rule "applyEq" (formula "17") (term "1") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "19") (term "1,3,0") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "56") (term "0,1,1") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "55") (term "1") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "42") (term "0,1,1,0,1,0") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "18") (term "1") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "54") (term "0") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "51") (term "0") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "42") (term "1,1,1,0") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "20") (term "0,1,0,0,1,1,0") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,0") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0,0") (ifseqformula "15"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,1,1,0"))
                                                               (rule "mul_literals" (formula "20") (term "0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "1,1,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "16"))
                                                               (rule "leq_literals" (formula "54") (term "0"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "true_left" (formula "54"))
                                                               (rule "javaShiftLeftIntDef" (formula "15") (term "1"))
                                                               (rule "mod_axiom" (formula "15") (term "1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "17") (term "1"))
                                                               (rule "mod_axiom" (formula "17") (term "1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "16") (term "0"))
                                                               (rule "mod_axiom" (formula "16") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "19") (term "1,3,0"))
                                                               (rule "mod_axiom" (formula "19") (term "1,0,1,3,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,3,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "58") (term "0,0"))
                                                               (rule "mod_axiom" (formula "58") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "55") (term "0,1,1"))
                                                               (rule "mod_axiom" (formula "55") (term "1,0,0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,1,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "54") (term "1"))
                                                               (rule "mod_axiom" (formula "54") (term "1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "42") (term "0,1,1,0,1,0"))
                                                               (rule "mod_axiom" (formula "42") (term "1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,1,0,1,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "18") (term "1"))
                                                               (rule "mod_axiom" (formula "18") (term "1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "51") (term "0"))
                                                               (rule "mod_axiom" (formula "51") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "42") (term "1,1,1,0"))
                                                               (rule "mod_axiom" (formula "42") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,1,1,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "20") (term "1,1,1,1,0"))
                                                               (rule "mod_axiom" (formula "20") (term "1,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,1,1,1,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "21") (term "1,1,1,0,0,0"))
                                                               (rule "mod_axiom" (formula "21") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "20") (term "1,1,1,0,0,0"))
                                                               (rule "mod_axiom" (formula "20") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "shiftLeftDef" (formula "15") (term "0,1"))
                                                               (rule "eqSymm" (formula "15"))
                                                               (rule "polySimp_elimNeg" (formula "15") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "15") (term "2,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "15") (term "2,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "15") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                               (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                                               (rule "shiftLeftDef" (formula "17") (term "0,1"))
                                                               (rule "polySimp_elimNeg" (formula "17") (term "1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "0,1,1,0,1"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "17") (term "2,0,1"))
                                                               (rule "polySimp_elimOneLeft0" (formula "17") (term "2,0,1"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "17") (term "1,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1"))
                                                               (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1"))
                                                               (rule "add_zero_right" (formula "17") (term "0,0,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "17"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "17") (term "0") (ifseqformula "15"))
                                                               (rule "inEqSimp_commuteLeq" (formula "17"))
                                                               (rule "shiftLeftDef" (formula "16") (term "0,0"))
                                                               (rule "polySimp_elimNeg" (formula "16") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "16") (term "2,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "16") (term "2,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "16") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                               (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                                               (rule "shiftLeftDef" (formula "19") (term "0,1,3,0"))
                                                               (rule "polySimp_elimNeg" (formula "19") (term "1,1,0,1,3,0"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,3,0"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,3,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,3,0"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,0,1,3,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "19") (term "2,0,1,3,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "19") (term "2,0,1,3,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "19") (term "1,0,1,3,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,3,0"))
                                                               (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1,3,0"))
                                                               (rule "add_literals" (formula "19") (term "0,0,0,0,1,3,0"))
                                                               (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,3,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,3,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,3,0"))
                                                               (rule "applyEq" (formula "19") (term "1,3,0") (ifseqformula "15"))
                                                               (rule "shiftLeftDef" (formula "58") (term "0,0,0"))
                                                               (rule "polySimp_elimNeg" (formula "58") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "58") (term "0,1,1,0,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "58") (term "2,0,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "58") (term "2,0,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "58") (term "1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,0"))
                                                               (rule "times_zero_1" (formula "58") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "58") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0,0,0"))
                                                               (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "15"))
                                                               (rule "shiftLeftDef" (formula "55") (term "0,0,1,1"))
                                                               (rule "polySimp_elimNeg" (formula "55") (term "1,1,0,0,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,1,1"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "0,1,1,0,0,1,1"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "55") (term "2,0,0,1,1"))
                                                               (rule "polySimp_elimOneLeft0" (formula "55") (term "2,0,0,1,1"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "55") (term "1,0,0,1,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,1"))
                                                               (rule "times_zero_1" (formula "55") (term "1,0,0,0,0,0,1,1"))
                                                               (rule "add_literals" (formula "55") (term "0,0,0,0,0,1,1"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,1,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "55"))
                                                               (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                                                               (rule "mul_literals" (formula "55") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "55") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0,0,0"))
                                                               (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "15"))
                                                               (rule "inEqSimp_homoInEq1" (formula "55"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "55"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1"))
                                                               (rule "mul_literals" (formula "55") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                                                               (rule "shiftLeftDef" (formula "54") (term "0,1"))
                                                               (rule "polySimp_elimNeg" (formula "54") (term "1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "1,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "0,1,1,0,1"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "54") (term "2,0,1"))
                                                               (rule "polySimp_elimOneLeft0" (formula "54") (term "2,0,1"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "54") (term "1,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,1"))
                                                               (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,1"))
                                                               (rule "add_zero_right" (formula "54") (term "0,0,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "54"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "54") (term "0") (ifseqformula "15"))
                                                               (rule "inEqSimp_commuteLeq" (formula "54"))
                                                               (rule "shiftLeftDef" (formula "42") (term "0,0,1,1,0,1,0"))
                                                               (rule "polySimp_elimNeg" (formula "42") (term "1,1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "0,1,1,0,0,1,1,0,1,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "42") (term "2,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "42") (term "2,0,0,1,1,0,1,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "42") (term "1,0,0,1,1,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,1,1,0,1,0"))
                                                               (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,1,1,0,1,0"))
                                                               (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,1,1,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0,0,1,1,0,1,0"))
                                                               (rule "applyEq" (formula "42") (term "0,1,1,0,1,0") (ifseqformula "15"))
                                                               (rule "shiftLeftDef" (formula "18") (term "0,1"))
                                                               (rule "polySimp_elimNeg" (formula "18") (term "1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,0,1"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "18") (term "2,0,1"))
                                                               (rule "polySimp_elimOneLeft0" (formula "18") (term "2,0,1"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "18") (term "1,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1"))
                                                               (rule "mul_literals" (formula "18") (term "1,0,0,0,0,1"))
                                                               (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "18"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "18") (term "0") (ifseqformula "15"))
                                                               (rule "inEqSimp_commuteLeq" (formula "18"))
                                                               (rule "shiftLeftDef" (formula "51") (term "0,0"))
                                                               (rule "polySimp_elimNeg" (formula "51") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "0,1,1,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "51") (term "2,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "51") (term "2,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "51") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "51") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "51") (term "0") (ifseqformula "15"))
                                                               (rule "shiftLeftDef" (formula "42") (term "0,1,1,1,0"))
                                                               (rule "polySimp_elimNeg" (formula "42") (term "1,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "42") (term "1,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "0,1,1,0,1,1,1,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "42") (term "2,0,1,1,1,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "42") (term "2,0,1,1,1,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "42") (term "1,0,1,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,1,1,1,0"))
                                                               (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,1,1,1,0"))
                                                               (rule "add_literals" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,1,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0,1,1,1,0"))
                                                               (rule "applyEq" (formula "42") (term "1,1,1,0") (ifseqformula "15"))
                                                               (rule "shiftLeftDef" (formula "20") (term "0,1,1,1,1,0"))
                                                               (rule "polySimp_elimNeg" (formula "20") (term "1,1,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,1,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,1,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,0,1,1,1,1,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "20") (term "2,0,1,1,1,1,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "20") (term "2,0,1,1,1,1,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "20") (term "1,0,1,1,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,1,1,1,0"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,1,1,1,1,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,0,0,1,1,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,1,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,1,1,1,0"))
                                                               (rule "applyEq" (formula "20") (term "1,1,1,1,0") (ifseqformula "15"))
                                                               (rule "shiftLeftDef" (formula "21") (term "0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimNeg" (formula "21") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,0,1,1,1,0,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "21") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "21") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "21") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "add_literals" (formula "21") (term "0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "applyEq" (formula "21") (term "1,1,1,0,0,0") (ifseqformula "15"))
                                                               (rule "shiftLeftDef" (formula "20") (term "0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimNeg" (formula "20") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,0,1,1,1,0,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "20") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "20") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "20") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "applyEq" (formula "20") (term "1,1,1,0,0,0") (ifseqformula "15"))
                                                               (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "55"))
                                                               (rule "polySimp_mulComm0" (formula "60") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "60") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "60"))
                                                               (rule "polySimp_mulComm0" (formula "60") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "60") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "60") (term "1,1"))
                                                               (rule "mul_literals" (formula "60") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "60") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow1" (formula "58") (ifseqformula "51"))
                                                               (rule "greater_literals" (formula "58") (term "0"))
                                                                (builtin "One Step Simplification" (formula "58"))
                                                               (rule "polySimp_rightDist" (formula "58") (term "0,0"))
                                                               (rule "mul_literals" (formula "58") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "58") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "58") (term "0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "58") (term "0,0,0"))
                                                               (rule "add_literals" (formula "58") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,0"))
                                                               (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "58") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                                               (rule "polySimp_mulComm0" (formula "58") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "58") (term "1"))
                                                               (rule "mul_literals" (formula "58") (term "0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "51"))
                                                               (rule "mul_literals" (formula "16") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                               (rule "mul_literals" (formula "16") (term "0,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "16"))
                                                               (rule "inEqSimp_homoInEq0" (formula "54") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "54") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                                                               (rule "add_literals" (formula "54") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "54") (term "0,0"))
                                                               (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "54") (term "0,0"))
                                                               (rule "qeq_literals" (formula "54") (term "0"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "true_left" (formula "54"))
                                                               (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "55"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "54") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "54") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "54") (term "0"))
                                                               (rule "add_literals" (formula "54") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "54"))
                                                               (rule "mul_literals" (formula "54") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "17"))
                                                               (rule "leq_literals" (formula "54") (term "0"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "true_left" (formula "54"))
                                                               (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "62"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "54") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "61"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                               (rule "add_literals" (formula "16") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                               (rule "mul_literals" (formula "16") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "16"))
                                                               (rule "leq_literals" (formula "54") (term "0"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "true_left" (formula "54"))
                                                               (rule "nnf_imp2or" (formula "45") (term "0"))
                                                               (rule "nnf_imp2or" (formula "10") (term "0"))
                                                               (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                               (rule "expand_moduloInteger" (formula "15") (term "0"))
                                                               (rule "replace_int_RANGE" (formula "15") (term "1,1,0"))
                                                               (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0"))
                                                               (rule "replace_int_MIN" (formula "15") (term "0,0"))
                                                               (rule "polySimp_homoEq" (formula "15"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                               (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "15"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                               (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "46"))
                                                               (rule "true_left" (formula "46"))
                                                               (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "46") (inst "i_0=i_0") (inst "i=i_1"))
                                                                (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "63")) (ifInst ""  (formula "62")) (ifInst ""  (formula "14")))
                                                               (rule "expand_inInt" (formula "46") (term "1,0,0,1"))
                                                               (rule "expand_inInt" (formula "46") (term "1,0,0,1,0"))
                                                               (rule "replace_int_MIN" (formula "46") (term "0,1,1,0,0,1"))
                                                               (rule "replace_int_MAX" (formula "46") (term "1,0,1,0,0,1"))
                                                               (rule "replace_int_MIN" (formula "46") (term "0,1,1,0,0,1,0"))
                                                               (rule "replace_int_MAX" (formula "46") (term "1,0,1,0,0,1,0"))
                                                               (rule "andLeft" (formula "46"))
                                                               (rule "andLeft" (formula "46"))
                                                               (rule "andLeft" (formula "46"))
                                                               (rule "andLeft" (formula "46"))
                                                               (rule "andLeft" (formula "46"))
                                                               (rule "andLeft" (formula "47"))
                                                               (rule "andLeft" (formula "46"))
                                                               (rule "translateJavaSubInt" (formula "53") (term "0,2,1,1,0"))
                                                               (rule "translateJavaSubInt" (formula "51") (term "3,0"))
                                                               (rule "translateJavaShiftLeftInt" (formula "47") (term "1"))
                                                               (rule "eqSymm" (formula "53") (term "1,0"))
                                                               (rule "polySimp_elimSub" (formula "51") (term "3,0"))
                                                               (rule "mul_literals" (formula "51") (term "1,3,0"))
                                                               (rule "polySimp_elimSub" (formula "53") (term "0,2,0,1,0"))
                                                               (rule "mul_literals" (formula "53") (term "1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "51") (term "3,0"))
                                                               (rule "polySimp_addComm0" (formula "53") (term "0,2,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "52") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "53") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "52") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "52") (term "0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "50"))
                                                               (rule "inEqSimp_commuteLeq" (formula "49"))
                                                               (rule "inEqSimp_commuteLeq" (formula "48"))
                                                               (rule "inEqSimp_commuteLeq" (formula "46"))
                                                               (rule "applyEq" (formula "47") (term "1,3,0") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "55") (term "0") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "22") (term "1,1,1,1,0") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "21") (term "1,3,0") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "44") (term "1,1,1,0") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "22") (term "1,1,1,0,0,0") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "23") (term "1,1,1,0,0,0") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "57") (term "0,1,1") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "56") (term "1") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "19") (term "1") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "44") (term "0,1,1,0,1,0") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "18") (term "0") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "60") (term "0,0") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "20") (term "1") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "49") (term "0,1,0,0,1,0,0,0") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "48") (term "0,1,0,0,1,0,0,0") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "48") (term "0,1,0,0,1,1,0") (ifseqformula "46"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "48") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,1,0"))
                                                               (rule "mul_literals" (formula "48") (term "0,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "48") (term "1,1,1,1,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "46") (term "1"))
                                                               (rule "mod_axiom" (formula "46") (term "1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "47") (term "1,3,0"))
                                                               (rule "mod_axiom" (formula "47") (term "1,0,1,3,0"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,3,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "54") (term "0"))
                                                               (rule "mod_axiom" (formula "54") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "22") (term "1,1,1,1,0"))
                                                               (rule "mod_axiom" (formula "22") (term "1,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,1,1,1,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "21") (term "1,3,0"))
                                                               (rule "mod_axiom" (formula "21") (term "1,0,1,3,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,3,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "44") (term "1,1,1,0"))
                                                               (rule "mod_axiom" (formula "44") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,1,1,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "22") (term "1,1,1,0,0,0"))
                                                               (rule "mod_axiom" (formula "22") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "23") (term "1,1,1,0,0,0"))
                                                               (rule "mod_axiom" (formula "23") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "56") (term "0,1,1"))
                                                               (rule "mod_axiom" (formula "56") (term "1,0,0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,1,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "55") (term "1"))
                                                               (rule "mod_axiom" (formula "55") (term "1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "19") (term "1"))
                                                               (rule "mod_axiom" (formula "19") (term "1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "44") (term "0,1,1,0,1,0"))
                                                               (rule "mod_axiom" (formula "44") (term "1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,1,0,1,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "18") (term "0"))
                                                               (rule "mod_axiom" (formula "18") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "59") (term "0,0"))
                                                               (rule "mod_axiom" (formula "59") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "20") (term "1"))
                                                               (rule "mod_axiom" (formula "20") (term "1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "15") (term "1,1"))
                                                               (rule "mod_axiom" (formula "15") (term "1,0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,1"))
                                                               (rule "javaShiftLeftIntDef" (formula "48") (term "1,1,1,0,0,0"))
                                                               (rule "mod_axiom" (formula "48") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "shiftLeftDef" (formula "46") (term "0,1"))
                                                               (rule "eqSymm" (formula "46"))
                                                               (rule "polySimp_elimNeg" (formula "46") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "0,1,1,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "46") (term "2,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "46") (term "2,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "46") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                               (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "46") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0,0"))
                                                               (rule "shiftLeftDef" (formula "47") (term "0,1,3,0"))
                                                               (rule "polySimp_elimNeg" (formula "47") (term "1,1,0,1,3,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,1,3,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,1,0,1,3,0"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,1,3,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "0,1,1,0,1,3,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "47") (term "2,0,1,3,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "47") (term "2,0,1,3,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "47") (term "1,0,1,3,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,1,3,0"))
                                                               (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,1,3,0"))
                                                               (rule "add_zero_right" (formula "47") (term "0,0,0,0,1,3,0"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,1,3,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "0,0,1,3,0"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0,1,3,0"))
                                                               (rule "applyEq" (formula "47") (term "1,3,0") (ifseqformula "46"))
                                                               (rule "shiftLeftDef" (formula "54") (term "0,0"))
                                                               (rule "polySimp_elimNeg" (formula "54") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "0,1,1,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "54") (term "2,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "54") (term "2,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "54") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
                                                               (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "54") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "54") (term "0") (ifseqformula "46"))
                                                               (rule "shiftLeftDef" (formula "22") (term "0,1,1,1,1,0"))
                                                               (rule "polySimp_elimNeg" (formula "22") (term "1,1,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,0,1,1,1,1,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "22") (term "2,0,1,1,1,1,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "22") (term "2,0,1,1,1,1,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "22") (term "1,0,1,1,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,1,1,1,1,0"))
                                                               (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,1,1,1,1,0"))
                                                               (rule "add_literals" (formula "22") (term "0,0,0,0,1,1,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,1,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,1,1,1,0"))
                                                               (rule "applyEq" (formula "22") (term "1,1,1,1,0") (ifseqformula "46"))
                                                               (rule "shiftLeftDef" (formula "21") (term "0,1,3,0"))
                                                               (rule "polySimp_elimNeg" (formula "21") (term "1,1,0,1,3,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,1,3,0"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "1,1,0,1,3,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,1,3,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,0,1,3,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "21") (term "2,0,1,3,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "21") (term "2,0,1,3,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "21") (term "1,0,1,3,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,1,3,0"))
                                                               (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,1,3,0"))
                                                               (rule "add_zero_right" (formula "21") (term "0,0,0,0,1,3,0"))
                                                               (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,1,3,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,1,3,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,1,3,0"))
                                                               (rule "applyEq" (formula "21") (term "1,3,0") (ifseqformula "46"))
                                                               (rule "shiftLeftDef" (formula "44") (term "0,1,1,1,0"))
                                                               (rule "polySimp_elimNeg" (formula "44") (term "1,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "1,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "0,1,1,0,1,1,1,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "44") (term "2,0,1,1,1,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "44") (term "2,0,1,1,1,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "44") (term "1,0,1,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,1,1,1,0"))
                                                               (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,1,1,1,0"))
                                                               (rule "add_literals" (formula "44") (term "0,0,0,0,1,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0,1,1,1,0"))
                                                               (rule "applyEq" (formula "44") (term "1,1,1,0") (ifseqformula "46"))
                                                               (rule "shiftLeftDef" (formula "22") (term "0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimNeg" (formula "22") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,0,1,1,1,0,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "22") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "22") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "22") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "add_literals" (formula "22") (term "0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "applyEq" (formula "22") (term "1,1,1,0,0,0") (ifseqformula "46"))
                                                               (rule "shiftLeftDef" (formula "23") (term "0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimNeg" (formula "23") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,0,1,1,1,0,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "23") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "23") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "23") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "applyEq" (formula "23") (term "1,1,1,0,0,0") (ifseqformula "46"))
                                                               (rule "shiftLeftDef" (formula "56") (term "0,0,1,1"))
                                                               (rule "polySimp_elimNeg" (formula "56") (term "1,1,0,0,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,1,1"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "0,1,1,0,0,1,1"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "56") (term "2,0,0,1,1"))
                                                               (rule "polySimp_elimOneLeft0" (formula "56") (term "2,0,0,1,1"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "56") (term "1,0,0,1,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,1"))
                                                               (rule "times_zero_1" (formula "56") (term "1,0,0,0,0,0,1,1"))
                                                               (rule "add_literals" (formula "56") (term "0,0,0,0,0,1,1"))
                                                               (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,1,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "56"))
                                                               (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "0,0,0,0,1,0"))
                                                               (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "46"))
                                                               (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "56"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "56") (term "0"))
                                                               (rule "shiftLeftDef" (formula "55") (term "0,1"))
                                                               (rule "polySimp_elimNeg" (formula "55") (term "1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "0,1,1,0,1"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "55") (term "2,0,1"))
                                                               (rule "polySimp_elimOneLeft0" (formula "55") (term "2,0,1"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "55") (term "1,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,1"))
                                                               (rule "times_zero_1" (formula "55") (term "1,0,0,0,0,1"))
                                                               (rule "add_literals" (formula "55") (term "0,0,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "55"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "55") (term "0") (ifseqformula "46"))
                                                               (rule "inEqSimp_commuteLeq" (formula "55"))
                                                               (rule "shiftLeftDef" (formula "19") (term "0,1"))
                                                               (rule "polySimp_elimNeg" (formula "19") (term "1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,0,1"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "19") (term "2,0,1"))
                                                               (rule "polySimp_elimOneLeft0" (formula "19") (term "2,0,1"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "19") (term "1,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1"))
                                                               (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1"))
                                                               (rule "add_zero_right" (formula "19") (term "0,0,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "19"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "19") (term "0") (ifseqformula "46"))
                                                               (rule "inEqSimp_commuteLeq" (formula "19"))
                                                               (rule "shiftLeftDef" (formula "44") (term "0,0,1,1,0,1,0"))
                                                               (rule "polySimp_elimNeg" (formula "44") (term "1,1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "0,1,1,0,0,1,1,0,1,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "44") (term "2,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "44") (term "2,0,0,1,1,0,1,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "44") (term "1,0,0,1,1,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,1,1,0,1,0"))
                                                               (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,1,1,0,1,0"))
                                                               (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,1,1,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0,0,1,1,0,1,0"))
                                                               (rule "applyEq" (formula "44") (term "0,1,1,0,1,0") (ifseqformula "46"))
                                                               (rule "shiftLeftDef" (formula "18") (term "0,0"))
                                                               (rule "polySimp_elimNeg" (formula "18") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "18") (term "2,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "18") (term "2,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "18") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                               (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "18") (term "0") (ifseqformula "46"))
                                                               (rule "shiftLeftDef" (formula "59") (term "0,0,0"))
                                                               (rule "polySimp_elimNeg" (formula "59") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "0,1,1,0,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "59") (term "2,0,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "59") (term "2,0,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "59") (term "1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0"))
                                                               (rule "times_zero_1" (formula "59") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "59") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "59") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "59") (term "0,0,0,0,0"))
                                                               (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "46"))
                                                               (rule "shiftLeftDef" (formula "20") (term "0,1"))
                                                               (rule "polySimp_elimNeg" (formula "20") (term "1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,0,1"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "20") (term "2,0,1"))
                                                               (rule "polySimp_elimOneLeft0" (formula "20") (term "2,0,1"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "20") (term "1,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,1"))
                                                               (rule "add_zero_right" (formula "20") (term "0,0,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "20"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "20") (term "0") (ifseqformula "46"))
                                                               (rule "inEqSimp_commuteLeq" (formula "20"))
                                                               (rule "shiftLeftDef" (formula "15") (term "0,1,1"))
                                                               (rule "polySimp_homoEq" (formula "15"))
                                                               (rule "polySimp_elimNeg" (formula "15") (term "1,1,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,0,1,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "15") (term "2,0,1,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "15") (term "2,0,1,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "15") (term "1,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1,0"))
                                                               (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "15") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0"))
                                                               (rule "polySimp_sepPosMonomial" (formula "15"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                               (rule "mul_literals" (formula "15") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                                               (rule "polySimp_homoEq" (formula "15"))
                                                               (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                               (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "46"))
                                                               (rule "polySimp_sepPosMonomial" (formula "15"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                               (rule "mul_literals" (formula "15") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                               (rule "shiftLeftDef" (formula "48") (term "0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimNeg" (formula "48") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "0,1,1,0,1,1,1,0,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "48") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "48") (term "2,0,1,1,1,0,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "48") (term "1,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "add_literals" (formula "48") (term "0,0,0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "0,0,1,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0,1,1,1,0,0,0"))
                                                               (rule "applyEq" (formula "48") (term "1,1,1,0,0,0") (ifseqformula "46"))
                                                               (rule "inEqSimp_exactShadow1" (formula "59") (ifseqformula "54"))
                                                               (rule "greater_literals" (formula "59") (term "0"))
                                                                (builtin "One Step Simplification" (formula "59"))
                                                               (rule "polySimp_rightDist" (formula "59") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "59") (term "0,0"))
                                                               (rule "mul_literals" (formula "59") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "59") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "59") (term "0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "59") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "59") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "59") (term "0,0,0"))
                                                               (rule "add_literals" (formula "59") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,0"))
                                                               (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "59") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "59"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "59") (term "1"))
                                                               (rule "mul_literals" (formula "59") (term "0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "56"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "55") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "55") (term "0"))
                                                               (rule "add_literals" (formula "55") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "55") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                                                               (rule "mul_literals" (formula "55") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "55") (ifseqformula "18"))
                                                               (rule "leq_literals" (formula "55") (term "0"))
                                                                (builtin "One Step Simplification" (formula "55"))
                                                               (rule "true_left" (formula "55"))
                                                               (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "54"))
                                                               (rule "mul_literals" (formula "18") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                               (rule "add_literals" (formula "18") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                               (rule "mul_literals" (formula "18") (term "0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "63"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "55") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "55"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "55") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "61") (ifseqformula "56"))
                                                               (rule "polySimp_mulComm0" (formula "61") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "61") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "61") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "61"))
                                                               (rule "polySimp_mulComm0" (formula "61") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "61") (term "1"))
                                                               (rule "mul_literals" (formula "61") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "61") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "61") (term "1,1"))
                                                               (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "33"))
                                                               (rule "andLeft" (formula "33"))
                                                               (rule "notLeft" (formula "34"))
                                                               (rule "notLeft" (formula "33"))
                                                               (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "64"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "64"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "64"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "5"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "4"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "1") (term "1,1,0,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "61"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                               (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "10"))
                                                               (rule "andLeft" (formula "10"))
                                                               (rule "notLeft" (formula "10"))
                                                               (rule "notLeft" (formula "10"))
                                                               (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "37"))
                                                                (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "22")))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "translateJavaSubInt" (formula "42") (term "0,2,0"))
                                                               (rule "translateJavaSubInt" (formula "42") (term "0,2,1"))
                                                               (rule "eqSymm" (formula "39"))
                                                               (rule "eqSymm" (formula "42"))
                                                               (rule "translateJavaMulInt" (formula "39") (term "0"))
                                                               (rule "polySimp_elimSub" (formula "42") (term "0,2,1"))
                                                               (rule "mul_literals" (formula "42") (term "1,0,2,1"))
                                                               (rule "polySimp_elimSub" (formula "42") (term "0,2,0"))
                                                               (rule "mul_literals" (formula "42") (term "1,0,2,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "42") (term "0,2,1"))
                                                               (rule "polySimp_addComm0" (formula "42") (term "0,2,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "37"))
                                                               (rule "applyEq" (formula "69") (term "0") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "20") (term "1,0,1,0") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "46") (term "1,1,0,1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "58") (term "1,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "50") (term "1,0,1,0") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "61") (term "0") (ifseqformula "39"))
                                                               (rule "inEqSimp_homoInEq1" (formula "61"))
                                                               (rule "polySimp_addComm1" (formula "61") (term "0"))
                                                               (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "40"))
                                                               (rule "inEqSimp_commuteGeq" (formula "17"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "61"))
                                                               (rule "polySimp_mulComm0" (formula "61") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "61") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "61") (term "1,1"))
                                                               (rule "mul_literals" (formula "61") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "61") (term "1,1"))
                                                               (rule "newSym_eq" (formula "39") (inst "newSymDef=mul(int::final(self,
               de.wiesler.Classifier::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                                               (rule "times_zero_1" (formula "39") (term "1,1"))
                                                               (rule "add_zero_right" (formula "39") (term "1"))
                                                               (rule "applyEq" (formula "50") (term "1,3,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "19") (term "1,1,1,0,0,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "58") (term "1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "51") (term "1,1,1,0,0,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "42") (term "3,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "16") (term "1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "15") (term "0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "57") (term "0") (ifseqformula "39"))
                                                               (rule "inEqSimp_homoInEq0" (formula "57"))
                                                               (rule "polySimp_addComm1" (formula "57") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "57") (term "0,0"))
                                                               (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "39"))
                                                               (rule "eqSymm" (formula "40"))
                                                               (rule "applyEq" (formula "47") (term "1,1,1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "43") (term "1,0,2,0") (ifseqformula "39"))
                                                               (rule "eqSymm" (formula "43"))
                                                               (rule "applyEq" (formula "19") (term "1,1,1,1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "20") (term "1,1,1,0,0,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "18") (term "1,3,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "17") (term "0") (ifseqformula "39"))
                                                               (rule "inEqSimp_commuteLeq" (formula "17"))
                                                               (rule "applyEq" (formula "14") (term "0,0,1,1") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "62") (term "0,0") (ifseqformula "40"))
                                                               (rule "inEqSimp_homoInEq0" (formula "62"))
                                                               (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                               (rule "applyEq" (formula "37") (term "0") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "47") (term "1,1,0,1,0") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "38") (term "0") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "61") (term "0,0,1,1") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "64") (term "0,1") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "43") (term "1,0,2,0") (ifseqformula "39"))
                                                               (rule "eqSymm" (formula "43"))
                                                               (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "59") (term "1,1") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "66") (term "0,1,0,1") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "49") (term "1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "1") (term "1,0,1") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "1") (term "0,0,0,0,2,0,0,0") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "57") (term "0,1,0,0") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "40"))
                                                               (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "57") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "57") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "57") (term "0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "57") (term "1,0,1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "62"))
                                                               (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "62") (term "0"))
                                                               (rule "inEqSimp_subsumption6" (formula "37") (ifseqformula "15"))
                                                               (rule "greater_literals" (formula "37") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "37"))
                                                               (rule "mul_literals" (formula "37") (term "1,0"))
                                                               (rule "leq_literals" (formula "37") (term "0"))
                                                                (builtin "One Step Simplification" (formula "37"))
                                                               (rule "true_left" (formula "37"))
                                                               (rule "elimGcdLeq_antec" (formula "37") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(4(6(#)))"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "37") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "37"))
                                                               (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0"))
                                                               (rule "neg_literal" (formula "37") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "37") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                                               (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "37") (term "0,0"))
                                                               (rule "qeq_literals" (formula "37") (term "0"))
                                                                (builtin "One Step Simplification" (formula "37"))
                                                               (rule "true_left" (formula "37"))
                                                               (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "63"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "17") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                               (rule "inEqSimp_exactShadow1" (formula "60") (ifseqformula "64"))
                                                               (rule "mul_literals" (formula "60") (term "1,0,1"))
                                                               (rule "greater_literals" (formula "60") (term "0"))
                                                                (builtin "One Step Simplification" (formula "60"))
                                                               (rule "polySimp_rightDist" (formula "60") (term "0,0"))
                                                               (rule "mul_literals" (formula "60") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "60") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                               (rule "add_literals" (formula "60") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "60"))
                                                               (rule "mul_literals" (formula "60") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "60") (ifseqformula "13"))
                                                               (rule "leq_literals" (formula "60") (term "0"))
                                                                (builtin "One Step Simplification" (formula "60"))
                                                               (rule "true_left" (formula "60"))
                                                               (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "61"))
                                                               (rule "mul_literals" (formula "13") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                               (rule "add_literals" (formula "13") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                               (rule "mul_literals" (formula "13") (term "1"))
                                                               (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "16"))
                                                               (rule "greater_literals" (formula "13") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "13"))
                                                               (rule "mul_literals" (formula "13") (term "1,0"))
                                                               (rule "leq_literals" (formula "13") (term "0"))
                                                                (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                               (rule "inEqSimp_exactShadow3" (formula "57") (ifseqformula "58"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "57") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "57") (term "0"))
                                                               (rule "add_literals" (formula "57") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "57") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                               (rule "mul_literals" (formula "57") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "57") (ifseqformula "15"))
                                                               (rule "leq_literals" (formula "57") (term "0"))
                                                                (builtin "One Step Simplification" (formula "57"))
                                                               (rule "true_left" (formula "57"))
                                                               (rule "inEqSimp_exactShadow3" (formula "57") (ifseqformula "65"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "57") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "57") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "57") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "57") (term "0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "57") (term "1,0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "64"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "56") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "56") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "56") (term "0,0"))
                                                               (rule "add_literals" (formula "56") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "56"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "1,1"))
                                                               (rule "mul_literals" (formula "56") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "56") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "65"))
                                                               (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                               (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "14") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                               (rule "add_literals" (formula "14") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                               (rule "mul_literals" (formula "14") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "64") (ifseqformula "59"))
                                                               (rule "polySimp_mulComm0" (formula "64") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "64") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "64"))
                                                               (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "64") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "64") (ifseqformula "66"))
                                                               (rule "polySimp_mulComm0" (formula "64") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "64") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "64") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "64") (term "0,0"))
                                                               (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "64") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "64"))
                                                               (rule "mul_literals" (formula "64") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "62"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "0,0"))
                                                               (rule "mul_literals" (formula "56") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "56") (term "0,0"))
                                                               (rule "add_literals" (formula "56") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "56") (term "0"))
                                                               (rule "add_literals" (formula "56") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "56") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "56"))
                                                               (rule "mul_literals" (formula "56") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "56") (ifseqformula "15"))
                                                               (rule "leq_literals" (formula "56") (term "0"))
                                                                (builtin "One Step Simplification" (formula "56"))
                                                               (rule "true_left" (formula "56"))
                                                               (rule "expand_moduloInteger" (formula "48") (term "0"))
                                                               (rule "replace_int_RANGE" (formula "48") (term "1,1,0"))
                                                               (rule "replace_int_MIN" (formula "48") (term "0,0"))
                                                               (rule "replace_int_HALFRANGE" (formula "48") (term "0,0,1,0"))
                                                               (rule "polySimp_homoEq" (formula "48"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                               (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                               (rule "applyEq" (formula "48") (term "0,1,0") (ifseqformula "12"))
                                                               (rule "polySimp_pullOutFactor1" (formula "48") (term "0"))
                                                               (rule "add_literals" (formula "48") (term "1,0"))
                                                               (rule "times_zero_1" (formula "48") (term "0"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "true_left" (formula "48"))
                                                               (rule "nnf_imp2or" (formula "20") (term "0"))
                                                               (rule "nnf_imp2or" (formula "49") (term "0"))
                                                               (rule "nnf_imp2or" (formula "46") (term "0"))
                                                               (rule "nnf_imp2or" (formula "21") (term "0"))
                                                               (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                               (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                                               (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                                               (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,0"))
                                                               (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "47") (term "0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "0,1,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "0,0,1,0,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "47") (term "1,0,1,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "47") (term "0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "47") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "20") (term "0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0"))
                                                               (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "20") (term "1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "20") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "1,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "1,0,1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "20") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "1,0,0,1,1,0,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "1,1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "49") (term "0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0"))
                                                               (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "49") (term "1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "49") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "49") (term "1,0,0,1,1,0,0"))
                                                               (rule "add_literals" (formula "49") (term "0,0,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "49") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "49") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "49") (term "1,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "49") (term "1,0,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "46") (term "0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "0,1,0,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "46") (term "0,0,1,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "46") (term "1,0,1,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "46") (term "0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "0,1,0,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0"))
                                                               (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0,0"))
                                                               (rule "add_zero_right" (formula "46") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "46") (term "1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,1,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "1,1,0,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "21") (term "0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0"))
                                                               (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "21") (term "1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "21") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "21") (term "1,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "21") (term "1,0,1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "21") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "21") (term "1,0,0,1,1,0,0"))
                                                               (rule "add_literals" (formula "21") (term "0,0,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                                                               (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "43") (inst "i=i_1") (inst "i_0=i_0"))
                                                                (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "68")) (ifInst ""  (formula "11")))
                                                               (rule "expand_inInt" (formula "43") (term "1,0,0,1"))
                                                               (rule "expand_inInt" (formula "43") (term "1,0,0,1,0"))
                                                               (rule "replace_int_MAX" (formula "43") (term "1,0,1,0,0,1"))
                                                               (rule "replace_int_MIN" (formula "43") (term "0,1,1,0,0,1"))
                                                               (rule "replace_int_MIN" (formula "43") (term "0,1,1,0,0,1,0"))
                                                               (rule "replace_int_MAX" (formula "43") (term "1,0,1,0,0,1,0"))
                                                               (rule "andLeft" (formula "43"))
                                                               (rule "andLeft" (formula "43"))
                                                               (rule "andLeft" (formula "43"))
                                                               (rule "andLeft" (formula "43"))
                                                               (rule "andLeft" (formula "43"))
                                                               (rule "andLeft" (formula "44"))
                                                               (rule "andLeft" (formula "43"))
                                                               (rule "andLeft" (formula "43"))
                                                               (rule "notLeft" (formula "43"))
                                                               (rule "translateJavaSubInt" (formula "50") (term "0,2,1,1,0"))
                                                               (rule "translateJavaSubInt" (formula "48") (term "3,0"))
                                                               (rule "translateJavaShiftLeftInt" (formula "44") (term "1"))
                                                               (rule "eqSymm" (formula "50") (term "1,0"))
                                                               (rule "polySimp_elimSub" (formula "48") (term "3,0"))
                                                               (rule "mul_literals" (formula "48") (term "1,3,0"))
                                                               (rule "polySimp_elimSub" (formula "50") (term "0,2,0,1,0"))
                                                               (rule "mul_literals" (formula "50") (term "1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "48") (term "3,0"))
                                                               (rule "polySimp_addComm0" (formula "50") (term "0,2,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "49") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "50") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "49") (term "0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "49") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "47"))
                                                               (rule "inEqSimp_commuteLeq" (formula "45"))
                                                               (rule "inEqSimp_commuteLeq" (formula "46"))
                                                               (rule "inEqSimp_commuteLeq" (formula "43"))
                                                               (rule "applyEq" (formula "45") (term "1") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "44") (term "0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "70") (term "0") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "44") (term "1") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "43") (term "0") (ifseqformula "38"))
                                                               (rule "eqSymm" (formula "43"))
                                                               (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "44") (term "1,3,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "46") (term "1,0,1,0") (ifseqformula "40"))
                                                               (rule "applyEq" (formula "45") (term "0,1,0,0,1,0,0,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "46") (term "0,1,0,0,1,0,0,0") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "45") (term "0,1,0,0,1,1,0") (ifseqformula "38"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "45") (term "1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "45") (term "1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,1,0"))
                                                               (rule "mul_literals" (formula "45") (term "0,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "45") (term "1,1,1,1,0"))
                                                               (rule "javaShiftLeftIntDef" (formula "43") (term "0"))
                                                               (rule "mod_axiom" (formula "43") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                                                               (rule "shiftLeftDef" (formula "43") (term "0,0"))
                                                               (rule "polySimp_elimNeg" (formula "43") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "43") (term "0,1,1,0,0"))
                                                               (rule "shiftLeftPositiveShiftDef" (formula "43") (term "2,0,0"))
                                                               (rule "polySimp_elimOneLeft0" (formula "43") (term "2,0,0"))
                                                               (rule "shiftRightPositiveShiftDef" (formula "43") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "43") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,0"))
                                                               (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "41") (term "0"))
                                                               (rule "replace_known_left" (formula "41") (term "1,0") (ifseqformula "24"))
                                                                (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "71")) (ifInst ""  (formula "42")))
                                                               (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "52") (term "0"))
                                                               (rule "wellFormedAnonEQ" (formula "52") (term "1,0") (ifseqformula "49"))
                                                               (rule "replace_known_right" (formula "52") (term "0,0,0") (ifseqformula "72"))
                                                                (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "24")) (ifInst ""  (formula "48")) (ifInst ""  (formula "53")))
                                                               (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "42") (term "0") (inst "i=i_1") (inst "j=j"))
                                                                (builtin "One Step Simplification" (formula "42"))
                                                               (rule "expand_inInt" (formula "42") (term "1,0,0,1,0"))
                                                               (rule "expand_inInt" (formula "42") (term "1,0,0"))
                                                               (rule "replace_int_MAX" (formula "42") (term "1,0,1,0,0,1,0"))
                                                               (rule "replace_int_MIN" (formula "42") (term "0,1,1,0,0,1,0"))
                                                               (rule "replace_int_MIN" (formula "42") (term "0,1,1,0,0"))
                                                               (rule "replace_int_MAX" (formula "42") (term "1,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "42") (term "1,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "42") (term "1,1,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "42") (term "1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "19") (term "0") (inst "i=i_1") (inst "j=j"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "expand_inInt" (formula "19") (term "1,0,0"))
                                                               (rule "expand_inInt" (formula "19") (term "1,0,0,1,0"))
                                                               (rule "replace_int_MAX" (formula "19") (term "1,0,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "19") (term "0,1,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "19") (term "0,1,1,0,0,1,0"))
                                                               (rule "replace_int_MAX" (formula "19") (term "1,0,1,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "19") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "19") (term "1,1,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "53") (term "0") (inst "i=i_1") (inst "j=j"))
                                                                (builtin "One Step Simplification" (formula "53"))
                                                               (rule "expand_inInt" (formula "53") (term "1,0,0,1,0"))
                                                               (rule "expand_inInt" (formula "53") (term "1,0,0"))
                                                               (rule "replace_int_MIN" (formula "53") (term "0,1,1,0,0,1,0"))
                                                               (rule "replace_int_MAX" (formula "53") (term "1,0,1,0,0,1,0"))
                                                               (rule "replace_int_MIN" (formula "53") (term "0,1,1,0,0"))
                                                               (rule "replace_int_MAX" (formula "53") (term "1,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "53") (term "0,0,0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "53") (term "0,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "53") (term "1,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "53") (term "1,1,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "53") (term "1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0"))
                                                               (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "20") (term "0,1,1,0"))
                                                               (rule "translateJavaSubInt" (formula "20") (term "0,1,1,0,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "20") (term "1,0,0,0,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "20") (term "0,1,1,0,1,1,0"))
                                                               (rule "mul_literals" (formula "20") (term "1,0,1,1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "20") (term "0,1,0,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "20") (term "1,0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "20") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "20") (term "1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "0,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "20") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,1,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "20") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "0,0,1,1,1,0"))
                                                               (rule "mul_literals" (formula "20") (term "0,0,0,1,1,1,0"))
                                                               (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "20") (term "0,0,1,0"))
                                                               (rule "translateJavaSubInt" (formula "20") (term "0,1,1,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "20") (term "1,0,0,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "20") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "20") (term "0,1,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "20") (term "1,0,1,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "20") (term "0,1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "20") (term "1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "20") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "20") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "20") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "0,1,0,1,0"))
                                                               (rule "mul_literals" (formula "20") (term "0,0,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "1,0,1,0,1,0"))
                                                               (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "54") (term "1,0,2,0,1,0"))
                                                               (rule "translateJavaSubInt" (formula "54") (term "0,1,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "54") (term "1,0,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "54") (term "1,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "54") (term "0,1,1,1,0,2,0,1,0"))
                                                               (rule "mul_literals" (formula "54") (term "1,0,1,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "54") (term "0,1,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "0,0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "54") (term "1,1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "54") (term "0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "54") (term "1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "0,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "0,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "54") (term "1,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "54") (term "0,2,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "54") (term "0,0,2,0,1,0"))
                                                               (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "21") (term "1,0,2,0,1,0"))
                                                               (rule "translateJavaSubInt" (formula "21") (term "0,1,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "21") (term "1,0,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "21") (term "1,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "21") (term "0,1,1,1,0,2,0,1,0"))
                                                               (rule "mul_literals" (formula "21") (term "1,0,1,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "21") (term "0,1,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "21") (term "1,1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "21") (term "0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "21") (term "1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "0,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "21") (term "0,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "21") (term "1,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "21") (term "0,2,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "21") (term "0,0,2,0,1,0"))
                                                               (rule "nnf_imp2or" (formula "47") (term "0"))
                                                               (rule "nnf_imp2or" (formula "46") (term "0"))
                                                               (rule "expand_moduloInteger" (formula "44") (term "0"))
                                                               (rule "replace_int_HALFRANGE" (formula "44") (term "0,0,1,0"))
                                                               (rule "replace_int_RANGE" (formula "44") (term "1,1,0"))
                                                               (rule "replace_int_MIN" (formula "44") (term "0,0"))
                                                               (rule "polySimp_homoEq" (formula "44"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                                                               (rule "mul_literals" (formula "44") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                               (rule "applyEq" (formula "44") (term "0,1,0") (ifseqformula "12"))
                                                               (rule "polySimp_pullOutFactor1" (formula "44") (term "0"))
                                                               (rule "add_literals" (formula "44") (term "1,0"))
                                                               (rule "times_zero_1" (formula "44") (term "0"))
                                                                (builtin "One Step Simplification" (formula "44"))
                                                               (rule "true_left" (formula "44"))
                                                               (rule "nnf_imp2or" (formula "42") (term "0"))
                                                               (rule "commute_and" (formula "49") (term "1,0"))
                                                               (rule "commute_or" (formula "8") (term "0,0,0"))
                                                               (rule "nnf_imp2or" (formula "19") (term "0"))
                                                               (rule "div_axiom" (formula "12") (term "0,0,0,1,0,0") (inst "quotient=quotient_0"))
                                                               (rule "mul_literals" (formula "12") (term "1,1,1,1,1"))
                                                               (rule "equal_literals" (formula "12") (term "0"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "qeq_literals" (formula "12") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "andLeft" (formula "12"))
                                                               (rule "andLeft" (formula "12"))
                                                               (rule "polySimp_addComm1" (formula "14") (term "1"))
                                                               (rule "add_literals" (formula "14") (term "0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "13"))
                                                               (rule "inEqSimp_homoInEq1" (formula "14"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                               (rule "applyEq" (formula "15") (term "0,1,1,2,1,0,0") (ifseqformula "12"))
                                                               (rule "polySimp_addComm0" (formula "15") (term "1,2,1,0,0"))
                                                               (rule "applyEq" (formula "15") (term "0,1,1,1,1,1,0,0") (ifseqformula "12"))
                                                               (rule "polySimp_addComm0" (formula "15") (term "1,1,1,1,0,0"))
                                                               (rule "applyEq" (formula "15") (term "0,0,0,1,0,0") (ifseqformula "12"))
                                                               (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                                               (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                               (rule "mul_literals" (formula "14") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0"))
                                                               (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "15") (term "0,1,0,0") (ifseqformula "13"))
                                                               (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "15") (term "1,1,0,0,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,0"))
                                                               (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,0"))
                                                               (rule "leq_literals" (formula "15") (term "0,0,1,0,0"))
                                                                (builtin "One Step Simplification" (formula "15"))
                                                               (rule "mod_axiom" (formula "15") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                                               (rule "polySimp_homoEq" (formula "15"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                               (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                               (rule "add_zero_left" (formula "15") (term "0,0,0"))
                                                               (rule "polySimp_sepPosMonomial" (formula "15"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "0,1"))
                                                               (rule "newSym_eq" (formula "15") (inst "l=l_1") (inst "newSymDef=add(mul(l_0, Z(0(#))),
    mul(pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                int::final(de.wiesler.Tree::final(self,
                                                  de.wiesler.Classifier::$tree),
                           de.wiesler.Tree::$log_buckets))),
        Z(0(#))))"))
                                                               (rule "times_zero_1" (formula "15") (term "1,1,1"))
                                                               (rule "times_zero_1" (formula "15") (term "0,1,1"))
                                                               (rule "add_zero_left" (formula "15") (term "1,1"))
                                                               (rule "add_zero_right" (formula "15") (term "1"))
                                                               (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "15"))
                                                               (rule "polySimp_homoEq" (formula "16"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                                               (rule "polySimp_sepPosMonomial" (formula "16"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
                                                               (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "16"))
                                                               (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                               (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=l_1"))
                                                               (rule "equal_literals" (formula "15") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "15"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                                               (rule "polySimp_homoEq" (formula "15"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "15") (term "1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,1,1,1,0"))
                                                               (rule "add_literals" (formula "15") (term "1,1,0,0,1,1,1,0"))
                                                               (rule "times_zero_1" (formula "15") (term "1,0,0,1,1,1,0"))
                                                               (rule "add_zero_right" (formula "15") (term "0,0,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0"))
                                                               (rule "add_literals" (formula "15") (term "1,0,0"))
                                                               (rule "times_zero_1" (formula "15") (term "0,0"))
                                                               (rule "add_zero_left" (formula "15") (term "0"))
                                                               (rule "polySimp_invertEq" (formula "15"))
                                                               (rule "mul_literals" (formula "15") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "14"))
                                                               (rule "mul_literals" (formula "10") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                               (rule "add_literals" (formula "10") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                               (rule "mul_literals" (formula "10") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                                               (rule "leq_literals" (formula "10") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                               (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "10") (term "0,0"))
                                                               (rule "leq_literals" (formula "10") (term "0"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "12"))
                                                               (rule "polySimp_mulAssoc" (formula "14") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "14") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                                               (rule "leq_literals" (formula "14") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "14"))
                                                               (rule "neg_literal" (formula "14") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                               (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "14") (term "0,0"))
                                                               (rule "qeq_literals" (formula "14") (term "0"))
                                                                (builtin "One Step Simplification" (formula "14"))
                                                               (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "14"))
                                                               (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "10"))
                                                               (rule "leq_literals" (formula "15"))
                                                               (rule "true_left" (formula "15"))
                                                               (rule "applyEqRigid" (formula "15") (term "0,1") (ifseqformula "10"))
                                                               (rule "mul_literals" (formula "15") (term "1"))
                                                               (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "applyEq" (formula "15") (term "0,1,1") (ifseqformula "10"))
                                                               (rule "mul_literals" (formula "15") (term "1,1"))
                                                               (rule "add_zero_right" (formula "15") (term "1"))
                                                               (rule "applyEqRigid" (formula "17") (term "0,0,1,0") (ifseqformula "10"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                               (rule "add_zero_left" (formula "17") (term "1,0"))
                                                               (rule "applyEqRigid" (formula "13") (term "1") (ifseqformula "10"))
                                                               (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "11"))
                                                               (rule "leq_literals" (formula "14") (term "0"))
                                                                (builtin "One Step Simplification" (formula "14"))
                                                               (rule "true_left" (formula "14"))
                                                               (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "12"))
                                                               (rule "leq_literals" (formula "14") (term "0"))
                                                                (builtin "One Step Simplification" (formula "14"))
                                                               (rule "true_left" (formula "14"))
                                                               (rule "jdiv_axiom" (formula "16") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "0,0,2,1"))
                                                               (rule "eqSymm" (formula "16"))
                                                               (rule "inEqSimp_subsumption6" (formula "16") (term "0,0") (ifseqformula "19"))
                                                               (rule "greater_literals" (formula "16") (term "0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                                               (rule "leq_literals" (formula "16") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "eqSymm" (formula "16"))
                                                               (rule "applyEq" (formula "71") (term "1") (ifseqformula "16"))
                                                               (rule "applyEq" (formula "64") (term "0,1,1") (ifseqformula "16"))
                                                               (rule "applyEq" (formula "63") (term "0") (ifseqformula "16"))
                                                               (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "16"))
                                                               (rule "applyEqRigid" (formula "69") (term "0") (ifseqformula "16"))
                                                               (rule "applyEq" (formula "68") (term "0,1,1") (ifseqformula "16"))
                                                               (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "16"))
                                                               (rule "applyEqRigid" (formula "1") (term "0,0,0,2,0,0,0") (ifseqformula "16"))
                                                               (rule "applyEqRigid" (formula "73") (term "1,0,1") (ifseqformula "16"))
                                                               (rule "polyDiv_pullOut" (formula "73") (term "1,0,1") (inst "polyDivCoeff=l_0"))
                                                               (rule "equal_literals" (formula "73") (term "0,1,0,1"))
                                                                (builtin "One Step Simplification" (formula "73"))
                                                               (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,1,0,1"))
                                                               (rule "polySimp_pullOutFactor0" (formula "73") (term "0,0,1,0,1"))
                                                               (rule "add_literals" (formula "73") (term "1,0,0,1,0,1"))
                                                               (rule "times_zero_1" (formula "73") (term "0,0,1,0,1"))
                                                               (rule "div_literals" (formula "73") (term "0,1,0,1"))
                                                               (rule "add_zero_left" (formula "73") (term "1,0,1"))
                                                               (rule "polyDiv_pullOut" (formula "1") (term "0,0,0,2,0,0,0") (inst "polyDivCoeff=l_0"))
                                                               (rule "equal_literals" (formula "1") (term "0,0,0,0,2,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0,2,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,0,0,2,0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "1,0,0,0,0,0,2,0,0,0"))
                                                               (rule "times_zero_1" (formula "1") (term "0,0,0,0,0,2,0,0,0"))
                                                               (rule "div_literals" (formula "1") (term "0,0,0,0,2,0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0,0,2,0,0,0"))
                                                               (rule "polyDiv_pullOut" (formula "17") (term "0") (inst "polyDivCoeff=l_0"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,2,0"))
                                                               (rule "equal_literals" (formula "17") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "1,0,0,0"))
                                                               (rule "times_zero_1" (formula "17") (term "0,0,0"))
                                                               (rule "div_literals" (formula "17") (term "0,0"))
                                                               (rule "add_zero_left" (formula "17") (term "0"))
                                                               (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                                                               (rule "leq_literals" (formula "17") (term "0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "true_left" (formula "17"))
                                                               (rule "polyDiv_pullOut" (formula "67") (term "0,1,1") (inst "polyDivCoeff=l_0"))
                                                               (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,2,0,1,1"))
                                                               (rule "equal_literals" (formula "67") (term "0,0,1,1"))
                                                                (builtin "One Step Simplification" (formula "67"))
                                                               (rule "polySimp_pullOutFactor0" (formula "67") (term "0,0,0,1,1"))
                                                               (rule "add_literals" (formula "67") (term "1,0,0,0,1,1"))
                                                               (rule "times_zero_1" (formula "67") (term "0,0,0,1,1"))
                                                               (rule "div_literals" (formula "67") (term "0,0,1,1"))
                                                               (rule "add_zero_left" (formula "67") (term "0,1,1"))
                                                               (rule "polyDiv_pullOut" (formula "68") (term "0") (inst "polyDivCoeff=l_0"))
                                                               (rule "equal_literals" (formula "68") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "68"))
                                                               (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0" (formula "68") (term "0,0,0"))
                                                               (rule "add_literals" (formula "68") (term "1,0,0,0"))
                                                               (rule "times_zero_1" (formula "68") (term "0,0,0"))
                                                               (rule "div_literals" (formula "68") (term "0,0"))
                                                               (rule "add_zero_left" (formula "68") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "68"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "68") (term "0"))
                                                               (rule "add_literals" (formula "68") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "68") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "68"))
                                                               (rule "mul_literals" (formula "68") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "68") (ifseqformula "18"))
                                                               (rule "leq_literals" (formula "68") (term "0"))
                                                                (builtin "One Step Simplification" (formula "68"))
                                                               (rule "true_left" (formula "68"))
                                                               (rule "polyDiv_pullOut" (formula "17") (term "0,1,1") (inst "polyDivCoeff=l_0"))
                                                               (rule "equal_literals" (formula "17") (term "0,0,1,1"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,1"))
                                                               (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0,0,1,1"))
                                                               (rule "add_literals" (formula "17") (term "1,0,0,0,1,1"))
                                                               (rule "times_zero_1" (formula "17") (term "0,0,0,1,1"))
                                                               (rule "div_literals" (formula "17") (term "0,0,1,1"))
                                                               (rule "add_zero_left" (formula "17") (term "0,1,1"))
                                                               (rule "polyDiv_pullOut" (formula "62") (term "0") (inst "polyDivCoeff=l_0"))
                                                               (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,2,0"))
                                                               (rule "equal_literals" (formula "62") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "62"))
                                                               (rule "polySimp_pullOutFactor0" (formula "62") (term "0,0,0"))
                                                               (rule "add_literals" (formula "62") (term "1,0,0,0"))
                                                               (rule "times_zero_1" (formula "62") (term "0,0,0"))
                                                               (rule "div_literals" (formula "62") (term "0,0"))
                                                               (rule "add_zero_left" (formula "62") (term "0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "62"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "62") (term "0"))
                                                               (rule "add_literals" (formula "62") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "62") (term "1,0"))
                                                               (rule "add_zero_right" (formula "62") (term "0"))
                                                               (rule "leq_literals" (formula "62"))
                                                               (rule "true_left" (formula "62"))
                                                               (rule "polyDiv_pullOut" (formula "62") (term "0,1,1") (inst "polyDivCoeff=l_0"))
                                                               (rule "equal_literals" (formula "62") (term "0,0,1,1"))
                                                                (builtin "One Step Simplification" (formula "62"))
                                                               (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,1,1"))
                                                               (rule "polySimp_pullOutFactor0" (formula "62") (term "0,0,0,1,1"))
                                                               (rule "add_literals" (formula "62") (term "1,0,0,0,1,1"))
                                                               (rule "times_zero_1" (formula "62") (term "0,0,0,1,1"))
                                                               (rule "div_literals" (formula "62") (term "0,0,1,1"))
                                                               (rule "add_zero_left" (formula "62") (term "0,1,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "62") (term "1"))
                                                               (rule "add_literals" (formula "62") (term "1,1,1"))
                                                               (rule "times_zero_1" (formula "62") (term "1,1"))
                                                               (rule "add_zero_right" (formula "62") (term "1"))
                                                               (rule "polyDiv_pullOut" (formula "67") (term "1") (inst "polyDivCoeff=l_0"))
                                                               (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,2,1"))
                                                               (rule "equal_literals" (formula "67") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "67"))
                                                               (rule "polySimp_pullOutFactor0" (formula "67") (term "0,0,1"))
                                                               (rule "add_literals" (formula "67") (term "1,0,0,1"))
                                                               (rule "times_zero_1" (formula "67") (term "0,0,1"))
                                                               (rule "div_literals" (formula "67") (term "0,1"))
                                                               (rule "add_zero_left" (formula "67") (term "1"))
                                                               (rule "polyDiv_pullOut" (formula "16") (term "1") (inst "polyDivCoeff=l_0"))
                                                               (rule "equal_literals" (formula "16") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1"))
                                                               (rule "polySimp_pullOutFactor0" (formula "16") (term "0,0,1"))
                                                               (rule "add_literals" (formula "16") (term "1,0,0,1"))
                                                               (rule "times_zero_1" (formula "16") (term "0,0,1"))
                                                               (rule "div_literals" (formula "16") (term "0,1"))
                                                               (rule "add_zero_left" (formula "16") (term "1"))
                                                               (rule "inEqSimp_exactShadow1" (formula "65") (ifseqformula "67"))
                                                               (rule "mul_literals" (formula "65") (term "1,0,1"))
                                                               (rule "greater_literals" (formula "65") (term "0"))
                                                                (builtin "One Step Simplification" (formula "65"))
                                                               (rule "polySimp_rightDist" (formula "65") (term "0,0"))
                                                               (rule "mul_literals" (formula "65") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "65") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "65") (term "0"))
                                                               (rule "add_literals" (formula "65") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "65"))
                                                               (rule "mul_literals" (formula "65") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "65") (ifseqformula "18"))
                                                               (rule "leq_literals" (formula "65") (term "0"))
                                                                (builtin "One Step Simplification" (formula "65"))
                                                               (rule "true_left" (formula "65"))
                                                               (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "68"))
                                                               (rule "polySimp_mulComm0" (formula "62") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "62") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "62") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "62") (term "0,0"))
                                                               (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "62") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "62"))
                                                               (rule "mul_literals" (formula "62") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "67"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "17") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                               (rule "add_literals" (formula "17") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                               (rule "mul_literals" (formula "17") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                                                               (rule "leq_literals" (formula "17") (term "0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "true_left" (formula "17"))
                                                               (rule "commute_or" (formula "53") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "23") (term "0,0"))
                                                               (rule "nnf_imp2or" (formula "55") (term "0"))
                                                               (rule "commute_or_2" (formula "56") (term "0,0"))
                                                               (rule "commute_or" (formula "52") (term "0,0,0"))
                                                               (rule "arrayLengthIsAShort" (formula "40") (term "0"))
                                                               (rule "expand_inShort" (formula "40"))
                                                               (rule "replace_short_MIN" (formula "40") (term "0,1"))
                                                               (rule "replace_short_MAX" (formula "40") (term "1,0"))
                                                               (rule "andLeft" (formula "40"))
                                                               (rule "inEqSimp_commuteLeq" (formula "41"))
                                                               (rule "applyEq" (formula "40") (term "0") (ifseqformula "42"))
                                                               (rule "inEqSimp_homoInEq0" (formula "40"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                               (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                               (rule "inEqSimp_homoInEq1" (formula "41"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "41") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "41") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "40"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                               (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq0" (formula "40") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "40") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                                                               (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                               (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "40") (term "0,0"))
                                                               (rule "qeq_literals" (formula "40") (term "0"))
                                                                (builtin "One Step Simplification" (formula "40"))
                                                               (rule "true_left" (formula "40"))
                                                               (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                                               (rule "expand_inShort" (formula "19"))
                                                               (rule "replace_short_MIN" (formula "19") (term "0,1"))
                                                               (rule "replace_short_MAX" (formula "19") (term "1,0"))
                                                               (rule "andLeft" (formula "19"))
                                                               (rule "inEqSimp_commuteLeq" (formula "20"))
                                                               (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "19"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "21") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                               (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                                               (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                                                               (rule "leq_literals" (formula "20") (term "0"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                                               (rule "expand_inShort" (formula "23"))
                                                               (rule "replace_short_MIN" (formula "23") (term "0,1"))
                                                               (rule "replace_short_MAX" (formula "23") (term "1,0"))
                                                               (rule "andLeft" (formula "23"))
                                                               (rule "inEqSimp_commuteLeq" (formula "23"))
                                                               (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "69"))
                                                               (rule "leq_literals" (formula "23") (term "0"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "arrayLengthNotNegative" (formula "69") (term "0"))
                                                               (rule "inEqSimp_subsumption1" (formula "69") (ifseqformula "68"))
                                                               (rule "leq_literals" (formula "69") (term "0"))
                                                                (builtin "One Step Simplification" (formula "69"))
                                                               (rule "true_left" (formula "69"))
                                                               (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                                                               (rule "arrayLengthIsAShort" (formula "40") (term "0"))
                                                               (rule "expand_inShort" (formula "40"))
                                                               (rule "replace_short_MIN" (formula "40") (term "0,1"))
                                                               (rule "replace_short_MAX" (formula "40") (term "1,0"))
                                                               (rule "andLeft" (formula "40"))
                                                               (rule "inEqSimp_commuteLeq" (formula "40"))
                                                               (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "37"))
                                                               (rule "leq_literals" (formula "40") (term "0"))
                                                                (builtin "One Step Simplification" (formula "40"))
                                                               (rule "true_left" (formula "40"))
                                                               (rule "arrayLengthNotNegative" (formula "42") (term "0"))
                                                               (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "42") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq0" (formula "42") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0"))
                                                               (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "42") (term "0,0"))
                                                               (rule "qeq_literals" (formula "42") (term "0"))
                                                                (builtin "One Step Simplification" (formula "42"))
                                                               (rule "true_left" (formula "42"))
                                                               (rule "commute_or_2" (formula "26") (term "0,0"))
                                                               (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "49") (term "0"))
                                                               (rule "replace_known_left" (formula "49") (term "0,1") (ifseqformula "50"))
                                                                (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "73")) (ifInst ""  (formula "29")))
                                                               (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "50") (term "0") (inst "i=i_1") (inst "j=j"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "expand_inInt" (formula "50") (term "1,0,0,1,0"))
                                                               (rule "expand_inInt" (formula "50") (term "1,0,0"))
                                                               (rule "replace_int_MIN" (formula "50") (term "0,1,1,0,0,1,0"))
                                                               (rule "replace_int_MAX" (formula "50") (term "1,0,1,0,0,1,0"))
                                                               (rule "replace_int_MAX" (formula "50") (term "1,0,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "50") (term "0,1,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "50") (term "1,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "50") (term "1,1,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "50") (term "1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "commute_or" (formula "9") (term "0,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                                               (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                                               (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "46") (term "0") (inst "i=i_1"))
                                                                (builtin "One Step Simplification" (formula "46"))
                                                               (rule "expand_inInt" (formula "46") (term "1,0,0"))
                                                               (rule "replace_int_MAX" (formula "46") (term "1,0,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "46") (term "0,1,1,0,0"))
                                                               (rule "translateJavaSubInt" (formula "46") (term "1,1,0,0,0"))
                                                               (rule "translateJavaAddInt" (formula "46") (term "0,2,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "46") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "46") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "46") (term "0,2,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "46") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "46") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "46") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0"))
                                                               (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "57") (term "0") (inst "i=i_1"))
                                                                (builtin "One Step Simplification" (formula "57"))
                                                               (rule "expand_inInt" (formula "57") (term "1,0,0"))
                                                               (rule "replace_int_MAX" (formula "57") (term "1,0,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "57") (term "0,1,1,0,0"))
                                                               (rule "translateJavaSubInt" (formula "57") (term "1,1,0,0,0"))
                                                               (rule "translateJavaAddInt" (formula "57") (term "0,2,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "57") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "57") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "57") (term "0,2,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "57") (term "1,1,0,0,0"))
                                                               (rule "add_literals" (formula "57") (term "0,1,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "57") (term "0,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "57") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "57") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                                               (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                                               (rule "nnf_imp2or" (formula "47") (term "0,1,0"))
                                                               (rule "nnf_imp2or" (formula "24") (term "0,1,0"))
                                                               (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "52") (term "1,0,2,0,1,0"))
                                                               (rule "translateJavaSubInt" (formula "52") (term "0,1,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "52") (term "1,0,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "52") (term "1,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "52") (term "0,1,1,1,0,2,0,1,0"))
                                                               (rule "mul_literals" (formula "52") (term "1,0,1,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "52") (term "0,1,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "52") (term "0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "0,0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "52") (term "1,1,0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "52") (term "0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "52") (term "1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "52") (term "1,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "0,1,1,0,2,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "52") (term "0,1,0,2,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "52") (term "0,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "52") (term "1,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "0,1,0,1,0,2,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "52") (term "0,2,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "52") (term "0,0,2,0,1,0"))
                                                               (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "51") (term "0,0,1,0"))
                                                               (rule "translateJavaSubInt" (formula "51") (term "0,1,1,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "51") (term "1,0,0,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "51") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "51") (term "0,1,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "51") (term "1,0,1,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "51") (term "0,1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "0,0,1,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "51") (term "1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "51") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "0,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "51") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "51") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "51") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "0,0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "0,1,0,1,0"))
                                                               (rule "mul_literals" (formula "51") (term "0,0,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "51") (term "1,0,1,0,1,0"))
                                                               (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "51") (term "0,1,1,0"))
                                                               (rule "translateJavaSubInt" (formula "51") (term "0,1,1,0,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "51") (term "1,0,0,0,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "51") (term "0,1,1,0,1,1,0"))
                                                               (rule "mul_literals" (formula "51") (term "1,0,1,1,0,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "51") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "51") (term "0,1,0,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "0,0,1,0,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "51") (term "1,0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "51") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "51") (term "1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "0,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "51") (term "0,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm1" (formula "51") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "0,1,0,0,1,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "51") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "0,0,1,0,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "51") (term "0,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "51") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "0,0,1,1,1,0"))
                                                               (rule "mul_literals" (formula "51") (term "0,0,0,1,1,1,0"))
                                                               (rule "commute_or_2" (formula "8") (term "0,0"))
                                                               (rule "nnf_notAnd" (formula "58") (term "0,0"))
                                                               (rule "nnf_imp2or" (formula "58") (term "0,1,0"))
                                                               (rule "nnf_imp2or" (formula "50") (term "0"))
                                                               (rule "nnf_notAnd" (formula "52") (term "0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,0"))
                                                               (rule "add_zero_left" (formula "52") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "52") (term "1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "52") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "52") (term "1,0,1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "52") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "52") (term "1,0,0,1,1,0,0"))
                                                               (rule "add_literals" (formula "52") (term "0,0,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "52") (term "1,1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "51") (term "0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0"))
                                                               (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "51") (term "1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "51") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "51") (term "1,0,0,1,1,0,0"))
                                                               (rule "add_literals" (formula "51") (term "0,0,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "51") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "51") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "51") (term "1,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "51") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "51") (term "1,0,1,0,0"))
                                                               (rule "nnf_imp2or" (formula "46") (term "0"))
                                                               (rule "nnf_imp2or" (formula "57") (term "0"))
                                                               (rule "nnf_notAnd" (formula "47") (term "0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,0"))
                                                               (rule "add_zero_left" (formula "47") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "47") (term "0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "1,0,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "47") (term "1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "47") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "1,0,0,1,1,0,0"))
                                                               (rule "add_literals" (formula "47") (term "0,0,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "47") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "1,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "1,0,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "24") (term "0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "1,0,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "24") (term "1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "24") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "1,0,0,1,1,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "24") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "1,0,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "47") (term "0,0,1,0"))
                                                               (rule "nnf_notAnd" (formula "24") (term "0,0,1,0"))
                                                               (rule "div_axiom" (formula "14") (term "0") (inst "quotient=quotient_1"))
                                                               (rule "mul_literals" (formula "14") (term "1,1,1,1,1"))
                                                               (rule "equal_literals" (formula "14") (term "0"))
                                                                (builtin "One Step Simplification" (formula "14"))
                                                               (rule "qeq_literals" (formula "14") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "14"))
                                                               (rule "andLeft" (formula "14"))
                                                               (rule "andLeft" (formula "14"))
                                                               (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                                                               (rule "add_literals" (formula "16") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "16") (term "1"))
                                                               (rule "add_literals" (formula "16") (term "0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "15"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "16"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                               (rule "applyEq" (formula "14") (term "0") (ifseqformula "17"))
                                                               (rule "eqSymm" (formula "14"))
                                                               (rule "applyEq" (formula "16") (term "0,1,0,0") (ifseqformula "14"))
                                                               (rule "mul_literals" (formula "16") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "16") (term "0,0"))
                                                               (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "14"))
                                                               (rule "mul_literals" (formula "15") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "15") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                                               (rule "mul_literals" (formula "16") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                               (rule "mul_literals" (formula "15") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "21"))
                                                               (rule "leq_literals" (formula "15") (term "0"))
                                                                (builtin "One Step Simplification" (formula "15"))
                                                               (rule "true_left" (formula "15"))
                                                               (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "24"))
                                                               (rule "leq_literals" (formula "15") (term "0"))
                                                                (builtin "One Step Simplification" (formula "15"))
                                                               (rule "true_left" (formula "15"))
                                                               (rule "commute_or_2" (formula "57") (term "0,0"))
                                                               (rule "commute_or_2" (formula "56") (term "0,0"))
                                                               (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                                               (rule "commute_or" (formula "26") (term "1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "59") (term "0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "59") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "59") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "59") (term "0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "59") (term "1,0,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "59") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "59") (term "0,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "59") (term "1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "59") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "59") (term "1,0,0,1,1,0,0"))
                                                               (rule "add_literals" (formula "59") (term "0,0,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "59") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "59") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "59") (term "1,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "59") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "59") (term "1,0,1,0,0"))
                                                               (rule "shift_paren_or" (formula "60") (term "0,0,0"))
                                                               (rule "nnf_imp2or" (formula "51") (term "0,1,0"))
                                                               (rule "nnf_notAnd" (formula "59") (term "0,0,1,0"))
                                                               (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "50") (term "0") (inst "i=i_1"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "expand_inInt" (formula "50") (term "1,0,0"))
                                                               (rule "replace_int_MAX" (formula "50") (term "1,0,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "50") (term "0,1,1,0,0"))
                                                               (rule "translateJavaSubInt" (formula "50") (term "1,1,0,0,0"))
                                                               (rule "translateJavaAddInt" (formula "50") (term "0,2,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "50") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "50") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "50") (term "0,2,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "50") (term "1,1,0,0,0"))
                                                               (rule "add_literals" (formula "50") (term "0,1,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "50") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "50") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                                               (rule "nnf_notAnd" (formula "58") (term "0,0"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch " self.sorted_splitters[ l_0 * -1 + indices[i_0]@anon_heap_LOOP_0<<anonHeapFunction>>] >= 1 + values[begin + i_0] TRUE"
                                                                  (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "67"))
                                                                  (rule "greater_literals" (formula "2") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "andLeft" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                  (rule "add_literals" (formula "2") (term "0"))
                                                                  (rule "leq_literals" (formula "2"))
                                                                  (rule "closeFalse" (formula "2"))
                                                               )
                                                               (branch " self.sorted_splitters[ l_0 * -1 + indices[i_0]@anon_heap_LOOP_0<<anonHeapFunction>>] >= 1 + values[begin + i_0] FALSE"
                                                                  (rule "inEqSimp_geqRight" (formula "73"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "67"))
                                                                  (rule "greater_literals" (formula "2") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "andLeft" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                  (rule "add_literals" (formula "2") (term "0"))
                                                                  (rule "leq_literals" (formula "2"))
                                                                  (rule "closeFalse" (formula "2"))
                                                               )
                                                            )
                                                         )
                                                         (branch "Usage"
                                                             (builtin "One Step Simplification" (formula "64"))
                                                            (rule "translateJavaSubInt" (formula "64") (term "0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "64") (term "0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "64") (term "0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "64") (term "0,0,1,0"))
                                                            (rule "assignment_to_primitive_array_component" (formula "64"))
                                                            (branch "Normal Execution (x_arr_2 != null)"
                                                                (builtin "One Step Simplification" (formula "64"))
                                                               (rule "blockEmpty" (formula "64") (term "1"))
                                                               (rule "preincrement" (formula "64") (term "1"))
                                                               (rule "compound_int_cast_expression" (formula "64") (term "1") (inst "#v=x_2"))
                                                               (rule "variableDeclarationAssign" (formula "64") (term "1"))
                                                               (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_23"))
                                                               (rule "remove_parentheses_right" (formula "64") (term "1"))
                                                               (rule "assignmentAdditionInt" (formula "64") (term "1"))
                                                               (branch "Overflow check"
                                                                   (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "expand_inInt" (formula "64"))
                                                                  (rule "replace_int_MAX" (formula "64") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "64") (term "0,1"))
                                                                  (rule "polySimp_addComm0" (formula "64") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "64") (term "1,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "54"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "54") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "48"))
                                                                  (rule "polySimp_mulAssoc" (formula "48") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "38") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "32"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "50"))
                                                                  (rule "times_zero_2" (formula "50") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "50") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "31"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "64") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "64") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                                                                  (rule "add_literals" (formula "64") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "64") (term "1"))
                                                                  (rule "mul_literals" (formula "64") (term "1,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "64") (term "0,1"))
                                                                  (rule "add_literals" (formula "64") (term "0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "33") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "53"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "0,1"))
                                                                  (rule "mul_literals" (formula "53") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "1,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "47"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                                  (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                                  (rule "polySimp_mulLiterals" (formula "49") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "49") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "63") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "63") (term "0,0"))
                                                                  (rule "polySimp_elimOne" (formula "63") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1"))
                                                                  (rule "mul_literals" (formula "63") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "25"))
                                                                  (rule "leq_literals" (formula "19") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "26"))
                                                                  (rule "leq_literals" (formula "28") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "true_left" (formula "28"))
                                                                  (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "3"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "7") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "7") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "49"))
                                                                  (rule "leq_literals" (formula "48") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "true_left" (formula "48"))
                                                                  (rule "inEqSimp_subsumption1" (formula "59") (term "1") (ifseqformula "6"))
                                                                  (rule "leq_literals" (formula "59") (term "0,1"))
                                                                   (builtin "One Step Simplification" (formula "59"))
                                                                  (rule "inEqSimp_leqRight" (formula "59"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "25"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                                                  (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "30") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "30") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "true_left" (formula "30"))
                                                                  (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                                                  (rule "leq_literals" (formula "7") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "27") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "27"))
                                                                  (rule "leq_literals" (formula "18") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "28"))
                                                                  (rule "mul_literals" (formula "18") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                  (rule "mul_literals" (formula "18") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "23"))
                                                                  (rule "leq_literals" (formula "18") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "48"))
                                                                  (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                                  (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "1"))
                                                                  (rule "andLeft" (formula "29"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "29"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                                                  (rule "add_literals" (formula "29") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "29") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "29") (term "0"))
                                                                  (rule "leq_literals" (formula "29"))
                                                                  (rule "closeFalse" (formula "29"))
                                                               )
                                                               (branch "Usage"
                                                                   (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "translateJavaAddInt" (formula "64") (term "0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "64") (term "0,1,0"))
                                                                  (rule "widening_identity_cast_5" (formula "64") (term "1"))
                                                                  (rule "assignment" (formula "64") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "blockEmpty" (formula "64") (term "1"))
                                                                  (rule "lsContinue" (formula "64") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "0,0"))
                                                                  (rule "mul_literals" (formula "64") (term "0,0,0"))
                                                                  (rule "precOfInt" (formula "64"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "54"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "54") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "48"))
                                                                  (rule "polySimp_mulAssoc" (formula "48") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "38") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "64") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "64") (term "0,0,1,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "0,0,0,1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "0,0,1,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "0,0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "64") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "64") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "64") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "64") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "64") (term "0,0,0,0,1"))
                                                                  (rule "add_zero_left" (formula "64") (term "0,0,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "50"))
                                                                  (rule "times_zero_2" (formula "50") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "50") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "31"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "32"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "64") (term "0"))
                                                                  (rule "times_zero_2" (formula "64") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "64") (term "0,0"))
                                                                  (rule "applyEq" (formula "64") (term "1,0,0") (ifseqformula "34"))
                                                                  (rule "polySimp_addComm1" (formula "64") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "64") (term "1,0,1") (ifseqformula "34"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0,1"))
                                                                  (rule "polySimp_addComm1" (formula "64") (term "0,0,1"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "64") (term "0,1"))
                                                                  (rule "add_literals" (formula "64") (term "1,1,0,1"))
                                                                  (rule "times_zero_1" (formula "64") (term "1,0,1"))
                                                                  (rule "add_zero_right" (formula "64") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "64") (term "0,1"))
                                                                  (rule "add_literals" (formula "64") (term "1,0,1"))
                                                                  (rule "times_zero_1" (formula "64") (term "0,1"))
                                                                  (rule "leq_literals" (formula "64") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "inEqSimp_geqRight" (formula "64"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "34") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "54"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "54") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "54") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "54") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1"))
                                                                  (rule "mul_literals" (formula "54") (term "0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "54") (term "1,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                                                  (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                                  (rule "mul_literals" (formula "48") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "39") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                                  (rule "polySimp_mulLiterals" (formula "50") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "50") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "4"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "8") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "8") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "25"))
                                                                  (rule "leq_literals" (formula "19") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "26"))
                                                                  (rule "leq_literals" (formula "28") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "true_left" (formula "28"))
                                                                  (rule "inEqSimp_subsumption1" (formula "49") (ifseqformula "50"))
                                                                  (rule "leq_literals" (formula "49") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "true_left" (formula "49"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "4"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0"))
                                                                  (rule "leq_literals" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                            (branch "Null Reference (x_arr_2 = null)"
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "Index Out of Bounds (x_arr_2 != null, but x_15 Out of Bounds!)"
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                                                                (builtin "One Step Simplification" (formula "65"))
                                                               (rule "false_right" (formula "65"))
                                                               (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "49"))
                                                               (rule "polySimp_mulAssoc" (formula "49") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "4"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "55"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "39") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "51"))
                                                               (rule "times_zero_2" (formula "51") (term "1,0"))
                                                               (rule "add_zero_right" (formula "51") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "32"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "33"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                               (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "35"))
                                                               (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "34") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                               (rule "mul_literals" (formula "48") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                               (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "54"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "0,1"))
                                                               (rule "mul_literals" (formula "54") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "1,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0"))
                                                               (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "0,1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "39") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                               (rule "polySimp_mulLiterals" (formula "50") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "50") (term "1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                               (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "28"))
                                                               (rule "leq_literals" (formula "30") (term "0"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "true_left" (formula "30"))
                                                               (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "26"))
                                                               (rule "leq_literals" (formula "20") (term "0"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "51"))
                                                               (rule "leq_literals" (formula "50") (term "0"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "true_left" (formula "50"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "26"))
                                                               (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "31") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                               (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "31") (term "0,0"))
                                                               (rule "qeq_literals" (formula "31") (term "0"))
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "true_left" (formula "31"))
                                                               (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "8") (term "0,0"))
                                                               (rule "qeq_literals" (formula "8") (term "0"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "4"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0"))
                                                               (rule "add_literals" (formula "1") (term "0"))
                                                               (rule "leq_literals" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "Null Reference (x_arr_1 = null)"
                                                    (builtin "One Step Simplification" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "false_right" (formula "60"))
                                                   (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "36") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "49"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "46"))
                                                   (rule "polySimp_mulAssoc" (formula "46") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "29"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "48"))
                                                   (rule "times_zero_2" (formula "48") (term "1,0"))
                                                   (rule "add_zero_right" (formula "48") (term "0"))
                                                   (rule "applyEq" (formula "55") (term "1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "52"))
                                                   (rule "applyEq" (formula "49") (term "0,0,1,0,0") (ifseqformula "1"))
                                                   (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                                   (rule "applyEq" (formula "53") (term "0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "53"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "45"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                                   (rule "mul_literals" (formula "45") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                   (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "47") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "48") (term "0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,0,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "25"))
                                                   (rule "leq_literals" (formula "27") (term "0"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "24"))
                                                   (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "29") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                                   (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "29") (term "0,0"))
                                                   (rule "qeq_literals" (formula "29") (term "0"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "23"))
                                                   (rule "leq_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "5") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "5") (term "0,0"))
                                                   (rule "qeq_literals" (formula "5") (term "0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "41"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                   (rule "mul_literals" (formula "43") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "24"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "25") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "25"))
                                                   (rule "leq_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "41"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "40") (term "0"))
                                                   (rule "add_literals" (formula "40") (term "1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                   (rule "mul_literals" (formula "40") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "46"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "41") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                                                   (rule "times_zero_1" (formula "4") (term "0,0"))
                                                   (rule "add_zero_left" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "mul_literals" (formula "4") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                   (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "22") (term "0,0"))
                                                   (rule "qeq_literals" (formula "22") (term "0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "26"))
                                                   (rule "mul_literals" (formula "17") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                   (rule "add_literals" (formula "17") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                   (rule "mul_literals" (formula "17") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "22"))
                                                   (rule "leq_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "47"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "46") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "46") (term "0"))
                                                   (rule "add_literals" (formula "46") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "46") (term "1,0"))
                                                   (rule "add_zero_right" (formula "46") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                   (rule "mul_literals" (formula "46") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "41"))
                                                   (rule "mul_literals" (formula "40") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                                   (rule "add_literals" (formula "40") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                   (rule "mul_literals" (formula "40") (term "0,1"))
                                                   (rule "inEqSimp_exactShadow1" (formula "46") (ifseqformula "42"))
                                                   (rule "greater_literals" (formula "46") (term "0"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "0,0"))
                                                   (rule "mul_literals" (formula "46") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "46") (term "0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "46") (term "0"))
                                                   (rule "add_literals" (formula "46") (term "1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "46") (term "1,0"))
                                                   (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                                   (rule "add_literals" (formula "46") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                   (rule "mul_literals" (formula "46") (term "0,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "24"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "4"))
                                                   (rule "leq_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "inEqSimp_and_subsumption3" (formula "31") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "31") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "inEqSimp_and_subsumption3" (formula "32") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_and_subsumption3" (formula "7") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "7") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "nnf_imp2or" (formula "8") (term "0"))
                                                   (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "10") (inst "i_0=i_0") (inst "i=i"))
                                                   (rule "andLeft" (formula "10"))
                                                    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "55")))
                                                   (rule "expand_inInt" (formula "11") (term "1,0,0"))
                                                   (rule "expand_inInt" (formula "10") (term "1,0,0,1"))
                                                   (rule "replace_int_MAX" (formula "11") (term "1,0,1,0,0"))
                                                   (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0"))
                                                   (rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1"))
                                                   (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "notLeft" (formula "10"))
                                                   (rule "eqSymm" (formula "18") (term "1,0"))
                                                   (rule "translateJavaSubInt" (formula "16") (term "3,0"))
                                                   (rule "translateJavaShiftLeftInt" (formula "12") (term "1"))
                                                   (rule "translateJavaSubInt" (formula "18") (term "0,2,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "16") (term "3,0"))
                                                   (rule "mul_literals" (formula "16") (term "1,3,0"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "0,2,0,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,2,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "16") (term "3,0"))
                                                   (rule "polySimp_addComm0" (formula "18") (term "0,2,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "17") (term "1,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "15"))
                                                   (rule "inEqSimp_commuteLeq" (formula "13"))
                                                   (rule "inEqSimp_commuteLeq" (formula "14"))
                                                   (rule "inEqSimp_commuteLeq" (formula "10"))
                                                   (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "39") (term "1,1,1,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "14") (term "1") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "16") (term "1,3,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "49") (term "0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "51") (term "1") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "52") (term "0,1,1") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "39") (term "0,1,1,0,1,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "17") (term "0,1,0,0,1,1,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "49") (ifseqformula "13"))
                                                   (rule "leq_literals" (formula "49") (term "0"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "true_left" (formula "49"))
                                                   (rule "javaShiftLeftIntDef" (formula "12") (term "1"))
                                                   (rule "mod_axiom" (formula "12") (term "1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1"))
                                                   (rule "javaShiftLeftIntDef" (formula "13") (term "0"))
                                                   (rule "mod_axiom" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "15") (term "1"))
                                                   (rule "mod_axiom" (formula "15") (term "1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1"))
                                                   (rule "javaShiftLeftIntDef" (formula "39") (term "1,1,1,0"))
                                                   (rule "mod_axiom" (formula "39") (term "1,0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,1,1,1,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "14") (term "1"))
                                                   (rule "mod_axiom" (formula "14") (term "1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1"))
                                                   (rule "javaShiftLeftIntDef" (formula "16") (term "1,3,0"))
                                                   (rule "mod_axiom" (formula "16") (term "1,0,1,3,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,3,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "49") (term "0"))
                                                   (rule "mod_axiom" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "54") (term "0,0"))
                                                   (rule "mod_axiom" (formula "54") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "50") (term "1"))
                                                   (rule "mod_axiom" (formula "50") (term "1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1"))
                                                   (rule "javaShiftLeftIntDef" (formula "51") (term "0,1,1"))
                                                   (rule "mod_axiom" (formula "51") (term "1,0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1,1"))
                                                   (rule "javaShiftLeftIntDef" (formula "39") (term "0,1,1,0,1,0"))
                                                   (rule "mod_axiom" (formula "39") (term "1,0,0,1,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,1,0,1,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "18") (term "1,1,1,0,0,0"))
                                                   (rule "mod_axiom" (formula "18") (term "1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "17") (term "1,1,1,1,0"))
                                                   (rule "mod_axiom" (formula "17") (term "1,0,1,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,1,1,1,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "17") (term "1,1,1,0,0,0"))
                                                   (rule "mod_axiom" (formula "17") (term "1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "shiftLeftDef" (formula "12") (term "0,1"))
                                                   (rule "eqSymm" (formula "12"))
                                                   (rule "polySimp_elimNeg" (formula "12") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,0,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "12") (term "2,0,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "12") (term "2,0,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "12") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0"))
                                                   (rule "shiftLeftDef" (formula "13") (term "0,0"))
                                                   (rule "polySimp_elimNeg" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,0,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "13") (term "2,0,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "13") (term "2,0,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "13") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                                                   (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                                   (rule "shiftLeftDef" (formula "15") (term "0,1"))
                                                   (rule "polySimp_elimNeg" (formula "15") (term "1,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,0,1"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "15") (term "2,0,1"))
                                                   (rule "polySimp_elimOneLeft0" (formula "15") (term "2,0,1"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "15") (term "1,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1"))
                                                   (rule "add_zero_right" (formula "15") (term "0,0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "15"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                                   (rule "applyEq" (formula "15") (term "0") (ifseqformula "12"))
                                                   (rule "inEqSimp_commuteLeq" (formula "15"))
                                                   (rule "shiftLeftDef" (formula "39") (term "0,1,1,1,0"))
                                                   (rule "polySimp_elimNeg" (formula "39") (term "1,1,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,1,0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,0,1,1,1,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "39") (term "2,0,1,1,1,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "39") (term "2,0,1,1,1,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "39") (term "1,0,1,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,1,1,0"))
                                                   (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,1,1,1,0"))
                                                   (rule "add_zero_right" (formula "39") (term "0,0,0,0,1,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,1,1,1,0"))
                                                   (rule "applyEq" (formula "39") (term "1,1,1,0") (ifseqformula "12"))
                                                   (rule "shiftLeftDef" (formula "14") (term "0,1"))
                                                   (rule "polySimp_elimNeg" (formula "14") (term "1,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,0,1"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "14") (term "2,0,1"))
                                                   (rule "polySimp_elimOneLeft0" (formula "14") (term "2,0,1"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "14") (term "1,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1"))
                                                   (rule "add_zero_right" (formula "14") (term "0,0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "14"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                                                   (rule "applyEq" (formula "14") (term "0") (ifseqformula "12"))
                                                   (rule "inEqSimp_commuteLeq" (formula "14"))
                                                   (rule "shiftLeftDef" (formula "16") (term "0,1,3,0"))
                                                   (rule "polySimp_elimNeg" (formula "16") (term "1,1,0,1,3,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,1,3,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1,3,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,1,3,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,0,1,3,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "16") (term "2,0,1,3,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "16") (term "2,0,1,3,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "16") (term "1,0,1,3,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,3,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1,3,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0,0,0,1,3,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,3,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,3,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,3,0"))
                                                   (rule "applyEq" (formula "16") (term "1,3,0") (ifseqformula "12"))
                                                   (rule "shiftLeftDef" (formula "49") (term "0,0"))
                                                   (rule "polySimp_elimNeg" (formula "49") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "0,1,1,0,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "49") (term "2,0,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "49") (term "2,0,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "49") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "0,0,0,0"))
                                                   (rule "applyEq" (formula "49") (term "0") (ifseqformula "12"))
                                                   (rule "shiftLeftDef" (formula "54") (term "0,0,0"))
                                                   (rule "polySimp_elimNeg" (formula "54") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "0,1,1,0,0,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "54") (term "2,0,0,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "54") (term "2,0,0,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "54") (term "1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,0"))
                                                   (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "54") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0,0,0"))
                                                   (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "12"))
                                                   (rule "shiftLeftDef" (formula "50") (term "0,1"))
                                                   (rule "polySimp_elimNeg" (formula "50") (term "1,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "0,1,1,0,1"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "50") (term "2,0,1"))
                                                   (rule "polySimp_elimOneLeft0" (formula "50") (term "2,0,1"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "50") (term "1,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,1"))
                                                   (rule "mul_literals" (formula "50") (term "1,0,0,0,0,1"))
                                                   (rule "add_zero_right" (formula "50") (term "0,0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "50"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "50") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "0,0,0,0"))
                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "12"))
                                                   (rule "inEqSimp_commuteLeq" (formula "50"))
                                                   (rule "shiftLeftDef" (formula "51") (term "0,0,1,1"))
                                                   (rule "polySimp_elimNeg" (formula "51") (term "1,1,0,0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "0,1,1,0,0,1,1"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "51") (term "2,0,0,1,1"))
                                                   (rule "polySimp_elimOneLeft0" (formula "51") (term "2,0,0,1,1"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "51") (term "1,0,0,1,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0,1,1"))
                                                   (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,1,1"))
                                                   (rule "add_zero_right" (formula "51") (term "0,0,0,0,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,1,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "51"))
                                                   (rule "polySimp_addComm1" (formula "51") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1"))
                                                   (rule "mul_literals" (formula "51") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0,0,0"))
                                                   (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "51"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "51") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "51"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                                                   (rule "mul_literals" (formula "51") (term "0,1"))
                                                   (rule "shiftLeftDef" (formula "39") (term "0,0,1,1,0,1,0"))
                                                   (rule "polySimp_elimNeg" (formula "39") (term "1,1,0,0,1,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,0,0,1,1,0,1,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "39") (term "2,0,0,1,1,0,1,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "39") (term "2,0,0,1,1,0,1,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "39") (term "1,0,0,1,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,1,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,1,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,1,1,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,0,1,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,0,1,1,0,1,0"))
                                                   (rule "applyEq" (formula "39") (term "0,1,1,0,1,0") (ifseqformula "12"))
                                                   (rule "shiftLeftDef" (formula "18") (term "0,1,1,1,0,0,0"))
                                                   (rule "polySimp_elimNeg" (formula "18") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,0,1,1,1,0,0,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "18") (term "2,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "18") (term "2,0,1,1,1,0,0,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "18") (term "1,0,1,1,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,0,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,1,1,0,0,0"))
                                                   (rule "applyEq" (formula "18") (term "1,1,1,0,0,0") (ifseqformula "12"))
                                                   (rule "shiftLeftDef" (formula "17") (term "0,1,1,1,1,0"))
                                                   (rule "polySimp_elimNeg" (formula "17") (term "1,1,0,1,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "0,1,1,0,1,1,1,1,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "17") (term "2,0,1,1,1,1,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "17") (term "2,0,1,1,1,1,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "17") (term "1,0,1,1,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1,1,1,1,0"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1,1,1,1,0"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0,0,0,1,1,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,1,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,1,1,1,0"))
                                                   (rule "applyEq" (formula "17") (term "1,1,1,1,0") (ifseqformula "12"))
                                                   (rule "shiftLeftDef" (formula "17") (term "0,1,1,1,0,0,0"))
                                                   (rule "polySimp_elimNeg" (formula "17") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "0,1,1,0,1,1,1,0,0,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "17") (term "2,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "17") (term "2,0,1,1,1,0,0,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "17") (term "1,0,1,1,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1,1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0,0,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,1,1,0,0,0"))
                                                   (rule "applyEq" (formula "17") (term "1,1,1,0,0,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "57"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "50") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "49"))
                                                   (rule "mul_literals" (formula "13") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                   (rule "mul_literals" (formula "13") (term "0,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "49") (ifseqformula "13"))
                                                   (rule "inEqSimp_homoInEq0" (formula "49") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "49") (term "0,0,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "49") (term "0,0"))
                                                   (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0,0"))
                                                   (rule "qeq_literals" (formula "49") (term "0"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "true_left" (formula "49"))
                                                   (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "51"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "56") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "56"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "56") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "56") (term "1,1"))
                                                   (rule "mul_literals" (formula "56") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "56") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow1" (formula "54") (ifseqformula "49"))
                                                   (rule "greater_literals" (formula "54") (term "0"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "polySimp_rightDist" (formula "54") (term "0,0"))
                                                   (rule "mul_literals" (formula "54") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "54") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "54") (term "0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "54") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "54") (term "0"))
                                                   (rule "add_literals" (formula "54") (term "1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "54") (term "1,0"))
                                                   (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                                                   (rule "add_literals" (formula "54") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "54"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "54") (term "1"))
                                                   (rule "mul_literals" (formula "54") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "51"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "50") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "50") (term "0"))
                                                   (rule "add_literals" (formula "50") (term "1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                   (rule "mul_literals" (formula "50") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "14"))
                                                   (rule "leq_literals" (formula "50") (term "0"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "true_left" (formula "50"))
                                                   (rule "nnf_imp2or" (formula "7") (term "0"))
                                                   (rule "nnf_imp2or" (formula "41") (term "0"))
                                                   (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                                                   (rule "expand_moduloInteger" (formula "12") (term "0"))
                                                   (rule "replace_int_RANGE" (formula "12") (term "1,1,0"))
                                                   (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0"))
                                                   (rule "replace_int_MIN" (formula "12") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "12"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                   (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "43") (inst "i_0=i_0") (inst "i=i_1"))
                                                    (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "58")) (ifInst ""  (formula "62")) (ifInst ""  (formula "11")))
                                                   (rule "expand_inInt" (formula "43") (term "1,0,0,1,0"))
                                                   (rule "expand_inInt" (formula "43") (term "1,0,0,1"))
                                                   (rule "replace_int_MAX" (formula "43") (term "1,0,1,0,0,1,0"))
                                                   (rule "replace_int_MIN" (formula "43") (term "0,1,1,0,0,1,0"))
                                                   (rule "replace_int_MAX" (formula "43") (term "1,0,1,0,0,1"))
                                                   (rule "replace_int_MIN" (formula "43") (term "0,1,1,0,0,1"))
                                                   (rule "andLeft" (formula "43"))
                                                   (rule "andLeft" (formula "43"))
                                                   (rule "andLeft" (formula "43"))
                                                   (rule "andLeft" (formula "43"))
                                                   (rule "andLeft" (formula "43"))
                                                   (rule "andLeft" (formula "43"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "eqSymm" (formula "50") (term "1,0"))
                                                   (rule "translateJavaSubInt" (formula "48") (term "3,0"))
                                                   (rule "translateJavaShiftLeftInt" (formula "44") (term "1"))
                                                   (rule "translateJavaSubInt" (formula "50") (term "0,2,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "48") (term "3,0"))
                                                   (rule "mul_literals" (formula "48") (term "1,3,0"))
                                                   (rule "polySimp_elimSub" (formula "50") (term "0,2,0,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "1,0,2,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "48") (term "3,0"))
                                                   (rule "polySimp_addComm0" (formula "50") (term "0,2,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "49") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "50") (term "1,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "49") (term "1,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "49") (term "0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "47"))
                                                   (rule "inEqSimp_commuteLeq" (formula "43"))
                                                   (rule "inEqSimp_commuteLeq" (formula "44"))
                                                   (rule "inEqSimp_commuteLeq" (formula "44"))
                                                   (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "15") (term "1") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "53") (term "1") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "54") (term "0,1,1") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "19") (term "1,1,1,0,0,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "40") (term "0,1,1,0,1,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "18") (term "1,1,1,0,0,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "16") (term "1") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "18") (term "1,1,1,1,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "44") (term "1,3,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "17") (term "1,3,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "40") (term "1,1,1,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "14") (term "0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "46") (term "0,1,0,0,1,0,0,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "45") (term "0,1,0,0,1,0,0,0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "45") (term "0,1,0,0,1,1,0") (ifseqformula "43"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,1,0"))
                                                   (rule "mul_literals" (formula "45") (term "0,1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "45") (term "1,1,1,1,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "43") (term "1"))
                                                   (rule "mod_axiom" (formula "43") (term "1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1"))
                                                   (rule "javaShiftLeftIntDef" (formula "56") (term "0,0"))
                                                   (rule "mod_axiom" (formula "56") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "51") (term "0"))
                                                   (rule "mod_axiom" (formula "51") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "15") (term "1"))
                                                   (rule "mod_axiom" (formula "15") (term "1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1"))
                                                   (rule "javaShiftLeftIntDef" (formula "52") (term "1"))
                                                   (rule "mod_axiom" (formula "52") (term "1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,1"))
                                                   (rule "javaShiftLeftIntDef" (formula "53") (term "0,1,1"))
                                                   (rule "mod_axiom" (formula "53") (term "1,0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,1,1"))
                                                   (rule "javaShiftLeftIntDef" (formula "19") (term "1,1,1,0,0,0"))
                                                   (rule "mod_axiom" (formula "19") (term "1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "40") (term "0,1,1,0,1,0"))
                                                   (rule "mod_axiom" (formula "40") (term "1,0,0,1,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,1,0,1,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "18") (term "1,1,1,0,0,0"))
                                                   (rule "mod_axiom" (formula "18") (term "1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "16") (term "1"))
                                                   (rule "mod_axiom" (formula "16") (term "1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1"))
                                                   (rule "javaShiftLeftIntDef" (formula "18") (term "1,1,1,1,0"))
                                                   (rule "mod_axiom" (formula "18") (term "1,0,1,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,1,1,1,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "44") (term "1,3,0"))
                                                   (rule "mod_axiom" (formula "44") (term "1,0,1,3,0"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,3,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "17") (term "1,3,0"))
                                                   (rule "mod_axiom" (formula "17") (term "1,0,1,3,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,3,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "40") (term "1,1,1,0"))
                                                   (rule "mod_axiom" (formula "40") (term "1,0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,1,1,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "14") (term "0"))
                                                   (rule "mod_axiom" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                   (rule "javaShiftLeftIntDef" (formula "12") (term "1,1"))
                                                   (rule "mod_axiom" (formula "12") (term "1,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1"))
                                                   (rule "javaShiftLeftIntDef" (formula "45") (term "1,1,1,0,0,0"))
                                                   (rule "mod_axiom" (formula "45") (term "1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "shiftLeftDef" (formula "43") (term "0,1"))
                                                   (rule "eqSymm" (formula "43"))
                                                   (rule "polySimp_elimNeg" (formula "43") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "0,1,1,0,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "43") (term "2,0,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "43") (term "2,0,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "43") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "43") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,0"))
                                                   (rule "shiftLeftDef" (formula "56") (term "0,0,0"))
                                                   (rule "polySimp_elimNeg" (formula "56") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "0,1,1,0,0,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "56") (term "2,0,0,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "56") (term "2,0,0,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "56") (term "1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,0"))
                                                   (rule "times_zero_1" (formula "56") (term "1,0,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "56") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "56") (term "0,0,0,0,0"))
                                                   (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "43"))
                                                   (rule "shiftLeftDef" (formula "51") (term "0,0"))
                                                   (rule "polySimp_elimNeg" (formula "51") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "0,1,1,0,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "51") (term "2,0,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "51") (term "2,0,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "51") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "51") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0,0"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "43"))
                                                   (rule "shiftLeftDef" (formula "15") (term "0,1"))
                                                   (rule "polySimp_elimNeg" (formula "15") (term "1,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,0,1"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "15") (term "2,0,1"))
                                                   (rule "polySimp_elimOneLeft0" (formula "15") (term "2,0,1"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "15") (term "1,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1"))
                                                   (rule "add_zero_right" (formula "15") (term "0,0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "15"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                                   (rule "applyEq" (formula "15") (term "0") (ifseqformula "43"))
                                                   (rule "inEqSimp_commuteLeq" (formula "15"))
                                                   (rule "shiftLeftDef" (formula "52") (term "0,1"))
                                                   (rule "polySimp_elimNeg" (formula "52") (term "1,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "52") (term "1,1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "0,1,1,0,1"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "52") (term "2,0,1"))
                                                   (rule "polySimp_elimOneLeft0" (formula "52") (term "2,0,1"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "52") (term "1,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,1"))
                                                   (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,1"))
                                                   (rule "add_zero_right" (formula "52") (term "0,0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "52"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "52") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "0,0,0,0"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "43"))
                                                   (rule "inEqSimp_commuteLeq" (formula "52"))
                                                   (rule "shiftLeftDef" (formula "53") (term "0,0,1,1"))
                                                   (rule "polySimp_elimNeg" (formula "53") (term "1,1,0,0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "0,1,1,0,0,1,1"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "53") (term "2,0,0,1,1"))
                                                   (rule "polySimp_elimOneLeft0" (formula "53") (term "2,0,0,1,1"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "53") (term "1,0,0,1,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,1"))
                                                   (rule "times_zero_1" (formula "53") (term "1,0,0,0,0,0,1,1"))
                                                   (rule "add_zero_right" (formula "53") (term "0,0,0,0,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,1,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "53"))
                                                   (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "53") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "53") (term "0,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "53") (term "0,1,0") (ifseqformula "43"))
                                                   (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                                   (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                   (rule "shiftLeftDef" (formula "19") (term "0,1,1,1,0,0,0"))
                                                   (rule "polySimp_elimNeg" (formula "19") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,0,1,1,1,0,0,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "19") (term "2,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "19") (term "2,0,1,1,1,0,0,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "19") (term "1,0,1,1,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "19") (term "0,0,0,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,1,1,0,0,0"))
                                                   (rule "applyEq" (formula "19") (term "1,1,1,0,0,0") (ifseqformula "43"))
                                                   (rule "shiftLeftDef" (formula "40") (term "0,0,1,1,0,1,0"))
                                                   (rule "polySimp_elimNeg" (formula "40") (term "1,1,0,0,1,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,0,1,1,0,1,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "40") (term "2,0,0,1,1,0,1,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "40") (term "2,0,0,1,1,0,1,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "40") (term "1,0,0,1,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0,1,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "40") (term "0,0,0,0,0,1,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,1,1,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,0,1,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,0,1,1,0,1,0"))
                                                   (rule "applyEq" (formula "40") (term "0,1,1,0,1,0") (ifseqformula "43"))
                                                   (rule "shiftLeftDef" (formula "18") (term "0,1,1,1,0,0,0"))
                                                   (rule "polySimp_elimNeg" (formula "18") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,0,1,1,1,0,0,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "18") (term "2,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "18") (term "2,0,1,1,1,0,0,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "18") (term "1,0,1,1,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,0,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,1,1,0,0,0"))
                                                   (rule "applyEq" (formula "18") (term "1,1,1,0,0,0") (ifseqformula "43"))
                                                   (rule "shiftLeftDef" (formula "16") (term "0,1"))
                                                   (rule "polySimp_elimNeg" (formula "16") (term "1,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,0,1"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "16") (term "2,0,1"))
                                                   (rule "polySimp_elimOneLeft0" (formula "16") (term "2,0,1"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "16") (term "1,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "16"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                                                   (rule "applyEq" (formula "16") (term "0") (ifseqformula "43"))
                                                   (rule "inEqSimp_commuteLeq" (formula "16"))
                                                   (rule "shiftLeftDef" (formula "18") (term "0,1,1,1,1,0"))
                                                   (rule "polySimp_elimNeg" (formula "18") (term "1,1,0,1,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,0,1,1,1,1,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "18") (term "2,0,1,1,1,1,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "18") (term "2,0,1,1,1,1,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "18") (term "1,0,1,1,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,1,1,1,0"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,1,1,1,1,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,0,0,1,1,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,1,1,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,1,1,1,0"))
                                                   (rule "applyEq" (formula "18") (term "1,1,1,1,0") (ifseqformula "43"))
                                                   (rule "shiftLeftDef" (formula "44") (term "0,1,3,0"))
                                                   (rule "polySimp_elimNeg" (formula "44") (term "1,1,0,1,3,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,1,3,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,1,0,1,3,0"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,1,3,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "0,1,1,0,1,3,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "44") (term "2,0,1,3,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "44") (term "2,0,1,3,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "44") (term "1,0,1,3,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,1,3,0"))
                                                   (rule "mul_literals" (formula "44") (term "1,0,0,0,0,1,3,0"))
                                                   (rule "add_zero_right" (formula "44") (term "0,0,0,0,1,3,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,3,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0,1,3,0"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0,1,3,0"))
                                                   (rule "applyEq" (formula "44") (term "1,3,0") (ifseqformula "43"))
                                                   (rule "shiftLeftDef" (formula "17") (term "0,1,3,0"))
                                                   (rule "polySimp_elimNeg" (formula "17") (term "1,1,0,1,3,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,3,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,3,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,3,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "0,1,1,0,1,3,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "17") (term "2,0,1,3,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "17") (term "2,0,1,3,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "17") (term "1,0,1,3,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1,3,0"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1,3,0"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0,0,0,1,3,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,3,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,3,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,3,0"))
                                                   (rule "applyEq" (formula "17") (term "1,3,0") (ifseqformula "43"))
                                                   (rule "shiftLeftDef" (formula "40") (term "0,1,1,1,0"))
                                                   (rule "polySimp_elimNeg" (formula "40") (term "1,1,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,1,0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,1,1,1,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "40") (term "2,0,1,1,1,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "40") (term "2,0,1,1,1,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "40") (term "1,0,1,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,1,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "1,0,0,0,0,1,1,1,0"))
                                                   (rule "add_zero_right" (formula "40") (term "0,0,0,0,1,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,1,1,1,0"))
                                                   (rule "applyEq" (formula "40") (term "1,1,1,0") (ifseqformula "43"))
                                                   (rule "shiftLeftDef" (formula "14") (term "0,0"))
                                                   (rule "polySimp_elimNeg" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,0,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "14") (term "2,0,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "14") (term "2,0,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "14") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                                                   (rule "applyEq" (formula "14") (term "0") (ifseqformula "43"))
                                                   (rule "shiftLeftDef" (formula "12") (term "0,1,1"))
                                                   (rule "polySimp_elimNeg" (formula "12") (term "1,1,0,1,1"))
                                                   (rule "polySimp_homoEq" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,0,1,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "12") (term "2,0,1,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "12") (term "2,0,1,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "12") (term "1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1,0"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                   (rule "mul_literals" (formula "12") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0"))
                                                   (rule "polySimp_homoEq" (formula "12"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                   (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "43"))
                                                   (rule "polySimp_sepPosMonomial" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                   (rule "mul_literals" (formula "12") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                   (rule "shiftLeftDef" (formula "45") (term "0,1,1,1,0,0,0"))
                                                   (rule "polySimp_elimNeg" (formula "45") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "0,1,1,0,1,1,1,0,0,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "45") (term "2,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "45") (term "2,0,1,1,1,0,0,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "45") (term "1,0,1,1,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,1,1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "45") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "45") (term "0,0,0,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "0,0,1,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0,1,1,1,0,0,0"))
                                                   (rule "applyEq" (formula "45") (term "1,1,1,0,0,0") (ifseqformula "43"))
                                                   (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "53"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "58") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "58") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "1,1"))
                                                   (rule "mul_literals" (formula "58") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "58") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "59"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "52") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "53"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "52") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "52") (term "0"))
                                                   (rule "add_literals" (formula "52") (term "1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "52") (term "1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                   (rule "mul_literals" (formula "52") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "14"))
                                                   (rule "leq_literals" (formula "52") (term "0"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "true_left" (formula "52"))
                                                   (rule "inEqSimp_exactShadow1" (formula "56") (ifseqformula "51"))
                                                   (rule "greater_literals" (formula "56") (term "0"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "polySimp_rightDist" (formula "56") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "56") (term "0,0"))
                                                   (rule "mul_literals" (formula "56") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "56") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "56") (term "0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "56") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "56") (term "0"))
                                                   (rule "add_literals" (formula "56") (term "1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "56") (term "1,0"))
                                                   (rule "polySimp_addAssoc" (formula "56") (term "0,0"))
                                                   (rule "add_literals" (formula "56") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "56"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "56") (term "1"))
                                                   (rule "mul_literals" (formula "56") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "56") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "51"))
                                                   (rule "mul_literals" (formula "14") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                   (rule "mul_literals" (formula "14") (term "0,1"))
                                                   (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "notLeft" (formula "9"))
                                                   (rule "notLeft" (formula "9"))
                                                   (rule "close" (formula "59") (ifseqformula "1"))
                                                )
                                                (branch "Index Out of Bounds (x_arr_1 != null, but bucket Out of Bounds!)"
                                                    (builtin "One Step Simplification" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "false_right" (formula "60"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "51"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "50"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "50") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "37") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "47"))
                                                   (rule "polySimp_mulAssoc" (formula "47") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "49"))
                                                   (rule "times_zero_2" (formula "49") (term "1,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "31"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "30"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "49") (term "0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                   (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "46"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                   (rule "mul_literals" (formula "46") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                                   (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "6") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0"))
                                                   (rule "qeq_literals" (formula "6") (term "0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "23"))
                                                   (rule "leq_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "46"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "1") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "23"))
                                                   (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "29") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                                   (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                   (rule "add_literals" (formula "29") (term "0,0"))
                                                   (rule "qeq_literals" (formula "29") (term "0"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "24"))
                                                   (rule "leq_literals" (formula "26") (term "0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "inEqSimp_contradInEq1" (formula "45") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "inEqSimp_homoInEq1" (formula "45"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "45") (term "0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "45") (term "0"))
                                                   (rule "add_literals" (formula "45") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "45") (term "1,0"))
                                                   (rule "add_zero_right" (formula "45") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "45") (term "0"))
                                                   (rule "add_literals" (formula "45") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "45") (term "1,0"))
                                                   (rule "add_literals" (formula "45") (term "0"))
                                                   (rule "leq_literals" (formula "45"))
                                                   (rule "closeFalse" (formula "45"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "equal_literals" (formula "59") (term "0"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "closeTrue" (formula "59"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "Null Reference (_indices = null)"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (_indices != null, but i Out of Bounds!)"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                              (rule "false_right" (formula "54"))
                              (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0"))
                              (rule "polySimp_mulAssoc" (formula "37") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "30"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "31"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "31") (term "0"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "33"))
                              (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1"))
                              (rule "polySimp_elimOne" (formula "32") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                              (rule "polySimp_elimOne" (formula "30") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                              (rule "polySimp_elimOne" (formula "31") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "26"))
                              (rule "leq_literals" (formula "28") (term "0"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "leq_literals" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "25"))
                              (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0"))
                              (rule "add_literals" (formula "30") (term "0,0"))
                              (rule "qeq_literals" (formula "30") (term "0"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "23"))
                              (rule "leq_literals" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "closeFalse" (formula "5"))
                           )
                        )
                     )
                  )
                  (branch "Null Reference (x_arr = null)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (x_arr != null, but x_5 Out of Bounds!)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                     (rule "false_right" (formula "51"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0"))
                     (rule "polySimp_mulAssoc" (formula "37") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1"))
                     (rule "polySimp_elimOne" (formula "32") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                     (rule "mul_literals" (formula "2") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                     (rule "mul_literals" (formula "1") (term "0,1,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                     (rule "polySimp_elimOne" (formula "30") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                     (rule "polySimp_elimOne" (formula "31") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "26"))
                     (rule "leq_literals" (formula "28") (term "0"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "true_left" (formula "28"))
                     (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "24"))
                     (rule "leq_literals" (formula "18") (term "0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "24"))
                     (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "29") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0"))
                     (rule "add_literals" (formula "29") (term "0,0"))
                     (rule "qeq_literals" (formula "29") (term "0"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "true_left" (formula "29"))
                     (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0"))
                     (rule "qeq_literals" (formula "6") (term "0"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "17"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "23") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "polySimp_elimOne" (formula "23") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                     (rule "times_zero_1" (formula "5") (term "0,0"))
                     (rule "add_zero_left" (formula "5") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                     (rule "mul_literals" (formula "5") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                     (rule "add_literals" (formula "24") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0"))
                     (rule "qeq_literals" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "27"))
                     (rule "mul_literals" (formula "19") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0"))
                     (rule "add_literals" (formula "19") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                     (rule "mul_literals" (formula "19") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "24"))
                     (rule "leq_literals" (formula "19") (term "0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "25"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "26"))
                     (rule "leq_literals" (formula "18") (term "0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "25"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                     (rule "mul_literals" (formula "5") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                     (rule "add_literals" (formula "5") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "5"))
                     (rule "leq_literals" (formula "18") (term "0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_and_subsumption3" (formula "33") (term "0,0,0"))
                     (rule "leq_literals" (formula "33") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "inEqSimp_and_subsumption3" (formula "8") (term "0,0,0"))
                     (rule "leq_literals" (formula "8") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "inEqSimp_and_subsumption3" (formula "32") (term "0,0,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "nnf_imp2or" (formula "9") (term "0"))
                     (rule "nnf_imp2or" (formula "33") (term "0"))
                     (rule "nnf_imp2or" (formula "8") (term "0"))
                     (rule "nnf_imp2or" (formula "32") (term "0"))
                     (rule "nnf_notAnd" (formula "9") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                     (rule "nnf_notAnd" (formula "33") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                     (rule "mul_literals" (formula "33") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "33") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                     (rule "mul_literals" (formula "33") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "8") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "32") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                     (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                     (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                     (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "11"))
                     (rule "notLeft" (formula "10"))
                     (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "37"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "33"))
                     (rule "true_left" (formula "33"))
                     (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "32") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "32") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "31") (term "0,0,1,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "31") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "31") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,1,0,0,0,0"))
                     (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "10") (inst "i_0=i_0") (inst "i=i_1"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "expand_inInt" (formula "10") (term "1,0,0,1"))
                     (rule "expand_inInt" (formula "10") (term "1,0,0,1,0"))
                     (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1"))
                     (rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1"))
                     (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1,0"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "12"))
                     (rule "notLeft" (formula "11"))
                     (rule "notLeft" (formula "10"))
                     (rule "translateJavaSubInt" (formula "18") (term "0,2,1,1,0"))
                     (rule "translateJavaSubInt" (formula "16") (term "3,0"))
                     (rule "translateJavaShiftLeftInt" (formula "12") (term "1"))
                     (rule "eqSymm" (formula "18") (term "1,0"))
                     (rule "polySimp_elimSub" (formula "16") (term "3,0"))
                     (rule "mul_literals" (formula "16") (term "1,3,0"))
                     (rule "polySimp_elimSub" (formula "18") (term "0,2,0,1,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,2,0,1,0"))
                     (rule "polySimp_addComm0" (formula "16") (term "3,0"))
                     (rule "polySimp_addComm0" (formula "18") (term "0,2,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "17") (term "0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "17") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "15"))
                     (rule "inEqSimp_commuteLeq" (formula "13"))
                     (rule "inEqSimp_commuteLeq" (formula "14"))
                     (rule "inEqSimp_commuteLeq" (formula "10"))
                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                     (rule "applyEq" (formula "39") (term "0,1,1,0,1,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "14") (term "1") (ifseqformula "12"))
                     (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
                     (rule "applyEq" (formula "16") (term "1,3,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "39") (term "1,1,1,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "17") (term "0,1,0,0,1,1,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0") (ifseqformula "12"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0"))
                     (rule "javaShiftLeftIntDef" (formula "12") (term "1"))
                     (rule "mod_axiom" (formula "12") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1"))
                     (rule "javaShiftLeftIntDef" (formula "13") (term "0"))
                     (rule "mod_axiom" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                     (rule "javaShiftLeftIntDef" (formula "39") (term "0,1,1,0,1,0"))
                     (rule "mod_axiom" (formula "39") (term "1,0,0,1,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,1,0,1,0"))
                     (rule "javaShiftLeftIntDef" (formula "14") (term "1"))
                     (rule "mod_axiom" (formula "14") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1"))
                     (rule "javaShiftLeftIntDef" (formula "15") (term "1"))
                     (rule "mod_axiom" (formula "15") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1"))
                     (rule "javaShiftLeftIntDef" (formula "16") (term "1,3,0"))
                     (rule "mod_axiom" (formula "16") (term "1,0,1,3,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,3,0"))
                     (rule "javaShiftLeftIntDef" (formula "39") (term "1,1,1,0"))
                     (rule "mod_axiom" (formula "39") (term "1,0,1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,1,1,1,0"))
                     (rule "javaShiftLeftIntDef" (formula "17") (term "1,1,1,0,0,0"))
                     (rule "mod_axiom" (formula "17") (term "1,0,1,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,1,1,0,0,0"))
                     (rule "javaShiftLeftIntDef" (formula "17") (term "1,1,1,1,0"))
                     (rule "mod_axiom" (formula "17") (term "1,0,1,1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,1,1,1,0"))
                     (rule "javaShiftLeftIntDef" (formula "18") (term "1,1,1,0,0,0"))
                     (rule "mod_axiom" (formula "18") (term "1,0,1,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,1,1,0,0,0"))
                     (rule "shiftLeftDef" (formula "12") (term "0,1"))
                     (rule "eqSymm" (formula "12"))
                     (rule "polySimp_elimNeg" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,0,0"))
                     (rule "shiftLeftPositiveShiftDef" (formula "12") (term "2,0,0"))
                     (rule "polySimp_elimOneLeft0" (formula "12") (term "2,0,0"))
                     (rule "shiftRightPositiveShiftDef" (formula "12") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0"))
                     (rule "shiftLeftDef" (formula "13") (term "0,0"))
                     (rule "polySimp_elimNeg" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,0,0"))
                     (rule "shiftLeftPositiveShiftDef" (formula "13") (term "2,0,0"))
                     (rule "polySimp_elimOneLeft0" (formula "13") (term "2,0,0"))
                     (rule "shiftRightPositiveShiftDef" (formula "13") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                     (rule "shiftLeftDef" (formula "39") (term "0,0,1,1,0,1,0"))
                     (rule "polySimp_elimNeg" (formula "39") (term "1,1,0,0,1,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,0,0,1,1,0,1,0"))
                     (rule "shiftLeftPositiveShiftDef" (formula "39") (term "2,0,0,1,1,0,1,0"))
                     (rule "polySimp_elimOneLeft0" (formula "39") (term "2,0,0,1,1,0,1,0"))
                     (rule "shiftRightPositiveShiftDef" (formula "39") (term "1,0,0,1,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,1,1,0,1,0"))
                     (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,1,1,0,1,0"))
                     (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,1,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,1,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,0,1,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,0,1,1,0,1,0"))
                     (rule "applyEq" (formula "39") (term "0,1,1,0,1,0") (ifseqformula "12"))
                     (rule "shiftLeftDef" (formula "14") (term "0,1"))
                     (rule "polySimp_elimNeg" (formula "14") (term "1,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,0,1"))
                     (rule "shiftLeftPositiveShiftDef" (formula "14") (term "2,0,1"))
                     (rule "polySimp_elimOneLeft0" (formula "14") (term "2,0,1"))
                     (rule "shiftRightPositiveShiftDef" (formula "14") (term "1,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                     (rule "inEqSimp_commuteGeq" (formula "14"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "12"))
                     (rule "inEqSimp_commuteLeq" (formula "14"))
                     (rule "shiftLeftDef" (formula "15") (term "0,1"))
                     (rule "polySimp_elimNeg" (formula "15") (term "1,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,0,1"))
                     (rule "shiftLeftPositiveShiftDef" (formula "15") (term "2,0,1"))
                     (rule "polySimp_elimOneLeft0" (formula "15") (term "2,0,1"))
                     (rule "shiftRightPositiveShiftDef" (formula "15") (term "1,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1"))
                     (rule "inEqSimp_commuteGeq" (formula "15"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                     (rule "applyEq" (formula "15") (term "0") (ifseqformula "12"))
                     (rule "inEqSimp_commuteLeq" (formula "15"))
                     (rule "shiftLeftDef" (formula "16") (term "0,1,3,0"))
                     (rule "polySimp_elimNeg" (formula "16") (term "1,1,0,1,3,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,1,3,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1,3,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,1,3,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,0,1,3,0"))
                     (rule "shiftLeftPositiveShiftDef" (formula "16") (term "2,0,1,3,0"))
                     (rule "polySimp_elimOneLeft0" (formula "16") (term "2,0,1,3,0"))
                     (rule "shiftRightPositiveShiftDef" (formula "16") (term "1,0,1,3,0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,3,0"))
                     (rule "mul_literals" (formula "16") (term "1,0,0,0,0,1,3,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0,0,0,1,3,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,3,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,3,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,3,0"))
                     (rule "applyEq" (formula "16") (term "1,3,0") (ifseqformula "12"))
                     (rule "shiftLeftDef" (formula "39") (term "0,1,1,1,0"))
                     (rule "polySimp_elimNeg" (formula "39") (term "1,1,0,1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,1,0,1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,0,1,1,1,0"))
                     (rule "shiftLeftPositiveShiftDef" (formula "39") (term "2,0,1,1,1,0"))
                     (rule "polySimp_elimOneLeft0" (formula "39") (term "2,0,1,1,1,0"))
                     (rule "shiftRightPositiveShiftDef" (formula "39") (term "1,0,1,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,1,1,0"))
                     (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,1,1,1,0"))
                     (rule "add_zero_right" (formula "39") (term "0,0,0,0,1,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,1,1,1,0"))
                     (rule "applyEq" (formula "39") (term "1,1,1,0") (ifseqformula "12"))
                     (rule "shiftLeftDef" (formula "17") (term "0,1,1,1,0,0,0"))
                     (rule "polySimp_elimNeg" (formula "17") (term "1,1,0,1,1,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0,1,1,0,1,1,1,0,0,0"))
                     (rule "shiftLeftPositiveShiftDef" (formula "17") (term "2,0,1,1,1,0,0,0"))
                     (rule "polySimp_elimOneLeft0" (formula "17") (term "2,0,1,1,1,0,0,0"))
                     (rule "shiftRightPositiveShiftDef" (formula "17") (term "1,0,1,1,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1,1,1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,0,0,1,1,1,0,0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0,0,0,1,1,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,1,1,0,0,0"))
                     (rule "applyEq" (formula "17") (term "1,1,1,0,0,0") (ifseqformula "12"))
                     (rule "shiftLeftDef" (formula "17") (term "0,1,1,1,1,0"))
                     (rule "polySimp_elimNeg" (formula "17") (term "1,1,0,1,1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0,1,1,0,1,1,1,1,0"))
                     (rule "shiftLeftPositiveShiftDef" (formula "17") (term "2,0,1,1,1,1,0"))
                     (rule "polySimp_elimOneLeft0" (formula "17") (term "2,0,1,1,1,1,0"))
                     (rule "shiftRightPositiveShiftDef" (formula "17") (term "1,0,1,1,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1,1,1,1,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1,1,1,1,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0,0,0,1,1,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,1,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,1,1,1,0"))
                     (rule "applyEq" (formula "17") (term "1,1,1,1,0") (ifseqformula "12"))
                     (rule "shiftLeftDef" (formula "18") (term "0,1,1,1,0,0,0"))
                     (rule "polySimp_elimNeg" (formula "18") (term "1,1,0,1,1,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,0,1,1,1,0,0,0"))
                     (rule "shiftLeftPositiveShiftDef" (formula "18") (term "2,0,1,1,1,0,0,0"))
                     (rule "polySimp_elimOneLeft0" (formula "18") (term "2,0,1,1,1,0,0,0"))
                     (rule "shiftRightPositiveShiftDef" (formula "18") (term "1,0,1,1,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,1,1,0,0,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,1,1,1,0,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0,0,0,1,1,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,1,1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,1,1,0,0,0"))
                     (rule "applyEq" (formula "18") (term "1,1,1,0,0,0") (ifseqformula "12"))
                     (rule "expand_moduloInteger" (formula "12") (term "0"))
                     (rule "replace_int_MIN" (formula "12") (term "0,0"))
                     (rule "replace_int_RANGE" (formula "12") (term "1,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0"))
                     (rule "polySimp_homoEq" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0"))
                     (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                     (rule "polySimp_elimOne" (formula "12") (term "0"))
                     (rule "commute_or" (formula "1"))
                     (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "notLeft" (formula "28"))
                     (rule "notLeft" (formula "28"))
                     (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "35"))
                      (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "20")))
                     (rule "andLeft" (formula "35"))
                     (rule "andLeft" (formula "35"))
                     (rule "andLeft" (formula "35"))
                     (rule "andLeft" (formula "35"))
                     (rule "andLeft" (formula "35"))
                     (rule "andLeft" (formula "35"))
                     (rule "translateJavaSubInt" (formula "40") (term "0,2,0"))
                     (rule "translateJavaSubInt" (formula "40") (term "0,2,1"))
                     (rule "eqSymm" (formula "37"))
                     (rule "eqSymm" (formula "40"))
                     (rule "translateJavaMulInt" (formula "37") (term "0"))
                     (rule "polySimp_elimSub" (formula "40") (term "0,2,1"))
                     (rule "mul_literals" (formula "40") (term "1,0,2,1"))
                     (rule "polySimp_elimSub" (formula "40") (term "0,2,0"))
                     (rule "mul_literals" (formula "40") (term "1,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "37") (term "0"))
                     (rule "polySimp_addComm0" (formula "40") (term "0,2,1"))
                     (rule "polySimp_addComm0" (formula "40") (term "0,2,0"))
                     (rule "inEqSimp_commuteLeq" (formula "35"))
                     (rule "applyEq" (formula "48") (term "0") (ifseqformula "38"))
                     (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "38"))
                     (rule "applyEq" (formula "44") (term "1,1,0,1,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "38"))
                     (rule "inEqSimp_commuteGeq" (formula "15"))
                     (rule "applyEq" (formula "18") (term "1,0,1,0") (ifseqformula "38"))
                     (rule "newSym_eq" (formula "37") (inst "newSymDef=mul(int::final(self,
               de.wiesler.Classifier::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                     (rule "times_zero_1" (formula "37") (term "1,1"))
                     (rule "add_zero_right" (formula "37") (term "1"))
                     (rule "applyEq" (formula "17") (term "1,1,1,0,0,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "16") (term "1,3,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "40") (term "3,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "18") (term "1,1,1,0,0,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "37"))
                     (rule "eqSymm" (formula "38"))
                     (rule "applyEq" (formula "41") (term "1,0,2,0") (ifseqformula "37"))
                     (rule "eqSymm" (formula "41"))
                     (rule "applyEq" (formula "45") (term "1,1,1,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "15") (term "0") (ifseqformula "37"))
                     (rule "inEqSimp_commuteLeq" (formula "15"))
                     (rule "applyEq" (formula "17") (term "1,1,1,1,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "37"))
                     (rule "applyEq" (formula "14") (term "1") (ifseqformula "37"))
                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "38"))
                     (rule "applyEq" (formula "36") (term "0") (ifseqformula "38"))
                     (rule "applyEq" (formula "45") (term "1,1,0,1,0") (ifseqformula "38"))
                     (rule "applyEq" (formula "41") (term "1,0,2,0") (ifseqformula "37"))
                     (rule "eqSymm" (formula "41"))
                     (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "37"))
                     (rule "inEqSimp_subsumption6" (formula "35") (ifseqformula "13"))
                     (rule "mul_literals" (formula "35") (term "1,1,0"))
                     (rule "greater_literals" (formula "35") (term "0,0"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "leq_literals" (formula "35") (term "0"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "true_left" (formula "35"))
                     (rule "elimGcdLeq_antec" (formula "35") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(4(6(#)))"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0,1,0"))
                     (rule "neg_literal" (formula "35") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "35") (term "0,0"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "35") (term "0,0,0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                     (rule "add_literals" (formula "35") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0"))
                     (rule "add_zero_right" (formula "35") (term "0,0"))
                     (rule "qeq_literals" (formula "35") (term "0"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "46") (inst "i_0=i_0") (inst "i=i_1"))
                      (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "48")) (ifInst ""  (formula "11")))
                     (rule "expand_inInt" (formula "46") (term "1,0,0,1"))
                     (rule "expand_inInt" (formula "46") (term "1,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "46") (term "1,0,1,0,0,1"))
                     (rule "replace_int_MIN" (formula "46") (term "0,1,1,0,0,1"))
                     (rule "replace_int_MIN" (formula "46") (term "0,1,1,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "46") (term "1,0,1,0,0,1,0"))
                     (rule "andLeft" (formula "46"))
                     (rule "andLeft" (formula "46"))
                     (rule "andLeft" (formula "46"))
                     (rule "andLeft" (formula "46"))
                     (rule "andLeft" (formula "46"))
                     (rule "andLeft" (formula "46"))
                     (rule "andLeft" (formula "48"))
                     (rule "andLeft" (formula "46"))
                     (rule "notLeft" (formula "46"))
                     (rule "translateJavaSubInt" (formula "53") (term "0,2,1,1,0"))
                     (rule "translateJavaSubInt" (formula "51") (term "3,0"))
                     (rule "translateJavaShiftLeftInt" (formula "47") (term "1"))
                     (rule "eqSymm" (formula "53") (term "1,0"))
                     (rule "polySimp_elimSub" (formula "51") (term "3,0"))
                     (rule "mul_literals" (formula "51") (term "1,3,0"))
                     (rule "polySimp_elimSub" (formula "53") (term "0,2,0,1,0"))
                     (rule "mul_literals" (formula "53") (term "1,0,2,0,1,0"))
                     (rule "polySimp_addComm0" (formula "51") (term "3,0"))
                     (rule "polySimp_addComm0" (formula "53") (term "0,2,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "52") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "53") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "52") (term "0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "52") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "50"))
                     (rule "inEqSimp_commuteLeq" (formula "49"))
                     (rule "inEqSimp_commuteLeq" (formula "48"))
                     (rule "inEqSimp_commuteLeq" (formula "46"))
                     (rule "applyEq" (formula "48") (term "1") (ifseqformula "46"))
                     (rule "applyEq" (formula "47") (term "0") (ifseqformula "46"))
                     (rule "applyEq" (formula "50") (term "1,3,0") (ifseqformula "46"))
                     (rule "applyEq" (formula "49") (term "1") (ifseqformula "46"))
                     (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "38"))
                     (rule "inEqSimp_commuteGeq" (formula "49"))
                     (rule "applyEq" (formula "36") (term "0") (ifseqformula "46"))
                     (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "38"))
                     (rule "applyEq" (formula "52") (term "1,0,1,0") (ifseqformula "38"))
                     (rule "applyEq" (formula "54") (term "0") (ifseqformula "38"))
                     (rule "applyEq" (formula "51") (term "0,1,0,0,1,1,0") (ifseqformula "46"))
                     (rule "applyEq" (formula "52") (term "0,1,0,0,1,0,0,0") (ifseqformula "46"))
                     (rule "applyEq" (formula "51") (term "0,1,0,0,1,0,0,0") (ifseqformula "46"))
                     (rule "applyEq" (formula "48") (term "1") (ifseqformula "36"))
                     (rule "applyEq" (formula "49") (term "1,3,0") (ifseqformula "36"))
                     (rule "applyEq" (formula "47") (term "0") (ifseqformula "36"))
                     (rule "applyEq" (formula "47") (term "0") (ifseqformula "36"))
                     (rule "inEqSimp_commuteLeq" (formula "47"))
                     (rule "applyEq" (formula "46") (term "1") (ifseqformula "36"))
                     (rule "applyEq" (formula "48") (term "0,1,0,0,1,1,0") (ifseqformula "36"))
                     (rule "applyEq" (formula "48") (term "0,1,0,0,1,0,0,0") (ifseqformula "36"))
                     (rule "applyEq" (formula "49") (term "0,1,0,0,1,0,0,0") (ifseqformula "36"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,1,0"))
                     (rule "mul_literals" (formula "48") (term "0,1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "48") (term "1,1,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,0"))
                     (rule "mul_literals" (formula "48") (term "0,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,0"))
                     (rule "mul_literals" (formula "48") (term "0,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,0"))
                     (rule "javaShiftLeftIntDef" (formula "36") (term "0"))
                     (rule "mod_axiom" (formula "36") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                     (rule "shiftLeftDef" (formula "36") (term "0,0"))
                     (rule "polySimp_elimNeg" (formula "36") (term "1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "0,1,1,0,0"))
                     (rule "shiftLeftPositiveShiftDef" (formula "36") (term "2,0,0"))
                     (rule "polySimp_elimOneLeft0" (formula "36") (term "2,0,0"))
                     (rule "shiftRightPositiveShiftDef" (formula "36") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
                     (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,0"))
                     (rule "commute_or" (formula "45") (term "0,0,0"))
                     (rule "commute_or" (formula "8") (term "0,0,0"))
                     (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "18") (term "1,0,2,0,1,0"))
                     (rule "translateJavaSubInt" (formula "18") (term "0,1,1,1,0,2,0,1,0"))
                     (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0,2,0,1,0"))
                     (rule "polySimp_elimSub" (formula "18") (term "1,1,1,0,2,0,1,0"))
                     (rule "polySimp_elimSub" (formula "18") (term "0,1,1,1,0,2,0,1,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,1,1,1,0,2,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,2,0,1,0"))
                     (rule "polySimp_addComm0" (formula "18") (term "0,1,0,1,0,2,0,1,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "0,1,1,0,2,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,1,0,2,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,1,0,2,0,1,0"))
                     (rule "polySimp_addComm1" (formula "18") (term "1,1,0,2,0,1,0"))
                     (rule "polySimp_addComm0" (formula "18") (term "0,1,1,0,2,0,1,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,2,0,1,0"))
                     (rule "polySimp_mulComm1" (formula "18") (term "1,1,0,2,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,0,2,0,1,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "0,1,0,2,0,1,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "0,0,1,0,2,0,1,0"))
                     (rule "polySimp_mulComm1" (formula "18") (term "1,0,1,0,2,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,0,2,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,2,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0,2,0,1,0"))
                     (rule "commute_or" (formula "44") (term "0,0,0"))
                     (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "17") (term "0,0,1,0"))
                     (rule "translateJavaSubInt" (formula "17") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_elimSub" (formula "17") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimSub" (formula "17") (term "0,1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,1,1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "17") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "1,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "17") (term "0,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,0,1,0"))
                     (rule "polySimp_mulComm1" (formula "17") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "0,0,0,0,1,0"))
                     (rule "polySimp_mulComm1" (formula "17") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,0,0,1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,1,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "0,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0,1,0"))
                     (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "17") (term "0,1,1,0"))
                     (rule "translateJavaSubInt" (formula "17") (term "0,1,1,0,1,1,0"))
                     (rule "polySimp_elimSub" (formula "17") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,1,0"))
                     (rule "polySimp_elimSub" (formula "17") (term "0,1,1,0,1,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,1,1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0,1,1,0"))
                     (rule "polySimp_addComm0" (formula "17") (term "0,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "1,0,1,1,0"))
                     (rule "polySimp_addComm0" (formula "17") (term "0,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,1,1,0"))
                     (rule "polySimp_mulComm1" (formula "17") (term "1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulComm1" (formula "17") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,0,1,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "17") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,0,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,0,1,1,1,0"))
                     (rule "mul_literals" (formula "17") (term "0,0,0,1,1,1,0"))
                     (rule "commute_or" (formula "9") (term "0,0,0,0"))
                     (rule "commute_and" (formula "18") (term "1,0,0"))
                     (rule "commute_and" (formula "17") (term "1,0,0"))
                     (rule "nnf_imp2or" (formula "48") (term "0"))
                     (rule "expand_moduloInteger" (formula "36") (term "0"))
                     (rule "replace_int_RANGE" (formula "36") (term "1,1,0"))
                     (rule "replace_int_MIN" (formula "36") (term "0,0"))
                     (rule "replace_int_HALFRANGE" (formula "36") (term "0,0,1,0"))
                     (rule "polySimp_homoEq" (formula "36"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0"))
                     (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                     (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "12"))
                     (rule "polySimp_pullOutFactor1" (formula "36") (term "0"))
                     (rule "add_literals" (formula "36") (term "1,0"))
                     (rule "times_zero_1" (formula "36") (term "0"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "true_left" (formula "35"))
                     (rule "nnf_imp2or" (formula "17") (term "0"))
                     (rule "nnf_imp2or" (formula "18") (term "0"))
                     (rule "nnf_notAnd" (formula "46") (term "0,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0"))
                     (rule "nnf_notAnd" (formula "46") (term "1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "46") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,0,0,1,1,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "46") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,0,1,0,0"))
                     (rule "nnf_notAnd" (formula "46") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "17") (term "1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,1,1,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,1,0,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "18") (term "1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,1,1,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "18") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,1,0,0"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                     (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "16") (term "0"))
                     (rule "wellFormedAnon" (formula "16") (term "1,0"))
                     (rule "wellFormedAnonEQ" (formula "16") (term "0,1,0") (ifseqformula "42"))
                     (rule "replace_known_left" (formula "16") (term "1,0,1,0") (ifseqformula "41"))
                      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "51")) (ifInst ""  (formula "22")) (ifInst ""  (formula "20")) (ifInst ""  (formula "17")))
                     (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "47") (term "1,0,2,0,1,0"))
                     (rule "translateJavaSubInt" (formula "47") (term "0,1,1,1,0,2,0,1,0"))
                     (rule "polySimp_elimSub" (formula "47") (term "1,0,0,1,0,2,0,1,0"))
                     (rule "polySimp_elimSub" (formula "47") (term "0,1,1,1,0,2,0,1,0"))
                     (rule "mul_literals" (formula "47") (term "1,0,1,1,1,0,2,0,1,0"))
                     (rule "polySimp_elimSub" (formula "47") (term "1,1,1,0,2,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "47") (term "1,0,2,0,1,0"))
                     (rule "polySimp_addComm0" (formula "47") (term "0,1,0,1,0,2,0,1,0"))
                     (rule "polySimp_rightDist" (formula "47") (term "0,1,1,0,2,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,1,0,2,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "47") (term "0,0,1,1,0,2,0,1,0"))
                     (rule "polySimp_addComm1" (formula "47") (term "1,1,0,2,0,1,0"))
                     (rule "polySimp_addComm0" (formula "47") (term "0,1,1,0,2,0,1,0"))
                     (rule "polySimp_rightDist" (formula "47") (term "1,0,2,0,1,0"))
                     (rule "polySimp_mulComm1" (formula "47") (term "1,1,0,2,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "47") (term "0,1,1,0,2,0,1,0"))
                     (rule "polySimp_rightDist" (formula "47") (term "0,1,0,2,0,1,0"))
                     (rule "polySimp_elimOne" (formula "47") (term "0,0,1,0,2,0,1,0"))
                     (rule "polySimp_mulComm1" (formula "47") (term "1,0,1,0,2,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,1,0,2,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "47") (term "0,2,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "47") (term "0,0,2,0,1,0"))
                     (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "38") (term "0") (inst "i=i_1") (inst "j=j"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "expand_inInt" (formula "38") (term "1,0,0"))
                     (rule "expand_inInt" (formula "38") (term "1,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "38") (term "1,0,1,0,0"))
                     (rule "replace_int_MIN" (formula "38") (term "0,1,1,0,0"))
                     (rule "replace_int_MIN" (formula "38") (term "0,1,1,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "38") (term "1,0,1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "38") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "38") (term "1,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0"))
                     (rule "nnf_imp2or" (formula "38") (term "0"))
                     (rule "nnf_notAnd" (formula "38") (term "0,0"))
                     (rule "nnf_imp2or" (formula "38") (term "0,1,0"))
                     (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "38") (term "1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "38") (term "1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "38") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "38") (term "1,0,0,1,1,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "38") (term "1,1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "38") (term "1,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "38") (term "1,0,1,0,0"))
                     (rule "nnf_notAnd" (formula "38") (term "0,0,1,0"))
                     (rule "nnf_notAnd" (formula "38") (term "0,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "38") (term "1,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "38") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "38") (term "1,0,0,1,1,0,0,1,0"))
                     (rule "add_literals" (formula "38") (term "0,0,1,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "38") (term "1,1,1,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "38") (term "1,0,0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "38") (term "1,0,1,0,0,1,0"))
                     (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "17") (term "0") (inst "i=i_1") (inst "j=j"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "expand_inInt" (formula "17") (term "1,0,0"))
                     (rule "expand_inInt" (formula "17") (term "1,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "17") (term "1,0,1,0,0"))
                     (rule "replace_int_MIN" (formula "17") (term "0,1,1,0,0"))
                     (rule "replace_int_MIN" (formula "17") (term "0,1,1,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "17") (term "1,0,1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "17") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "17") (term "1,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0"))
                     (rule "nnf_imp2or" (formula "17") (term "0"))
                     (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "46") (term "0"))
                     (rule "wellFormedAnonEQ" (formula "46") (term "1,0") (ifseqformula "42"))
                     (rule "replace_known_left" (formula "46") (term "0,1") (ifseqformula "47"))
                      (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "52")) (ifInst ""  (formula "22")) (ifInst ""  (formula "41")))
                     (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "40") (inst "i=i_1") (inst "i_0=i_0"))
                      (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "50")) (ifInst ""  (formula "11")))
                     (rule "expand_inInt" (formula "40") (term "1,0,0,1"))
                     (rule "expand_inInt" (formula "40") (term "1,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "40") (term "1,0,1,0,0,1"))
                     (rule "replace_int_MIN" (formula "40") (term "0,1,1,0,0,1"))
                     (rule "replace_int_MAX" (formula "40") (term "1,0,1,0,0,1,0"))
                     (rule "replace_int_MIN" (formula "40") (term "0,1,1,0,0,1,0"))
                     (rule "andLeft" (formula "40"))
                     (rule "andLeft" (formula "40"))
                     (rule "andLeft" (formula "40"))
                     (rule "andLeft" (formula "40"))
                     (rule "andLeft" (formula "40"))
                     (rule "andLeft" (formula "41"))
                     (rule "andLeft" (formula "40"))
                     (rule "andLeft" (formula "40"))
                     (rule "notLeft" (formula "40"))
                     (rule "translateJavaSubInt" (formula "47") (term "0,2,1,1,0"))
                     (rule "translateJavaSubInt" (formula "45") (term "3,0"))
                     (rule "translateJavaShiftLeftInt" (formula "41") (term "1"))
                     (rule "eqSymm" (formula "47") (term "1,0"))
                     (rule "polySimp_elimSub" (formula "45") (term "3,0"))
                     (rule "mul_literals" (formula "45") (term "1,3,0"))
                     (rule "polySimp_elimSub" (formula "47") (term "0,2,0,1,0"))
                     (rule "mul_literals" (formula "47") (term "1,0,2,0,1,0"))
                     (rule "polySimp_addComm0" (formula "45") (term "3,0"))
                     (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "46") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "47") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "46") (term "0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "46") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "44"))
                     (rule "inEqSimp_commuteLeq" (formula "42"))
                     (rule "inEqSimp_commuteLeq" (formula "43"))
                     (rule "inEqSimp_commuteLeq" (formula "40"))
                     (rule "applyEq" (formula "42") (term "1") (ifseqformula "51"))
                     (rule "applyEq" (formula "45") (term "1,0,1,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "40") (term "0") (ifseqformula "50"))
                     (rule "eqSymm" (formula "40"))
                     (rule "applyEq" (formula "55") (term "0") (ifseqformula "37"))
                     (rule "applyEq" (formula "41") (term "0") (ifseqformula "50"))
                     (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "42") (term "1,3,0") (ifseqformula "49"))
                     (rule "applyEq" (formula "41") (term "1") (ifseqformula "49"))
                     (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "42") (term "0,1,0,0,1,0,0,0") (ifseqformula "48"))
                     (rule "applyEq" (formula "42") (term "0,1,0,0,1,1,0") (ifseqformula "48"))
                     (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0,0") (ifseqformula "48"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0"))
                     (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,1,1,0"))
                     (rule "mul_literals" (formula "42") (term "0,1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "42") (term "1,1,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                     (rule "javaShiftLeftIntDef" (formula "40") (term "0"))
                     (rule "mod_axiom" (formula "40") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                     (rule "shiftLeftDef" (formula "40") (term "0,0"))
                     (rule "polySimp_elimNeg" (formula "40") (term "1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,0"))
                     (rule "shiftLeftPositiveShiftDef" (formula "40") (term "2,0,0"))
                     (rule "polySimp_elimOneLeft0" (formula "40") (term "2,0,0"))
                     (rule "shiftRightPositiveShiftDef" (formula "40") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0"))
                     (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "40") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,0"))
                     (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "50") (term "0") (inst "i=i_1") (inst "j=j"))
                      (builtin "One Step Simplification" (formula "50"))
                     (rule "expand_inInt" (formula "50") (term "1,0,0"))
                     (rule "expand_inInt" (formula "50") (term "1,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "50") (term "1,0,1,0,0"))
                     (rule "replace_int_MIN" (formula "50") (term "0,1,1,0,0"))
                     (rule "replace_int_MIN" (formula "50") (term "0,1,1,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "50") (term "1,0,1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "50") (term "1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "50") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "50") (term "1,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0"))
                     (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
                     (rule "commute_or_2" (formula "47") (term "0,0"))
                     (rule "commute_or_2" (formula "46") (term "0,0"))
                     (rule "commute_or_2" (formula "8") (term "0,0"))
                     (rule "commute_or_2" (formula "9") (term "0,0,0"))
                     (rule "nnf_imp2or" (formula "42") (term "0"))
                     (rule "nnf_imp2or" (formula "43") (term "0"))
                     (rule "commute_or_2" (formula "51") (term "0,0"))
                     (rule "expand_moduloInteger" (formula "40") (term "0"))
                     (rule "replace_int_MIN" (formula "40") (term "0,0"))
                     (rule "replace_int_RANGE" (formula "40") (term "1,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "40") (term "0,0,1,0"))
                     (rule "polySimp_homoEq" (formula "40"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                     (rule "mul_literals" (formula "40") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "40") (term "0"))
                     (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                     (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "12"))
                     (rule "polySimp_pullOutFactor1" (formula "40") (term "0"))
                     (rule "add_literals" (formula "40") (term "1,0"))
                     (rule "times_zero_1" (formula "40") (term "0"))
                      (builtin "One Step Simplification" (formula "40"))
                     (rule "true_left" (formula "40"))
                     (rule "commute_and" (formula "45") (term "1,0"))
                     (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "16") (term "0") (inst "i=i_1"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "expand_inInt" (formula "16") (term "1,0,0"))
                     (rule "replace_int_MIN" (formula "16") (term "0,1,1,0,0"))
                     (rule "replace_int_MAX" (formula "16") (term "1,0,1,0,0"))
                     (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0,0"))
                     (rule "translateJavaAddInt" (formula "16") (term "0,2,1,1,0"))
                     (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,1,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "16") (term "0,2,1,1,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "1,1,0,0,0"))
                     (rule "add_literals" (formula "16") (term "0,1,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "16") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                     (rule "commute_or_2" (formula "18") (term "0,0"))
                     (rule "commute_or_2" (formula "19") (term "0,0"))
                     (rule "nnf_imp2or" (formula "49") (term "0"))
                     (rule "nnf_notAnd" (formula "41") (term "0,0"))
                     (rule "nnf_notAnd" (formula "42") (term "0,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "17") (term "1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,1,1,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,1,0,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
                     (rule "nnf_imp2or" (formula "16") (term "0"))
                     (rule "nnf_notAnd" (formula "49") (term "0,0"))
                     (rule "nnf_imp2or" (formula "49") (term "0,1,0"))
                     (rule "nnf_notAnd" (formula "41") (term "1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "41") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "41") (term "1,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "41") (term "1,0,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "41") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "41") (term "1,0,0,1,1,0,0"))
                     (rule "add_literals" (formula "41") (term "0,0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "41") (term "1,1,1,0,0"))
                     (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "42") (term "1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "42") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "42") (term "1,0,0,1,1,0,0"))
                     (rule "add_literals" (formula "42") (term "0,0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "42") (term "1,1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "42") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "42") (term "1,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "42") (term "1,0,1,0,0"))
                     (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                     (rule "commute_or_2" (formula "38") (term "0,0"))
                     (rule "nnf_notAnd" (formula "16") (term "0,0"))
                     (rule "nnf_notAnd" (formula "49") (term "1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "49") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "49") (term "1,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "49") (term "1,0,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "49") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "49") (term "1,0,0,1,1,0,0"))
                     (rule "add_literals" (formula "49") (term "0,0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "49") (term "1,1,1,0,0"))
                     (rule "nnf_notAnd" (formula "49") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,0"))
                     (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "49") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "49") (term "1,0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0"))
                     (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "48") (term "0"))
                     (rule "wellFormedAnonEQ" (formula "48") (term "1,0") (ifseqformula "44"))
                     (rule "replace_known_right" (formula "48") (term "0,0,0") (ifseqformula "55"))
                      (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "22")) (ifInst ""  (formula "43")) (ifInst ""  (formula "49")))
                     (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "49") (term "0") (inst "i=i_1"))
                      (builtin "One Step Simplification" (formula "49"))
                     (rule "expand_inInt" (formula "49") (term "1,0,0"))
                     (rule "replace_int_MAX" (formula "49") (term "1,0,1,0,0"))
                     (rule "replace_int_MIN" (formula "49") (term "0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "49") (term "1,1,0,0,0"))
                     (rule "translateJavaAddInt" (formula "49") (term "0,2,1,1,0"))
                     (rule "polySimp_elimSub" (formula "49") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "49") (term "1,1,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "49") (term "0,2,1,1,0"))
                     (rule "polySimp_addComm1" (formula "49") (term "1,1,0,0,0"))
                     (rule "add_literals" (formula "49") (term "0,1,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "49") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "49") (term "1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "50") (term "0,0,1,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "17") (term "1,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,1,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,1,1,0,0,1,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,1,1,0,0,1,0"))
                     (rule "div_axiom" (formula "12") (term "0,1,1,2,1,0,0") (inst "quotient=quotient_0"))
                     (rule "mul_literals" (formula "12") (term "1,1,1,1,1"))
                     (rule "qeq_literals" (formula "12") (term "0,1,1"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "equal_literals" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "polySimp_addComm1" (formula "14") (term "1"))
                     (rule "add_literals" (formula "14") (term "0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "13"))
                     (rule "inEqSimp_homoInEq1" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0"))
                     (rule "applyEq" (formula "15") (term "0,0,0,1,0,0") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0,0"))
                     (rule "applyEq" (formula "15") (term "0,1,1,2,1,0,0") (ifseqformula "12"))
                     (rule "polySimp_addComm0" (formula "15") (term "1,2,1,0,0"))
                     (rule "applyEq" (formula "15") (term "0,1,1,1,1,1,0,0") (ifseqformula "12"))
                     (rule "polySimp_addComm0" (formula "15") (term "1,1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1"))
                     (rule "polySimp_rightDist" (formula "14") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                     (rule "mul_literals" (formula "14") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "15") (term "0,1,0,0") (ifseqformula "13"))
                     (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,1,0,0"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                     (rule "leq_literals" (formula "15") (term "0,0,1,0,0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "mod_axiom" (formula "15") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                     (rule "polySimp_homoEq" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                     (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "15") (term "0,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1"))
                     (rule "newSym_eq" (formula "15") (inst "l=l_1") (inst "newSymDef=add(mul(l_0, Z(0(#))),
    mul(pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                int::final(de.wiesler.Tree::final(self,
                                                  de.wiesler.Classifier::$tree),
                           de.wiesler.Tree::$log_buckets))),
        Z(0(#))))"))
                     (rule "times_zero_1" (formula "15") (term "1,1,1"))
                     (rule "times_zero_1" (formula "15") (term "0,1,1"))
                     (rule "add_zero_right" (formula "15") (term "1,1"))
                     (rule "add_zero_right" (formula "15") (term "1"))
                     (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "15"))
                     (rule "polySimp_homoEq" (formula "16"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0"))
                     (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "16"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1"))
                     (rule "polySimp_rightDist" (formula "16") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "16") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
                     (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "16"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                     (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=l_1"))
                     (rule "equal_literals" (formula "15") (term "0,0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                     (rule "polySimp_homoEq" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,1,1,1,0"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0,1,1,1,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,1,1,1,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0"))
                     (rule "add_literals" (formula "15") (term "1,0,0"))
                     (rule "times_zero_1" (formula "15") (term "0,0"))
                     (rule "add_zero_left" (formula "15") (term "0"))
                     (rule "polySimp_invertEq" (formula "15"))
                     (rule "times_zero_2" (formula "15") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                     (rule "polySimp_elimOne" (formula "15") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "11"))
                     (rule "polySimp_mulAssoc" (formula "13") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "13") (term "0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "neg_literal" (formula "13") (term "0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0"))
                     (rule "qeq_literals" (formula "13") (term "0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "15"))
                     (rule "mul_literals" (formula "10") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                     (rule "add_literals" (formula "10") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "10") (term "0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0"))
                     (rule "leq_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "14"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                     (rule "qeq_literals" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "10"))
                     (rule "times_zero_2" (formula "15") (term "1"))
                     (rule "applyEq" (formula "16") (term "0,1,1") (ifseqformula "10"))
                     (rule "mul_literals" (formula "16") (term "1,1"))
                     (rule "add_literals" (formula "16") (term "1"))
                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "10"))
                     (rule "leq_literals" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "applyEqRigid" (formula "17") (term "0,0,1,0") (ifseqformula "10"))
                     (rule "times_zero_2" (formula "17") (term "0,1,0"))
                     (rule "add_zero_left" (formula "17") (term "1,0"))
                     (rule "applyEqRigid" (formula "13") (term "1") (ifseqformula "10"))
                     (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "12"))
                     (rule "leq_literals" (formula "15") (term "0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "11"))
                     (rule "leq_literals" (formula "14") (term "0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "commute_or_2" (formula "41") (term "0,0,1,0"))
                     (rule "nnf_notAnd" (formula "19") (term "1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "19") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "1,0,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "19") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "1,0,0,1,1,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                     (rule "nnf_notAnd" (formula "19") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "19") (term "1,0,0,0,0"))
                     (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "43") (term "0") (inst "i=i_1") (inst "j=j"))
                      (builtin "One Step Simplification" (formula "43"))
                     (rule "expand_inInt" (formula "43") (term "1,0,0"))
                     (rule "expand_inInt" (formula "43") (term "1,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "43") (term "1,0,1,0,0"))
                     (rule "replace_int_MIN" (formula "43") (term "0,1,1,0,0"))
                     (rule "replace_int_MIN" (formula "43") (term "0,1,1,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "43") (term "1,0,1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "43") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "43") (term "1,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                     (rule "nnf_imp2or" (formula "52") (term "0"))
                     (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                     (rule "expand_inShort" (formula "18"))
                     (rule "replace_short_MIN" (formula "18") (term "0,1"))
                     (rule "replace_short_MAX" (formula "18") (term "1,0"))
                     (rule "andLeft" (formula "18"))
                     (rule "inEqSimp_commuteLeq" (formula "19"))
                     (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "18"))
                     (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                     (rule "polySimp_elimOne" (formula "20") (term "0"))
                     (rule "arrayLengthIsAShort" (formula "1") (term "0,1"))
                     (rule "expand_inShort" (formula "1"))
                     (rule "replace_short_MAX" (formula "1") (term "1,0"))
                     (rule "replace_short_MIN" (formula "1") (term "0,1"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "37"))
                     (rule "leq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                     (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1"))
                     (rule "polySimp_elimOne" (formula "41") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                     (rule "add_literals" (formula "41") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "41") (term "1,0,0"))
                     (rule "add_zero_right" (formula "41") (term "0,0"))
                     (rule "qeq_literals" (formula "41") (term "0"))
                      (builtin "One Step Simplification" (formula "41"))
                     (rule "true_left" (formula "41"))
                     (rule "cut_direct" (formula "1") (term "1"))
                     (branch "CUT: values.length <= begin + i_0 TRUE"
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "36") (term "0,0"))
                        (rule "add_zero_left" (formula "36") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                        (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0"))
                        (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1"))
                        (rule "polySimp_rightDist" (formula "40") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "40") (term "0,1"))
                        (rule "inEqSimp_contradInEq0" (formula "40") (ifseqformula "2"))
                        (rule "andLeft" (formula "40"))
                        (rule "inEqSimp_homoInEq1" (formula "40"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "0,1,0"))
                        (rule "mul_literals" (formula "40") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0"))
                        (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                        (rule "add_literals" (formula "40") (term "1,1,0"))
                        (rule "times_zero_1" (formula "40") (term "1,0"))
                        (rule "add_zero_right" (formula "40") (term "0"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0"))
                        (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "40") (term "0"))
                        (rule "add_literals" (formula "40") (term "1,1,0"))
                        (rule "times_zero_1" (formula "40") (term "1,0"))
                        (rule "add_zero_right" (formula "40") (term "0"))
                        (rule "leq_literals" (formula "40"))
                        (rule "closeFalse" (formula "40"))
                     )
                     (branch "CUT: values.length <= begin + i_0 FALSE"
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_leqRight" (formula "59"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                        (rule "mul_literals" (formula "1") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "8") (term "0,0"))
                        (rule "add_zero_left" (formula "8") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                        (rule "polySimp_elimOne" (formula "8") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "37") (ifseqformula "8"))
                        (rule "qeq_literals" (formula "37") (term "0"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "closeFalse" (formula "37"))
                     )
                  )
               )
            )
            (branch "if x_2 false"
                (builtin "One Step Simplification" (formula "50"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "elim_double_block_2" (formula "50") (term "1"))
               (rule "blockBreak" (formula "50") (term "1"))
               (rule "lsBreak" (formula "50") (term "1"))
               (rule "assignment" (formula "50") (term "1"))
                (builtin "One Step Simplification" (formula "50"))
               (rule "methodCallEmpty" (formula "50") (term "1"))
               (rule "tryEmpty" (formula "50") (term "1"))
               (rule "emptyModality" (formula "50") (term "1"))
               (rule "andRight" (formula "50"))
               (branch "Case 1"
                  (rule "impRight" (formula "50"))
                  (rule "andRight" (formula "51"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "8")))
                     (rule "closeTrue" (formula "51"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "51"))
                     (rule "closeTrue" (formula "51"))
                  )
               )
               (branch "Case 2"
                  (rule "impRight" (formula "50"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Null Reference (_indices = null)"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "40"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "elim_double_block_4" (formula "40") (term "1"))
      (rule "for_to_while" (formula "40") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
      (rule "variableDeclarationAssign" (formula "40") (term "1"))
      (rule "variableDeclaration" (formula "40") (term "1") (newnames "i"))
      (rule "assignment" (formula "40") (term "1"))
       (builtin "One Step Simplification" (formula "40"))
      (rule "loopScopeInvDia" (formula "40") (term "1") (newnames "i_0,o,f") (inst "#x=x_1") (inst "#variant=x") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_heap_LOOP=anon_heap_LOOP_0"))
      (branch "Invariant Initially Valid"
         (rule "closeTrue" (formula "40"))
      )
      (branch "Invariant Preserved and Used"
          (builtin "One Step Simplification" (formula "41"))
         (rule "expand_inInt" (formula "41") (term "1,0,0,1,0,0"))
         (rule "expand_inInt" (formula "41") (term "1,0,0,1,0,0,0"))
         (rule "replace_int_MAX" (formula "41") (term "1,0,1,0,0,1,0,0"))
         (rule "replace_int_MIN" (formula "41") (term "0,1,1,0,0,1,0,0"))
         (rule "replace_int_MAX" (formula "41") (term "1,0,1,0,0,1,0,0,0"))
         (rule "replace_int_MIN" (formula "41") (term "0,1,1,0,0,1,0,0,0"))
         (rule "impRight" (formula "41"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "translateJavaSubInt" (formula "47") (term "0,1,1,0,1"))
         (rule "translateJavaSubInt" (formula "47") (term "0,1,1,0"))
         (rule "translateJavaAddInt" (formula "4") (term "0,2,2,0,1,0"))
         (rule "translateJavaAddInt" (formula "3") (term "0,2,2,0,1,0"))
         (rule "polySimp_elimSub" (formula "47") (term "0,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "47") (term "0,1,1,0"))
         (rule "polySimp_addComm0" (formula "47") (term "0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "47") (term "0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "4") (term "1,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "2"))
         (rule "inEqSimp_commuteLeq" (formula "1"))
         (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_1"))
         (rule "applyEq" (formula "4") (term "1,1,0,0,0") (ifseqformula "28"))
         (rule "applyEq" (formula "47") (term "1,0,1,1,0") (ifseqformula "28"))
         (rule "polySimp_addComm0" (formula "47") (term "0,1,1,0"))
         (rule "applyEq" (formula "2") (term "0") (ifseqformula "28"))
         (rule "inEqSimp_commuteGeq" (formula "2"))
         (rule "commute_and" (formula "4") (term "1,0,0"))
         (rule "commute_and" (formula "3") (term "1,0,0"))
         (rule "commute_and" (formula "3") (term "0,0,0"))
         (rule "commute_and" (formula "4") (term "0,0,0"))
         (rule "commute_and_2" (formula "4") (term "0,0"))
         (rule "shift_paren_and" (formula "3") (term "0,0"))
         (rule "commute_and_2" (formula "3") (term "0,0,0"))
         (rule "shift_paren_and" (formula "4") (term "0,0,0"))
         (rule "ifElseUnfold" (formula "47") (term "1") (inst "#boolv=x_2"))
         (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_2"))
         (rule "compound_less_than_comparison_2" (formula "47") (term "1") (inst "#v1=x_4") (inst "#v0=x_3"))
         (rule "variableDeclarationAssign" (formula "47") (term "1"))
         (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_3"))
         (rule "assignment" (formula "47") (term "1"))
          (builtin "One Step Simplification" (formula "47"))
         (rule "variableDeclarationAssign" (formula "47") (term "1"))
         (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_4"))
         (rule "assignment_read_length" (formula "47"))
         (branch "Normal Execution (_indices != null)"
             (builtin "One Step Simplification" (formula "47"))
            (rule "applyEq" (formula "47") (term "0,1,0") (ifseqformula "28"))
            (rule "less_than_comparison_simple" (formula "47") (term "1"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "41") (term "0,0") (ifseqformula "8") (ifseqformula "9"))
            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "41") (term "0") (ifseqformula "9") (ifseqformula "10"))
            (rule "ifElseSplit" (formula "49"))
            (branch "if x_2 true"
                (builtin "One Step Simplification" (formula "50"))
                (builtin "One Step Simplification" (formula "1"))
                (builtin "Block Contract (Internal)" (formula "50") (newnames "exc_0,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
               (branch "Validity"
                   (builtin "One Step Simplification" (formula "51"))
                   (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "20")) (ifInst ""  (formula "13")) (ifInst ""  (formula "48")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,1") (ifseqformula "34"))
                  (rule "andLeft" (formula "40"))
                  (rule "eqSymm" (formula "52") (term "0,0,1,0,1"))
                  (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "12"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "true_left" (formula "41"))
                  (rule "variableDeclarationAssign" (formula "51") (term "1"))
                  (rule "variableDeclaration" (formula "51") (term "1") (newnames "exc_0_1"))
                  (rule "assignment" (formula "51") (term "1"))
                   (builtin "One Step Simplification" (formula "51"))
                  (rule "emptyStatement" (formula "51") (term "1"))
                   (builtin "One Step Simplification" (formula "51"))
                  (rule "emptyStatement" (formula "51") (term "1"))
                  (rule "tryEmpty" (formula "51") (term "1"))
                  (rule "blockEmptyLabel" (formula "51") (term "1"))
                  (rule "blockEmpty" (formula "51") (term "1"))
                  (rule "methodCallEmpty" (formula "51") (term "1"))
                  (rule "emptyModality" (formula "51") (term "1"))
                  (rule "andRight" (formula "51"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "51"))
                     (rule "closeTrue" (formula "51"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "51"))
                     (rule "closeTrue" (formula "51"))
                  )
               )
               (branch "Precondition"
                  (rule "andRight" (formula "50"))
                  (branch "Case 1"
                     (rule "andRight" (formula "50"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "20")))
                        (rule "closeTrue" (formula "50"))
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "wellFormedAnon" (formula "50"))
                        (rule "wellFormedAnonEQ" (formula "50") (term "0") (ifseqformula "34"))
                        (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "11")) (ifInst ""  (formula "33")))
                        (rule "closeTrue" (formula "50"))
                     )
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "50"))
                     (branch "Case 1"
                        (rule "andRight" (formula "50"))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "47")))
                           (rule "closeTrue" (formula "50"))
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "50"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0") (ifseqformula "34"))
                           (rule "orRight" (formula "50"))
                           (rule "orRight" (formula "50"))
                           (rule "close" (formula "50") (ifseqformula "12"))
                        )
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "13")))
                        (rule "closeTrue" (formula "50"))
                     )
                  )
               )
               (branch "Usage"
                   (builtin "One Step Simplification" (formula "40"))
                   (builtin "One Step Simplification" (formula "51"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,1,1,0") (ifseqformula "34"))
                  (rule "expand_inInt" (formula "40") (term "1"))
                  (rule "replace_int_MIN" (formula "40") (term "0,1,1"))
                  (rule "replace_int_MAX" (formula "40") (term "1,0,1"))
                  (rule "andLeft" (formula "40"))
                  (rule "andLeft" (formula "41"))
                  (rule "andLeft" (formula "40"))
                  (rule "translateJavaAddInt" (formula "42") (term "0,2,0"))
                  (rule "translateJavaAddInt" (formula "43") (term "0,2,1"))
                  (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "40"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "true_left" (formula "41"))
                  (rule "inEqSimp_commuteLeq" (formula "42"))
                  (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=arr_0"))
                  (rule "applyEq" (formula "43") (term "0") (ifseqformula "41"))
                  (rule "simplifySelectOfAnon" (formula "41"))
                   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "46")) (ifInst ""  (formula "52")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0") (ifseqformula "34"))
                  (rule "replace_known_left" (formula "41") (term "0,0,0,0") (ifseqformula "14"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "34"))
                   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "46")) (ifInst ""  (formula "52")) (ifInst ""  (formula "14")))
                  (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "41"))
                  (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "41"))
                  (rule "hideAuxiliaryEq" (formula "41"))
                  (rule "elim_double_block_2" (formula "53") (term "1"))
                  (rule "ifUnfold" (formula "53") (term "1") (inst "#boolv=x_2"))
                  (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_5"))
                  (rule "inequality_comparison_simple" (formula "53") (term "1"))
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "replace_known_left" (formula "53") (term "0,0,1,0") (ifseqformula "40"))
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "ifSplit" (formula "53"))
                  (branch "if x_5 true"
                      (builtin "One Step Simplification" (formula "54"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_5 false"
                      (builtin "One Step Simplification" (formula "54"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "blockEmpty" (formula "53") (term "1"))
                     (rule "compound_assignment_op_minus_array" (formula "53") (term "1") (inst "#v1=x_2") (inst "#v0=x_arr"))
                     (rule "variableDeclarationAssign" (formula "53") (term "1"))
                     (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_arr"))
                     (rule "assignment" (formula "53") (term "1"))
                      (builtin "One Step Simplification" (formula "53"))
                     (rule "variableDeclarationAssign" (formula "53") (term "1"))
                     (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_6"))
                     (rule "assignment" (formula "53") (term "1"))
                      (builtin "One Step Simplification" (formula "53"))
                     (rule "eval_order_array_access3" (formula "53") (term "1") (inst "#v1=x_8") (inst "#v2=x_7") (inst "#v0=x_arr_1"))
                     (rule "variableDeclarationAssign" (formula "53") (term "1"))
                     (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_arr_1"))
                     (rule "assignment" (formula "53") (term "1"))
                      (builtin "One Step Simplification" (formula "53"))
                     (rule "variableDeclarationAssign" (formula "53") (term "1"))
                     (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_7"))
                     (rule "assignment" (formula "53") (term "1"))
                      (builtin "One Step Simplification" (formula "53"))
                     (rule "variableDeclarationAssign" (formula "53") (term "1"))
                     (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_8"))
                     (rule "compound_int_cast_expression" (formula "53") (term "1") (inst "#v=x_9"))
                     (rule "variableDeclarationAssign" (formula "53") (term "1"))
                     (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_9"))
                     (rule "remove_parentheses_right" (formula "53") (term "1"))
                     (rule "compound_subtraction_2" (formula "53") (term "1") (inst "#v1=x_11") (inst "#v0=x_10"))
                     (rule "variableDeclarationAssign" (formula "53") (term "1"))
                     (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_10"))
                     (rule "assignment_array2" (formula "53"))
                     (branch "Normal Execution (x_arr != null)"
                         (builtin "One Step Simplification" (formula "53"))
                        (rule "pullOutSelect" (formula "53") (term "0,1,0") (inst "selectSK=arr_1"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "54") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "variableDeclarationAssign" (formula "53") (term "1"))
                        (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_11"))
                        (rule "assignment_read_attribute_this_final" (formula "53"))
                         (builtin "One Step Simplification" (formula "53"))
                        (rule "assignmentSubtractionInt" (formula "53") (term "1"))
                        (branch "Overflow check"
                            (builtin "One Step Simplification" (formula "53") (userinteraction))
                           (rule "instAll" (formula "4") (term "0") (ifseqformula "7") (userinteraction))
                           (rule "impLeft" (formula "4") (userinteraction))
                           (branch "Case 1"
                              (rule "expand_inInt" (formula "54"))
                              (rule "replace_int_MIN" (formula "54") (term "0,1"))
                              (rule "replace_int_MAX" (formula "54") (term "1,0"))
                              (rule "replace_known_left" (formula "43") (term "0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "polySimp_elimSub" (formula "54") (term "1,1"))
                              (rule "polySimp_elimSub" (formula "54") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "54") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "54") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0"))
                              (rule "polySimp_mulAssoc" (formula "35") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "35") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "35") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "29"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "43") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "43") (term "0,1"))
                              (rule "add_literals" (formula "43") (term "1,0,1"))
                              (rule "times_zero_1" (formula "43") (term "0,1"))
                              (rule "leq_literals" (formula "43") (term "1"))
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "inEqSimp_homoInEq0" (formula "54") (term "1"))
                              (rule "mul_literals" (formula "54") (term "1,0,1"))
                              (rule "polySimp_addComm1" (formula "54") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "54") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "54") (term "0"))
                              (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "54") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "54") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "54") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "54") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1"))
                              (rule "polySimp_elimOne" (formula "30") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                              (rule "mul_literals" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,0,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "53") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1"))
                              (rule "mul_literals" (formula "53") (term "0,1,1"))
                              (rule "polySimp_elimOne" (formula "53") (term "1,1,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "53") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "53") (term "0,0"))
                              (rule "inEqSimp_subsumption1" (formula "42") (term "0") (ifseqformula "4"))
                              (rule "leq_literals" (formula "42") (term "0,0"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "inEqSimp_leqRight" (formula "42"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "23"))
                              (rule "leq_literals" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "22"))
                              (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0"))
                              (rule "qeq_literals" (formula "28") (term "0"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "23"))
                              (rule "leq_literals" (formula "25") (term "0"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                              (rule "leq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "25"))
                              (rule "mul_literals" (formula "16") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0"))
                              (rule "add_literals" (formula "16") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                              (rule "mul_literals" (formula "16") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "21"))
                              (rule "leq_literals" (formula "16") (term "0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "23"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                              (rule "polySimp_elimOne" (formula "24") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "24"))
                              (rule "leq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                              (rule "mul_literals" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "1"))
                              (rule "andLeft" (formula "26"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                              (rule "add_literals" (formula "26") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                              (rule "add_literals" (formula "26") (term "1,1,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0"))
                              (rule "add_literals" (formula "26") (term "0"))
                              (rule "leq_literals" (formula "26"))
                              (rule "closeFalse" (formula "26"))
                           )
                           (branch "Case 2"
                               (builtin "Evaluate Query" (formula "4") (term "0") (newnames "value,callee,queryResult,res_classify") (userinteraction))
                              (rule "replaceKnownQuery1001200110_5" (formula "5") (term "0"))
                              (rule "replaceKnownSelect_taclet01200110_3" (formula "5") (term "1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet01200110_4" (formula "5") (term "1"))
                              (rule "replaceKnownSelect_taclet200110_0" (formula "1") (term "0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet200110_2" (formula "1") (term "0,1,0,0"))
                              (rule "expand_inInt" (formula "55"))
                              (rule "replace_int_MIN" (formula "55") (term "0,1"))
                              (rule "replace_int_MAX" (formula "55") (term "1,0"))
                              (rule "notLeft" (formula "1"))
                              (rule "eqSymm" (formula "4"))
                              (rule "eqSymm" (formula "44") (term "0,0,1"))
                              (rule "polySimp_elimSub" (formula "55") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "55") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "55") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "55") (term "1,1"))
                              (rule "variableDeclaration" (formula "44") (term "1") (newnames "queryResult"))
                              (rule "applyEq" (formula "55") (term "1,0,0") (ifseqformula "4"))
                              (rule "polySimp_addComm0" (formula "55") (term "0,0"))
                              (rule "applyEq" (formula "55") (term "1,1,1") (ifseqformula "4"))
                              (rule "polySimp_addComm0" (formula "55") (term "1,1"))
                              (rule "commute_and" (formula "55"))
                               (builtin "Use Operation Contract" (formula "44") (newnames "heapBefore_classify,result,exc_1") (contract "de.wiesler.Tree[de.wiesler.Tree::classify(int)].JML normal_behavior operation contract.0"))
                              (branch "Post (classify)"
                                  (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "10")))
                                  (builtin "One Step Simplification" (formula "45"))
                                 (rule "expand_inInt" (formula "44") (term "0,1,0"))
                                 (rule "replace_int_MIN" (formula "44") (term "0,1,0,1,0"))
                                 (rule "replace_int_MAX" (formula "44") (term "1,0,0,1,0"))
                                 (rule "andLeft" (formula "44"))
                                 (rule "andLeft" (formula "44"))
                                 (rule "andLeft" (formula "44"))
                                 (rule "andLeft" (formula "44"))
                                 (rule "andLeft" (formula "46"))
                                 (rule "andLeft" (formula "47"))
                                 (rule "andLeft" (formula "46"))
                                 (rule "andLeft" (formula "49"))
                                 (rule "translateJavaSubInt" (formula "48") (term "3,0"))
                                 (rule "translateJavaMulInt" (formula "47") (term "1"))
                                 (rule "eqSymm" (formula "49"))
                                 (rule "polySimp_elimSub" (formula "48") (term "3,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "45"))
                                 (rule "assignment" (formula "52") (term "1"))
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "methodCallEmpty" (formula "52") (term "1"))
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "emptyModality" (formula "52") (term "1"))
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "notRight" (formula "52"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48"))
                                 (rule "polySimp_mulAssoc" (formula "48") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "37") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "31"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "63") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "30"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "63") (term "0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "63") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "63") (term "0,0,0"))
                                 (rule "applyEq" (formula "46") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "47") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "45") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "48") (term "1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "50") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "49") (term "0,3,0") (ifseqformula "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                 (rule "mul_literals" (formula "2") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,1"))
                                 (rule "mul_literals" (formula "62") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "62") (term "1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "62") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0"))
                                 (rule "qeq_literals" (formula "7") (term "0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "25"))
                                 (rule "leq_literals" (formula "27") (term "0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "24"))
                                 (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "29") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "29") (term "0,0"))
                                 (rule "qeq_literals" (formula "29") (term "0"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "23"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_exactShadow1" (formula "43") (ifseqformula "42"))
                                 (rule "greater_literals" (formula "43") (term "0"))
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "43") (term "0"))
                                 (rule "add_literals" (formula "43") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                 (rule "mul_literals" (formula "43") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "43"))
                                 (rule "leq_literals" (formula "41") (term "0"))
                                  (builtin "One Step Simplification" (formula "41"))
                                 (rule "true_left" (formula "41"))
                                 (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "25"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "26"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "6") (term "0,0"))
                                 (rule "add_zero_left" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0"))
                                 (rule "qeq_literals" (formula "23") (term "0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "27"))
                                 (rule "mul_literals" (formula "18") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                 (rule "add_literals" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                 (rule "mul_literals" (formula "18") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "23"))
                                 (rule "leq_literals" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "25"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "6"))
                                 (rule "leq_literals" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "inEqSimp_and_subsumption3" (formula "33") (term "0,0,0"))
                                 (rule "leq_literals" (formula "33") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
                                 (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "inEqSimp_and_subsumption3" (formula "32") (term "0,0,0"))
                                 (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "nnf_imp2or" (formula "10") (term "0"))
                                 (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "nnf_imp2or" (formula "9") (term "0"))
                                 (rule "nnf_imp2or" (formula "32") (term "0"))
                                 (rule "nnf_imp2or" (formula "33") (term "0"))
                                 (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                 (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                 (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "32") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "32") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "33") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "33") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "33") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "33") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "33") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "10") (term "0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "1,1,0,0,0,0"))
                                 (rule "Definition_axiom_for_isClassifiedAs_in_de_wiesler_Tree" (formula "43") (term "0"))
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "andLeft" (formula "43"))
                                 (rule "translateJavaSubInt" (formula "43") (term "0,2,0,1"))
                                 (rule "translateJavaSubInt" (formula "44") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "43") (term "0,2,0,1"))
                                 (rule "mul_literals" (formula "43") (term "1,0,2,0,1"))
                                 (rule "polySimp_elimSub" (formula "44") (term "1,0"))
                                 (rule "mul_literals" (formula "44") (term "1,1,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,2,0,1"))
                                 (rule "polySimp_addComm0" (formula "44") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "43") (term "0,0,2,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "43") (term "0"))
                                 (rule "add_zero_right" (formula "43") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "44") (term "0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "43") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "44") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1"))
                                 (rule "mul_literals" (formula "43") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,1"))
                                 (rule "pullOutSelect" (formula "44") (term "0,1") (inst "selectSK=arr_2"))
                                 (rule "simplifySelectOfAnon" (formula "44"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,1,1,0,0") (ifseqformula "31"))
                                 (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                 (rule "pullOutSelect" (formula "43") (term "0,1") (inst "selectSK=arr_3"))
                                 (rule "simplifySelectOfAnon" (formula "43"))
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,1,1,0,0") (ifseqformula "31"))
                                 (rule "inEqSimp_homoInEq0" (formula "44") (term "1"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1"))
                                 (rule "mul_literals" (formula "44") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,1"))
                                 (rule "pullOutSelect" (formula "45") (term "2,0") (inst "selectSK=arr_4"))
                                 (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "45"))
                                 (rule "pullOutSelect" (formula "43") (term "2,0") (inst "selectSK=arr_5"))
                                 (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "29"))
                                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "52")))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "translateJavaSubInt" (formula "34") (term "0,2,0"))
                                 (rule "translateJavaSubInt" (formula "34") (term "0,2,1"))
                                 (rule "eqSymm" (formula "31"))
                                 (rule "eqSymm" (formula "34"))
                                 (rule "polySimp_elimSub" (formula "34") (term "0,2,1"))
                                 (rule "mul_literals" (formula "34") (term "1,0,2,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "0,2,0"))
                                 (rule "mul_literals" (formula "34") (term "1,0,2,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,2,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,2,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "29"))
                                 (rule "applyEq" (formula "33") (term "3,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "52") (term "1,2,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "54") (term "0,0,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "50") (term "1,0,1,0,1,1,0,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "50") (term "0,0,0,1,0,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "38") (term "1,1,1,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "53") (term "1,0,1,0,1,1,0,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "53") (term "0,1,0,2,1,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "46") (term "0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "49") (term "0,0,0,1,0,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "49") (term "1,2,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "52") (term "0,0,0,0") (ifseqformula "32"))
                                 (rule "replace_known_right" (formula "52") (term "0,0,0") (ifseqformula "63"))
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "applyEq" (formula "38") (term "0,1,1,0,1,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "49") (term "0,0,0,0") (ifseqformula "32"))
                                 (rule "replace_known_right" (formula "49") (term "0,0,0") (ifseqformula "63"))
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "applyEq" (formula "53") (term "0,0,0,0") (ifseqformula "32"))
                                 (rule "replace_known_right" (formula "53") (term "0,0,0") (ifseqformula "63"))
                                  (builtin "One Step Simplification" (formula "53"))
                                 (rule "applyEq" (formula "50") (term "0,1,0,2,1,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "50") (term "1,0,0,0,1,1,0,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "34") (term "1,0,2,0") (ifseqformula "31"))
                                 (rule "eqSymm" (formula "34"))
                                 (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "50") (term "0,0,0,0") (ifseqformula "32"))
                                 (rule "replace_known_right" (formula "50") (term "0,0,0") (ifseqformula "63"))
                                  (builtin "One Step Simplification" (formula "50"))
                                 (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "49") (term "1,0,0,1,0,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "49") (term "0,1,0,2,2,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "52") (term "1,0,0,1,0,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "49") (term "0,1,0,2,1,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "52") (term "0,1,0,2,2,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "52") (term "0,0,0,0,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "52") (term "0,1,0,2,1,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "34") (term "1,0,2,0") (ifseqformula "31"))
                                 (rule "eqSymm" (formula "34"))
                                 (rule "applyEq" (formula "53") (term "0,0,0,0,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "53") (term "1,0,0,0,1,0,0") (ifseqformula "32"))
                                 (rule "inEqSimp_subsumption0" (formula "68") (term "0") (ifseqformula "46"))
                                 (rule "inEqSimp_homoInEq0" (formula "68") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0,0"))
                                 (rule "add_literals" (formula "68") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "68") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "68") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "68") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "68"))
                                 (rule "inEqSimp_geqRight" (formula "68"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_subsumption0" (formula "52") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "52") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "52") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "52") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0"))
                                 (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "52") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "52") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "52") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "inEqSimp_subsumption0" (formula "47") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "47") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "47") (term "1,0,0"))
                                 (rule "mul_literals" (formula "47") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "47") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                 (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "47") (term "0,0"))
                                 (rule "qeq_literals" (formula "47") (term "0"))
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "true_left" (formula "47"))
                                 (rule "inEqSimp_exactShadow1" (formula "48") (ifseqformula "1"))
                                 (rule "greater_literals" (formula "48") (term "0"))
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                                 (rule "mul_literals" (formula "48") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                                 (rule "add_literals" (formula "48") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "48") (term "0"))
                                 (rule "add_literals" (formula "48") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                 (rule "mul_literals" (formula "48") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "48"))
                                 (rule "leq_literals" (formula "47") (term "0"))
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "true_left" (formula "47"))
                                 (rule "inEqSimp_contradInEq0" (formula "47") (ifseqformula "46"))
                                 (rule "qeq_literals" (formula "47") (term "0"))
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "closeFalse" (formula "47"))
                              )
                              (branch "Exceptional Post (classify)"
                                  (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "10")))
                                  (builtin "One Step Simplification" (formula "45"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,1,0") (ifseqformula "35"))
                                 (rule "andLeft" (formula "44"))
                                 (rule "andLeft" (formula "44"))
                                 (rule "notLeft" (formula "44"))
                                 (rule "close" (formula "46") (ifseqformula "45"))
                              )
                              (branch "Pre (classify)"
                                  (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "10")))
                                 (rule "wellFormedAnon" (formula "44") (term "0,0"))
                                 (rule "wellFormedAnonEQ" (formula "44") (term "0,0,0") (ifseqformula "35"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,1,0") (ifseqformula "35"))
                                 (rule "expand_inInt" (formula "44") (term "1"))
                                 (rule "replace_int_MAX" (formula "44") (term "1,0,1"))
                                 (rule "replace_int_MIN" (formula "44") (term "0,1,1"))
                                 (rule "replace_known_left" (formula "44") (term "1,0,0,0") (ifseqformula "34"))
                                  (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "12")) (ifInst ""  (formula "11")) (ifInst ""  (formula "42")))
                                 (rule "inEqSimp_ltToLeq" (formula "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "36") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "44") (term "1"))
                                 (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "43"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "orRight" (formula "44"))
                                 (rule "orRight" (formula "44"))
                                 (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "44"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "30"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "57") (term "0"))
                                 (rule "mul_literals" (formula "57") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "57") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "57") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "57") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "57") (term "1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "57") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "29"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                 (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "36") (term "0,0,1,0,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "10") (term "1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "39") (term "1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "36") (term "0,1,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "8") (term "1,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "38") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                 (rule "mul_literals" (formula "1") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "56") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,1"))
                                 (rule "mul_literals" (formula "56") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "56") (term "1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
                                 (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "25"))
                                 (rule "leq_literals" (formula "27") (term "0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "22"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "22"))
                                 (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                 (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "27") (term "0,0"))
                                 (rule "qeq_literals" (formula "27") (term "0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "26"))
                                 (rule "mul_literals" (formula "17") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                 (rule "add_literals" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                 (rule "mul_literals" (formula "17") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "22"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "16"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "24"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "25") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "25"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                                 (rule "times_zero_1" (formula "5") (term "0,0"))
                                 (rule "add_zero_left" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0"))
                                 (rule "qeq_literals" (formula "22") (term "0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "24"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_and_subsumption3" (formula "31") (term "0,0,0"))
                                 (rule "leq_literals" (formula "31") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_and_subsumption3" (formula "8") (term "0,0,0"))
                                 (rule "leq_literals" (formula "8") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "inEqSimp_and_subsumption3" (formula "32") (term "0,0,0"))
                                 (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "nnf_imp2or" (formula "9") (term "0"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "notLeft" (formula "21"))
                                 (rule "notLeft" (formula "20"))
                                 (rule "close" (formula "38") (ifseqformula "3"))
                              )
                              (branch "Null reference (callee = null)"
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "notRight" (formula "44"))
                                 (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "36") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "29"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "54") (term "0"))
                                 (rule "mul_literals" (formula "54") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "54") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "30"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "54") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "54") (term "1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "54") (term "1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "54") (term "0,1"))
                                 (rule "applyEq" (formula "36") (term "0,0,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "10") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "8") (term "1,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "36") (term "0,1,1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "38") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "39") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                 (rule "mul_literals" (formula "2") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "53") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "53") (term "1,1"))
                                 (rule "mul_literals" (formula "53") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "53") (term "1,1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "23"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "24"))
                                 (rule "leq_literals" (formula "26") (term "0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "23"))
                                 (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0"))
                                 (rule "qeq_literals" (formula "28") (term "0"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "true_left" (formula "28"))
                                 (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "5") (term "0,0"))
                                 (rule "add_zero_left" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0"))
                                 (rule "qeq_literals" (formula "23") (term "0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "24"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "25") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "25"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "26"))
                                 (rule "mul_literals" (formula "17") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                 (rule "add_literals" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                 (rule "mul_literals" (formula "17") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "22"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "24"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_and_subsumption3" (formula "8") (term "0,0,0"))
                                 (rule "leq_literals" (formula "8") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "inEqSimp_and_subsumption3" (formula "32") (term "0,0,0"))
                                 (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_and_subsumption3" (formula "31") (term "0,0,0"))
                                 (rule "leq_literals" (formula "31") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "nnf_imp2or" (formula "9") (term "0"))
                                 (rule "nnf_imp2or" (formula "8") (term "0"))
                                 (rule "nnf_imp2or" (formula "32") (term "0"))
                                 (rule "nnf_imp2or" (formula "31") (term "0"))
                                 (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "28"))
                                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "39")))
                                 (rule "andLeft" (formula "28"))
                                 (rule "andLeft" (formula "28"))
                                 (rule "andLeft" (formula "28"))
                                 (rule "andLeft" (formula "28"))
                                 (rule "andLeft" (formula "28"))
                                 (rule "andLeft" (formula "28"))
                                 (rule "translateJavaSubInt" (formula "33") (term "0,2,1"))
                                 (rule "translateJavaSubInt" (formula "33") (term "0,2,0"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "eqSymm" (formula "33"))
                                 (rule "polySimp_elimSub" (formula "33") (term "0,2,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,2,0"))
                                 (rule "eqSymm" (formula "33"))
                                 (rule "polySimp_elimSub" (formula "33") (term "0,2,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,2,0"))
                                 (rule "eqSymm" (formula "33"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0,2,1"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0,2,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "28"))
                                 (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "34") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "33") (term "0,1,0,2,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "33") (term "0,1,0,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "32") (term "0,3,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "37") (term "0,1,1,0,1,0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "37") (term "1,1,1,0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "33") (term "1,0,2,0") (ifseqformula "30"))
                                 (rule "eqSymm" (formula "33"))
                                 (rule "applyEq" (formula "32") (term "3,0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "33") (term "1,0,2,0") (ifseqformula "30"))
                                 (rule "eqSymm" (formula "33"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "notLeft" (formula "10"))
                                 (rule "close" (formula "45") (ifseqformula "1"))
                              )
                           )
                        )
                        (branch "Usage"
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "translateJavaSubInt" (formula "53") (term "0,1,0"))
                           (rule "polySimp_elimSub" (formula "53") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "53") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "53") (term "1"))
                           (rule "assignment" (formula "53") (term "1"))
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "assignment_to_primitive_array_component" (formula "53"))
                           (branch "Normal Execution (x_arr_1 != null)"
                               (builtin "One Step Simplification" (formula "53"))
                              (rule "blockEmpty" (formula "53") (term "1"))
                              (rule "preincrement" (formula "53") (term "1"))
                              (rule "compound_int_cast_expression" (formula "53") (term "1") (inst "#v=x_2"))
                              (rule "variableDeclarationAssign" (formula "53") (term "1"))
                              (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_12"))
                              (rule "remove_parentheses_right" (formula "53") (term "1"))
                              (rule "assignmentAdditionInt" (formula "53") (term "1"))
                              (branch "Overflow check"
                                  (builtin "One Step Simplification" (formula "53"))
                                 (rule "expand_inInt" (formula "53"))
                                 (rule "replace_int_MIN" (formula "53") (term "0,1"))
                                 (rule "replace_int_MAX" (formula "53") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "53") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "53") (term "1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "35") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "35") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "29"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "28"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "53") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "53") (term "1,0,0"))
                                 (rule "mul_literals" (formula "53") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "53") (term "0,0"))
                                 (rule "add_literals" (formula "53") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "53") (term "1"))
                                 (rule "mul_literals" (formula "53") (term "1,0,1"))
                                 (rule "polySimp_addComm1" (formula "53") (term "0,1"))
                                 (rule "add_literals" (formula "53") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                 (rule "mul_literals" (formula "1") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1"))
                                 (rule "mul_literals" (formula "52") (term "1,1"))
                                 (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0"))
                                 (rule "qeq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "21"))
                                 (rule "leq_literals" (formula "15") (term "0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "21"))
                                 (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                 (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "27") (term "0,0"))
                                 (rule "qeq_literals" (formula "27") (term "0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "22"))
                                 (rule "leq_literals" (formula "24") (term "0"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "inEqSimp_subsumption1" (formula "48") (term "1") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "48") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "inEqSimp_leqRight" (formula "48"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "23"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "24") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "24"))
                                 (rule "leq_literals" (formula "15") (term "0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "26"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_literals" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Usage"
                                  (builtin "One Step Simplification" (formula "53"))
                                 (rule "translateJavaAddInt" (formula "53") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "53") (term "0,1,0"))
                                 (rule "widening_identity_cast_5" (formula "53") (term "1"))
                                 (rule "assignment" (formula "53") (term "1"))
                                  (builtin "One Step Simplification" (formula "53"))
                                 (rule "blockEmpty" (formula "53") (term "1"))
                                 (rule "lsContinue" (formula "53") (term "1"))
                                  (builtin "One Step Simplification" (formula "53"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "53") (term "0,0"))
                                 (rule "mul_literals" (formula "53") (term "0,0,0"))
                                 (rule "precOfInt" (formula "53"))
                                 (rule "inEqSimp_ltToLeq" (formula "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "35") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "35") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "53") (term "1"))
                                 (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "53") (term "0,1,0,0,1"))
                                 (rule "polySimp_mulAssoc" (formula "53") (term "0,0,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "0,0,0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "0,0,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "53") (term "0,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "53") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "53") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "53") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "53") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                 (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "53") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "53") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "53") (term "0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "53") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "28"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "29"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "53") (term "0"))
                                 (rule "times_zero_2" (formula "53") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "53") (term "0,0"))
                                 (rule "applyEq" (formula "53") (term "1,0,0") (ifseqformula "31"))
                                 (rule "polySimp_addComm1" (formula "53") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "53") (term "0,0,0"))
                                 (rule "applyEq" (formula "53") (term "1,0,1") (ifseqformula "31"))
                                 (rule "polySimp_addAssoc" (formula "53") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "53") (term "0,0,1"))
                                 (rule "polySimp_pullOutFactor2b" (formula "53") (term "0,1"))
                                 (rule "add_literals" (formula "53") (term "1,1,0,1"))
                                 (rule "times_zero_1" (formula "53") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "53") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1" (formula "53") (term "0,1"))
                                 (rule "add_literals" (formula "53") (term "1,0,1"))
                                 (rule "times_zero_1" (formula "53") (term "0,1"))
                                 (rule "leq_literals" (formula "53") (term "1"))
                                  (builtin "One Step Simplification" (formula "53"))
                                 (rule "inEqSimp_geqRight" (formula "53"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                 (rule "mul_literals" (formula "2") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "25"))
                                 (rule "leq_literals" (formula "27") (term "0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "23"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_literals" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                           (branch "Null Reference (x_arr_1 = null)"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (x_arr_1 != null, but x_7 Out of Bounds!)"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "false_right" (formula "54"))
                              (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0"))
                              (rule "polySimp_mulAssoc" (formula "36") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "30"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "29"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "32"))
                              (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                              (rule "polySimp_elimOne" (formula "31") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                              (rule "polySimp_elimOne" (formula "30") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "25"))
                              (rule "leq_literals" (formula "27") (term "0"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "29") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                              (rule "add_literals" (formula "29") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0"))
                              (rule "add_literals" (formula "29") (term "0,0"))
                              (rule "qeq_literals" (formula "29") (term "0"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "23"))
                              (rule "leq_literals" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_literals" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                     )
                     (branch "Null Reference (x_arr = null)"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (x_arr != null, but x_6 Out of Bounds!)"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                         (builtin "One Step Simplification" (formula "54"))
                        (rule "false_right" (formula "54"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0"))
                        (rule "polySimp_mulAssoc" (formula "36") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "30"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0"))
                        (rule "inEqSimp_homoInEq0" (formula "29"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0"))
                        (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "32"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                        (rule "polySimp_elimOne" (formula "31") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                        (rule "mul_literals" (formula "2") (term "0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                        (rule "polySimp_elimOne" (formula "30") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                        (rule "polySimp_elimOne" (formula "29") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "23"))
                        (rule "leq_literals" (formula "17") (term "0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0"))
                        (rule "qeq_literals" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "5"))
                        (rule "qeq_literals" (formula "1") (term "0,1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "22"))
                        (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "28") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0"))
                        (rule "qeq_literals" (formula "28") (term "0"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "23"))
                        (rule "leq_literals" (formula "25") (term "0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_literals" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
            )
            (branch "if x_2 false"
                (builtin "One Step Simplification" (formula "1"))
                (builtin "One Step Simplification" (formula "50"))
               (rule "notLeft" (formula "1"))
               (rule "elim_double_block_2" (formula "50") (term "1"))
               (rule "blockBreak" (formula "50") (term "1"))
               (rule "lsBreak" (formula "50") (term "1"))
               (rule "assignment" (formula "50") (term "1"))
                (builtin "One Step Simplification" (formula "50"))
               (rule "methodCallEmpty" (formula "50") (term "1"))
               (rule "tryEmpty" (formula "50") (term "1"))
               (rule "emptyModality" (formula "50") (term "1"))
               (rule "andRight" (formula "50"))
               (branch "Case 1"
                  (rule "impRight" (formula "50"))
                  (rule "andRight" (formula "51"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "8")))
                     (rule "closeTrue" (formula "51"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "51"))
                     (rule "closeTrue" (formula "51"))
                  )
               )
               (branch "Case 2"
                  (rule "impRight" (formula "50"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Null Reference (_indices = null)"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
)
(branch "Exceptional Post (classify_all)"
    (builtin "One Step Simplification" (formula "18"))
    (builtin "One Step Simplification" (formula "28"))
   (rule "andLeft" (formula "18"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1,0") (ifseqformula "18"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "19"))
   (rule "notLeft" (formula "19"))
   (rule "close" (formula "22") (ifseqformula "21"))
)
(branch "Pre (classify_all)"
    (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "1")) (ifInst ""  (formula "24")) (ifInst ""  (formula "4")) (ifInst ""  (formula "25")) (ifInst ""  (formula "9")))
   (rule "expand_inInt" (formula "26") (term "1,0,1"))
   (rule "expand_inInt" (formula "26") (term "1,1"))
   (rule "replace_int_MIN" (formula "26") (term "0,1,1,0,1"))
   (rule "replace_int_MAX" (formula "26") (term "1,0,1,0,1"))
   (rule "replace_int_MIN" (formula "26") (term "0,1,1,1"))
   (rule "replace_int_MAX" (formula "26") (term "1,0,1,1"))
   (rule "replace_known_left" (formula "26") (term "0,1,1") (ifseqformula "7"))
    (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "5")))
   (rule "inEqSimp_commuteLeq" (formula "26") (term "1,1"))
   (rule "replace_known_left" (formula "26") (term "1,1") (ifseqformula "8"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "inEqSimp_commuteLeq" (formula "26") (term "1,1"))
   (rule "replace_known_left" (formula "26") (term "1,1") (ifseqformula "6"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "12"))
   (rule "leq_literals" (formula "6") (term "0"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "6"))
   (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
   (rule "polySimp_addComm0" (formula "12") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "12"))
   (rule "polySimp_mulLiterals" (formula "12") (term "0"))
   (rule "polySimp_elimOne" (formula "12") (term "0"))
   (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "15"))
    (builtin "One Step Simplification" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "translateJavaSubInt" (formula "20") (term "0,2,1"))
   (rule "translateJavaSubInt" (formula "20") (term "0,2,0"))
   (rule "eqSymm" (formula "17"))
   (rule "eqSymm" (formula "20"))
   (rule "translateJavaMulInt" (formula "17") (term "1,0"))
   (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "21"))
    (builtin "One Step Simplification" (formula "31"))
   (rule "polySimp_elimSub" (formula "20") (term "0,2,1"))
   (rule "mul_literals" (formula "20") (term "1,0,2,1"))
   (rule "polySimp_elimSub" (formula "20") (term "0,2,0"))
   (rule "mul_literals" (formula "20") (term "1,0,2,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
   (rule "polySimp_addComm0" (formula "20") (term "0,2,1"))
   (rule "polySimp_addComm0" (formula "20") (term "0,2,0"))
   (rule "inEqSimp_commuteLeq" (formula "15"))
   (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "10"))
   (rule "notLeft" (formula "10"))
   (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "20") (inst "i_0=i_0") (inst "i=i"))
   (rule "andLeft" (formula "20"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "expand_inInt" (formula "21") (term "1,0,0"))
   (rule "expand_inInt" (formula "20") (term "1,0,0,1"))
   (rule "replace_int_MIN" (formula "21") (term "0,1,1,0,0"))
   (rule "replace_int_MAX" (formula "21") (term "1,0,1,0,0"))
   (rule "replace_int_MIN" (formula "20") (term "0,1,1,0,0,1"))
   (rule "replace_int_MAX" (formula "20") (term "1,0,1,0,0,1"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "22"))
   (rule "notLeft" (formula "20"))
   (rule "notLeft" (formula "20"))
   (rule "eqSymm" (formula "28") (term "1,0"))
   (rule "translateJavaSubInt" (formula "26") (term "3,0"))
   (rule "translateJavaShiftLeftInt" (formula "22") (term "1"))
   (rule "translateJavaSubInt" (formula "28") (term "0,2,0,1,0"))
   (rule "polySimp_elimSub" (formula "26") (term "3,0"))
   (rule "mul_literals" (formula "26") (term "1,3,0"))
   (rule "polySimp_elimSub" (formula "28") (term "0,2,0,1,0"))
   (rule "mul_literals" (formula "28") (term "1,0,2,0,1,0"))
   (rule "polySimp_addComm0" (formula "26") (term "3,0"))
   (rule "polySimp_addComm0" (formula "28") (term "0,2,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "27") (term "1,1,0"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "28") (term "1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "27") (term "1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "25"))
   (rule "inEqSimp_commuteLeq" (formula "24"))
   (rule "inEqSimp_commuteLeq" (formula "23"))
   (rule "inEqSimp_commuteLeq" (formula "20"))
   (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
   (rule "applyEq" (formula "24") (term "1") (ifseqformula "22"))
   (rule "applyEq" (formula "25") (term "1") (ifseqformula "22"))
   (rule "applyEq" (formula "26") (term "1,3,0") (ifseqformula "22"))
   (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "17"))
   (rule "applyEq" (formula "30") (term "0") (ifseqformula "17"))
   (rule "applyEq" (formula "16") (term "2,0") (ifseqformula "22"))
   (rule "applyEq" (formula "18") (term "3,0") (ifseqformula "22"))
   (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "17"))
   (rule "inEqSimp_commuteGeq" (formula "25"))
   (rule "applyEq" (formula "19") (term "1,0,2,0") (ifseqformula "22"))
   (rule "eqSymm" (formula "19"))
   (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "17"))
   (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "22"))
   (rule "applyEq" (formula "27") (term "0,1,0,0,1,1,0") (ifseqformula "22"))
   (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0,0") (ifseqformula "22"))
   (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0,0") (ifseqformula "22"))
   (rule "applyEq" (formula "19") (term "1,0,2,0") (ifseqformula "22"))
   (rule "eqSymm" (formula "19"))
   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,1,0"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,0"))
   (rule "polySimp_rightDist" (formula "27") (term "1,1,1,0"))
   (rule "mul_literals" (formula "27") (term "0,1,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,0"))
   (rule "polySimp_elimOne" (formula "27") (term "1,1,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0"))
   (rule "javaShiftLeftIntDef" (formula "22") (term "1"))
   (rule "mod_axiom" (formula "22") (term "1,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1"))
   (rule "javaShiftLeftIntDef" (formula "23") (term "0"))
   (rule "mod_axiom" (formula "23") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
   (rule "javaShiftLeftIntDef" (formula "24") (term "1"))
   (rule "mod_axiom" (formula "24") (term "1,0,1"))
   (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1"))
   (rule "javaShiftLeftIntDef" (formula "26") (term "1,3,0"))
   (rule "mod_axiom" (formula "26") (term "1,0,1,3,0"))
   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,3,0"))
   (rule "javaShiftLeftIntDef" (formula "16") (term "2,0"))
   (rule "mod_axiom" (formula "16") (term "1,0,2,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,2,0"))
   (rule "javaShiftLeftIntDef" (formula "18") (term "3,0"))
   (rule "mod_axiom" (formula "18") (term "1,0,3,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,3,0"))
   (rule "javaShiftLeftIntDef" (formula "25") (term "0"))
   (rule "mod_axiom" (formula "25") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
   (rule "javaShiftLeftIntDef" (formula "16") (term "0,1,0"))
   (rule "mod_axiom" (formula "16") (term "1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0"))
   (rule "javaShiftLeftIntDef" (formula "19") (term "1,0,2,1"))
   (rule "mod_axiom" (formula "19") (term "1,0,1,0,2,1"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,0,2,1"))
   (rule "javaShiftLeftIntDef" (formula "19") (term "1,0,2,0"))
   (rule "mod_axiom" (formula "19") (term "1,0,1,0,2,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,0,2,0"))
   (rule "javaShiftLeftIntDef" (formula "27") (term "1,1,1,1,0"))
   (rule "mod_axiom" (formula "27") (term "1,0,1,1,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,1,1,1,1,0"))
   (rule "javaShiftLeftIntDef" (formula "28") (term "1,1,1,0,0,0"))
   (rule "mod_axiom" (formula "28") (term "1,0,1,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,1,1,0,0,0"))
   (rule "javaShiftLeftIntDef" (formula "27") (term "1,1,1,0,0,0"))
   (rule "mod_axiom" (formula "27") (term "1,0,1,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,1,1,1,0,0,0"))
   (rule "shiftLeftDef" (formula "22") (term "0,1"))
   (rule "eqSymm" (formula "22"))
   (rule "polySimp_elimNeg" (formula "22") (term "1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,0,0"))
   (rule "shiftLeftPositiveShiftDef" (formula "22") (term "2,0,0"))
   (rule "polySimp_elimOneLeft0" (formula "22") (term "2,0,0"))
   (rule "shiftRightPositiveShiftDef" (formula "22") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
   (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0"))
   (rule "shiftLeftDef" (formula "23") (term "0,0"))
   (rule "polySimp_elimNeg" (formula "23") (term "1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,0,0"))
   (rule "shiftLeftPositiveShiftDef" (formula "23") (term "2,0,0"))
   (rule "polySimp_elimOneLeft0" (formula "23") (term "2,0,0"))
   (rule "shiftRightPositiveShiftDef" (formula "23") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
   (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0"))
   (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
   (rule "shiftLeftDef" (formula "24") (term "0,1"))
   (rule "polySimp_elimNeg" (formula "24") (term "1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,1"))
   (rule "polySimp_rightDist" (formula "24") (term "1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "24") (term "0,1,1,0,1"))
   (rule "shiftLeftPositiveShiftDef" (formula "24") (term "2,0,1"))
   (rule "polySimp_elimOneLeft0" (formula "24") (term "2,0,1"))
   (rule "shiftRightPositiveShiftDef" (formula "24") (term "1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1"))
   (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,1"))
   (rule "add_zero_right" (formula "24") (term "0,0,0,0,1"))
   (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1"))
   (rule "inEqSimp_commuteGeq" (formula "24"))
   (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
   (rule "applyEq" (formula "24") (term "0") (ifseqformula "22"))
   (rule "inEqSimp_commuteLeq" (formula "24"))
   (rule "shiftLeftDef" (formula "26") (term "0,1,3,0"))
   (rule "polySimp_elimNeg" (formula "26") (term "1,1,0,1,3,0"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,1,3,0"))
   (rule "polySimp_rightDist" (formula "26") (term "1,1,0,1,3,0"))
   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,1,3,0"))
   (rule "polySimp_mulComm0" (formula "26") (term "0,1,1,0,1,3,0"))
   (rule "shiftLeftPositiveShiftDef" (formula "26") (term "2,0,1,3,0"))
   (rule "polySimp_elimOneLeft0" (formula "26") (term "2,0,1,3,0"))
   (rule "shiftRightPositiveShiftDef" (formula "26") (term "1,0,1,3,0"))
   (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1,3,0"))
   (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,1,3,0"))
   (rule "add_zero_right" (formula "26") (term "0,0,0,0,1,3,0"))
   (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,3,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,3,0"))
   (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,3,0"))
   (rule "applyEq" (formula "26") (term "1,3,0") (ifseqformula "22"))
   (rule "shiftLeftDef" (formula "16") (term "0,2,0"))
   (rule "polySimp_elimNeg" (formula "16") (term "1,1,0,2,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,2,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,2,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,2,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,0,2,0"))
   (rule "shiftLeftPositiveShiftDef" (formula "16") (term "2,0,2,0"))
   (rule "polySimp_elimOneLeft0" (formula "16") (term "2,0,2,0"))
   (rule "shiftRightPositiveShiftDef" (formula "16") (term "1,0,2,0"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,2,0"))
   (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,2,0"))
   (rule "add_zero_right" (formula "16") (term "0,0,0,0,2,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,2,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,2,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,2,0"))
   (rule "applyEq" (formula "16") (term "2,0") (ifseqformula "22"))
   (rule "shiftLeftDef" (formula "18") (term "0,3,0"))
   (rule "polySimp_elimNeg" (formula "18") (term "1,1,0,3,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,3,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,3,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,3,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,0,3,0"))
   (rule "shiftLeftPositiveShiftDef" (formula "18") (term "2,0,3,0"))
   (rule "polySimp_elimOneLeft0" (formula "18") (term "2,0,3,0"))
   (rule "shiftRightPositiveShiftDef" (formula "18") (term "1,0,3,0"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,3,0"))
   (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,3,0"))
   (rule "add_zero_right" (formula "18") (term "0,0,0,0,3,0"))
   (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,3,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,3,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,3,0"))
   (rule "applyEq" (formula "18") (term "3,0") (ifseqformula "22"))
   (rule "shiftLeftDef" (formula "25") (term "0,0"))
   (rule "polySimp_elimNeg" (formula "25") (term "1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,0,0"))
   (rule "shiftLeftPositiveShiftDef" (formula "25") (term "2,0,0"))
   (rule "polySimp_elimOneLeft0" (formula "25") (term "2,0,0"))
   (rule "shiftRightPositiveShiftDef" (formula "25") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
   (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0"))
   (rule "applyEq" (formula "25") (term "0") (ifseqformula "22"))
   (rule "shiftLeftDef" (formula "16") (term "0,0,1,0"))
   (rule "polySimp_elimNeg" (formula "16") (term "1,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,0,0,1,0"))
   (rule "shiftLeftPositiveShiftDef" (formula "16") (term "2,0,0,1,0"))
   (rule "polySimp_elimOneLeft0" (formula "16") (term "2,0,0,1,0"))
   (rule "shiftRightPositiveShiftDef" (formula "16") (term "1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,0"))
   (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,1,0"))
   (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0,1,0"))
   (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "22"))
   (rule "shiftLeftDef" (formula "19") (term "0,1,0,2,1"))
   (rule "eqSymm" (formula "19"))
   (rule "polySimp_elimNeg" (formula "19") (term "1,1,0,1,0,2,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,0,2,0"))
   (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,0,2,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,0,2,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,0,1,0,2,0"))
   (rule "shiftLeftPositiveShiftDef" (formula "19") (term "2,0,1,0,2,0"))
   (rule "polySimp_elimOneLeft0" (formula "19") (term "2,0,1,0,2,0"))
   (rule "shiftRightPositiveShiftDef" (formula "19") (term "1,0,1,0,2,0"))
   (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,0,2,0"))
   (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1,0,2,0"))
   (rule "add_zero_right" (formula "19") (term "0,0,0,0,1,0,2,0"))
   (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,0,2,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0,2,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0,2,0"))
   (rule "applyEq" (formula "19") (term "1,0,2,0") (ifseqformula "22"))
   (rule "shiftLeftDef" (formula "27") (term "0,1,1,1,1,0"))
   (rule "polySimp_elimNeg" (formula "27") (term "1,1,0,1,1,1,1,0"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,1,1,1,1,0"))
   (rule "polySimp_rightDist" (formula "27") (term "1,1,0,1,1,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,1,1,1,1,0"))
   (rule "polySimp_mulComm0" (formula "27") (term "0,1,1,0,1,1,1,1,0"))
   (rule "shiftLeftPositiveShiftDef" (formula "27") (term "2,0,1,1,1,1,0"))
   (rule "polySimp_elimOneLeft0" (formula "27") (term "2,0,1,1,1,1,0"))
   (rule "shiftRightPositiveShiftDef" (formula "27") (term "1,0,1,1,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,1,1,1,0"))
   (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,1,1,1,1,0"))
   (rule "add_zero_right" (formula "27") (term "0,0,0,0,1,1,1,1,0"))
   (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,1,1,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,1,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,1,1,1,0"))
   (rule "applyEq" (formula "27") (term "1,1,1,1,0") (ifseqformula "22"))
   (rule "shiftLeftDef" (formula "28") (term "0,1,1,1,0,0,0"))
   (rule "polySimp_elimNeg" (formula "28") (term "1,1,0,1,1,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,1,1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "28") (term "1,1,0,1,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,1,1,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "0,1,1,0,1,1,1,0,0,0"))
   (rule "shiftLeftPositiveShiftDef" (formula "28") (term "2,0,1,1,1,0,0,0"))
   (rule "polySimp_elimOneLeft0" (formula "28") (term "2,0,1,1,1,0,0,0"))
   (rule "shiftRightPositiveShiftDef" (formula "28") (term "1,0,1,1,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,1,1,0,0,0"))
   (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,1,1,1,0,0,0"))
   (rule "add_zero_right" (formula "28") (term "0,0,0,0,1,1,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,1,1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,1,1,0,0,0"))
   (rule "applyEq" (formula "28") (term "1,1,1,0,0,0") (ifseqformula "22"))
   (rule "shiftLeftDef" (formula "27") (term "0,1,1,1,0,0,0"))
   (rule "polySimp_elimNeg" (formula "27") (term "1,1,0,1,1,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,1,1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "27") (term "1,1,0,1,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,1,1,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "27") (term "0,1,1,0,1,1,1,0,0,0"))
   (rule "shiftLeftPositiveShiftDef" (formula "27") (term "2,0,1,1,1,0,0,0"))
   (rule "polySimp_elimOneLeft0" (formula "27") (term "2,0,1,1,1,0,0,0"))
   (rule "shiftRightPositiveShiftDef" (formula "27") (term "1,0,1,1,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,1,1,0,0,0"))
   (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,1,1,1,0,0,0"))
   (rule "add_zero_right" (formula "27") (term "0,0,0,0,1,1,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,1,1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,1,1,0,0,0"))
   (rule "applyEq" (formula "27") (term "1,1,1,0,0,0") (ifseqformula "22"))
   (rule "shiftLeftDef" (formula "19") (term "0,1,0,2,1"))
   (rule "eqSymm" (formula "19"))
   (rule "polySimp_elimNeg" (formula "19") (term "1,1,0,1,0,2,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,0,2,0"))
   (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,0,2,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,0,2,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,0,1,0,2,0"))
   (rule "shiftLeftPositiveShiftDef" (formula "19") (term "2,0,1,0,2,0"))
   (rule "polySimp_elimOneLeft0" (formula "19") (term "2,0,1,0,2,0"))
   (rule "shiftRightPositiveShiftDef" (formula "19") (term "1,0,1,0,2,0"))
   (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,0,2,0"))
   (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1,0,2,0"))
   (rule "add_zero_right" (formula "19") (term "0,0,0,0,1,0,2,0"))
   (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,0,2,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0,2,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0,2,0"))
   (rule "applyEq" (formula "19") (term "1,0,2,0") (ifseqformula "22"))
   (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "25"))
   (rule "mul_literals" (formula "23") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "23"))
   (rule "mul_literals" (formula "23") (term "1"))
   (rule "expand_moduloInteger" (formula "22") (term "0"))
   (rule "replace_int_MIN" (formula "22") (term "0,0"))
   (rule "replace_int_RANGE" (formula "22") (term "1,1,0"))
   (rule "replace_int_HALFRANGE" (formula "22") (term "0,0,1,0"))
   (rule "polySimp_homoEq" (formula "22"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0"))
   (rule "mul_literals" (formula "22") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "22") (term "0"))
   (rule "polySimp_addComm0" (formula "22") (term "0,0"))
   (rule "polySimp_sepNegMonomial" (formula "22"))
   (rule "polySimp_mulLiterals" (formula "22") (term "0"))
   (rule "polySimp_elimOne" (formula "22") (term "0"))
   (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "29") (term "1,0,2,0,1,0"))
   (rule "translateJavaSubInt" (formula "29") (term "0,1,1,1,0,2,0,1,0"))
   (rule "polySimp_elimSub" (formula "29") (term "1,0,0,1,0,2,0,1,0"))
   (rule "polySimp_elimSub" (formula "29") (term "1,1,1,0,2,0,1,0"))
   (rule "polySimp_elimSub" (formula "29") (term "0,1,1,1,0,2,0,1,0"))
   (rule "mul_literals" (formula "29") (term "1,0,1,1,1,0,2,0,1,0"))
   (rule "polySimp_mulComm0" (formula "29") (term "1,0,2,0,1,0"))
   (rule "polySimp_addComm0" (formula "29") (term "0,1,0,1,0,2,0,1,0"))
   (rule "polySimp_rightDist" (formula "29") (term "0,1,1,0,2,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,1,0,2,0,1,0"))
   (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,1,0,2,0,1,0"))
   (rule "polySimp_addComm1" (formula "29") (term "1,1,0,2,0,1,0"))
   (rule "polySimp_addComm0" (formula "29") (term "0,1,1,0,2,0,1,0"))
   (rule "polySimp_rightDist" (formula "29") (term "1,0,2,0,1,0"))
   (rule "polySimp_mulComm1" (formula "29") (term "1,1,0,2,0,1,0"))
   (rule "polySimp_mulComm0" (formula "29") (term "0,1,1,0,2,0,1,0"))
   (rule "polySimp_rightDist" (formula "29") (term "0,1,0,2,0,1,0"))
   (rule "polySimp_elimOne" (formula "29") (term "0,0,1,0,2,0,1,0"))
   (rule "polySimp_mulComm1" (formula "29") (term "1,0,1,0,2,0,1,0"))
   (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,1,0,2,0,1,0"))
   (rule "polySimp_addAssoc" (formula "29") (term "0,2,0,1,0"))
   (rule "polySimp_addAssoc" (formula "29") (term "0,0,2,0,1,0"))
   (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "28") (term "0,0,1,0"))
   (rule "translateJavaSubInt" (formula "28") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_elimSub" (formula "28") (term "1,0,0,0,0,1,0"))
   (rule "polySimp_elimSub" (formula "28") (term "0,1,1,0,0,1,0"))
   (rule "mul_literals" (formula "28") (term "1,0,1,1,0,0,1,0"))
   (rule "polySimp_elimSub" (formula "28") (term "1,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0"))
   (rule "polySimp_addComm0" (formula "28") (term "0,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "28") (term "1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "28") (term "0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "0,0,1,0"))
   (rule "polySimp_mulComm1" (formula "28") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "28") (term "0,0,0,0,1,0"))
   (rule "polySimp_mulComm1" (formula "28") (term "1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,0,1,0"))
   (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,1,0"))
   (rule "mul_literals" (formula "28") (term "0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,1,0"))
   (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "28") (term "0,1,1,0"))
   (rule "translateJavaSubInt" (formula "28") (term "0,1,1,0,1,1,0"))
   (rule "polySimp_elimSub" (formula "28") (term "1,0,0,0,1,1,0"))
   (rule "polySimp_elimSub" (formula "28") (term "0,1,1,0,1,1,0"))
   (rule "mul_literals" (formula "28") (term "1,0,1,1,0,1,1,0"))
   (rule "polySimp_elimSub" (formula "28") (term "1,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "0,1,1,0"))
   (rule "polySimp_addComm0" (formula "28") (term "0,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "0,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "28") (term "1,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "28") (term "0,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "0,1,1,0"))
   (rule "polySimp_mulComm1" (formula "28") (term "1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,1,0"))
   (rule "polySimp_mulComm1" (formula "28") (term "1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1,1,0"))
   (rule "inEqSimp_homoInEq0" (formula "28") (term "1,1,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "0,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "28") (term "0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,1,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "1,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "0,1,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,1,1,0"))
   (rule "polySimp_elimOne" (formula "28") (term "1,0,1,1,1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "0,0,1,1,1,0"))
   (rule "mul_literals" (formula "28") (term "0,0,0,1,1,1,0"))
   (rule "nnf_imp2or" (formula "29") (term "0"))
   (rule "commute_and" (formula "28") (term "1,0,0"))
   (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "27") (term "0"))
   (rule "replace_known_left" (formula "27") (term "1,0") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "32")) (ifInst ""  (formula "28")))
   (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "28") (term "0") (inst "j=j") (inst "i=i"))
    (builtin "One Step Simplification" (formula "28"))
   (rule "expand_inInt" (formula "28") (term "1,0,0,1,0"))
   (rule "expand_inInt" (formula "28") (term "1,0,0"))
   (rule "replace_int_MIN" (formula "28") (term "0,1,1,0,0,1,0"))
   (rule "replace_int_MAX" (formula "28") (term "1,0,1,0,0,1,0"))
   (rule "replace_int_MAX" (formula "28") (term "1,0,1,0,0"))
   (rule "replace_int_MIN" (formula "28") (term "0,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,1,0"))
   (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "28") (term "1,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "28") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
   (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,1,0"))
   (rule "nnf_imp2or" (formula "29") (term "0"))
   (rule "nnf_notAnd" (formula "30") (term "0,0"))
   (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "18") (term "0"))
   (rule "replace_known_right" (formula "18") (term "0,0,0") (ifseqformula "33"))
    (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "1")) (ifInst ""  (formula "19")))
   (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "19") (term "0") (inst "j=j") (inst "i=i"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "expand_inInt" (formula "19") (term "1,0,0,1,0"))
   (rule "expand_inInt" (formula "19") (term "1,0,0"))
   (rule "replace_int_MIN" (formula "19") (term "0,1,1,0,0,1,0"))
   (rule "replace_int_MAX" (formula "19") (term "1,0,1,0,0,1,0"))
   (rule "replace_int_MAX" (formula "19") (term "1,0,1,0,0"))
   (rule "replace_int_MIN" (formula "19") (term "0,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "19") (term "1,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "19") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
   (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
   (rule "nnf_imp2or" (formula "29") (term "0"))
   (rule "nnf_notAnd" (formula "30") (term "0,0"))
   (rule "nnf_notAnd" (formula "31") (term "1,0,0"))
   (rule "inEqSimp_notGeq" (formula "31") (term "1,1,0,0"))
   (rule "mul_literals" (formula "31") (term "1,0,0,1,1,0,0"))
   (rule "add_literals" (formula "31") (term "0,0,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,1,0,0"))
   (rule "mul_literals" (formula "31") (term "1,1,1,0,0"))
   (rule "inEqSimp_notLeq" (formula "31") (term "0,1,0,0"))
   (rule "mul_literals" (formula "31") (term "1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,1,0,0"))
   (rule "mul_literals" (formula "31") (term "1,0,1,0,0"))
   (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
   (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,0"))
   (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,0"))
   (rule "add_literals" (formula "31") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "31") (term "0,0,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0"))
   (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
   (rule "nnf_imp2or" (formula "19") (term "0"))
   (rule "nnf_notAnd" (formula "29") (term "0,0"))
   (rule "nnf_imp2or" (formula "29") (term "0,1,0"))
   (rule "nnf_notAnd" (formula "30") (term "1,0,0"))
   (rule "inEqSimp_notGeq" (formula "30") (term "0,1,0,0"))
   (rule "mul_literals" (formula "30") (term "1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,1,0,0"))
   (rule "mul_literals" (formula "30") (term "1,0,1,0,0"))
   (rule "inEqSimp_notLeq" (formula "30") (term "1,1,0,0"))
   (rule "mul_literals" (formula "30") (term "1,0,0,1,1,0,0"))
   (rule "add_literals" (formula "30") (term "0,0,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,1,0,0"))
   (rule "mul_literals" (formula "30") (term "1,1,1,0,0"))
   (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
   (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,0"))
   (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,0"))
   (rule "add_literals" (formula "30") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "30") (term "0,0,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0"))
   (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
   (rule "nnf_notAnd" (formula "19") (term "0,0"))
   (rule "nnf_imp2or" (formula "19") (term "0,1,0"))
   (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
   (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0,0"))
   (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0"))
   (rule "mul_literals" (formula "29") (term "1,0,0,0,0"))
   (rule "nnf_notAnd" (formula "29") (term "1,0,0"))
   (rule "inEqSimp_notLeq" (formula "29") (term "0,1,0,0"))
   (rule "mul_literals" (formula "29") (term "1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,1,0,0"))
   (rule "mul_literals" (formula "29") (term "1,0,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "29") (term "1,1,0,0"))
   (rule "mul_literals" (formula "29") (term "1,0,0,1,1,0,0"))
   (rule "add_literals" (formula "29") (term "0,0,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,1,0,0"))
   (rule "mul_literals" (formula "29") (term "1,1,1,0,0"))
   (rule "nnf_notAnd" (formula "29") (term "0,0,1,0"))
   (rule "arrayLengthNotNegative" (formula "13") (term "0"))
   (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1"))
   (rule "polySimp_elimOne" (formula "13") (term "1"))
   (rule "arrayLengthNotNegative" (formula "12") (term "0"))
   (rule "arrayLengthIsAShort" (formula "14") (term "0"))
   (rule "expand_inShort" (formula "14"))
   (rule "replace_short_MIN" (formula "14") (term "0,1"))
   (rule "replace_short_MAX" (formula "14") (term "1,0"))
   (rule "andLeft" (formula "14"))
   (rule "inEqSimp_commuteLeq" (formula "15"))
   (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
   (rule "inEqSimp_homoInEq1" (formula "15"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,0"))
   (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
   (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "15") (term "0"))
   (rule "applyEq" (formula "14") (term "0") (ifseqformula "16"))
   (rule "inEqSimp_homoInEq0" (formula "14"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0"))
   (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
   (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "15"))
   (rule "polySimp_mulLiterals" (formula "15") (term "0"))
   (rule "polySimp_elimOne" (formula "15") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "14"))
   (rule "polySimp_mulLiterals" (formula "14") (term "0"))
   (rule "polySimp_elimOne" (formula "14") (term "0"))
   (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "11"))
   (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
   (rule "mul_literals" (formula "15") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
   (rule "polySimp_addComm0" (formula "15") (term "0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
   (rule "add_literals" (formula "15") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "15") (term "1,0,0"))
   (rule "add_zero_right" (formula "15") (term "0,0"))
   (rule "qeq_literals" (formula "15") (term "0"))
    (builtin "One Step Simplification" (formula "15"))
   (rule "true_left" (formula "15"))
   (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "14"))
   (rule "mul_literals" (formula "7") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "7") (term "0"))
   (rule "add_literals" (formula "7") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "7"))
   (rule "mul_literals" (formula "7") (term "1"))
   (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "11"))
   (rule "leq_literals" (formula "7") (term "0"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "arrayLengthIsAShort" (formula "13") (term "0"))
   (rule "expand_inShort" (formula "13"))
   (rule "replace_short_MIN" (formula "13") (term "0,1"))
   (rule "replace_short_MAX" (formula "13") (term "1,0"))
   (rule "andLeft" (formula "13"))
   (rule "inEqSimp_commuteLeq" (formula "14"))
   (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "12"))
   (rule "leq_literals" (formula "14") (term "0"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "true_left" (formula "14"))
   (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "13"))
   (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
   (rule "polySimp_addComm0" (formula "14") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "14"))
   (rule "polySimp_mulLiterals" (formula "14") (term "0"))
   (rule "polySimp_elimOne" (formula "14") (term "0"))
   (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "14"))
   (rule "leq_literals" (formula "6") (term "0"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "13"))
   (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
   (rule "polySimp_addComm0" (formula "10") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "10"))
   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
   (rule "polySimp_elimOne" (formula "10") (term "0"))
   (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "10"))
   (rule "leq_literals" (formula "5") (term "0"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "true_left" (formula "5"))
   (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
   (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0"))
   (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,0"))
   (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0"))
   (rule "mul_literals" (formula "22") (term "1,0,0,0,0"))
   (rule "nnf_notAnd" (formula "22") (term "1,0,0"))
   (rule "inEqSimp_notGeq" (formula "22") (term "1,1,0,0"))
   (rule "mul_literals" (formula "22") (term "1,0,0,1,1,0,0"))
   (rule "add_literals" (formula "22") (term "0,0,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,1,0,0"))
   (rule "mul_literals" (formula "22") (term "1,1,1,0,0"))
   (rule "inEqSimp_notLeq" (formula "22") (term "0,1,0,0"))
   (rule "mul_literals" (formula "22") (term "1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,1,0,0"))
   (rule "mul_literals" (formula "22") (term "1,0,1,0,0"))
   (rule "nnf_notAnd" (formula "22") (term "0,0,1,0"))
   (rule "arrayLengthNotNegative" (formula "30") (term "1"))
   (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "27"))
   (rule "leq_literals" (formula "30") (term "0"))
    (builtin "One Step Simplification" (formula "30"))
   (rule "true_left" (formula "30"))
   (rule "arrayLengthIsAShort" (formula "30") (term "1"))
   (rule "expand_inShort" (formula "30"))
   (rule "replace_short_MIN" (formula "30") (term "0,1"))
   (rule "replace_short_MAX" (formula "30") (term "1,0"))
   (rule "andLeft" (formula "30"))
   (rule "inEqSimp_commuteLeq" (formula "31"))
   (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "27"))
   (rule "leq_literals" (formula "31") (term "0"))
    (builtin "One Step Simplification" (formula "31"))
   (rule "true_left" (formula "31"))
   (rule "nnf_notAnd" (formula "33") (term "0,0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,1,0"))
   (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,0,1,0"))
   (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0,0,1,0"))
   (rule "nnf_notAnd" (formula "33") (term "1,0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "33") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "33") (term "1,0,0,1,1,0,0,1,0"))
   (rule "add_literals" (formula "33") (term "0,0,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "33") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "33") (term "0,1,0,0,1,0"))
   (rule "mul_literals" (formula "33") (term "1,0,0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,1,0,0,1,0"))
   (rule "mul_literals" (formula "33") (term "1,0,1,0,0,1,0"))
   (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "32") (term "0"))
   (rule "replace_known_left" (formula "32") (term "0,1") (ifseqformula "33"))
    (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "38")) (ifInst ""  (formula "1")))
   (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "33") (term "0") (inst "i=i"))
    (builtin "One Step Simplification" (formula "33"))
   (rule "expand_inInt" (formula "33") (term "1,0,0"))
   (rule "replace_int_MAX" (formula "33") (term "1,0,1,0,0"))
   (rule "replace_int_MIN" (formula "33") (term "0,1,1,0,0"))
   (rule "translateJavaSubInt" (formula "33") (term "1,1,0,0,0"))
   (rule "translateJavaAddInt" (formula "33") (term "0,2,1,1,0"))
   (rule "polySimp_elimSub" (formula "33") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "33") (term "1,1,1,0,0,0"))
   (rule "polySimp_addComm0" (formula "33") (term "0,2,1,1,0"))
   (rule "polySimp_addComm1" (formula "33") (term "1,1,0,0,0"))
   (rule "add_literals" (formula "33") (term "0,1,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "33") (term "1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0"))
   (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "21") (term "0"))
   (rule "replace_known_right" (formula "21") (term "0,0,0") (ifseqformula "39"))
    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "1")) (ifInst ""  (formula "22")))
   (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "22") (term "0") (inst "i=i"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "expand_inInt" (formula "22") (term "1,0,0"))
   (rule "replace_int_MAX" (formula "22") (term "1,0,1,0,0"))
   (rule "replace_int_MIN" (formula "22") (term "0,1,1,0,0"))
   (rule "translateJavaSubInt" (formula "22") (term "1,1,0,0,0"))
   (rule "translateJavaAddInt" (formula "22") (term "0,2,1,1,0"))
   (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "22") (term "1,1,1,0,0,0"))
   (rule "polySimp_addComm0" (formula "22") (term "0,2,1,1,0"))
   (rule "polySimp_addComm0" (formula "22") (term "1,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0"))
   (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0"))
   (rule "arrayLengthNotNegative" (formula "30") (term "0"))
   (rule "arrayLengthIsAShort" (formula "31") (term "0"))
   (rule "expand_inShort" (formula "31"))
   (rule "replace_short_MIN" (formula "31") (term "0,1"))
   (rule "replace_short_MAX" (formula "31") (term "1,0"))
   (rule "andLeft" (formula "31"))
   (rule "inEqSimp_commuteLeq" (formula "32"))
   (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "30"))
   (rule "leq_literals" (formula "32") (term "0"))
    (builtin "One Step Simplification" (formula "32"))
   (rule "true_left" (formula "32"))
   (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "31"))
   (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
   (rule "polySimp_addComm0" (formula "32") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "32"))
   (rule "polySimp_mulLiterals" (formula "32") (term "0"))
   (rule "polySimp_elimOne" (formula "32") (term "0"))
   (rule "nnf_notAnd" (formula "23") (term "1,0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "23") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "23") (term "1,0,0,1,1,0,0,1,0"))
   (rule "add_literals" (formula "23") (term "0,0,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "23") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "23") (term "0,1,0,0,1,0"))
   (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,1,0,0,1,0"))
   (rule "mul_literals" (formula "23") (term "1,0,1,0,0,1,0"))
   (rule "nnf_notAnd" (formula "23") (term "0,0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,1,0"))
   (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,1,0"))
   (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0,1,0"))
   (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0,1,0"))
   (rule "ifthenelse_split" (formula "19") (term "0"))
   (branch "self.equal_buckets = TRUE TRUE"
      (rule "newSym_eq" (formula "20") (inst "newSymDef=mul(int::final(self,
               de.wiesler.Classifier::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
      (rule "times_zero_1" (formula "20") (term "1,1"))
      (rule "add_zero_right" (formula "20") (term "1"))
      (rule "applyEq" (formula "25") (term "1,1,0,0,0,1,0") (ifseqformula "20"))
      (rule "applyEq" (formula "38") (term "1,3,0") (ifseqformula "20"))
      (rule "applyEq" (formula "39") (term "1,1,1,0,0,0") (ifseqformula "20"))
      (rule "applyEq" (formula "24") (term "1,1,1,0,0,0") (ifseqformula "20"))
      (rule "applyEq" (formula "41") (term "1,1,0,0,0") (ifseqformula "20"))
      (rule "applyEq" (formula "35") (term "1") (ifseqformula "20"))
      (rule "applyEq" (formula "40") (term "1,1,1,0,0,0") (ifseqformula "20"))
      (rule "applyEq" (formula "26") (term "1,0,2,0") (ifseqformula "20"))
      (rule "eqSymm" (formula "26"))
      (rule "applyEq" (formula "37") (term "0") (ifseqformula "20"))
      (rule "inEqSimp_commuteLeq" (formula "37"))
      (rule "applyEq" (formula "42") (term "1,1,0,0,0") (ifseqformula "20"))
      (rule "applyEq" (formula "40") (term "1,1,1,0,0,0,1,0") (ifseqformula "20"))
      (rule "applyEq" (formula "25") (term "1,1,0,0,0") (ifseqformula "20"))
      (rule "applyEq" (formula "34") (term "0") (ifseqformula "20"))
      (rule "applyEq" (formula "31") (term "0") (ifseqformula "20"))
      (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "20"))
      (rule "eqSymm" (formula "21"))
      (rule "applyEq" (formula "23") (term "3,0") (ifseqformula "20"))
      (rule "applyEq" (formula "18") (term "0") (ifseqformula "21"))
      (rule "applyEq" (formula "17") (term "0") (ifseqformula "21"))
      (rule "applyEq" (formula "26") (term "1,0,2,0") (ifseqformula "20"))
      (rule "eqSymm" (formula "26"))
      (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "20"))
      (rule "applyEq" (formula "41") (term "0,1,0,0,1,1,1,0") (ifseqformula "20"))
      (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "31"))
      (rule "greater_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "mul_literals" (formula "17") (term "1,0"))
      (rule "leq_literals" (formula "17") (term "0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(4(6(#)))"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
      (rule "neg_literal" (formula "17") (term "0,0,0,0,0,1,0"))
      (rule "leq_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
      (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
      (rule "add_literals" (formula "17") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "17") (term "1,0,0"))
      (rule "add_zero_right" (formula "17") (term "0,0"))
      (rule "qeq_literals" (formula "17") (term "0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "34"))
      (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
      (rule "polySimp_addComm0" (formula "35") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "35"))
      (rule "polySimp_mulLiterals" (formula "35") (term "0"))
      (rule "polySimp_elimOne" (formula "35") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "31"))
      (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
      (rule "polySimp_addComm0" (formula "33") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "33"))
      (rule "polySimp_mulLiterals" (formula "33") (term "0"))
      (rule "polySimp_elimOne" (formula "33") (term "0"))
      (rule "nnf_imp2or" (formula "37") (term "0"))
      (rule "nnf_imp2or" (formula "22") (term "0"))
      (rule "nnf_notAnd" (formula "37") (term "0,0"))
      (rule "nnf_notAnd" (formula "22") (term "0,0"))
      (rule "nnf_notAnd" (formula "37") (term "1,0,0"))
      (rule "inEqSimp_notGeq" (formula "37") (term "1,1,0,0"))
      (rule "mul_literals" (formula "37") (term "1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "37") (term "0,0,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,1,0,0"))
      (rule "mul_literals" (formula "37") (term "1,1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0"))
      (rule "mul_literals" (formula "37") (term "1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0"))
      (rule "mul_literals" (formula "37") (term "1,0,1,0,0"))
      (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,0"))
      (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0"))
      (rule "mul_literals" (formula "37") (term "1,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0"))
      (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "22") (term "1,0,0"))
      (rule "inEqSimp_notGeq" (formula "22") (term "1,1,0,0"))
      (rule "mul_literals" (formula "22") (term "1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "22") (term "0,0,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,1,0,0"))
      (rule "mul_literals" (formula "22") (term "1,1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "22") (term "0,1,0,0"))
      (rule "mul_literals" (formula "22") (term "1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,1,0,0"))
      (rule "mul_literals" (formula "22") (term "1,0,1,0,0"))
      (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,0"))
      (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,0"))
      (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0"))
      (rule "mul_literals" (formula "22") (term "1,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0"))
      (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0"))
      (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "21") (term "0") (inst "i=i") (inst "j=j"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "expand_inInt" (formula "21") (term "1,0,0,1,0"))
      (rule "expand_inInt" (formula "21") (term "1,0,0"))
      (rule "replace_int_MAX" (formula "21") (term "1,0,1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "21") (term "0,1,1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "21") (term "0,1,1,0,0"))
      (rule "replace_int_MAX" (formula "21") (term "1,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "1,1,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0"))
      (rule "nnf_imp2or" (formula "21") (term "0"))
      (rule "nnf_notAnd" (formula "21") (term "0,0"))
      (rule "nnf_imp2or" (formula "21") (term "0,1,0"))
      (rule "nnf_notAnd" (formula "21") (term "1,0,0"))
      (rule "inEqSimp_notLeq" (formula "21") (term "0,1,0,0"))
      (rule "mul_literals" (formula "21") (term "1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,1,0,0"))
      (rule "mul_literals" (formula "21") (term "1,0,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "21") (term "1,1,0,0"))
      (rule "mul_literals" (formula "21") (term "1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "21") (term "0,0,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,1,0,0"))
      (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
      (rule "nnf_notAnd" (formula "21") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,0"))
      (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,0"))
      (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0"))
      (rule "mul_literals" (formula "21") (term "1,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "21") (term "0,0,1,0"))
      (rule "nnf_notAnd" (formula "21") (term "0,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0,1,0"))
      (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
      (rule "nnf_notAnd" (formula "21") (term "1,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "21") (term "0,1,0,0,1,0"))
      (rule "mul_literals" (formula "21") (term "1,0,0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,1,0,0,1,0"))
      (rule "mul_literals" (formula "21") (term "1,0,1,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "21") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "21") (term "1,0,0,1,1,0,0,1,0"))
      (rule "add_literals" (formula "21") (term "0,0,1,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "21") (term "1,1,1,0,0,1,0"))
      (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "35") (term "0"))
      (rule "replace_known_right" (formula "35") (term "0,0,0") (ifseqformula "42"))
       (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "1")) (ifInst ""  (formula "36")))
      (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "36") (term "0") (inst "i=i") (inst "j=j"))
       (builtin "One Step Simplification" (formula "36"))
      (rule "expand_inInt" (formula "36") (term "1,0,0,1,0"))
      (rule "expand_inInt" (formula "36") (term "1,0,0"))
      (rule "replace_int_MAX" (formula "36") (term "1,0,1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "36") (term "0,1,1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "36") (term "0,1,1,0,0"))
      (rule "replace_int_MAX" (formula "36") (term "1,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "36") (term "1,1,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "36") (term "1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0"))
      (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0"))
      (rule "nnf_imp2or" (formula "36") (term "0"))
      (rule "nnf_notAnd" (formula "36") (term "0,0"))
      (rule "nnf_imp2or" (formula "36") (term "0,1,0"))
      (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0"))
      (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,0"))
      (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0"))
      (rule "mul_literals" (formula "36") (term "1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "36") (term "1,0,0"))
      (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0"))
      (rule "mul_literals" (formula "36") (term "1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0"))
      (rule "mul_literals" (formula "36") (term "1,0,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "36") (term "1,1,0,0"))
      (rule "mul_literals" (formula "36") (term "1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "36") (term "0,0,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,1,0,0"))
      (rule "mul_literals" (formula "36") (term "1,1,1,0,0"))
      (rule "nnf_notAnd" (formula "36") (term "0,0,1,0"))
      (rule "nnf_notAnd" (formula "36") (term "1,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "36") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "36") (term "1,0,0,1,1,0,0,1,0"))
      (rule "add_literals" (formula "36") (term "0,0,1,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "36") (term "1,1,1,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0,1,0"))
      (rule "mul_literals" (formula "36") (term "1,0,0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0,1,0"))
      (rule "mul_literals" (formula "36") (term "1,0,1,0,0,1,0"))
      (rule "nnf_notAnd" (formula "36") (term "0,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,0"))
      (rule "commute_or_2" (formula "22") (term "0,0"))
      (rule "commute_or_2" (formula "37") (term "0,0"))
      (rule "commute_or_2" (formula "38") (term "0,0"))
      (rule "commute_or_2" (formula "39") (term "0,0"))
      (rule "commute_or_2" (formula "37") (term "0,0,1,0"))
      (rule "commute_or_2" (formula "22") (term "0,0,1,0"))
      (rule "commute_or_2" (formula "36") (term "0,0"))
      (rule "commute_or_2" (formula "21") (term "0,0"))
      (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "35") (term "0"))
      (rule "replace_known_left" (formula "35") (term "1,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "42")) (ifInst ""  (formula "36")))
      (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "36") (term "0") (inst "i=i"))
       (builtin "One Step Simplification" (formula "36"))
      (rule "expand_inInt" (formula "36") (term "1,0,0"))
      (rule "replace_int_MAX" (formula "36") (term "1,0,1,0,0"))
      (rule "replace_int_MIN" (formula "36") (term "0,1,1,0,0"))
      (rule "translateJavaSubInt" (formula "36") (term "1,1,0,0,0"))
      (rule "translateJavaAddInt" (formula "36") (term "0,2,1,1,0"))
      (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "36") (term "1,1,1,0,0,0"))
      (rule "polySimp_addComm0" (formula "36") (term "0,2,1,1,0"))
      (rule "polySimp_addComm1" (formula "36") (term "1,1,0,0,0"))
      (rule "add_literals" (formula "36") (term "0,1,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "36") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0"))
      (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0"))
      (rule "nnf_imp2or" (formula "36") (term "0"))
      (rule "nnf_notAnd" (formula "36") (term "0,0"))
      (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0"))
      (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,0"))
      (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0"))
      (rule "mul_literals" (formula "36") (term "1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "36") (term "1,0,0"))
      (rule "inEqSimp_notGeq" (formula "36") (term "1,1,0,0"))
      (rule "mul_literals" (formula "36") (term "1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "36") (term "0,0,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,1,0,0"))
      (rule "mul_literals" (formula "36") (term "1,1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0"))
      (rule "mul_literals" (formula "36") (term "1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0"))
      (rule "mul_literals" (formula "36") (term "1,0,1,0,0"))
      (rule "div_axiom" (formula "26") (term "0,0,0,1,0,0") (inst "quotient=quotient_0"))
      (rule "mul_literals" (formula "26") (term "1,1,1,1,1"))
      (rule "qeq_literals" (formula "26") (term "0,1,1"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "equal_literals" (formula "26") (term "0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "andLeft" (formula "26"))
      (rule "andLeft" (formula "26"))
      (rule "polySimp_addComm1" (formula "28") (term "1"))
      (rule "add_literals" (formula "28") (term "0,1"))
      (rule "inEqSimp_commuteLeq" (formula "27"))
      (rule "inEqSimp_homoInEq1" (formula "28"))
      (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
      (rule "polySimp_addComm1" (formula "28") (term "0"))
      (rule "applyEq" (formula "29") (term "0,1,1,1,1,1,0,0") (ifseqformula "26"))
      (rule "polySimp_addComm0" (formula "29") (term "1,1,1,1,0,0"))
      (rule "applyEq" (formula "29") (term "0,0,0,1,0,0") (ifseqformula "26"))
      (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1,0,0"))
      (rule "polySimp_addComm1" (formula "29") (term "0,0,1,0,0"))
      (rule "applyEq" (formula "29") (term "0,1,1,2,1,0,0") (ifseqformula "26"))
      (rule "polySimp_addComm0" (formula "29") (term "1,2,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "28"))
      (rule "polySimp_mulComm0" (formula "28") (term "1"))
      (rule "polySimp_rightDist" (formula "28") (term "1"))
      (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
      (rule "mul_literals" (formula "28") (term "0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0,0"))
      (rule "mul_literals" (formula "29") (term "0,1,0,1,0,0"))
      (rule "inEqSimp_contradInEq1" (formula "29") (term "0,1,0,0") (ifseqformula "27"))
      (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0,0"))
      (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,1,0,0"))
      (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,1,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0,1,0,0"))
      (rule "add_literals" (formula "29") (term "1,1,0,0,0,1,0,0"))
      (rule "times_zero_1" (formula "29") (term "1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
      (rule "leq_literals" (formula "29") (term "0,0,1,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "mod_axiom" (formula "29") (term "0"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
      (rule "polySimp_homoEq" (formula "29"))
      (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
      (rule "polySimp_rightDist" (formula "29") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "29") (term "0,1,0"))
      (rule "mul_literals" (formula "29") (term "0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "29") (term "0"))
      (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
      (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
      (rule "add_literals" (formula "29") (term "0,0,0,0"))
      (rule "add_zero_left" (formula "29") (term "0,0,0"))
      (rule "polySimp_sepPosMonomial" (formula "29"))
      (rule "polySimp_mulComm0" (formula "29") (term "1"))
      (rule "polySimp_rightDist" (formula "29") (term "1"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
      (rule "polySimp_elimOne" (formula "29") (term "1,1"))
      (rule "polySimp_mulComm0" (formula "29") (term "0,1"))
      (rule "newSym_eq" (formula "29") (inst "l=l_1") (inst "newSymDef=add(mul(l_0, Z(0(#))),
    mul(pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                int::final(de.wiesler.Tree::final(self,
                                                  de.wiesler.Classifier::$tree),
                           de.wiesler.Tree::$log_buckets))),
        Z(0(#))))"))
      (rule "times_zero_1" (formula "29") (term "0,1,1"))
      (rule "times_zero_1" (formula "29") (term "1,1,1"))
      (rule "add_zero_left" (formula "29") (term "1,1"))
      (rule "add_zero_right" (formula "29") (term "1"))
      (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "29"))
      (rule "polySimp_homoEq" (formula "30"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,0"))
      (rule "polySimp_addComm1" (formula "30") (term "0"))
      (rule "polySimp_addComm0" (formula "30") (term "0,0"))
      (rule "polySimp_sepPosMonomial" (formula "30"))
      (rule "polySimp_mulComm0" (formula "30") (term "1"))
      (rule "polySimp_rightDist" (formula "30") (term "1"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
      (rule "polySimp_elimOne" (formula "30") (term "1,1"))
      (rule "polySimp_mulComm0" (formula "30") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "30") (term "0,1"))
      (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "30"))
      (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
      (rule "polyDiv_pullOut" (formula "29") (term "0") (inst "polyDivCoeff=l_1"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,2,0"))
      (rule "equal_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "polySimp_homoEq" (formula "29"))
      (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
      (rule "polySimp_addComm1" (formula "29") (term "0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0,1,1,0"))
      (rule "add_literals" (formula "29") (term "1,1,0,0,0,1,1,0"))
      (rule "times_zero_1" (formula "29") (term "1,0,0,0,1,1,0"))
      (rule "add_literals" (formula "29") (term "0,0,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "29") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "29") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "29") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "29") (term "0"))
      (rule "polySimp_pullOutFactor1" (formula "29") (term "0,0"))
      (rule "add_literals" (formula "29") (term "1,0,0"))
      (rule "times_zero_1" (formula "29") (term "0,0"))
      (rule "add_zero_left" (formula "29") (term "0"))
      (rule "polySimp_invertEq" (formula "29"))
      (rule "polySimp_mulLiterals" (formula "29") (term "0"))
      (rule "times_zero_2" (formula "29") (term "1"))
      (rule "polySimp_elimOne" (formula "29") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "25"))
      (rule "polySimp_mulAssoc" (formula "27") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "27") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "27") (term "0,0"))
      (rule "polySimp_addComm0" (formula "27") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "27"))
      (rule "polySimp_mulLiterals" (formula "27") (term "0"))
      (rule "elimGcdLeq_antec" (formula "27") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
      (rule "leq_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
      (rule "neg_literal" (formula "27") (term "0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
      (rule "polySimp_addLiterals" (formula "27") (term "0,0,0,0"))
      (rule "add_literals" (formula "27") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
      (rule "add_literals" (formula "27") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "27") (term "1,0,0"))
      (rule "add_zero_right" (formula "27") (term "0,0"))
      (rule "qeq_literals" (formula "27") (term "0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "29"))
      (rule "mul_literals" (formula "24") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0"))
      (rule "add_literals" (formula "24") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "24"))
      (rule "mul_literals" (formula "24") (term "1"))
      (rule "elimGcdGeq_antec" (formula "24") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
      (rule "leq_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
      (rule "polySimp_addLiterals" (formula "24") (term "0,0,0,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
      (rule "add_literals" (formula "24") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "24") (term "1,0,0"))
      (rule "add_zero_right" (formula "24") (term "0,0"))
      (rule "leq_literals" (formula "24") (term "0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "28"))
      (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "24"))
      (rule "leq_literals" (formula "29"))
      (rule "true_left" (formula "29"))
      (rule "applyEq" (formula "25") (term "0") (ifseqformula "24"))
      (rule "qeq_literals" (formula "25"))
      (rule "true_left" (formula "25"))
      (rule "applyEq" (formula "29") (term "0,1,1") (ifseqformula "24"))
      (rule "times_zero_2" (formula "29") (term "1,1"))
      (rule "add_zero_right" (formula "29") (term "1"))
      (rule "applyEqRigid" (formula "28") (term "0,1") (ifseqformula "24"))
      (rule "times_zero_2" (formula "28") (term "1"))
      (rule "applyEq" (formula "27") (term "1") (ifseqformula "24"))
      (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "24"))
      (rule "times_zero_2" (formula "31") (term "0,1,0"))
      (rule "add_zero_left" (formula "31") (term "1,0"))
      (rule "inEqSimp_subsumption0" (formula "29") (ifseqformula "26"))
      (rule "leq_literals" (formula "29") (term "0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "true_left" (formula "29"))
      (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "25"))
      (rule "leq_literals" (formula "28") (term "0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "true_left" (formula "28"))
      (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "38") (term "0"))
      (rule "replace_known_left" (formula "38") (term "1,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "46")) (ifInst ""  (formula "39")))
      (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "39") (term "0") (inst "i=i") (inst "j=j"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "expand_inInt" (formula "39") (term "1,0,0,1,0"))
      (rule "expand_inInt" (formula "39") (term "1,0,0"))
      (rule "replace_int_MIN" (formula "39") (term "0,1,1,0,0,1,0"))
      (rule "replace_int_MAX" (formula "39") (term "1,0,1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "39") (term "0,1,1,0,0"))
      (rule "replace_int_MAX" (formula "39") (term "1,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "39") (term "1,1,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "39") (term "1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,0"))
      (rule "nnf_imp2or" (formula "39") (term "0"))
      (rule "nnf_notAnd" (formula "39") (term "0,0"))
      (rule "nnf_imp2or" (formula "39") (term "0,1,0"))
      (rule "nnf_notAnd" (formula "39") (term "1,0,0"))
      (rule "inEqSimp_notGeq" (formula "39") (term "1,1,0,0"))
      (rule "mul_literals" (formula "39") (term "1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "39") (term "0,0,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,1,0,0"))
      (rule "mul_literals" (formula "39") (term "1,1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "39") (term "0,1,0,0"))
      (rule "mul_literals" (formula "39") (term "1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,1,0,0"))
      (rule "mul_literals" (formula "39") (term "1,0,1,0,0"))
      (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,0"))
      (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0"))
      (rule "mul_literals" (formula "39") (term "1,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "39") (term "0,0,1,0"))
      (rule "arrayLengthNotNegative" (formula "12") (term "0"))
      (rule "commute_or" (formula "22") (term "1,0,0,0"))
      (rule "arrayLengthIsAShort" (formula "33") (term "0"))
      (rule "expand_inShort" (formula "33"))
      (rule "replace_short_MIN" (formula "33") (term "0,1"))
      (rule "replace_short_MAX" (formula "33") (term "1,0"))
      (rule "andLeft" (formula "33"))
      (rule "inEqSimp_commuteLeq" (formula "33"))
      (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "32"))
      (rule "leq_literals" (formula "33") (term "0"))
       (builtin "One Step Simplification" (formula "33"))
      (rule "true_left" (formula "33"))
      (rule "arrayLengthNotNegative" (formula "35") (term "0"))
      (rule "arrayLengthIsAShort" (formula "30") (term "0"))
      (rule "expand_inShort" (formula "30"))
      (rule "replace_short_MIN" (formula "30") (term "0,1"))
      (rule "replace_short_MAX" (formula "30") (term "1,0"))
      (rule "andLeft" (formula "30"))
      (rule "inEqSimp_commuteLeq" (formula "30"))
      (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "31"))
      (rule "leq_literals" (formula "30") (term "0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "true_left" (formula "30"))
      (rule "arrayLengthNotNegative" (formula "16") (term "0"))
      (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1"))
      (rule "polySimp_elimOne" (formula "16") (term "1"))
      (rule "arrayLengthIsAShort" (formula "11") (term "0"))
      (rule "expand_inShort" (formula "11"))
      (rule "replace_short_MIN" (formula "11") (term "0,1"))
      (rule "replace_short_MAX" (formula "11") (term "1,0"))
      (rule "andLeft" (formula "11"))
      (rule "inEqSimp_commuteLeq" (formula "11"))
      (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
      (rule "leq_literals" (formula "11") (term "0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "arrayLengthNotNegative" (formula "36") (term "0"))
      (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "30"))
      (rule "leq_literals" (formula "36") (term "0"))
       (builtin "One Step Simplification" (formula "36"))
      (rule "true_left" (formula "36"))
      (rule "arrayLengthIsAShort" (formula "16") (term "0"))
      (rule "expand_inShort" (formula "16"))
      (rule "replace_short_MIN" (formula "16") (term "0,1"))
      (rule "replace_short_MAX" (formula "16") (term "1,0"))
      (rule "andLeft" (formula "16"))
      (rule "inEqSimp_commuteLeq" (formula "17"))
      (rule "applyEq" (formula "16") (term "0") (ifseqformula "18"))
      (rule "inEqSimp_homoInEq0" (formula "16"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0"))
      (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
      (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0"))
      (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
      (rule "inEqSimp_homoInEq1" (formula "17"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0"))
      (rule "polySimp_mulAssoc" (formula "17") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
      (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "16"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0"))
      (rule "polySimp_elimOne" (formula "16") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0"))
      (rule "polySimp_elimOne" (formula "16") (term "0"))
      (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "10"))
      (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
      (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
      (rule "add_literals" (formula "16") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0"))
      (rule "qeq_literals" (formula "16") (term "0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "commute_or" (formula "42") (term "1,0,0,0"))
      (rule "shift_paren_or" (formula "43") (term "0,0,0"))
      (rule "shift_paren_or" (formula "44") (term "0,0,0"))
      (rule "shift_paren_or" (formula "41") (term "0,0,0"))
      (rule "shift_paren_or" (formula "21") (term "0,0,0"))
      (rule "commute_or" (formula "42") (term "0,0,0,1,0"))
      (rule "commute_or" (formula "22") (term "0,0,0,1,0"))
      (rule "commute_or_2" (formula "40") (term "0,0"))
      (rule "nnf_notAnd" (formula "39") (term "0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,1,0"))
      (rule "nnf_notAnd" (formula "39") (term "1,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "39") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "39") (term "1,0,0,1,1,0,0,1,0"))
      (rule "add_literals" (formula "39") (term "0,0,1,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "39") (term "1,1,1,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "39") (term "0,1,0,0,1,0"))
      (rule "mul_literals" (formula "39") (term "1,0,0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,1,0,0,1,0"))
      (rule "mul_literals" (formula "39") (term "1,0,1,0,0,1,0"))
      (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "38") (term "0") (inst "i=i"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "expand_inInt" (formula "38") (term "1,0,0"))
      (rule "replace_int_MIN" (formula "38") (term "0,1,1,0,0"))
      (rule "replace_int_MAX" (formula "38") (term "1,0,1,0,0"))
      (rule "translateJavaSubInt" (formula "38") (term "1,1,0,0,0"))
      (rule "translateJavaAddInt" (formula "38") (term "0,2,1,1,0"))
      (rule "polySimp_elimSub" (formula "38") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "38") (term "1,1,1,0,0,0"))
      (rule "polySimp_addComm0" (formula "38") (term "0,2,1,1,0"))
      (rule "polySimp_addComm1" (formula "38") (term "1,1,0,0,0"))
      (rule "add_literals" (formula "38") (term "0,1,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "38") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0"))
      (rule "nnf_imp2or" (formula "38") (term "0"))
      (rule "nnf_notAnd" (formula "38") (term "0,0"))
      (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0"))
      (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0"))
      (rule "mul_literals" (formula "38") (term "1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "38") (term "1,0,0"))
      (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0"))
      (rule "mul_literals" (formula "38") (term "1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0"))
      (rule "mul_literals" (formula "38") (term "1,0,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "38") (term "1,1,0,0"))
      (rule "mul_literals" (formula "38") (term "1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "38") (term "0,0,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0"))
      (rule "mul_literals" (formula "38") (term "1,1,1,0,0"))
      (rule "commute_or_2" (formula "39") (term "0,0"))
      (rule "shift_paren_or" (formula "22") (term "0,0,0"))
      (rule "div_axiom" (formula "28") (term "0") (inst "quotient=quotient_1"))
      (rule "equal_literals" (formula "28") (term "0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "mul_literals" (formula "28") (term "1,1,1,1"))
      (rule "qeq_literals" (formula "28") (term "0,1"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
      (rule "add_literals" (formula "30") (term "0,0,1"))
      (rule "polySimp_addComm1" (formula "30") (term "1"))
      (rule "add_literals" (formula "30") (term "0,1"))
      (rule "inEqSimp_homoInEq0" (formula "29"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
      (rule "polySimp_addComm1" (formula "29") (term "0"))
      (rule "inEqSimp_homoInEq1" (formula "30"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,0"))
      (rule "polySimp_addComm1" (formula "30") (term "0"))
      (rule "applyEq" (formula "28") (term "0") (ifseqformula "31"))
      (rule "eqSymm" (formula "28"))
      (rule "applyEqRigid" (formula "30") (term "0,1,0,0") (ifseqformula "28"))
      (rule "times_zero_2" (formula "30") (term "1,0,0"))
      (rule "add_zero_right" (formula "30") (term "0,0"))
      (rule "applyEq" (formula "29") (term "0,1,0,0") (ifseqformula "28"))
      (rule "mul_literals" (formula "29") (term "1,0,0"))
      (rule "add_zero_right" (formula "29") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "30"))
      (rule "mul_literals" (formula "30") (term "1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "29"))
      (rule "mul_literals" (formula "29") (term "1"))
      (rule "inEqSimp_subsumption0" (formula "30") (ifseqformula "37"))
      (rule "leq_literals" (formula "30") (term "0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "true_left" (formula "30"))
      (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "33"))
      (rule "leq_literals" (formula "29") (term "0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "true_left" (formula "29"))
      (rule "commute_or_2" (formula "45") (term "0,0,0"))
      (rule "commute_or_2" (formula "42") (term "0,0,0"))
      (rule "commute_or_2" (formula "21") (term "0,0,0"))
      (rule "cnf_rightDist" (formula "44") (term "0"))
      (rule "shift_paren_or" (formula "43") (term "0,0,0"))
      (rule "commute_or_2" (formula "43") (term "0,0,1,0"))
      (rule "commute_or_2" (formula "22") (term "0,0,1,0"))
      (rule "commute_or" (formula "41") (term "1,0,0,0"))
      (rule "distr_forallAnd" (formula "44"))
      (rule "andLeft" (formula "44"))
      (rule "commute_or_2" (formula "40") (term "0,0,1,0"))
      (rule "commute_or_2" (formula "39") (term "0,0"))
      (rule "commute_or" (formula "45") (term "0"))
      (rule "commute_or" (formula "40") (term "1,0,0,0"))
      (rule "commute_or" (formula "22") (term "0,0,0,0"))
      (rule "inEqSimp_or_subsumption0" (formula "22") (term "0,0,0,0"))
      (rule "qeq_literals" (formula "22") (term "0,0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "commute_or" (formula "46") (term "0,0,0,0"))
      (rule "inEqSimp_or_subsumption0" (formula "46") (term "0,0,0,0"))
      (rule "qeq_literals" (formula "46") (term "0,0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "46"))
      (rule "commute_or" (formula "42") (term "0,0,0,0"))
      (rule "inEqSimp_or_subsumption0" (formula "42") (term "0,0,0,0"))
      (rule "qeq_literals" (formula "42") (term "0,0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "42"))
      (rule "commute_or" (formula "21") (term "0,0,0,0"))
      (rule "inEqSimp_or_subsumption0" (formula "21") (term "0,0,0,0"))
      (rule "qeq_literals" (formula "21") (term "0,0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "commute_or" (formula "43") (term "0,0,0,0"))
      (rule "inEqSimp_or_subsumption0" (formula "43") (term "0,0,0,0"))
      (rule "qeq_literals" (formula "43") (term "0,0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "43"))
      (rule "shift_paren_or" (formula "41") (term "0,0,0"))
      (rule "commute_or" (formula "44") (term "0,0,0,0"))
      (rule "inEqSimp_or_subsumption0" (formula "44") (term "0,0,0,0"))
      (rule "qeq_literals" (formula "44") (term "0,0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "44"))
      (rule "shift_paren_or" (formula "39") (term "0,0,0"))
      (rule "commute_or" (formula "45") (term "0,0,0,0"))
      (rule "inEqSimp_or_subsumption0" (formula "45") (term "0,0,0,0"))
      (rule "qeq_literals" (formula "45") (term "0,0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "45"))
      (rule "shift_paren_or" (formula "40") (term "0,0,0"))
      (rule "commute_or_2" (formula "39") (term "0,0,0"))
      (rule "commute_or" (formula "39") (term "0,0,0,1,0"))
      (rule "commute_or" (formula "40") (term "0,0,0,0"))
      (rule "inEqSimp_or_subsumption0" (formula "40") (term "0,0,0,0"))
      (rule "qeq_literals" (formula "40") (term "0,0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "41")))
      (rule "true_left" (formula "40"))
      (rule "commute_or" (formula "39") (term "0,0,0,0"))
      (rule "inEqSimp_or_subsumption0" (formula "39") (term "0,0,0,0"))
      (rule "qeq_literals" (formula "39") (term "0,0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "onlyCreatedObjectsAreReferencedFinal" (formula "57") (term "1,0") (ifseqformula "1") (ifseqformula "2"))
      (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "58"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
      (rule "closeFalse" (formula "1"))
   )
   (branch "self.equal_buckets = TRUE FALSE"
      (rule "applyEq" (formula "40") (term "1,1,0,0,0") (ifseqformula "19"))
      (rule "applyEq" (formula "29") (term "0") (ifseqformula "19"))
      (rule "applyEq" (formula "35") (term "1,3,0") (ifseqformula "19"))
      (rule "applyEq" (formula "32") (term "1") (ifseqformula "19"))
      (rule "applyEq" (formula "23") (term "1,1,0,0,0") (ifseqformula "19"))
      (rule "applyEq" (formula "24") (term "1,0,2,0") (ifseqformula "19"))
      (rule "eqSymm" (formula "24"))
      (rule "applyEq" (formula "21") (term "3,0") (ifseqformula "19"))
      (rule "applyEq" (formula "31") (term "0") (ifseqformula "19"))
      (rule "applyEq" (formula "38") (term "1,1,0,0,0") (ifseqformula "19"))
      (rule "applyEq" (formula "36") (term "1,1,1,0,0,0") (ifseqformula "19"))
      (rule "applyEq" (formula "37") (term "1,1,1,0,0,0,1,0") (ifseqformula "19"))
      (rule "applyEq" (formula "37") (term "1,1,1,0,0,0") (ifseqformula "19"))
      (rule "applyEq" (formula "23") (term "1,1,0,0,0,1,0") (ifseqformula "19"))
      (rule "applyEq" (formula "22") (term "1,1,1,0,0,0") (ifseqformula "19"))
      (rule "applyEq" (formula "34") (term "0") (ifseqformula "19"))
      (rule "inEqSimp_commuteLeq" (formula "34"))
      (rule "applyEq" (formula "24") (term "1,0,2,0") (ifseqformula "19"))
      (rule "eqSymm" (formula "24"))
      (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "19"))
      (rule "applyEq" (formula "38") (term "0,1,0,0,1,1,1,0") (ifseqformula "19"))
      (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "18"))
      (rule "leq_literals" (formula "31") (term "0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "true_left" (formula "31"))
      (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "30"))
      (rule "polySimp_mulComm0" (formula "31") (term "0,0"))
      (rule "polySimp_addComm0" (formula "31") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "31"))
      (rule "polySimp_mulLiterals" (formula "31") (term "0"))
      (rule "polySimp_elimOne" (formula "31") (term "0"))
      (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "18"))
      (rule "leq_literals" (formula "31") (term "0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "true_left" (formula "31"))
      (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "32"))
      (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
      (rule "polySimp_addComm0" (formula "33") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "33"))
      (rule "polySimp_mulLiterals" (formula "33") (term "0"))
      (rule "polySimp_elimOne" (formula "33") (term "0"))
      (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "18"))
      (rule "leq_literals" (formula "33") (term "0"))
       (builtin "One Step Simplification" (formula "33"))
      (rule "true_left" (formula "33"))
      (rule "commute_or" (formula "38") (term "1,0,0"))
      (rule "div_axiom" (formula "27") (term "0,1,1,2,1,0,0") (inst "quotient=quotient_0"))
      (rule "mul_literals" (formula "27") (term "1,1,1,1,1"))
      (rule "equal_literals" (formula "27") (term "0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "qeq_literals" (formula "27") (term "0,1"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "andLeft" (formula "27"))
      (rule "andLeft" (formula "27"))
      (rule "polySimp_addComm1" (formula "29") (term "1"))
      (rule "add_literals" (formula "29") (term "0,1"))
      (rule "inEqSimp_commuteLeq" (formula "28"))
      (rule "inEqSimp_homoInEq1" (formula "29"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
      (rule "polySimp_addComm1" (formula "29") (term "0"))
      (rule "applyEq" (formula "30") (term "0,1,1,1,1,1,0,0") (ifseqformula "27"))
      (rule "polySimp_addComm0" (formula "30") (term "1,1,1,1,0,0"))
      (rule "applyEq" (formula "30") (term "0,1,1,2,1,0,0") (ifseqformula "27"))
      (rule "polySimp_addComm0" (formula "30") (term "1,2,1,0,0"))
      (rule "applyEq" (formula "30") (term "0,0,0,1,0,0") (ifseqformula "27"))
      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,0"))
      (rule "polySimp_addComm1" (formula "30") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "29"))
      (rule "polySimp_mulComm0" (formula "29") (term "1"))
      (rule "polySimp_rightDist" (formula "29") (term "1"))
      (rule "mul_literals" (formula "29") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,0,0"))
      (rule "mul_literals" (formula "30") (term "0,1,0,1,0,0"))
      (rule "inEqSimp_contradInEq1" (formula "30") (term "0,1,0,0") (ifseqformula "28"))
      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,0,0"))
      (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,1,0,0"))
      (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,1,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0,1,0,0"))
      (rule "add_literals" (formula "30") (term "1,1,0,0,0,1,0,0"))
      (rule "times_zero_1" (formula "30") (term "1,0,0,0,1,0,0"))
      (rule "add_zero_right" (formula "30") (term "0,0,0,1,0,0"))
      (rule "leq_literals" (formula "30") (term "0,0,1,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "mod_axiom" (formula "30") (term "0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,0"))
      (rule "polySimp_homoEq" (formula "30"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
      (rule "polySimp_rightDist" (formula "30") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "30") (term "0,1,0"))
      (rule "mul_literals" (formula "30") (term "0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "30") (term "0"))
      (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
      (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
      (rule "add_literals" (formula "30") (term "0,0,0,0"))
      (rule "add_zero_left" (formula "30") (term "0,0,0"))
      (rule "polySimp_sepPosMonomial" (formula "30"))
      (rule "polySimp_mulComm0" (formula "30") (term "1"))
      (rule "polySimp_rightDist" (formula "30") (term "1"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
      (rule "polySimp_elimOne" (formula "30") (term "1,1"))
      (rule "polySimp_mulComm0" (formula "30") (term "0,1"))
      (rule "newSym_eq" (formula "30") (inst "newSymDef=add(mul(int::final(self,
                   de.wiesler.Classifier::$num_buckets),
        Z(0(#))),
    mul(pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                int::final(de.wiesler.Tree::final(self,
                                                  de.wiesler.Classifier::$tree),
                           de.wiesler.Tree::$log_buckets))),
        Z(0(#))))") (inst "l=l_0"))
      (rule "times_zero_1" (formula "30") (term "0,1,1"))
      (rule "times_zero_1" (formula "30") (term "1,1,1"))
      (rule "add_zero_left" (formula "30") (term "1,1"))
      (rule "add_zero_right" (formula "30") (term "1"))
      (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "30"))
      (rule "polySimp_homoEq" (formula "31"))
      (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
      (rule "polySimp_addComm1" (formula "31") (term "0"))
      (rule "polySimp_addComm0" (formula "31") (term "0,0"))
      (rule "polySimp_sepPosMonomial" (formula "31"))
      (rule "polySimp_mulComm0" (formula "31") (term "1"))
      (rule "polySimp_rightDist" (formula "31") (term "1"))
      (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
      (rule "polySimp_elimOne" (formula "31") (term "1,1"))
      (rule "polySimp_mulComm0" (formula "31") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "31") (term "0,1"))
      (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "31"))
      (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
      (rule "polyDiv_pullOut" (formula "30") (term "0") (inst "polyDivCoeff=l_0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,2,0"))
      (rule "equal_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "polySimp_homoEq" (formula "30"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
      (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
      (rule "polySimp_addComm1" (formula "30") (term "0,1,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,1,1,1,0"))
      (rule "add_literals" (formula "30") (term "1,1,0,0,1,1,1,0"))
      (rule "times_zero_1" (formula "30") (term "1,0,0,1,1,1,0"))
      (rule "add_zero_right" (formula "30") (term "0,0,1,1,1,0"))
      (rule "polySimp_rightDist" (formula "30") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "30") (term "0"))
      (rule "polySimp_pullOutFactor1" (formula "30") (term "0,0"))
      (rule "add_literals" (formula "30") (term "1,0,0"))
      (rule "times_zero_1" (formula "30") (term "0,0"))
      (rule "add_zero_left" (formula "30") (term "0"))
      (rule "polySimp_invertEq" (formula "30"))
      (rule "times_zero_2" (formula "30") (term "1"))
      (rule "polySimp_mulLiterals" (formula "30") (term "0"))
      (rule "polySimp_elimOne" (formula "30") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "29"))
      (rule "mul_literals" (formula "25") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "25") (term "0"))
      (rule "add_literals" (formula "25") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "25"))
      (rule "mul_literals" (formula "25") (term "1"))
      (rule "elimGcdGeq_antec" (formula "25") (inst "elimGcd=Z(2(3(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0"))
      (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,1,0"))
      (rule "leq_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "polySimp_addLiterals" (formula "25") (term "0,0,0,0"))
      (rule "add_literals" (formula "25") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
      (rule "add_literals" (formula "25") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "25") (term "1,0,0"))
      (rule "add_zero_right" (formula "25") (term "0,0"))
      (rule "leq_literals" (formula "25") (term "0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "27"))
      (rule "polySimp_mulAssoc" (formula "29") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "29") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "29") (term "0,0"))
      (rule "polySimp_addComm0" (formula "29") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "29"))
      (rule "polySimp_mulLiterals" (formula "29") (term "0"))
      (rule "elimGcdLeq_antec" (formula "29") (inst "elimGcd=Z(2(3(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
      (rule "leq_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "neg_literal" (formula "29") (term "0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
      (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "29") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
      (rule "add_literals" (formula "29") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "29") (term "1,0,0"))
      (rule "add_zero_right" (formula "29") (term "0,0"))
      (rule "qeq_literals" (formula "29") (term "0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "inEqSimp_antiSymm" (formula "25") (ifseqformula "29"))
      (rule "applyEqRigid" (formula "32") (term "0,1,1") (ifseqformula "25"))
      (rule "times_zero_2" (formula "32") (term "1,1"))
      (rule "add_zero_right" (formula "32") (term "1"))
      (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
      (rule "qeq_literals" (formula "26"))
      (rule "true_left" (formula "26"))
      (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "25"))
      (rule "leq_literals" (formula "29"))
      (rule "true_left" (formula "29"))
      (rule "applyEqRigid" (formula "29") (term "0,1") (ifseqformula "25"))
      (rule "times_zero_2" (formula "29") (term "1"))
      (rule "applyEqRigid" (formula "32") (term "0,0,1,0") (ifseqformula "25"))
      (rule "times_zero_2" (formula "32") (term "0,1,0"))
      (rule "add_zero_left" (formula "32") (term "1,0"))
      (rule "applyEqRigid" (formula "28") (term "1") (ifseqformula "25"))
      (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "26"))
      (rule "leq_literals" (formula "29") (term "0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "true_left" (formula "29"))
      (rule "inEqSimp_subsumption0" (formula "29") (ifseqformula "27"))
      (rule "leq_literals" (formula "29") (term "0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "true_left" (formula "29"))
      (rule "nnf_imp2or" (formula "38") (term "0"))
      (rule "nnf_imp2or" (formula "22") (term "0"))
      (rule "commute_or" (formula "39") (term "1,0,0"))
      (rule "commute_or" (formula "23") (term "1,0,0"))
      (rule "nnf_notAnd" (formula "38") (term "0,0"))
      (rule "nnf_notAnd" (formula "22") (term "0,0"))
      (rule "commute_or" (formula "39") (term "1,0,0,1,0"))
      (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0"))
      (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0"))
      (rule "mul_literals" (formula "38") (term "1,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0"))
      (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "38") (term "1,0,0"))
      (rule "inEqSimp_notGeq" (formula "38") (term "1,1,0,0"))
      (rule "mul_literals" (formula "38") (term "1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "38") (term "0,0,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0"))
      (rule "mul_literals" (formula "38") (term "1,1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0"))
      (rule "mul_literals" (formula "38") (term "1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0"))
      (rule "mul_literals" (formula "38") (term "1,0,1,0,0"))
      (rule "nnf_notAnd" (formula "22") (term "1,0,0"))
      (rule "inEqSimp_notGeq" (formula "22") (term "1,1,0,0"))
      (rule "mul_literals" (formula "22") (term "1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "22") (term "0,0,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,1,0,0"))
      (rule "mul_literals" (formula "22") (term "1,1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "22") (term "0,1,0,0"))
      (rule "mul_literals" (formula "22") (term "1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,1,0,0"))
      (rule "mul_literals" (formula "22") (term "1,0,1,0,0"))
      (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "37") (term "0") (inst "j=j") (inst "i=i"))
       (builtin "One Step Simplification" (formula "37"))
      (rule "expand_inInt" (formula "37") (term "1,0,0,1,0"))
      (rule "expand_inInt" (formula "37") (term "1,0,0"))
      (rule "replace_int_MAX" (formula "37") (term "1,0,1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "37") (term "0,1,1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "37") (term "0,1,1,0,0"))
      (rule "replace_int_MAX" (formula "37") (term "1,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "37") (term "1,1,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "37") (term "1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,0"))
      (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,0"))
      (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,0"))
      (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0"))
      (rule "mul_literals" (formula "22") (term "1,0,0,0,0"))
      (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "21") (term "0") (inst "j=j") (inst "i=i"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "expand_inInt" (formula "21") (term "1,0,0,1,0"))
      (rule "expand_inInt" (formula "21") (term "1,0,0"))
      (rule "replace_int_MIN" (formula "21") (term "0,1,1,0,0,1,0"))
      (rule "replace_int_MAX" (formula "21") (term "1,0,1,0,0,1,0"))
      (rule "replace_int_MAX" (formula "21") (term "1,0,1,0,0"))
      (rule "replace_int_MIN" (formula "21") (term "0,1,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "1,1,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,1,0"))
      (rule "commute_or_2" (formula "40") (term "0,0"))
      (rule "nnf_imp2or" (formula "37") (term "0"))
      (rule "commute_or" (formula "23") (term "1,0,0,1,0"))
      (rule "onlyCreatedObjectsAreReferencedFinal" (formula "20") (term "0,0") (ifseqformula "1") (ifseqformula "2"))
      (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "56"))
       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "46")))
      (rule "closeFalse" (formula "20"))
   )
)
(branch "Null reference (t = null)"
    (builtin "One Step Simplification" (formula "26"))
   (rule "notRight" (formula "26"))
   (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "1"))
   (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "13"))
   (rule "leq_literals" (formula "7") (term "0"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "7"))
   (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
   (rule "polySimp_addComm0" (formula "13") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "13"))
   (rule "polySimp_mulLiterals" (formula "13") (term "0"))
   (rule "polySimp_elimOne" (formula "13") (term "0"))
   (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "16"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "translateJavaSubInt" (formula "21") (term "0,2,1"))
   (rule "translateJavaSubInt" (formula "21") (term "0,2,0"))
   (rule "translateJavaMulInt" (formula "18") (term "1,1"))
   (rule "eqSymm" (formula "21"))
   (rule "eqSymm" (formula "18"))
   (rule "polySimp_elimSub" (formula "21") (term "0,2,0"))
   (rule "mul_literals" (formula "21") (term "1,0,2,0"))
   (rule "eqSymm" (formula "21"))
   (rule "polySimp_elimSub" (formula "21") (term "0,2,0"))
   (rule "mul_literals" (formula "21") (term "1,0,2,0"))
   (rule "eqSymm" (formula "21"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
   (rule "polySimp_addComm0" (formula "21") (term "0,2,1"))
   (rule "polySimp_addComm0" (formula "21") (term "0,2,0"))
   (rule "inEqSimp_commuteLeq" (formula "16"))
   (rule "applyEq" (formula "18") (term "0,2,0") (ifseqformula "1"))
   (rule "applyEq" (formula "18") (term "0,0,1,0") (ifseqformula "1"))
   (rule "applyEq" (formula "21") (term "0,1,0,2,0") (ifseqformula "1"))
   (rule "eqSymm" (formula "21"))
   (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "22") (term "1") (ifseqformula "1"))
   (rule "applyEq" (formula "20") (term "0,3,0") (ifseqformula "1"))
   (rule "applyEq" (formula "21") (term "0,1,0,2,0") (ifseqformula "1"))
   (rule "eqSymm" (formula "21"))
   (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "notLeft" (formula "11"))
   (rule "close" (formula "23") (ifseqformula "1"))
)
)
}
